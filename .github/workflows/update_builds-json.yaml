name: Build and publish docker image for each commit in the officiala nanocurrency/nano-node repo
on: [push, pull_request]
# on:
#   schedule:
#     - cron: '0/5 * * * *'  # "every 30 minutes

jobs:
  publish_docker_image_on_new_commit:
    runs-on: ubuntu-latest    
    steps:
      - name: checkout gr0vity-dev/nano-node-builder
        uses: actions/checkout@v3
      - name: Add pull_requests to build file
        run: |
          #get latest 10 commits and write to disk
          curl -s "Accept: application/vnd.github+json" "https://api.github.com/repos/nanocurrency/nano-node/commits?sha=develop&per_page=10" | \
                  jq 'map({hash: .sha, type: "commit", created_at: .commit.author.date,built_at: null, build_status: null, docker_tag: null}) | [ .[] ]' > $HOME/latest_commits.json
          # append new commits to existing builds_file
          jq -s '.[0] as $a | .[1] as $b | ($a + $b | group_by(.hash) | map(.[0]))' docker_builder/builds.json $HOME/latest_commits.json > docker_builder/builds.json

          #get all pull requests
          curl -s --location --request GET 'https://api.github.com/repos/nanocurrency/nano-node/pulls?state=open&per_page=100&page=1' | \
                    jq '[.[] | {label: .head.label, ref: .head.ref, sha: .head.sha}]')
                    jq 'map({hash: .head.sha, type: "pull_request", pull_request: .number, created_at: .created_at, built_at: null, build_status: null, docker_tag: null}) | [ .[] ]' > $HOME/all_prs.json
          # append new commits to existing builds_file
          jq -s '.[0] as $a | .[1] as $b | ($a + $b | group_by(.hash) | map(.[0]))' docker_builder/builds.json $HOME/all_prs.json > docker_builder/builds.json


          git config user.name "GitHub Actions Bot"
          git config user.email "<>"          
          git add .
          git commit -m "update build file"
