[
  {
    "hash": "000cea3035dbabf967dac130baecfd58ddb5448e",
    "type": "pull_request",
    "pull_request": 4324,
    "label": "gr0vity-dev:prs/hinted_config_fix",
    "created_at": "2023-11-02T22:36:14Z",
    "built_at": "2023-11-02T23:07:39Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:000cea3035dbabf967dac130baecfd58ddb5448e",
    "build_started_at": "2023-11-02T22:42:29Z",
    "run_id": "6739024210"
  },
  {
    "hash": "0012ad54803a274319b616ff0c67e5cf7af2229e",
    "type": "pull_request",
    "pull_request": 3763,
    "label": "Exxenoz:perf_add_reverse_link_store",
    "created_at": "2022-03-28T17:11:28Z",
    "built_at": "2023-02-04T21:32:20Z",
    "build_status": "fail",
    "docker_tag": ""
  },
  {
    "hash": "001549ab5455f32f7d887814b30b50b3c668bc63",
    "type": "pull_request",
    "pull_request": 4295,
    "label": "clemahieu:block_split",
    "created_at": "2023-09-25T22:11:53Z",
    "built_at": "2023-09-25T23:07:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:001549ab5455f32f7d887814b30b50b3c668bc63"
  },
  {
    "hash": "00348b34bb33ea42cc18ea56022fbed6fae26f54",
    "type": "pull_request",
    "pull_request": 4476,
    "label": "pwojcikdev:fair-queuing-3",
    "created_at": "2024-03-10T19:14:44Z",
    "built_at": "2024-03-11T21:18:40Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:00348b34bb33ea42cc18ea56022fbed6fae26f54",
    "build_started_at": "2024-03-11T20:54:06Z",
    "run_id": "8239583716"
  },
  {
    "hash": "00380d0e3f7bef954aa6df999b480acc2bedf067",
    "type": "pull_request",
    "title": "Extend election lifetime when receiving new votes",
    "body": "This PR adds a dynamic Time-To-Live on elections to improve the AEC alignment and efficiency during heavy load. \r\n\r\nThe TTL has been reduced to 30 seconds for normal elections and 10 seconds for hinted and optimistic elections but is extended every time a new vote arrive.\r\n\r\nBlocks that are not getting any votes are getting evicted from AEC much earlier, while blocks with active voting have a higher chance of staying in the AEC and reach confirmation.\r\n\r\nRelated issue: #4352",
    "draft": false,
    "pull_request": 4527,
    "label": "RickiNano:Active-election-time-out",
    "created_at": "2024-03-30T09:30:57Z",
    "built_at": "2024-03-30T09:58:35Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:00380d0e3f7bef954aa6df999b480acc2bedf067",
    "build_started_at": "2024-03-30T09:33:27Z",
    "run_id": "8489871128"
  },
  {
    "hash": "003e553e2574063852b609bb650b79e15da0694b",
    "type": "pull_request",
    "pull_request": 4325,
    "label": "pwojcikdev:hinted-transaction-refresh",
    "created_at": "2023-11-03T00:58:03Z",
    "built_at": "2023-11-03T01:26:57Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:003e553e2574063852b609bb650b79e15da0694b",
    "build_started_at": "2023-11-03T00:59:17Z",
    "run_id": "6739989685"
  },
  {
    "hash": "0049dc8c730ae1f9f6aaced81523a949863ba072",
    "type": "pull_request",
    "title": "Bounded cementing",
    "author": "pwojcikdev",
    "body": "This limits number of blocks that can be cemented in a single batch. This prevents excessive memory consumption.",
    "draft": false,
    "pull_request": 4665,
    "label": "pwojcikdev:bounded-cementing",
    "created_at": "2024-07-01T16:25:45Z",
    "built_at": "2024-07-01T16:58:15Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0049dc8c730ae1f9f6aaced81523a949863ba072",
    "build_started_at": "2024-07-01T16:31:04Z",
    "run_id": "9747835501"
  },
  {
    "hash": "004ffe5d6d3fd9747ecfe8c9b041fd35d8cbb1a6",
    "type": "commit",
    "created_at": "2023-02-14T10:41:47Z",
    "built_at": "2023-02-14T11:11:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:004ffe5d6d3fd9747ecfe8c9b041fd35d8cbb1a6"
  },
  {
    "hash": "005f0d6b52a4e7e75869d3e2476d1cf45d7df8c8",
    "type": "pull_request",
    "pull_request": 4401,
    "label": "dsiganos:fix_active_transactions_vote_replays",
    "created_at": "2024-01-26T16:44:09Z",
    "built_at": "2024-01-26T17:11:35Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:005f0d6b52a4e7e75869d3e2476d1cf45d7df8c8",
    "build_started_at": "2024-01-26T16:46:04Z",
    "run_id": "7670910437"
  },
  {
    "hash": "0078039b601091657bd08d3998323b1614a044e3",
    "type": "pull_request",
    "pull_request": 4258,
    "label": "gr0vity-dev:prs/update_code_sanitizers",
    "created_at": "2023-07-15T12:11:28Z",
    "built_at": "2023-07-15T13:23:44Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0078039b601091657bd08d3998323b1614a044e3"
  },
  {
    "hash": "00cf95f2044128f142ea2e5d5221b81f8df3f6ec",
    "type": "commit",
    "created_at": "2023-09-03T21:42:42Z",
    "built_at": "2023-09-05T11:51:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:00cf95f2044128f142ea2e5d5221b81f8df3f6ec"
  },
  {
    "hash": "012c053d7c097b2650c63f07ea40503d00eef266",
    "type": "commit",
    "author": "RickiNano",
    "title": "Added test for config parameters",
    "pull_request": "N/A",
    "created_at": "2024-08-30T18:49:53Z",
    "built_at": "2024-09-25T09:47:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:012c053d7c097b2650c63f07ea40503d00eef266",
    "build_started_at": "2024-09-25T09:19:52Z",
    "run_id": "11030101176"
  },
  {
    "hash": "0143f27f0fc9c48e70e1fb9ff9df5d0abcda1cd4",
    "type": "pull_request",
    "title": "Introduce ledger view classes to separate confirmed/unconfirmed operations on the ledger",
    "body": "The motivation for this PR is in preparation for bounded backlog changes. Currently, both confirmed and unconfirmed transactions are together on disk and the ACID properties of the ledger are encapsulated with a database transaction.\r\n\r\nWith the bounded backlog, blocks will be stored in memory so there will need to be memory synchronization in addition to database synchronization. Rather than filling the ledger class with unconfirmed/confirmed variants for each operation.\r\n\r\nThere are two views of the ledger:\r\nledger::confirmed () - Gives the view of the ledger only containing confirmed information\r\nledger::unconfirmed () - Gives a view of the ledger including unconfirmed information\r\nledger::operator->() - Syntax sugar to access unconfirmed view so calls that were previously of the form `ledger.get (...)` and would otherwise become `ledger.unconfirmed ().get (...)` can be written as `ledger->get (...)`",
    "draft": false,
    "pull_request": 4486,
    "label": "clemahieu:ledger_view",
    "created_at": "2024-03-12T14:33:24Z",
    "built_at": "2024-04-02T19:53:22Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-04-02T19:36:55Z",
    "run_id": "8528448710"
  },
  {
    "hash": "0169487c318daff670d2d03208cdccd78701fd8f",
    "type": "pull_request",
    "pull_request": 4298,
    "label": "pwojcikdev:fix-buffers-2",
    "created_at": "2023-09-26T20:10:22Z",
    "built_at": "2023-09-26T21:01:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0169487c318daff670d2d03208cdccd78701fd8f"
  },
  {
    "hash": "0183b92f2d688e02da95659f199b92aef1e5bcd4",
    "type": "pull_request",
    "pull_request": 4296,
    "label": "clemahieu:sucessor_table",
    "created_at": "2023-09-26T13:49:26Z",
    "built_at": "2024-02-22T10:58:56Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0183b92f2d688e02da95659f199b92aef1e5bcd4",
    "build_started_at": "2024-02-22T10:29:58Z",
    "run_id": "8003038674"
  },
  {
    "hash": "01a1e672f8264a34191706957db1d4f91242d922",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Add daemon interrupt test",
    "pull_request": "4563",
    "created_at": "2024-04-14T19:24:01Z",
    "built_at": "2024-04-17T08:17:33Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:01a1e672f8264a34191706957db1d4f91242d922",
    "build_started_at": "2024-04-17T07:51:58Z",
    "run_id": "8718253462"
  },
  {
    "hash": "01c4857b2fab777ee9495814cc3b7a975b5f9fb4",
    "type": "pull_request",
    "pull_request": 4494,
    "label": "clemahieu:ledger_context_pool",
    "created_at": "2024-03-16T14:40:40Z",
    "built_at": "2024-03-16T15:17:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:01c4857b2fab777ee9495814cc3b7a975b5f9fb4",
    "build_started_at": "2024-03-16T14:52:02Z",
    "run_id": "8308543060"
  },
  {
    "hash": "01e73d77057a8929e0c8e00e58a50ab46202966c",
    "type": "commit",
    "author": "clemahieu",
    "title": "Move ledger::amount on to ledger sets.",
    "pull_request": "N/A",
    "created_at": "2024-03-11T21:48:43Z",
    "built_at": "2024-04-30T14:00:21Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:01e73d77057a8929e0c8e00e58a50ab46202966c",
    "build_started_at": "2024-04-30T13:34:48Z",
    "run_id": "8895754846"
  },
  {
    "hash": "020b4fbd87879b5efbe3d11eecff72b01a81b820",
    "type": "pull_request",
    "pull_request": 4349,
    "label": "RickiNano:remove-unused-includes",
    "created_at": "2023-12-06T08:44:13Z",
    "built_at": "2024-01-10T05:23:37Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:020b4fbd87879b5efbe3d11eecff72b01a81b820",
    "build_started_at": "2024-01-10T04:59:01Z",
    "run_id": "7470516887"
  },
  {
    "hash": "022a10f24f89a9e18a6225dd6f46ec9b0a96bb42",
    "type": "commit",
    "created_at": "2023-03-14T23:58:22Z",
    "built_at": "2023-03-15T01:40:50Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:022a10f24f89a9e18a6225dd6f46ec9b0a96bb42"
  },
  {
    "hash": "023de284bf5590a617a12d70de263b5c8d889998",
    "type": "pull_request",
    "title": "Fix rpc.block_confirm_confirmed",
    "author": "clemahieu",
    "body": "There may be more than one http callback error as a DNS entry may have multiple entries.",
    "draft": false,
    "pull_request": 4608,
    "label": "clemahieu:fix_rpc_block_confirm_confirmed",
    "created_at": "2024-05-08T14:24:43Z",
    "built_at": "2024-05-08T14:51:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:023de284bf5590a617a12d70de263b5c8d889998",
    "build_started_at": "2024-05-08T14:25:49Z",
    "run_id": "9003547141"
  },
  {
    "hash": "02435b36ecb869975f2d04fccd969245dc5c238a",
    "type": "commit",
    "author": "clemahieu",
    "title": "Update miniupnp to 2.3.6 (#4700)",
    "pull_request": "4700",
    "created_at": "2024-08-11T18:48:01Z",
    "built_at": "2024-08-11T19:17:13Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:02435b36ecb869975f2d04fccd969245dc5c238a",
    "build_started_at": "2024-08-11T18:51:04Z",
    "run_id": "10342026497"
  },
  {
    "hash": "02531aa0787c1af90c2a958844abea0cd8d687a1",
    "type": "pull_request",
    "title": "Remove telemetry data aggregation",
    "author": "pwojcikdev",
    "body": "This changes the behaviour of telemetry RPC to return local node telemetry by default, which is the expected behaviour in majority of cases.\r\nThis also removes telemetry data aggregation functions. All the data consolidation should be handled in a separate layer outside of the node, with aggregation implemented as appropriate for each use case.",
    "draft": false,
    "pull_request": 4684,
    "label": "pwojcikdev:telemetry-remove-aggregation",
    "created_at": "2024-07-17T16:33:32Z",
    "built_at": "2024-07-17T17:11:00Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:02531aa0787c1af90c2a958844abea0cd8d687a1",
    "build_started_at": "2024-07-17T16:43:53Z",
    "run_id": "9978153271"
  },
  {
    "hash": "026ab525113e04d8107754a121ea8e2763cce82f",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Use lowest priority for frontier accounts",
    "pull_request": "N/A",
    "created_at": "2024-11-02T15:17:16Z",
    "built_at": "2024-11-23T00:08:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:026ab525113e04d8107754a121ea8e2763cce82f",
    "build_started_at": "2024-11-22T23:40:48Z",
    "run_id": "11981850146"
  },
  {
    "hash": "0278131977f5ce11621067e62d4ed547f3fbcd9b",
    "type": "pull_request",
    "pull_request": 4442,
    "label": "clemahieu:process_result_enum_rename",
    "created_at": "2024-02-19T22:00:52Z",
    "built_at": "2024-02-20T17:40:04Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0278131977f5ce11621067e62d4ed547f3fbcd9b",
    "build_started_at": "2024-02-20T17:10:42Z",
    "run_id": "7977321244"
  },
  {
    "hash": "02b5c82832eb788a093af00973371d908751a61e",
    "type": "pull_request",
    "title": "Multithreaded vote processor",
    "author": "pwojcikdev",
    "body": "Changes vote processor to use multiple threads. While processing of votes inside the election container is still done under exclusive lock, this should help amortize time spent checking vote signatures.",
    "draft": false,
    "pull_request": 4600,
    "label": "pwojcikdev:vote-processor-threads",
    "created_at": "2024-05-03T11:36:29Z",
    "built_at": "2024-05-05T08:01:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:02b5c82832eb788a093af00973371d908751a61e",
    "build_started_at": "2024-05-05T07:32:34Z",
    "run_id": "8956625470"
  },
  {
    "hash": "02e8c2c8a8466362b5ce077fcbd99b58be249699",
    "type": "pull_request",
    "pull_request": 4132,
    "label": "thsfs:static-usage-fix",
    "created_at": "2023-02-15T13:51:09Z",
    "built_at": "2023-02-15T14:23:18Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:02e8c2c8a8466362b5ce077fcbd99b58be249699"
  },
  {
    "hash": "02ef3a1fd82a58d0df90bd45635aac8f01cc42e6",
    "type": "pull_request",
    "pull_request": 4211,
    "label": "clemahieu:bootstrap_channel_scoring",
    "created_at": "2023-04-05T17:07:44Z",
    "built_at": "2023-04-13T22:13:16Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:02ef3a1fd82a58d0df90bd45635aac8f01cc42e6"
  },
  {
    "hash": "02fa9bda463dd28b73b55d70a4d2bf6b37de951f",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Configurable size",
    "pull_request": "N/A",
    "created_at": "2024-09-23T16:52:07Z",
    "built_at": "2024-09-25T14:10:23Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:02fa9bda463dd28b73b55d70a4d2bf6b37de951f",
    "build_started_at": "2024-09-25T13:41:38Z",
    "run_id": "11034296184"
  },
  {
    "hash": "0356ec5391aa04b0686d9de24e246bccf197434c",
    "type": "pull_request",
    "pull_request": 4412,
    "label": "pwojcikdev:tracing-4-develop",
    "created_at": "2024-01-30T17:15:41Z",
    "built_at": "2024-01-30T17:59:35Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0356ec5391aa04b0686d9de24e246bccf197434c",
    "build_started_at": "2024-01-30T17:30:57Z",
    "run_id": "7715115813"
  },
  {
    "hash": "0377c4f97cbed44245fb57f1adf30f89b93faef5",
    "type": "commit",
    "created_at": "2023-11-03T15:16:55Z",
    "built_at": "2023-11-03T16:24:24Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0377c4f97cbed44245fb57f1adf30f89b93faef5",
    "build_started_at": "2023-11-03T15:23:24Z",
    "run_id": "6747114077"
  },
  {
    "hash": "039903c82d4288383717fd5f74f3bd46efd75c98",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Config to enable upnp port mapping",
    "pull_request": "4690",
    "created_at": "2024-08-03T11:51:17Z",
    "built_at": "2024-08-11T18:48:48Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:039903c82d4288383717fd5f74f3bd46efd75c98",
    "build_started_at": "2024-08-11T18:19:33Z",
    "run_id": "10341837058"
  },
  {
    "hash": "03da74622f9d598c3e33605dabcdef0427f9f0aa",
    "type": "pull_request",
    "pull_request": 4471,
    "label": "pwojcikdev:vote-processor-tiers",
    "created_at": "2024-03-08T11:10:27Z",
    "built_at": "2024-03-08T11:41:40Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:03da74622f9d598c3e33605dabcdef0427f9f0aa",
    "build_started_at": "2024-03-08T11:15:41Z",
    "run_id": "8202510993"
  },
  {
    "hash": "03dd963a6b1368dd1f8a92d4bcfab8713180ecb8",
    "type": "commit",
    "created_at": "2023-06-01T13:04:14Z",
    "built_at": "2023-06-01T13:41:59Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:03dd963a6b1368dd1f8a92d4bcfab8713180ecb8"
  },
  {
    "hash": "03f394c5c0d4ff2c447a5ca408eb75387cf7b660",
    "type": "pull_request",
    "pull_request": 4344,
    "label": "RickiNano:reduce-mutex-time",
    "created_at": "2023-11-14T08:44:56Z",
    "built_at": "2023-11-14T09:31:57Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:03f394c5c0d4ff2c447a5ca408eb75387cf7b660",
    "build_started_at": "2023-11-14T08:50:22Z",
    "run_id": "6861237142"
  },
  {
    "hash": "04103e492b98961e5d6fa6f7a3dd2475caa48710",
    "type": "pull_request",
    "pull_request": 4141,
    "label": "thsfs:buffer_container_removal",
    "created_at": "2023-02-18T01:30:04Z",
    "built_at": "2023-02-18T03:25:31Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:04103e492b98961e5d6fa6f7a3dd2475caa48710"
  },
  {
    "hash": "0489bbf1c2c023295f8f9e08ab2205f347c19d90",
    "type": "pull_request",
    "title": "Bounded election buckets with dynamic reprioritization",
    "author": "pwojcikdev",
    "body": "Based on:\r\n- Elections sets (can't find PR, Colin's initial attempt at bucket limiting)\r\n- Bobs bucket vacancy branch https://github.com/nanocurrency/nano-node/compare/develop...gr0vity-dev:nano-node:wip/bucket_vacancy \r\n\r\nbut simpler, more robust and allows for dynamically dropping and scheduling higher priority elections. Also, buckets can be configured to opportunistically use more available space if AEC is underutilized.",
    "draft": false,
    "pull_request": 4626,
    "label": "pwojcikdev:election-bounding-2",
    "created_at": "2024-05-15T16:21:38Z",
    "built_at": "2024-07-01T16:01:35Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0489bbf1c2c023295f8f9e08ab2205f347c19d90",
    "build_started_at": "2024-07-01T15:34:38Z",
    "run_id": "9747090397"
  },
  {
    "hash": "04bb841ba0b17467fa199611daca24e6dff64ff5",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "More stats work",
    "pull_request": "N/A",
    "created_at": "2024-05-24T13:32:52Z",
    "built_at": "2024-06-18T15:02:51Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:04bb841ba0b17467fa199611daca24e6dff64ff5",
    "build_started_at": "2024-06-18T14:35:34Z",
    "run_id": "9567060702"
  },
  {
    "hash": "04de36cb0c5a28d1b976e363bf34377135b8dd25",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Stats overhaul (#4583)\n\n* Introduce `nano::elapse ()` helper\r\n\r\n* Move stats test to a dedicated file\r\n\r\n* Missing override & smaller improvements\r\n\r\n* nano::stats::dump\r\n\r\n* Move implementation to .cpp file\r\n\r\n* Index stats by a dedicated struct\r\n\r\n* Remove stat observers\r\n\r\n* Overhaul\r\n\r\n* Config\r\n\r\n* Use dedicated thread\r\n\r\n* Separate stat sinks\r\n\r\n* Samples writer\r\n\r\n* Fix for max size\r\n\r\n* Simple sampler key\r\n\r\n* Expected min max\r\n\r\n* Fix tests\r\n\r\n* Cleanup\r\n\r\n* Test for samples rpc\r\n\r\n* Implement sampling for node components\r\n\r\n* TODO\r\n\r\n* Remove special semantics of `stat::detail::all`\r\n\r\n* Guard against invalid values\r\n\r\n* Thread loop interval\r\n\r\n* More tests\r\n\r\n* Flag to aggregate `stat::detail::all`\r\n\r\n---------\r\n\r\nCo-authored-by: Colin LeMahieu <clemahieu@gmail.com>",
    "pull_request": "4583",
    "created_at": "2024-04-30T17:39:28Z",
    "built_at": "2024-04-30T18:07:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:04de36cb0c5a28d1b976e363bf34377135b8dd25",
    "build_started_at": "2024-04-30T17:40:02Z",
    "run_id": "8899247223"
  },
  {
    "hash": "04ebc91fd2de2eb58b7f52bf1437a379d025c43e",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge pull request #4767 from pwojcikdev/spaceship-comparisons\n\nUse spaceship comparisons",
    "pull_request": "4767",
    "created_at": "2024-10-25T22:51:27Z",
    "built_at": "2024-10-25T23:25:46Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:04ebc91fd2de2eb58b7f52bf1437a379d025c43e",
    "build_started_at": "2024-10-25T22:56:00Z",
    "run_id": "11526504313"
  },
  {
    "hash": "04f057ec8d71ad4df7bb7ac38c1cb4b91b5c25bc",
    "type": "pull_request",
    "pull_request": 4359,
    "label": "pwojcikdev:bound-hinted-iterations",
    "created_at": "2024-01-14T16:27:33Z",
    "built_at": "2024-01-15T14:02:40Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:04f057ec8d71ad4df7bb7ac38c1cb4b91b5c25bc",
    "build_started_at": "2024-01-15T13:37:21Z",
    "run_id": "7529653917"
  },
  {
    "hash": "0505fb6011d3afa74abe99f051deaaff31ff4601",
    "type": "commit",
    "author": "dsiganos",
    "title": "Fix a TSAN issue in active_transactions.confirm_new (#4582)",
    "pull_request": "4582",
    "created_at": "2024-04-24T13:49:10Z",
    "built_at": "2024-04-24T14:21:53Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0505fb6011d3afa74abe99f051deaaff31ff4601",
    "build_started_at": "2024-04-24T13:52:01Z",
    "run_id": "8817725531"
  },
  {
    "hash": "0518ab838672540f46089b8195f0048afcd656ec",
    "type": "pull_request",
    "pull_request": 4267,
    "label": "clemahieu:remove_signature_threads",
    "created_at": "2023-08-22T12:30:21Z",
    "built_at": "2023-08-27T09:54:09Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0518ab838672540f46089b8195f0048afcd656ec"
  },
  {
    "hash": "051e1d071159f96036d3d66e4e09c8ed263e3fca",
    "type": "pull_request",
    "title": "Encapsulate ledger cache counts",
    "body": "This is a cleanup PR for encapsulating the various ledger counts in ledger_cache which get new ledger accessors.",
    "draft": false,
    "pull_request": 4528,
    "label": "clemahieu:encapsulate_ledger_cache",
    "created_at": "2024-03-30T16:17:33Z",
    "built_at": "2024-04-01T10:44:53Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:051e1d071159f96036d3d66e4e09c8ed263e3fca",
    "build_started_at": "2024-04-01T10:16:47Z",
    "run_id": "8506850671"
  },
  {
    "hash": "0526a8b62bbf3b7eeaba7ce853f9c52666b5ad1a",
    "type": "commit",
    "created_at": "2023-02-25T18:45:37Z",
    "built_at": "2023-02-25T19:29:18Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0526a8b62bbf3b7eeaba7ce853f9c52666b5ad1a"
  },
  {
    "hash": "05420a0c1ed25c492b334d9c53086e11baa651e0",
    "type": "pull_request",
    "pull_request": 4318,
    "label": "clemahieu:election_state_mutex",
    "created_at": "2023-10-26T14:21:12Z",
    "built_at": "2024-01-12T08:46:42Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:05420a0c1ed25c492b334d9c53086e11baa651e0",
    "build_started_at": "2024-01-12T08:22:00Z",
    "run_id": "7499628636"
  },
  {
    "hash": "057cacd6fd2166f12ac48bd290acadca7f7d0596",
    "type": "pull_request",
    "title": "Factor utility functions",
    "author": "clemahieu",
    "body": "This moves block_w_sideband into its own file and splits nano::unique_path in to separate filename and path-generating components.",
    "draft": false,
    "pull_request": 4745,
    "label": "clemahieu:factor_utility_functions",
    "created_at": "2024-10-07T14:35:13Z",
    "built_at": "2024-10-07T15:09:28Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:057cacd6fd2166f12ac48bd290acadca7f7d0596",
    "build_started_at": "2024-10-07T14:43:57Z",
    "run_id": "11218011907"
  },
  {
    "hash": "059ceeb3e440dc4999e8329ac884be56b860ab1c",
    "type": "commit",
    "created_at": "2024-01-09T16:21:01Z",
    "built_at": "2024-01-09T16:56:31Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:059ceeb3e440dc4999e8329ac884be56b860ab1c",
    "build_started_at": "2024-01-09T16:31:36Z",
    "run_id": "7463983901"
  },
  {
    "hash": "05fbd416e438550be5358ca5f2e2a462677df740",
    "type": "commit",
    "created_at": "2024-03-13T19:34:53Z",
    "built_at": "2024-03-15T15:57:12Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:05fbd416e438550be5358ca5f2e2a462677df740",
    "build_started_at": "2024-03-15T15:29:42Z",
    "run_id": "8298619683"
  },
  {
    "hash": "06143a6c8828c088745c7aea427bad01ab2e05ae",
    "type": "commit",
    "author": "clemahieu",
    "title": "Fix receivable_processor tests that weren't testing anything",
    "pull_request": "4619",
    "created_at": "2024-05-13T15:58:20Z",
    "built_at": "2024-05-14T12:10:23Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:06143a6c8828c088745c7aea427bad01ab2e05ae",
    "build_started_at": "2024-05-14T11:41:17Z",
    "run_id": "9078716291"
  },
  {
    "hash": "0615aca556b8abeb3d485073c94a24e30d934e33",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Fix bootstrap <-> blockprocessor notifications (#4663)\n\n* Fix bootstrap notifications\r\n\r\n* Move toml test\r\n\r\n* Tests\r\n\r\n* Condition notify\r\n\r\n* Test return values",
    "pull_request": "4663",
    "created_at": "2024-07-05T11:52:31Z",
    "built_at": "2024-07-05T12:21:25Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0615aca556b8abeb3d485073c94a24e30d934e33",
    "build_started_at": "2024-07-05T11:54:25Z",
    "run_id": "9807882493"
  },
  {
    "hash": "062cbff5d7521353a5ce6b9e77aa71c4230c704b",
    "type": "commit",
    "author": "clemahieu",
    "title": "Move ledger::balance on to ledger sets.",
    "pull_request": "N/A",
    "created_at": "2024-03-11T14:22:34Z",
    "built_at": "2024-04-30T14:08:02Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:062cbff5d7521353a5ce6b9e77aa71c4230c704b",
    "build_started_at": "2024-04-30T13:34:48Z",
    "run_id": "8895855326"
  },
  {
    "hash": "0655adcd67711b63eec4818884f1f6b999a14057",
    "type": "pull_request",
    "pull_request": 4486,
    "label": "clemahieu:ledger_view",
    "created_at": "2024-03-12T14:33:24Z",
    "built_at": "2024-03-21T11:25:50Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-21T11:09:02Z",
    "run_id": "8373940068"
  },
  {
    "hash": "065845e20afdab58befeb5a3df4e27c89568737a",
    "type": "pull_request",
    "pull_request": 3727,
    "label": "clemahieu:block_pipeline",
    "created_at": "2022-02-09T15:28:27Z",
    "built_at": "2023-02-04T21:49:46Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:065845e20afdab58befeb5a3df4e27c89568737a"
  },
  {
    "hash": "0684051ea1d409c012d12f124a8b3e36a683cc90",
    "type": "commit",
    "created_at": "2023-07-26T11:41:50Z",
    "built_at": "2023-07-26T12:30:22Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0684051ea1d409c012d12f124a8b3e36a683cc90"
  },
  {
    "hash": "0688d964cf2569b701566197134453531d42bc63",
    "type": "commit",
    "author": "homebot",
    "title": "replace old config varibales usages\n\n- active_elections_size\n- active_elections_hinted_limit_percentage\n- active_elections_optimistic_limit_percentage\n- confirmation_history_size",
    "pull_request": "4604",
    "created_at": "2024-05-06T10:05:32Z",
    "built_at": "2024-05-07T15:49:40Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0688d964cf2569b701566197134453531d42bc63",
    "build_started_at": "2024-05-07T15:20:15Z",
    "run_id": "8987985179"
  },
  {
    "hash": "068a9b7866f0de31dc29d9084f290be428a0dffe",
    "type": "pull_request",
    "pull_request": 4318,
    "label": "clemahieu:election_state_mutex",
    "created_at": "2023-10-26T14:21:12Z",
    "built_at": "2023-10-26T15:03:37Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:068a9b7866f0de31dc29d9084f290be428a0dffe",
    "build_started_at": "2023-10-26T14:25:33Z",
    "run_id": "6655557854"
  },
  {
    "hash": "06d8b4e7ba20af559e1175fc91b396c417608c71",
    "type": "commit",
    "created_at": "2024-01-22T13:28:24Z",
    "built_at": "2024-01-22T13:55:15Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:06d8b4e7ba20af559e1175fc91b396c417608c71",
    "build_started_at": "2024-01-22T13:30:36Z",
    "run_id": "7611913011"
  },
  {
    "hash": "06e1c8b4e7609f2b42cd1a7aa2a93cc22c15cb8e",
    "type": "pull_request",
    "title": "Introduce ledger view classes to separate confirmed/unconfirmed operations on the ledger",
    "body": "The motivation for this PR is in preparation for bounded backlog changes. Currently, both confirmed and unconfirmed transactions are together on disk and the ACID properties of the ledger are encapsulated with a database transaction.\r\n\r\nWith the bounded backlog, blocks will be stored in memory so there will need to be memory synchronization in addition to database synchronization. Rather than filling the ledger class with unconfirmed/confirmed variants for each operation.\r\n\r\nThere are two views of the ledger:\r\nledger::confirmed () - Gives the view of the ledger only containing confirmed information\r\nledger::unconfirmed () - Gives a view of the ledger including unconfirmed information\r\nledger::operator->() - Syntax sugar to access unconfirmed view so calls that were previously of the form `ledger.get (...)` and would otherwise become `ledger.unconfirmed ().get (...)` can be written as `ledger->get (...)`",
    "draft": false,
    "pull_request": 4486,
    "label": "clemahieu:ledger_view",
    "created_at": "2024-03-12T14:33:24Z",
    "built_at": "2024-04-04T15:24:52Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-04-04T15:07:21Z",
    "run_id": "8556966266"
  },
  {
    "hash": "06ef24b196cbaf34ab7a6ded71b7be9df1f173bd",
    "type": "commit",
    "title": "Merge pull request #4556 from clemahieu/vote_generator_write_queue",
    "pull_request": "4556",
    "created_at": "2024-04-13T19:34:20Z",
    "built_at": "2024-04-13T20:04:34Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:06ef24b196cbaf34ab7a6ded71b7be9df1f173bd",
    "build_started_at": "2024-04-13T19:36:13Z",
    "run_id": "8675817637"
  },
  {
    "hash": "06f28d22ca3c9939235d39c63648896b15aa0f0c",
    "type": "commit",
    "created_at": "2024-02-11T12:48:03Z",
    "built_at": "2024-02-11T13:19:53Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:06f28d22ca3c9939235d39c63648896b15aa0f0c",
    "build_started_at": "2024-02-11T12:55:16Z",
    "run_id": "7862123794"
  },
  {
    "hash": "06f9a7a148b578619d5e1d7a24fa9402e46be2c1",
    "type": "pull_request",
    "pull_request": 4497,
    "label": "pwojcikdev:election-vote-result",
    "created_at": "2024-03-16T22:28:05Z",
    "built_at": "2024-03-16T22:58:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:06f9a7a148b578619d5e1d7a24fa9402e46be2c1",
    "build_started_at": "2024-03-16T22:30:54Z",
    "run_id": "8310898337"
  },
  {
    "hash": "072e4f0c086dcd46f6f1b2c19d3d84c739b71ac1",
    "type": "pull_request",
    "pull_request": 4422,
    "label": "pwojcikdev:remove-gap-cache",
    "created_at": "2024-02-05T21:10:14Z",
    "built_at": "2024-02-05T21:44:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:072e4f0c086dcd46f6f1b2c19d3d84c739b71ac1",
    "build_started_at": "2024-02-05T21:19:11Z",
    "run_id": "7790978401"
  },
  {
    "hash": "073887a95a0b143adb44dccff047c2dfdac12bdc",
    "type": "commit",
    "author": "clemahieu",
    "title": "Fix rpc.block_confirm_confirmed (#4608)\n\nThere may be more than one http callback error as a DNS entry may have multiple entries.",
    "pull_request": "4608",
    "created_at": "2024-05-08T21:52:40Z",
    "built_at": "2024-05-08T22:26:12Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:073887a95a0b143adb44dccff047c2dfdac12bdc",
    "build_started_at": "2024-05-08T21:58:11Z",
    "run_id": "9009062570"
  },
  {
    "hash": "074519d734b010508084765cba7d95c39ef07e82",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge pull request #4768 from pwojcikdev/observer-set-const-refs\n\nModify `observer_set` to only accept and pass const ref arguments",
    "pull_request": "4768",
    "created_at": "2024-10-27T21:52:23Z",
    "built_at": "2024-10-27T22:26:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:074519d734b010508084765cba7d95c39ef07e82",
    "build_started_at": "2024-10-27T21:59:13Z",
    "run_id": "11544124608"
  },
  {
    "hash": "0746473097f8c0b9f8d9a883b6fa76c02f94f69a",
    "type": "pull_request",
    "pull_request": 4482,
    "label": "simpago:rep-weight-table",
    "created_at": "2024-03-12T10:20:34Z",
    "built_at": "2024-03-13T07:29:30Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-13T07:12:39Z",
    "run_id": "8260823767"
  },
  {
    "hash": "0747d4afe46878b357fa08f43376c56f505e30c6",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Handle rollbacks when cementing",
    "pull_request": "N/A",
    "created_at": "2024-10-12T09:59:17Z",
    "built_at": "2024-10-18T09:17:44Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0747d4afe46878b357fa08f43376c56f505e30c6",
    "build_started_at": "2024-10-18T08:49:46Z",
    "run_id": "11400566405"
  },
  {
    "hash": "07637c8953df2740430780be62b4c03b0e08567d",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Rename to `rate_limiter`",
    "pull_request": "N/A",
    "created_at": "2024-09-09T18:38:43Z",
    "built_at": "2024-09-17T10:03:11Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:07637c8953df2740430780be62b4c03b0e08567d",
    "build_started_at": "2024-09-17T09:35:37Z",
    "run_id": "10900420660"
  },
  {
    "hash": "0765f869cabb5948e7a49c6b555ca8421d41318a",
    "type": "pull_request",
    "pull_request": 4345,
    "label": "clemahieu:block_checker",
    "created_at": "2023-11-14T12:02:06Z",
    "built_at": null,
    "build_status": "building",
    "docker_tag": null,
    "build_started_at": "2024-01-24T10:31:38Z",
    "run_id": "7638875181"
  },
  {
    "hash": "076df48948f4099f271c02f14763f426f40e7e1c",
    "type": "commit",
    "author": "clemahieu",
    "title": "Removing use_noops from write_queue.",
    "pull_request": "4737",
    "created_at": "2024-09-27T17:25:11Z",
    "built_at": "2024-09-30T07:21:33Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:076df48948f4099f271c02f14763f426f40e7e1c",
    "build_started_at": "2024-09-30T06:52:27Z",
    "run_id": "11100920823"
  },
  {
    "hash": "077538ea4f58a60b1a089ac530ce2b649d851865",
    "type": "pull_request",
    "pull_request": 4158,
    "label": "clemahieu:bootstrap_ascending_client",
    "created_at": "2023-02-27T20:15:37Z",
    "built_at": "2023-03-06T11:38:11Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:077538ea4f58a60b1a089ac530ce2b649d851865"
  },
  {
    "hash": "0776b9fea2c0f6c010efa537bd3e3b46454ccc9d",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge pull request #4672 from pwojcikdev/revert-bootstrap-stuff\n\nRevert recent ascending bootstrap changes",
    "pull_request": "4672",
    "created_at": "2024-07-07T09:49:38Z",
    "built_at": "2024-07-07T10:22:47Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0776b9fea2c0f6c010efa537bd3e3b46454ccc9d",
    "build_started_at": "2024-07-07T09:53:58Z",
    "run_id": "9826374115"
  },
  {
    "hash": "0791541614309c7c1b998be9678e39aad7357938",
    "type": "pull_request",
    "pull_request": 4339,
    "label": "pwojcikdev:generic-uniquer",
    "created_at": "2023-11-10T12:47:03Z",
    "built_at": "2023-11-10T13:51:13Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0791541614309c7c1b998be9678e39aad7357938",
    "build_started_at": "2023-11-10T12:58:25Z",
    "run_id": "6825105517"
  },
  {
    "hash": "0798470393f100e7ce94e7cbe79548783e95ed77",
    "type": "pull_request",
    "pull_request": 4176,
    "label": "thsfs:block_broadcast_refactor",
    "created_at": "2023-03-07T20:21:47Z",
    "built_at": "2023-03-07T21:01:11Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0798470393f100e7ce94e7cbe79548783e95ed77"
  },
  {
    "hash": "079d25341cc241f7835021a88491a02c97cf43ec",
    "type": "commit",
    "created_at": "2023-02-19T19:12:10Z",
    "built_at": "2023-03-07T20:23:00Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:079d25341cc241f7835021a88491a02c97cf43ec"
  },
  {
    "hash": "07aa50f25b65baf678057f3d4dd0c58c172754d0",
    "type": "pull_request",
    "title": "Link boost stacktrace appropriately for line information.",
    "author": "clemahieu",
    "body": "The previous code was overcomplicating a relatively straightforward requirement to link against librt and libdynamic to get symbolic stacktraces.",
    "draft": false,
    "pull_request": 4771,
    "label": "clemahieu:boost_stacktrace",
    "created_at": "2024-10-27T15:05:55Z",
    "built_at": "2024-12-10T19:27:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:07aa50f25b65baf678057f3d4dd0c58c172754d0",
    "build_started_at": "2024-12-10T19:00:38Z",
    "run_id": "12262873965"
  },
  {
    "hash": "08008d4830e718a47a568abdba6e4a2fd21369c3",
    "type": "commit",
    "author": "gr0vity-dev",
    "title": "disable rpm builds (#4554)\n\nCo-authored-by: gr0vity-dev <homebot@users.noreply.github.com>",
    "pull_request": "4554",
    "created_at": "2024-04-15T13:59:56Z",
    "built_at": "2024-04-15T14:26:22Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:08008d4830e718a47a568abdba6e4a2fd21369c3",
    "build_started_at": "2024-04-15T14:00:20Z",
    "run_id": "8690468493"
  },
  {
    "hash": "08116617a4905ea998726b2ba77a3161951dfce3",
    "type": "pull_request",
    "title": "Per traffic type stats",
    "author": "pwojcikdev",
    "body": "Provides more detailed information about outgoing traffic.",
    "draft": false,
    "pull_request": 4785,
    "label": "pwojcikdev:traffic-info",
    "created_at": "2024-11-11T23:41:51Z",
    "built_at": "2024-11-12T00:14:37Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:08116617a4905ea998726b2ba77a3161951dfce3",
    "build_started_at": "2024-11-11T23:46:33Z",
    "run_id": "11787958467"
  },
  {
    "hash": "08141383f40315266adcd783c4926ea5981efea9",
    "type": "pull_request",
    "title": "Add command line option to log process id to file.",
    "author": "clemahieu",
    "body": null,
    "draft": false,
    "pull_request": 4685,
    "label": "clemahieu:nano_node_pid_file",
    "created_at": "2024-07-21T17:43:18Z",
    "built_at": "2024-07-21T18:13:34Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:08141383f40315266adcd783c4926ea5981efea9",
    "build_started_at": "2024-07-21T17:46:39Z",
    "run_id": "10030231093"
  },
  {
    "hash": "083f243705b6bdf8215f2bba6622edb6e2e19aef",
    "type": "commit",
    "created_at": "2023-11-10T11:24:42Z",
    "built_at": "2023-11-10T12:06:15Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:083f243705b6bdf8215f2bba6622edb6e2e19aef",
    "build_started_at": "2023-11-10T11:26:49Z",
    "run_id": "6824222802"
  },
  {
    "hash": "084bfaffcf2503d00bc06ab83802efbd1e223eb1",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Genesis blocks with timestamp 0",
    "pull_request": "4794",
    "created_at": "2024-11-25T18:38:39Z",
    "built_at": "2024-11-27T07:55:28Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:084bfaffcf2503d00bc06ab83802efbd1e223eb1",
    "build_started_at": "2024-11-27T07:27:46Z",
    "run_id": "12045650670"
  },
  {
    "hash": "084e509d0626d34508eccb07cfe1635c9124a07b",
    "type": "commit",
    "author": "RickiNano",
    "title": "Replace legacy XRB ratios (#4733)\n\n* Removed legacy xrb ratios\r\n\r\n* Adjust references to old ratios\r\n\r\n* Removed unused price function\r\n\r\n* Removed legacy ratio converters\r\n\r\n* Fixed RPC unit test\r\n\r\n* Removed legacy conversion tests\r\n\r\n* Fixed core tests\r\n\r\n* Removed legacy tests\r\n\r\n* Fixed slow tests\r\n\r\n* Fixed qt ratios\r\n\r\n* Reinsert modified decode_dec to fix test\r\n\r\n* Changed to Knano_ratio",
    "pull_request": "4733",
    "created_at": "2024-09-28T08:59:47Z",
    "built_at": "2024-09-28T09:44:38Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:084e509d0626d34508eccb07cfe1635c9124a07b",
    "build_started_at": "2024-09-28T09:16:18Z",
    "run_id": "11082772394"
  },
  {
    "hash": "08512db3ecc8db0447dfdb673f576c82e9b9b2c0",
    "type": "commit",
    "created_at": "2023-09-20T03:27:31Z",
    "built_at": "2023-09-20T18:10:13Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:08512db3ecc8db0447dfdb673f576c82e9b9b2c0"
  },
  {
    "hash": "085310820c8a68a5bb2f19008ad1521e36a4ec37",
    "type": "pull_request",
    "title": "Introduce ledger confirmed_set/any_set classes to separate confirmed-only and confirmed/unconfirmed operations on the ledger",
    "author": "clemahieu",
    "body": "The motivation for this PR is in preparation for bounded backlog changes. Currently, both confirmed and unconfirmed transactions are together on disk and the ACID properties of the ledger are encapsulated with a database transaction.\r\n\r\nWith the bounded backlog, blocks will be stored in memory so there will need to be memory synchronization in addition to database synchronization. Rather than filling the ledger class with unconfirmed/confirmed variants for each operation.\r\n\r\nThe ledger is divided in to several sets and subsets:\r\nledger::confirmed - The set of confirmed transactions\r\nledger::any - The superset of confirmed and unconfirmed transactions\r\n\r\nWhen unconfirmed blocks are held in memory the set ledger::unconfirmed will be added which holds only unconfirmed transactions.\r\n\r\nIn the future the confirming_set can be moved on to ledger which is the subset of unconfirmed blocks that are queued to be moved in to the confirmed set.",
    "draft": false,
    "pull_request": 4486,
    "label": "clemahieu:ledger_view",
    "created_at": "2024-03-12T14:33:24Z",
    "built_at": "2024-04-30T13:45:00Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:085310820c8a68a5bb2f19008ad1521e36a4ec37",
    "build_started_at": "2024-04-30T13:19:07Z",
    "run_id": "8895528271"
  },
  {
    "hash": "08575c5b041783c9a0d22205770e4c03f316f2c5",
    "type": "commit",
    "author": "clemahieu",
    "title": "Add test to ensure state open blocks have type receive",
    "pull_request": "4709",
    "created_at": "2024-08-20T10:33:02Z",
    "built_at": "2024-08-20T12:48:40Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:08575c5b041783c9a0d22205770e4c03f316f2c5",
    "build_started_at": "2024-08-20T12:17:20Z",
    "run_id": "10471362644"
  },
  {
    "hash": "0861102e92982f0aea8ea03f71d0a65d86bb09ad",
    "type": "pull_request",
    "title": "Redesign the priority scheduler to maintain a 1-to-1 link with running elections",
    "author": "clemahieu",
    "body": "This change appropriately prioritises elections by bucket and then by LRU account. Overfilled buckets have the lowest priority block election cancelled and rolled back.",
    "draft": true,
    "pull_request": 4593,
    "label": "clemahieu:priority_limiter",
    "created_at": "2024-04-30T12:53:50Z",
    "built_at": "2024-05-01T03:04:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0861102e92982f0aea8ea03f71d0a65d86bb09ad",
    "build_started_at": "2024-05-01T02:38:27Z",
    "run_id": "8904580619"
  },
  {
    "hash": "0865d24dfe4c17c632f8ac6f9ffc7ed6bf960304",
    "type": "pull_request",
    "title": "Traffic shaping",
    "author": "pwojcikdev",
    "body": "This is a draft PR for an ongoing work that overhauls how outgoing traffic is handled and prioritized. This will significantly improve how the node handles network congestion, which is extremely important during spam.\r\n\r\nDepends on PRs:\r\nhttps://github.com/nanocurrency/nano-node/pull/4784",
    "draft": true,
    "pull_request": 4786,
    "label": "pwojcikdev:traffic-shaping-pr",
    "created_at": "2024-11-18T19:43:02Z",
    "built_at": "2024-11-18T23:00:24Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0865d24dfe4c17c632f8ac6f9ffc7ed6bf960304",
    "build_started_at": "2024-11-18T22:31:26Z",
    "run_id": "11902309290"
  },
  {
    "hash": "089500cb6e7e33d5e306e3e4b5a76f14ec851ed8",
    "type": "pull_request",
    "title": "Revert account store iterator in `bootstrap_server`",
    "author": "pwojcikdev",
    "body": "There was an account iterator performance degradation introduced recently, especially visible when using rocksdb (~10x slowdown when iterating consecutive entries). This reverts code responsible for serving frontier responses until a proper fix can be implemented.",
    "draft": false,
    "pull_request": 4688,
    "label": "pwojcikdev:revert-bootstrap-server",
    "created_at": "2024-08-03T11:19:30Z",
    "built_at": "2024-08-03T11:50:32Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:089500cb6e7e33d5e306e3e4b5a76f14ec851ed8",
    "build_started_at": "2024-08-03T11:21:20Z",
    "run_id": "10227605452"
  },
  {
    "hash": "08979619041ebea0033b40bed10e7e21efea5bda",
    "type": "pull_request",
    "pull_request": 4413,
    "label": "RickiNano:blacklist-nodes",
    "created_at": "2024-01-30T19:45:38Z",
    "built_at": "2024-01-31T16:40:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:08979619041ebea0033b40bed10e7e21efea5bda",
    "build_started_at": "2024-01-31T16:14:15Z",
    "run_id": "7729023844"
  },
  {
    "hash": "08c30022bb7a1976a5ca0ee99ba28d7df7d4ef9a",
    "type": "pull_request",
    "pull_request": 4181,
    "label": "thsfs:add_process_live_dipatcher_class",
    "created_at": "2023-03-10T02:28:40Z",
    "built_at": "2023-03-11T02:23:04Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:08c30022bb7a1976a5ca0ee99ba28d7df7d4ef9a"
  },
  {
    "hash": "08ea15a2d8a8ce2e44c4ddc06a535dd244f3ba9d",
    "type": "commit",
    "created_at": "2023-02-06T16:33:32Z",
    "built_at": "2023-02-06T23:06:26Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:08ea15a2d8a8ce2e44c4ddc06a535dd244f3ba9d"
  },
  {
    "hash": "08f70e9db5991e6ca046af510208ec5b0a481fbd",
    "type": "commit",
    "created_at": "2024-03-07T03:17:09Z",
    "built_at": "2024-03-07T13:47:03Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:08f70e9db5991e6ca046af510208ec5b0a481fbd",
    "build_started_at": "2024-03-07T13:21:35Z",
    "run_id": "8188836572"
  },
  {
    "hash": "08f816ed7bec6bf4ab2644bfa0c21fc54f42cd26",
    "type": "pull_request",
    "title": "Update RocksDb to V9.2.2",
    "author": "RickiNano",
    "body": "Updates RocksDb from V8.6.7 to the latest stable version V9.9.2\r\nI have tested this version of RocksDb with node version V26.1 on live network for 3 days without problems. CPU usage seems to be a bit lower than with the old RocksDb version",
    "draft": false,
    "pull_request": 4652,
    "label": "RickiNano:Update-RocksDb",
    "created_at": "2024-06-18T10:06:51Z",
    "built_at": "2024-06-21T15:42:53Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:08f816ed7bec6bf4ab2644bfa0c21fc54f42cd26",
    "build_started_at": "2024-06-21T15:16:16Z",
    "run_id": "9615885519"
  },
  {
    "hash": "0906a4f33cc12da05157981103b7d151ae493c9d",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Separate source of `tcp_channels` and `channel_tcp`",
    "pull_request": "4651",
    "created_at": "2024-06-17T15:13:16Z",
    "built_at": "2024-06-18T13:22:11Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0906a4f33cc12da05157981103b7d151ae493c9d",
    "build_started_at": "2024-06-18T12:54:53Z",
    "run_id": "9565402946"
  },
  {
    "hash": "0912b9b7600d46834376c3f6a6be2344e081d26e",
    "type": "commit",
    "created_at": "2023-12-03T16:34:28Z",
    "built_at": "2023-12-03T17:05:21Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0912b9b7600d46834376c3f6a6be2344e081d26e",
    "build_started_at": "2023-12-03T16:39:43Z",
    "run_id": "7078113612"
  },
  {
    "hash": "0923d36c600cfae163610414260658a60d648b65",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Systest timeout",
    "pull_request": "4563",
    "created_at": "2024-04-14T19:29:31Z",
    "built_at": "2024-04-17T08:27:24Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0923d36c600cfae163610414260658a60d648b65",
    "build_started_at": "2024-04-17T07:51:58Z",
    "run_id": "8718329540"
  },
  {
    "hash": "09280b7939fada5b9bd72efa9828e0ac7b1c64c3",
    "type": "pull_request",
    "pull_request": 4328,
    "label": "clemahieu:store_block_exists_cursor",
    "created_at": "2023-11-06T14:43:32Z",
    "built_at": "2023-11-06T15:36:21Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:09280b7939fada5b9bd72efa9828e0ac7b1c64c3",
    "build_started_at": "2023-11-06T14:44:34Z",
    "run_id": "6772351688"
  },
  {
    "hash": "0957c38f56108417189b48decdc5c2d0a6946736",
    "type": "commit",
    "created_at": "2023-01-30T21:10:00Z",
    "built_at": "2023-02-20T16:10:32Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0957c38f56108417189b48decdc5c2d0a6946736"
  },
  {
    "hash": "095df2c365e792fd4c1554baba8ba0e75664571a",
    "type": "pull_request",
    "pull_request": 4158,
    "label": "clemahieu:bootstrap_ascending_client",
    "created_at": "2023-02-27T20:15:37Z",
    "built_at": "2023-03-14T22:45:27Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:095df2c365e792fd4c1554baba8ba0e75664571a"
  },
  {
    "hash": "097e24ec4b9e9e30ded8fe1fc206bfc52e005e61",
    "type": "pull_request",
    "title": "Telemetry database backend",
    "author": "pwojcikdev",
    "body": "Improved version of stalled #4675 that should be backwards compatible.",
    "draft": false,
    "pull_request": 4694,
    "label": "pwojcikdev:telemetry-database-backend",
    "created_at": "2024-08-06T09:24:05Z",
    "built_at": "2024-08-06T15:11:27Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:097e24ec4b9e9e30ded8fe1fc206bfc52e005e61",
    "build_started_at": "2024-08-06T14:44:50Z",
    "run_id": "10268749487"
  },
  {
    "hash": "098f22448d25a1ce7c9947734dd0af46b22c58e1",
    "type": "pull_request",
    "pull_request": 4345,
    "label": "clemahieu:block_checker",
    "created_at": "2023-11-14T12:02:06Z",
    "built_at": "2024-02-17T12:39:21Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-02-17T12:24:46Z",
    "run_id": "7941627814"
  },
  {
    "hash": "09a94096b6af658e4fe08b230ff5b3e3f6e4905a",
    "type": "commit",
    "created_at": "2024-03-13T18:31:02Z",
    "built_at": "2024-03-15T16:01:51Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:09a94096b6af658e4fe08b230ff5b3e3f6e4905a",
    "build_started_at": "2024-03-15T15:29:42Z",
    "run_id": "8298619683"
  },
  {
    "hash": "09b635f217940c651e3de8e50d49de8982c0aaee",
    "type": "commit",
    "author": "clemahieu",
    "title": "Merge pull request #4759 from clemahieu/store_iterator_cleanup\n\nConvert store iterators to variants rather than using polymorphism.",
    "pull_request": "4759",
    "created_at": "2024-10-27T08:34:10Z",
    "built_at": "2024-10-27T09:15:10Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:09b635f217940c651e3de8e50d49de8982c0aaee",
    "build_started_at": "2024-10-27T08:45:28Z",
    "run_id": "11538984970"
  },
  {
    "hash": "09bd4d29c5d0c19dcac398d49d164f2230588f05",
    "type": "commit",
    "author": "clemahieu",
    "title": "Set default vote req/ack size to 255 and add CLI option \"disable_large_votes\" to return to original behavior.",
    "pull_request": "4683",
    "created_at": "2024-07-17T10:29:54Z",
    "built_at": "2024-07-18T17:41:19Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:09bd4d29c5d0c19dcac398d49d164f2230588f05",
    "build_started_at": "2024-07-18T17:13:38Z",
    "run_id": "9995786597"
  },
  {
    "hash": "09bfa2a8c36cc9b30f8b9fbe59d420d18bc74a6f",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Peer scoring container info",
    "pull_request": "4786",
    "created_at": "2024-11-04T20:32:03Z",
    "built_at": "2024-11-23T00:17:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:09bfa2a8c36cc9b30f8b9fbe59d420d18bc74a6f",
    "build_started_at": "2024-11-22T23:40:48Z",
    "run_id": "11981911565"
  },
  {
    "hash": "09c3ede9effa5dcb64a63df0b28cc05d7127bb44",
    "type": "pull_request",
    "pull_request": 4345,
    "label": "clemahieu:block_checker",
    "created_at": "2023-11-14T12:02:06Z",
    "built_at": "2024-02-14T15:53:00Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:09c3ede9effa5dcb64a63df0b28cc05d7127bb44",
    "build_started_at": "2024-02-14T15:27:25Z",
    "run_id": "7903508150"
  },
  {
    "hash": "09d719c41f14fddbd7abcb7dba31351fd7448ae3",
    "type": "commit",
    "author": "clemahieu",
    "title": "Build fixes. (#4602)",
    "pull_request": "4602",
    "created_at": "2024-05-05T15:16:52Z",
    "built_at": "2024-05-05T15:45:18Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:09d719c41f14fddbd7abcb7dba31351fd7448ae3",
    "build_started_at": "2024-05-05T15:17:03Z",
    "run_id": "8959241022"
  },
  {
    "hash": "09f407c9267e995490ea35b021fe6beeb964338a",
    "type": "commit",
    "created_at": "2023-04-03T15:24:10Z",
    "built_at": "2023-04-05T16:46:48Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:09f407c9267e995490ea35b021fe6beeb964338a"
  },
  {
    "hash": "0a1003cda49a13e19f17e0e81dd40292052a47ce",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Fix 'as' and 'FROM' keywords' casing do not match",
    "pull_request": "4756",
    "created_at": "2024-10-03T16:34:11Z",
    "built_at": "2024-10-17T09:48:01Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0a1003cda49a13e19f17e0e81dd40292052a47ce",
    "build_started_at": "2024-10-17T09:18:10Z",
    "run_id": "11382015445"
  },
  {
    "hash": "0a5dc1ae45fee57f4a4443042e23db2d4cc6aaff",
    "type": "pull_request",
    "pull_request": 4296,
    "label": "clemahieu:sucessor_table",
    "created_at": "2023-09-26T13:49:26Z",
    "built_at": "2024-02-21T11:09:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0a5dc1ae45fee57f4a4443042e23db2d4cc6aaff",
    "build_started_at": "2024-02-21T10:42:02Z",
    "run_id": "7987750048"
  },
  {
    "hash": "0a83f57e0a4cee43b79de5b253ed596ac99ab041",
    "type": "commit",
    "created_at": "2023-02-20T15:34:36Z",
    "built_at": "2023-02-20T16:35:30Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0a83f57e0a4cee43b79de5b253ed596ac99ab041"
  },
  {
    "hash": "0ae674fc584aa889acd5c7b79ba6a5f0cffdf3c1",
    "type": "pull_request",
    "pull_request": 4158,
    "label": "clemahieu:bootstrap_ascending_client",
    "created_at": "2023-02-27T20:15:37Z",
    "built_at": "2023-03-05T17:49:37Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0ae674fc584aa889acd5c7b79ba6a5f0cffdf3c1"
  },
  {
    "hash": "0b192b8a0cd51f474c3b8a55ce4717c89675f6e2",
    "type": "pull_request",
    "title": "Use read/write transaction variant in vote generator",
    "author": "pwojcikdev",
    "body": "This is a refresh of https://github.com/nanocurrency/nano-node/pull/4321/files. This avoids acquiring a write transaction for non-final vote processing.",
    "draft": false,
    "pull_request": 4639,
    "label": "pwojcikdev:vote-generator-read-transaction",
    "created_at": "2024-05-23T09:02:04Z",
    "built_at": "2024-05-23T09:47:16Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0b192b8a0cd51f474c3b8a55ce4717c89675f6e2",
    "build_started_at": "2024-05-23T09:20:06Z",
    "run_id": "9205477756"
  },
  {
    "hash": "0b2dcf1ab118cd6e2d5e9b2f73cda4166c70f3ed",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Fix `node.block_confirm` test (#4666)",
    "pull_request": "4666",
    "created_at": "2024-07-02T14:03:31Z",
    "built_at": "2024-07-02T14:35:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0b2dcf1ab118cd6e2d5e9b2f73cda4166c70f3ed",
    "build_started_at": "2024-07-02T14:07:19Z",
    "run_id": "9762499673"
  },
  {
    "hash": "0b47ae0f7e9ce88dcfe9f4348fb44e758b16e8e5",
    "type": "commit",
    "author": "clemahieu",
    "title": "Move ledger::account_balance to ledger set balance",
    "pull_request": "4593",
    "created_at": "2024-03-11T23:16:07Z",
    "built_at": "2024-04-30T14:14:12Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-04-30T13:34:48Z",
    "run_id": "8895954728"
  },
  {
    "hash": "0b6a5cc118540ba82730b562b36a79098c5dedb7",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge pull request #4757 from pwojcikdev/activate-cemented-blocks\n\nActivate cemented blocks",
    "pull_request": "4757",
    "created_at": "2024-10-18T20:37:42Z",
    "built_at": "2024-10-18T21:09:43Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0b6a5cc118540ba82730b562b36a79098c5dedb7",
    "build_started_at": "2024-10-18T20:40:42Z",
    "run_id": "11410714354"
  },
  {
    "hash": "0b73339eb21ac8ce308eafacfee1095768250581",
    "type": "pull_request",
    "pull_request": 4233,
    "label": "clemahieu:macos_builder_version_12",
    "created_at": "2023-05-15T16:07:01Z",
    "built_at": "2023-05-15T16:48:10Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0b73339eb21ac8ce308eafacfee1095768250581"
  },
  {
    "hash": "0b79274037e6c904c3e9209c58159b9b4d698239",
    "type": "pull_request",
    "pull_request": 4509,
    "label": "clemahieu:election_header_reduction",
    "created_at": "2024-03-20T14:00:22Z",
    "built_at": "2024-03-21T10:19:52Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0b79274037e6c904c3e9209c58159b9b4d698239",
    "build_started_at": "2024-03-21T09:51:29Z",
    "run_id": "8372916544"
  },
  {
    "hash": "0b79fdf41908d2886b0eb553d43f2917b451fc3f",
    "type": "pull_request",
    "title": "Node configuration auto updater",
    "author": "RickiNano",
    "body": "This pull request introduces a new command line feature `--update_config` , which updates the nodes current configuration by merging custom settings into the latest configuration template. Custom settings will be uncommented in the new configuration, while default values will be commented.\r\nThis feature simplifies the process for node operators to maintain an up-to-date configuration without manually merging the current configuration with the new one.\r\n\r\nFeatures:\r\n* Updates config file with new entries, tables and documentation\r\n* Removes entries that are no longer referenced in code\r\n* Preserves custom values from current configuration\r\n* Formatted output\r\n\r\nLimitations:\r\n* Currently only works with node configuration file but could easily be extended to rpc an log configs\r\n",
    "draft": false,
    "pull_request": 4579,
    "label": "RickiNano:auto_update_config",
    "created_at": "2024-04-20T07:34:06Z",
    "built_at": "2024-04-26T20:34:47Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0b79fdf41908d2886b0eb553d43f2917b451fc3f",
    "build_started_at": "2024-04-26T20:09:20Z",
    "run_id": "8853724216"
  },
  {
    "hash": "0b85d1021fdad3f8fe56fb48bb194d02c484d17c",
    "type": "commit",
    "created_at": "2024-02-13T11:36:01Z",
    "built_at": "2024-02-13T12:10:19Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0b85d1021fdad3f8fe56fb48bb194d02c484d17c",
    "build_started_at": "2024-02-13T11:42:31Z",
    "run_id": "7885945627"
  },
  {
    "hash": "0c3c8c96038509ac8ad91f6744730d092b7eb458",
    "type": "pull_request",
    "title": "Update RocksDb to V9.2.2",
    "author": "RickiNano",
    "body": "Updates RocksDb from V8.6.7 to the latest stable version V9.9.2\r\nI have tested this version of RocksDb with node version V26.1 on live network for 3 days without problems. CPU usage seems to be a bit lower than with the old RocksDb version",
    "draft": false,
    "pull_request": 4652,
    "label": "RickiNano:Update-RocksDb",
    "created_at": "2024-06-18T10:06:51Z",
    "built_at": "2024-06-22T14:53:07Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0c3c8c96038509ac8ad91f6744730d092b7eb458",
    "build_started_at": "2024-06-22T14:26:52Z",
    "run_id": "9626169732"
  },
  {
    "hash": "0c496bc2b0e02a3e8107ddbdd836a42fd00e799b",
    "type": "pull_request",
    "pull_request": 4469,
    "label": "RickiNano:threaded-aggregator",
    "created_at": "2024-03-07T16:38:08Z",
    "built_at": "2024-03-07T17:16:38Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0c496bc2b0e02a3e8107ddbdd836a42fd00e799b",
    "build_started_at": "2024-03-07T16:51:29Z",
    "run_id": "8191831724"
  },
  {
    "hash": "0c78b06852d38c45c9d976e499585b914059c1fd",
    "type": "pull_request",
    "pull_request": 4326,
    "label": "clemahieu:fix_block_uniquer_linear_scan",
    "created_at": "2023-11-04T23:13:22Z",
    "built_at": "2023-11-05T17:10:25Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0c78b06852d38c45c9d976e499585b914059c1fd",
    "build_started_at": "2023-11-05T16:45:31Z",
    "run_id": "6762557312"
  },
  {
    "hash": "0c980bb2474126abdc86266c08ca9062a4447656",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Fix ipc server stop command",
    "pull_request": "4618",
    "created_at": "2024-05-12T19:53:06Z",
    "built_at": "2024-05-14T11:35:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0c980bb2474126abdc86266c08ca9062a4447656",
    "build_started_at": "2024-05-14T11:08:37Z",
    "run_id": "9078309691"
  },
  {
    "hash": "0c9a99221f12f27ad08014026a87e111f6c0184c",
    "type": "pull_request",
    "pull_request": 4213,
    "label": "thsfs:bootstrap_ascending_class_files_split",
    "created_at": "2023-04-07T13:02:58Z",
    "built_at": "2023-04-07T13:56:46Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0c9a99221f12f27ad08014026a87e111f6c0184c"
  },
  {
    "hash": "0cb4044604d734ca60a6ac2df366c22c0d7df577",
    "type": "commit",
    "created_at": "2023-05-09T11:21:00Z",
    "built_at": "2023-05-09T11:57:17Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0cb4044604d734ca60a6ac2df366c22c0d7df577"
  },
  {
    "hash": "0ccfd728eb9a50fa1dc10b6e48904851dab4efcd",
    "type": "pull_request",
    "title": "Block checker",
    "author": "clemahieu",
    "body": "Rewrite of https://github.com/nanocurrency/nano-node/pull/3727 with functional style checking rather than a pipeline",
    "draft": true,
    "pull_request": 4345,
    "label": "clemahieu:block_checker",
    "created_at": "2023-11-14T12:02:06Z",
    "built_at": "2024-10-07T14:03:02Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-10-07T13:44:38Z",
    "run_id": "11216891632"
  },
  {
    "hash": "0ce3dc8f31d143da5e03b69b866506f89e9b7131",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge pull request #4779 from pwojcikdev/fix-epoch-conflict-confirm\n\nFix `epoch_conflict_confirm` test",
    "pull_request": "4779",
    "created_at": "2024-11-04T21:39:47Z",
    "built_at": "2024-11-04T22:11:18Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0ce3dc8f31d143da5e03b69b866506f89e9b7131",
    "build_started_at": "2024-11-04T21:44:22Z",
    "run_id": "11673203407"
  },
  {
    "hash": "0ce4ed40b53600396c3a4af856a293003e151ee1",
    "type": "pull_request",
    "pull_request": 4404,
    "label": "clemahieu:block_processor_flush_remove",
    "created_at": "2024-01-26T18:37:48Z",
    "built_at": "2024-01-31T12:03:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0ce4ed40b53600396c3a4af856a293003e151ee1",
    "build_started_at": "2024-01-31T11:38:47Z",
    "run_id": "7725463057"
  },
  {
    "hash": "0ce830f5d6f4496aeb3a5823b5fc9e12eaf04dd9",
    "type": "commit",
    "created_at": "2024-03-04T11:31:56Z",
    "built_at": "2024-03-04T13:08:13Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0ce830f5d6f4496aeb3a5823b5fc9e12eaf04dd9",
    "build_started_at": "2024-03-04T12:43:27Z",
    "run_id": "8140364972"
  },
  {
    "hash": "0ced6809396dec8df9de7ec5ea44433b5ce84f68",
    "type": "pull_request",
    "title": "Add database information to telemetry data",
    "author": "RickiNano",
    "body": "Adds telemetry information about the type of database backend the node is using.\r\nThe telemetry RPC function reports both individual database backend information or consolidated (average). The reported database backend for each node will be either 'RocksDb' , 'LMDB' or \"Unknown\". \r\n'Unknown' is for nodes running v26.1 or earlier that does not send any database information in telemetry data.",
    "draft": false,
    "pull_request": 4675,
    "label": "RickiNano:Telemetry-db-backend",
    "created_at": "2024-07-08T18:09:12Z",
    "built_at": "2024-07-08T18:38:43Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0ced6809396dec8df9de7ec5ea44433b5ce84f68",
    "build_started_at": "2024-07-08T18:09:36Z",
    "run_id": "9844718723"
  },
  {
    "hash": "0cfb0a756fab4d106288cf52110fdf4919cfb1cd",
    "type": "commit",
    "author": "clemahieu",
    "title": "Merge pull request #4725 from RickiNano/database-migration-percentage\n\nMigration progress in percentage",
    "pull_request": "4725",
    "created_at": "2024-09-25T09:10:10Z",
    "built_at": "2024-09-25T10:05:03Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0cfb0a756fab4d106288cf52110fdf4919cfb1cd",
    "build_started_at": "2024-09-25T09:19:52Z",
    "run_id": "11030320581"
  },
  {
    "hash": "0cffbf51c8afaca2ebcaa663c353bb6e1e22a983",
    "type": "pull_request",
    "title": "Convert store iterators to variants rather than using polymorphism.",
    "author": "clemahieu",
    "body": "This converts the store iterators from version that use polymorphism to using std::variant.\r\n\r\nThe primary drivers for this change is to simplify and allow more complex iterators to be created where this was previously fairly difficult to do.\r\n\r\nThe iterators are separated in the 3 parts:\r\n- The base database iterators LMDB/RocksDB that use the library's native data type, MDB_val/Slice.\r\n- A variant database iterator that can hold any of the raw database iterators and adapts the native database type to std::span<uint8_t>\r\n- A strong-typed database iterator that mirrors existing iterator behavior with strong typing for key/value pairs.\r\n\r\nThe iterators are bi-directional with a sentinel value to signify end of iteration. The iterators are also circular so after reaching the end-sentinel value, further incrementing will wrap around to the beginning, or decrementing will position the iterator at the last key/value.\r\n\r\nUsing std::variant also eliminates heap allocations when constructing iterators which can improve performance in some circumstances.",
    "draft": true,
    "pull_request": 4759,
    "label": "clemahieu:store_iterator_cleanup",
    "created_at": "2024-10-20T19:24:20Z",
    "built_at": "2024-10-26T15:16:00Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0cffbf51c8afaca2ebcaa663c353bb6e1e22a983",
    "build_started_at": "2024-10-26T14:45:42Z",
    "run_id": "11532679495"
  },
  {
    "hash": "0d0ff027a2b9fbd4ed3619fb43eb58a1ede23958",
    "type": "pull_request",
    "title": "Update to RocksDb V9.7.2",
    "author": "RickiNano",
    "body": "Updates RocksDb from V9.2.2 to 9.7.2\r\nI have tested this locally with no issues\r\n\r\nChangelog:\r\n\r\n## 9.7.0 (09/20/2024)\r\n### New Features\r\n* Make Cache a customizable class that can be instantiated by the object registry.\r\n* Add new option `prefix_seek_opt_in_only` that makes iterators generally safer when you might set a `prefix_extractor`. When `prefix_seek_opt_in_only=true`, which is expected to be the future default, prefix seek is only used when `prefix_same_as_start` or `auto_prefix_mode` are set. Also, `prefix_same_as_start` and `auto_prefix_mode` now allow prefix filtering even with `total_order_seek=true`.\r\n* Add a new table property \"rocksdb.key.largest.seqno\" which records the largest sequence number of all keys in file. It is verified to be zero during SST file ingestion.\r\n\r\n### Behavior Changes\r\n* Changed the semantics of the BlobDB configuration option `blob_garbage_collection_force_threshold` to define a threshold for the overall garbage ratio of all blob files currently eligible for garbage collection (according to `blob_garbage_collection_age_cutoff`). This can provide better control over space amplification at the cost of slightly higher write amplification.\r\n* Set `write_dbid_to_manifest=true` by default. This means DB ID will now be preserved through backups, checkpoints, etc. by default. Also add `write_identity_file` option which can be set to false for anticipated future behavior.\r\n* In FIFO compaction, compactions for changing file temperature (configured by option `file_temperature_age_thresholds`) will compact one file at a time, instead of merging multiple eligible file together (#13018).\r\n* Support ingesting db generated files using hard link, i.e. IngestExternalFileOptions::move_files/link_files and IngestExternalFileOptions::allow_db_generated_files.\r\n* Add a new file ingestion option `IngestExternalFileOptions::link_files` to hard link input files and preserve original files links after ingestion.\r\n* DB::Close now untracks files in SstFileManager, making avaialble any space used\r\nby them. Prior to this change they would be orphaned until the DB is re-opened.\r\n\r\n### Bug Fixes\r\n* Fix a bug in CompactRange() where result files may not be compacted in any future compaction. This can only happen when users configure CompactRangeOptions::change_level to true and the change level step of manual compaction fails (#13009).\r\n* Fix handling of dynamic change of `prefix_extractor` with memtable prefix filter. Previously, prefix seek could mix different prefix interpretations between memtable and SST files. Now the latest `prefix_extractor` at the time of iterator creation or refresh is respected.\r\n* Fix a bug with manual_wal_flush and auto error recovery from WAL failure that may cause CFs to be inconsistent (#12995). The fix will set potential WAL write failure as fatal error when manual_wal_flush is true, and disables auto error recovery from these errors.\r\n\r\n## 9.6.0 (08/19/2024)\r\n### New Features\r\n* *Best efforts recovery supports recovering to incomplete Version with a clean seqno cut that presents a valid point in time view from the user's perspective, if versioning history doesn't include atomic flush.\r\n* New option `BlockBasedTableOptions::decouple_partitioned_filters` should improve efficiency in serving read queries because filter and index partitions can consistently target the configured `metadata_block_size`. This option is currently opt-in.\r\n* Introduce a new mutable CF option `paranoid_memory_checks`. It enables additional validation on data integrity during reads/scanning. Currently, skip list based memtable will validate key ordering during look up and scans.\r\n\r\n### Public API Changes\r\n* Add ticker stats to count file read retries due to checksum mismatch\r\n* Adds optional installation callback function for remote compaction\r\n\r\n### Behavior Changes\r\n* There may be less intra-L0 compaction triggered by total L0 size being too small. We now use compensated file size (tombstones are assigned some value size) when calculating L0 size and reduce the threshold for L0 size limit. This is to avoid accumulating too much data/tombstones in L0.\r\n\r\n### Bug Fixes\r\n* *Make DestroyDB supports slow deletion when it's configured in `SstFileManager`. The slow deletion is subject to the configured `rate_bytes_per_sec`, but not subject to the `max_trash_db_ratio`.\r\n* Fixed a bug where we set unprep_seqs_ even when WriteImpl() fails. This was caught by stress test write fault injection in WriteImpl(). This may have incorrectly caused iteration creation failure for unvalidated writes or returned wrong result for WriteUnpreparedTxn::GetUnpreparedSequenceNumbers().\r\n* Fixed a bug where successful write right after error recovery for last failed write finishes causes duplicate WAL entries\r\n* Fixed a data race involving the background error status in `unordered_write` mode.\r\n* *Fix a bug where file snapshot functions like backup, checkpoint may attempt to copy a non-existing manifest file. #12882\r\n* Fix a bug where per kv checksum corruption may be ignored in MultiGet().\r\n* Fix a race condition in pessimistic transactions that could allow multiple transactions with the same name to be registered simultaneously, resulting in a crash or other unpredictable behavior.\r\n\r\n## 9.5.0 (07/19/2024)\r\n### Public API Changes\r\n* Introduced new C API function rocksdb_writebatch_iterate_cf for column family-aware iteration over the contents of a WriteBatch\r\n* Add support to ingest SST files generated by a DB instead of SstFileWriter. This can be enabled with experimental option `IngestExternalFileOptions::allow_db_generated_files`.\r\n\r\n### Behavior Changes\r\n* When calculating total log size for the `log_size_for_flush` argument in `CreateCheckpoint` API, the size of the archived log will not be included to avoid unnecessary flush\r\n\r\n### Bug Fixes\r\n* Fix a major bug in which an iterator using prefix filtering and SeekForPrev might miss data when the DB is using `whole_key_filtering=false` and `partition_filters=true`.\r\n* Fixed a bug where `OnErrorRecoveryBegin()` is not called before auto recovery starts.\r\n* Fixed a bug where event listener reads ErrorHandler's `bg_error_` member without holding db mutex(#12803).\r\n* Fixed a bug in handling MANIFEST write error that caused the latest valid MANIFEST file to get deleted, resulting in the DB being unopenable.\r\n* Fixed a race between error recovery due to manifest sync or write failure and external SST file ingestion. Both attempt to write a new manifest file, which causes an assertion failure.\r\n\r\n### Performance Improvements\r\n* Fix an issue where compactions were opening table files and reading table properties while holding db mutex_.\r\n* Reduce unnecessary filesystem queries and DB mutex acquires in creating backups and checkpoints.\r\n\r\n## 9.4.0 (06/23/2024)\r\n### New Features\r\n* Added a `CompactForTieringCollectorFactory` to auto trigger compaction for tiering use case.\r\n* Optimistic transactions and pessimistic transactions with the WriteCommitted policy now support the `GetEntityForUpdate` API.\r\n* Added a new \"count\" command to the ldb repl shell. By default, it prints a count of keys in the database from start to end. The options --from=<key> and/or --to=<key> can be specified to limit the range.\r\n* Add `rocksdb_writebatch_update_timestamps`, `rocksdb_writebatch_wi_update_timestamps` in C API.\r\n* Add `rocksdb_iter_refresh` in C API.\r\n* Add `rocksdb_writebatch_create_with_params`, `rocksdb_writebatch_wi_create_with_params` to create WB and WBWI with all options in C API\r\n\r\n### Public API Changes\r\n* Deprecated names `LogFile` and `VectorLogPtr` in favor of new names `WalFile` and `VectorWalPtr`.\r\n* Introduce a new universal compaction option CompactionOptionsUniversal::max_read_amp which allows user to define the limit on the number of sorted runs separately from the trigger for compaction (`level0_file_num_compaction_trigger`) #12477.\r\n\r\n### Behavior Changes\r\n* Inactive WALs are immediately closed upon being fully sync-ed rather than in a background thread. This is to ensure LinkFile() is not called on files still open for write, which might not be supported by some FileSystem implementations. This should not be a performance issue, but an opt-out is available with with new DB option `background_close_inactive_wals`.\r\n\r\n### Bug Fixes\r\n* Fix a rare case in which a hard-linked WAL in a Checkpoint is not fully synced (so might lose data on power loss).\r\n* Fixed the output of the `ldb dump_wal` command for `PutEntity` records so it prints the key and correctly resets the hexadecimal formatting flag after printing the wide-column entity.\r\n* Fixed an issue where `PutEntity` records were handled incorrectly while rebuilding transactions during recovery.\r\n* Various read operations could ignore various ReadOptions that might be relevant. Fixed many such cases, which can result in behavior change but a better reflection of specified options.\r\n\r\n### Performance Improvements\r\n* Improved write throughput to memtable when there's a large number of concurrent writers and allow_concurrent_memtable_write=true(#12545)\r\n\r\n## 9.3.0 (05/17/2024)\r\n### New Features\r\n* Optimistic transactions and pessimistic transactions with the WriteCommitted policy now support the `GetEntity` API.\r\n* Added new `Iterator` property, \"rocksdb.iterator.is-value-pinned\", for checking whether the `Slice` returned by `Iterator::value()` can be used until the `Iterator` is destroyed.\r\n* Optimistic transactions and WriteCommitted pessimistic transactions now support the `MultiGetEntity` API.\r\n* Optimistic transactions and pessimistic transactions with the WriteCommitted policy now support the `PutEntity` API. Support for read APIs and other write policies (WritePrepared, WriteUnprepared) will be added later.\r\n\r\n### Public API Changes\r\n* Exposed block based metadata cache options via C API\r\n* Exposed compaction pri via c api.\r\n* Add a kAdmPolicyAllowAll option to TieredAdmissionPolicy that admits all blocks evicted from the primary block cache into the compressed secondary cache.\r\n\r\n### Behavior Changes\r\n* CompactRange() with change_level=true on a CF with FIFO compaction will return Status::NotSupported().\r\n* External file ingestion with FIFO compaction will always ingest to L0.\r\n\r\n### Bug Fixes\r\n* Fixed a bug for databases using `DBOptions::allow_2pc == true` (all `TransactionDB`s except `OptimisticTransactionDB`) that have exactly one column family. Due to a missing WAL sync, attempting to open the DB could have returned a `Status::Corruption` with a message like \"SST file is ahead of WALs\".\r\n* Fix a bug in CreateColumnFamilyWithImport() where if multiple CFs are imported, we were not resetting files' epoch number and L0 files can have overlapping key range but the same epoch number.\r\n* Fixed race conditions when `ColumnFamilyOptions::inplace_update_support == true` between user overwrites and reads on the same key.\r\n* Fix a bug where `CompactFiles()` can compact files of range conflict with other ongoing compactions' when `preclude_last_level_data_seconds > 0` is used\r\n* Fixed a false positive `Status::Corruption` reported when reopening a DB that used `DBOptions::recycle_log_file_num > 0` and `DBOptions::wal_compression != kNoCompression`.\r\n* While WAL is locked with LockWAL(), some operations like Flush() and IngestExternalFile() are now blocked as they should have been.\r\n* Fixed a bug causing stale memory access when using the TieredSecondaryCache with an NVM secondary cache, and a file system that supports return an FS allocated buffer for MultiRead (FSSupportedOps::kFSBuffer is set).\r\n",
    "draft": false,
    "pull_request": 4753,
    "label": "RickiNano:RocksDb_9_7_2",
    "created_at": "2024-10-11T10:17:44Z",
    "built_at": "2024-10-11T10:53:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0d0ff027a2b9fbd4ed3619fb43eb58a1ede23958",
    "build_started_at": "2024-10-11T10:23:05Z",
    "run_id": "11290667506"
  },
  {
    "hash": "0d109e36e07361636c41462343f44accadb3a252",
    "type": "commit",
    "created_at": "2024-02-19T11:48:38Z",
    "built_at": "2024-02-19T12:19:30Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0d109e36e07361636c41462343f44accadb3a252",
    "build_started_at": "2024-02-19T11:54:36Z",
    "run_id": "7959091294"
  },
  {
    "hash": "0d243d0f1835388195f1c4baea2b34633a83c384",
    "type": "pull_request",
    "pull_request": 4240,
    "label": "pwojcikdev:blockprocessor-blocking-timeout",
    "created_at": "2023-05-30T17:23:30Z",
    "built_at": "2023-05-30T18:02:10Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0d243d0f1835388195f1c4baea2b34633a83c384"
  },
  {
    "hash": "0d2b3653173280d96a49e607f5900321c6f3d69f",
    "type": "pull_request",
    "title": "Simplified RocksDb migration logic",
    "author": "RickiNano",
    "body": null,
    "draft": false,
    "pull_request": 4740,
    "label": "RickiNano:rocksdb-migration-logic",
    "created_at": "2024-09-30T17:31:07Z",
    "built_at": "2024-09-30T17:57:12Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0d2b3653173280d96a49e607f5900321c6f3d69f",
    "build_started_at": "2024-09-30T17:31:40Z",
    "run_id": "11111193087"
  },
  {
    "hash": "0d5ac110ac942acfc0843aec912372532fc49e18",
    "type": "pull_request",
    "title": "Bound the growth of `election_winner_details` set",
    "author": "pwojcikdev",
    "body": null,
    "draft": false,
    "pull_request": 4720,
    "label": "pwojcikdev:aec-bound-election-winners",
    "created_at": "2024-09-04T19:29:31Z",
    "built_at": "2024-09-04T20:25:46Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0d5ac110ac942acfc0843aec912372532fc49e18",
    "build_started_at": "2024-09-04T19:59:03Z",
    "run_id": "10708636630"
  },
  {
    "hash": "0d6189449743f424f097c676ad65e7dc0640af00",
    "type": "commit",
    "created_at": "2023-06-01T19:14:32Z",
    "built_at": "2023-06-01T19:51:38Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0d6189449743f424f097c676ad65e7dc0640af00"
  },
  {
    "hash": "0d61dbae7109d976ee581ef9f5acabe5dae23757",
    "type": "pull_request",
    "pull_request": 4495,
    "label": "pwojcikdev:networking-fixes-tcp-channels",
    "created_at": "2024-03-16T17:12:37Z",
    "built_at": "2024-03-17T09:52:45Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0d61dbae7109d976ee581ef9f5acabe5dae23757",
    "build_started_at": "2024-03-17T09:28:31Z",
    "run_id": "8314441811"
  },
  {
    "hash": "0d74cab3dd1ef46e4f0ee22d82fb357c8fb9adbe",
    "type": "pull_request",
    "pull_request": 4111,
    "label": "pwojcikdev:optimistic-elections-2-rebased",
    "created_at": "2023-02-08T18:34:22Z",
    "built_at": "2023-02-14T20:59:50Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0d74cab3dd1ef46e4f0ee22d82fb357c8fb9adbe"
  },
  {
    "hash": "0d783b9c846c99ae528d5ec7cb95bf9b930cac1d",
    "type": "pull_request",
    "pull_request": 4496,
    "label": "clemahieu:receivable_iteration",
    "created_at": "2024-03-16T20:04:42Z",
    "built_at": "2024-03-17T10:01:27Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0d783b9c846c99ae528d5ec7cb95bf9b930cac1d",
    "build_started_at": "2024-03-17T09:28:31Z",
    "run_id": "8314441811"
  },
  {
    "hash": "0d7b1dee4b1e275a9d7a2cb610bb405a2e1dc6b6",
    "type": "commit",
    "author": "clemahieu",
    "title": "Merge pull request #4730 from RickiNano/Rocksdb-overhaul\n\nRocksdb overhaul and clean up",
    "pull_request": "4730",
    "created_at": "2024-09-25T09:07:47Z",
    "built_at": "2024-09-25T10:12:24Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0d7b1dee4b1e275a9d7a2cb610bb405a2e1dc6b6",
    "build_started_at": "2024-09-25T09:19:52Z",
    "run_id": "11030471455"
  },
  {
    "hash": "0d81008aa5d33daf423a978d2b725996d114c3ac",
    "type": "pull_request",
    "title": "Pass transaction in to end iterator for future use.",
    "author": "clemahieu",
    "body": null,
    "draft": false,
    "pull_request": 4761,
    "label": "clemahieu:end_iterator_transaction",
    "created_at": "2024-10-21T18:23:31Z",
    "built_at": "2024-10-21T19:06:47Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0d81008aa5d33daf423a978d2b725996d114c3ac",
    "build_started_at": "2024-10-21T18:35:33Z",
    "run_id": "11446441116"
  },
  {
    "hash": "0d943f41353a96808cf33292a0b4237138c0365c",
    "type": "pull_request",
    "title": "Introduce ledger view classes to separate confirmed/unconfirmed operations on the ledger",
    "author": "clemahieu",
    "body": "The motivation for this PR is in preparation for bounded backlog changes. Currently, both confirmed and unconfirmed transactions are together on disk and the ACID properties of the ledger are encapsulated with a database transaction.\r\n\r\nWith the bounded backlog, blocks will be stored in memory so there will need to be memory synchronization in addition to database synchronization. Rather than filling the ledger class with unconfirmed/confirmed variants for each operation.\r\n\r\nThe ledger is divided in to several sets and subsets:\r\nledger::confirmed - The set of confirmed transactions\r\nledger::any - The superset of confirmed and unconfirmed transactions\r\n\r\nWhen unconfirmed blocks are held in memory the set ledger::unconfirmed will be added which holds only unconfirmed transactions.\r\n\r\nIn the future the confirming_set can be moved on to ledger which is the subset of unconfirmed blocks that are queued to be moved in to the confirmed set.",
    "draft": false,
    "pull_request": 4486,
    "label": "clemahieu:ledger_view",
    "created_at": "2024-03-12T14:33:24Z",
    "built_at": "2024-04-16T04:00:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0d943f41353a96808cf33292a0b4237138c0365c",
    "build_started_at": "2024-04-16T03:35:03Z",
    "run_id": "8699564014"
  },
  {
    "hash": "0db8f91346c4d3a9be830854b6e3cedad54a90a1",
    "type": "pull_request",
    "pull_request": 4413,
    "label": "RickiNano:blacklist-nodes",
    "created_at": "2024-01-30T19:45:38Z",
    "built_at": "2024-02-01T21:28:22Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0db8f91346c4d3a9be830854b6e3cedad54a90a1",
    "build_started_at": "2024-02-01T21:00:41Z",
    "run_id": "7747563438"
  },
  {
    "hash": "0e441a91281bff7a4ae05c7cb798728a1aacd852",
    "type": "commit",
    "created_at": "2024-03-20T11:10:19Z",
    "built_at": "2024-03-21T11:22:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0e441a91281bff7a4ae05c7cb798728a1aacd852",
    "build_started_at": "2024-03-21T10:56:10Z",
    "run_id": "8373770720"
  },
  {
    "hash": "0e580f8e59d160e066d99549597d178bdf4aea1f",
    "type": "pull_request",
    "pull_request": 4200,
    "label": "clemahieu:election_confirmed_durable",
    "created_at": "2023-03-27T20:55:35Z",
    "built_at": "2023-03-28T13:52:23Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0e580f8e59d160e066d99549597d178bdf4aea1f"
  },
  {
    "hash": "0e6b7fa635e30ef5daa850e973ae11efdec0cf60",
    "type": "commit",
    "created_at": "2024-03-20T14:03:04Z",
    "built_at": "2024-03-20T14:34:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0e6b7fa635e30ef5daa850e973ae11efdec0cf60",
    "build_started_at": "2024-03-20T14:09:53Z",
    "run_id": "8360363439"
  },
  {
    "hash": "0e80477d2ab079c229c41215d3e8c39e860a0ade",
    "type": "commit",
    "created_at": "2023-03-07T20:25:33Z",
    "built_at": "2023-03-07T21:19:44Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0e80477d2ab079c229c41215d3e8c39e860a0ade"
  },
  {
    "hash": "0e83188d5d08295bff9017181189a561013dec99",
    "type": "pull_request",
    "title": "Add per-bucket election limiter",
    "author": "clemahieu",
    "body": "This change is a simpler version of the priority scheduler per-bucket limiter that tracks the number of elections it's started while retaining the ability to queue blocks for activation once elections already started for the bucket complete.\r\n\r\nThis removes the priority scheduler thread. Elections are activated at time of call to ::activate or when a different election is being cleaned up.",
    "draft": true,
    "pull_request": 4623,
    "label": "clemahieu:merge_buckets_priority",
    "created_at": "2024-05-14T22:54:24Z",
    "built_at": "2024-05-15T01:34:00Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0e83188d5d08295bff9017181189a561013dec99",
    "build_started_at": "2024-05-15T01:07:17Z",
    "run_id": "9088399488"
  },
  {
    "hash": "0e9206162703ff57c2de85859ae04112548b9770",
    "type": "pull_request",
    "pull_request": 4185,
    "label": "clemahieu:node_rep_weight_fix",
    "created_at": "2023-03-17T16:42:46Z",
    "built_at": "2023-03-19T04:00:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0e9206162703ff57c2de85859ae04112548b9770"
  },
  {
    "hash": "0e984b4ea0570004f0df2179751670dcb9fc82c7",
    "type": "pull_request",
    "title": "Fix ledger_priority.sequential_blocks testcase",
    "author": "gr0vity-dev",
    "body": "I saw this testcase failing on the windows github runner.\r\n\r\nDifferent account chains are not guaranteed to have the same priority timestamp. \r\nThe opening could happen much later than the sending. \r\nIf we add a 1 second delay between processing `send1` and `open1`, the testcase previously always failed.\r\nThe opening timestamp of \"key1 account\" can be equal or greater than the matching send timestamp of \"genesis account\". ",
    "draft": false,
    "pull_request": 4805,
    "label": "gr0vity-dev:prs/fix-ledger_priority-sequential_blocks",
    "created_at": "2024-12-06T18:37:19Z",
    "built_at": "2024-12-07T09:08:39Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0e984b4ea0570004f0df2179751670dcb9fc82c7",
    "build_started_at": "2024-12-07T08:42:25Z",
    "run_id": "12211439448"
  },
  {
    "hash": "0ea2f575df5fe061e77c385e730153129523bcaf",
    "type": "pull_request",
    "title": "Channel class cleanup",
    "author": "pwojcikdev",
    "body": "This is part of the cleanup I did for https://github.com/nanocurrency/nano-node/pull/4747 but without the lifetime changes which were causing sanitizers to report false positives.",
    "draft": false,
    "pull_request": 4749,
    "label": "pwojcikdev:channel-cleanup",
    "created_at": "2024-10-08T13:53:58Z",
    "built_at": "2024-10-18T19:44:01Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0ea2f575df5fe061e77c385e730153129523bcaf",
    "build_started_at": "2024-10-18T19:12:15Z",
    "run_id": "11409606681"
  },
  {
    "hash": "0ecf3a1701f9f9337acb98d6d5ec0ac04a0182a1",
    "type": "pull_request",
    "pull_request": 4269,
    "label": "clemahieu:stats_lasy_time_sampling",
    "created_at": "2023-08-30T10:41:04Z",
    "built_at": "2023-08-30T11:23:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0ecf3a1701f9f9337acb98d6d5ec0ac04a0182a1"
  },
  {
    "hash": "0ee826aba3f2c9535dae9fbc5a2f472184ee97e4",
    "type": "pull_request",
    "title": "Fix database iterator-transaction lifetimes",
    "author": "pwojcikdev",
    "body": "This adds debug assertions that ensure database iterators can't be used after their corresponding transaction gets committed / released.\r\n\r\nThe `nano::node::collect_ledger_pruning_targets ()` is still triggering the assert, so I invite someone to have a look at it.",
    "draft": false,
    "pull_request": 4713,
    "label": "pwojcikdev:iterator-transaction-lifetimes",
    "created_at": "2024-08-23T09:39:19Z",
    "built_at": "2024-08-23T10:11:38Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0ee826aba3f2c9535dae9fbc5a2f472184ee97e4",
    "build_started_at": "2024-08-23T09:43:33Z",
    "run_id": "10523575557"
  },
  {
    "hash": "0eeed4b8b312b02d3a45dc577e1f5182ccd886d6",
    "type": "pull_request",
    "pull_request": 4182,
    "label": "thsfs:add_bootstrap_ascending_config",
    "created_at": "2023-03-15T01:47:36Z",
    "built_at": "2023-03-20T23:47:23Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0eeed4b8b312b02d3a45dc577e1f5182ccd886d6"
  },
  {
    "hash": "0f048466f2f3fc2b6b7822f3ef1867f1d65c343e",
    "type": "pull_request",
    "pull_request": 4446,
    "label": "dsiganos:opencl_refactor_2",
    "created_at": "2024-02-23T14:40:45Z",
    "built_at": "2024-02-23T15:01:17Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-02-23T14:42:50Z",
    "run_id": "8020844454"
  },
  {
    "hash": "0f1960d3b79b655c3e0ca5491dac284c071b338b",
    "type": "commit",
    "author": null,
    "title": "extend election status with vote_broadcast_count and adjust testcase",
    "pull_request": "4799",
    "created_at": "2024-12-03T14:30:53Z",
    "built_at": "2024-12-04T11:01:47Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0f1960d3b79b655c3e0ca5491dac284c071b338b",
    "build_started_at": "2024-12-04T10:33:56Z",
    "run_id": "12157656220"
  },
  {
    "hash": "0f19fab2190b5908236083728f85a4b105a609d8",
    "type": "commit",
    "created_at": "2023-05-15T11:57:11Z",
    "built_at": "2023-05-15T12:48:39Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0f19fab2190b5908236083728f85a4b105a609d8"
  },
  {
    "hash": "0f1fadc409e6254df7bb657f0e974bb17850aea0",
    "type": "commit",
    "author": "clemahieu",
    "title": "Merge pull request #4607 from clemahieu/vote_router\n\nSeparate vote_router from active_transactions",
    "pull_request": "4607",
    "created_at": "2024-05-08T06:47:58Z",
    "built_at": "2024-05-08T07:20:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0f1fadc409e6254df7bb657f0e974bb17850aea0",
    "build_started_at": "2024-05-08T06:53:59Z",
    "run_id": "8997589433"
  },
  {
    "hash": "0f7d29cefd020b22cdb5420a81b4364f80e67147",
    "type": "pull_request",
    "title": "Redesign the priority scheduler to maintain a 1-to-1 link with running elections",
    "author": "clemahieu",
    "body": "This change appropriately prioritises elections by bucket and then by LRU account. Overfilled buckets have the lowest priority block election cancelled and rolled back.",
    "draft": true,
    "pull_request": 4593,
    "label": "clemahieu:priority_limiter",
    "created_at": "2024-04-30T12:53:50Z",
    "built_at": "2024-04-30T22:32:24Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0f7d29cefd020b22cdb5420a81b4364f80e67147",
    "build_started_at": "2024-04-30T22:07:00Z",
    "run_id": "8902211443"
  },
  {
    "hash": "0f8e2cfb4598f9f9733a1b6470dcc51cc9a2f56d",
    "type": "pull_request",
    "pull_request": 4482,
    "label": "simpago:rep-weight-table",
    "created_at": "2024-03-12T10:20:34Z",
    "built_at": "2024-03-19T06:38:31Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0f8e2cfb4598f9f9733a1b6470dcc51cc9a2f56d",
    "build_started_at": "2024-03-19T06:12:09Z",
    "run_id": "8338402619"
  },
  {
    "hash": "0fa894f19d56086382d66b3458b35862ea3092b3",
    "type": "commit",
    "created_at": "2024-03-20T17:34:14Z",
    "built_at": "2024-03-24T12:34:58Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-24T12:11:57Z",
    "run_id": "8409177637"
  },
  {
    "hash": "0fc3bedd8e3982551dd25d8eee40eda7c24909d4",
    "type": "pull_request",
    "pull_request": 4133,
    "label": "clemahieu:election_occupancy",
    "created_at": "2023-02-15T18:23:49Z",
    "built_at": "2023-02-16T12:26:18Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0fc3bedd8e3982551dd25d8eee40eda7c24909d4"
  },
  {
    "hash": "0fdd07d4344572fbcdc5f55c9e4e916c381fdccc",
    "type": "commit",
    "created_at": "2023-09-17T22:54:12Z",
    "built_at": "2023-09-20T19:28:03Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0fdd07d4344572fbcdc5f55c9e4e916c381fdccc"
  },
  {
    "hash": "0febfbd7a07a55f63ec1bbcff658f03712e969a5",
    "type": "pull_request",
    "pull_request": 4318,
    "label": "clemahieu:election_state_mutex",
    "created_at": "2023-10-26T14:21:12Z",
    "built_at": "2024-01-11T10:36:18Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:0febfbd7a07a55f63ec1bbcff658f03712e969a5",
    "build_started_at": "2024-01-11T10:08:18Z",
    "run_id": "7487190654"
  },
  {
    "hash": "1012e97f8931b9e5d08ca8915c438c7f7b168fb4",
    "type": "pull_request",
    "pull_request": 4461,
    "label": "clemahieu:ledger_query_simplification",
    "created_at": "2024-03-05T21:33:36Z",
    "built_at": "2024-03-06T10:52:13Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1012e97f8931b9e5d08ca8915c438c7f7b168fb4",
    "build_started_at": "2024-03-06T10:27:26Z",
    "run_id": "8170559965"
  },
  {
    "hash": "10206b819da324796e43af971fe63c0741e887f3",
    "type": "commit",
    "created_at": "2023-10-07T20:33:22Z",
    "built_at": "2023-10-17T15:37:52Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:10206b819da324796e43af971fe63c0741e887f3"
  },
  {
    "hash": "102f2ddecb7b2522875b884b60c0c4a5f4d98aaf",
    "type": "pull_request",
    "pull_request": 4401,
    "label": "dsiganos:fix_active_transactions_vote_replays",
    "created_at": "2024-01-26T16:44:09Z",
    "built_at": "2024-01-27T14:16:46Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:102f2ddecb7b2522875b884b60c0c4a5f4d98aaf",
    "build_started_at": "2024-01-27T13:51:14Z",
    "run_id": "7679056834"
  },
  {
    "hash": "104b74d2e573d4b995b0d31db64991c8d77436a2",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Offload block processor notifications (#4763)\n\n* Issue block processor batch processed notifications on background thread\r\n\r\n* Remove `should_log` function\r\n\r\n* Move `block_processor::context` source to the bottom of the file\r\n\r\n* Remove unnecessary notify",
    "pull_request": "4763",
    "created_at": "2024-10-28T11:17:45Z",
    "built_at": "2024-10-28T11:48:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:104b74d2e573d4b995b0d31db64991c8d77436a2",
    "build_started_at": "2024-10-28T11:18:06Z",
    "run_id": "11552827520"
  },
  {
    "hash": "104d9aaa938370c41a79bca80e2b0f690b1824db",
    "type": "pull_request",
    "pull_request": 4238,
    "label": "clemahieu:scheduling_limiter",
    "created_at": "2023-05-19T01:07:22Z",
    "built_at": "2023-09-12T19:19:57Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:104d9aaa938370c41a79bca80e2b0f690b1824db"
  },
  {
    "hash": "106ad6b4d3e1122e4ad60ecb257ddeb4b1d43e78",
    "type": "pull_request",
    "pull_request": 4421,
    "label": "pwojcikdev:free-block-publisher-class",
    "created_at": "2024-02-05T21:08:35Z",
    "built_at": "2024-02-05T21:52:56Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:106ad6b4d3e1122e4ad60ecb257ddeb4b1d43e78",
    "build_started_at": "2024-02-05T21:19:11Z",
    "run_id": "7790978401"
  },
  {
    "hash": "1084814a23218b0314a989ef8c2ab20195aab24b",
    "type": "commit",
    "created_at": "2023-10-03T19:37:37Z",
    "built_at": "2023-10-03T20:27:20Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1084814a23218b0314a989ef8c2ab20195aab24b"
  },
  {
    "hash": "109552f7fce1ee5c7953a1096dc70077252e670b",
    "type": "pull_request",
    "pull_request": 4289,
    "label": "clemahieu:lmdb_0_9_31",
    "created_at": "2023-09-21T11:28:11Z",
    "built_at": "2023-09-25T11:52:39Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:109552f7fce1ee5c7953a1096dc70077252e670b"
  },
  {
    "hash": "10c06f8875c283d8d408d92ea7cbe264a5f1da96",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Filter duplicate votes",
    "pull_request": "N/A",
    "created_at": "2024-09-23T15:08:25Z",
    "built_at": "2024-09-25T14:17:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:10c06f8875c283d8d408d92ea7cbe264a5f1da96",
    "build_started_at": "2024-09-25T13:41:38Z",
    "run_id": "11034429879"
  },
  {
    "hash": "10ce90d99ba1621c089aa0d74a0c84813daaacbf",
    "type": "commit",
    "created_at": "2023-02-03T20:34:16Z",
    "built_at": "2023-02-15T14:17:34Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:10ce90d99ba1621c089aa0d74a0c84813daaacbf"
  },
  {
    "hash": "11552cb16f00be09b16fcaa3f9be3a574e817517",
    "type": "pull_request",
    "pull_request": 4424,
    "label": "pwojcikdev:blockprocessor-context",
    "created_at": "2024-02-08T18:03:48Z",
    "built_at": "2024-02-13T18:03:54Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-02-13T17:42:38Z",
    "run_id": "7890580577"
  },
  {
    "hash": "115652607026d220c50b29572b2b585edd387b0b",
    "type": "pull_request",
    "title": "Raise file descriptor limit at entry points rather than just within daemon code.",
    "author": "clemahieu",
    "body": null,
    "draft": false,
    "pull_request": 4677,
    "label": "clemahieu:early_file_limit",
    "created_at": "2024-07-10T10:04:17Z",
    "built_at": "2024-07-10T10:41:45Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:115652607026d220c50b29572b2b585edd387b0b",
    "build_started_at": "2024-07-10T10:11:26Z",
    "run_id": "9872296365"
  },
  {
    "hash": "1170407c8dfd0e0076c455eac3b7eba582915211",
    "type": "commit",
    "created_at": "2023-04-06T19:42:25Z",
    "built_at": "2023-04-13T13:21:32Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1170407c8dfd0e0076c455eac3b7eba582915211"
  },
  {
    "hash": "1179b30aba96ee249b10c84a26782c88a9271f0f",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Introduce bucketing component",
    "pull_request": "4794",
    "created_at": "2024-10-11T13:46:30Z",
    "built_at": "2024-11-27T08:05:01Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1179b30aba96ee249b10c84a26782c88a9271f0f",
    "build_started_at": "2024-11-27T07:27:46Z",
    "run_id": "12045785522"
  },
  {
    "hash": "11b1d4ca62d90e6184e1053233a8960e9a05ab38",
    "type": "commit",
    "created_at": "2023-02-23T10:57:36Z",
    "built_at": "2023-02-23T11:39:42Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:11b1d4ca62d90e6184e1053233a8960e9a05ab38"
  },
  {
    "hash": "11b20a76677baad0614df69f4e38b92aa451e8fd",
    "type": "commit",
    "created_at": "2023-02-16T19:33:29Z",
    "built_at": "2023-02-16T23:21:10Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:11b20a76677baad0614df69f4e38b92aa451e8fd"
  },
  {
    "hash": "11dd76050b10c4af5d45b6cfad5e7027a803505b",
    "type": "pull_request",
    "pull_request": 4465,
    "label": "clemahieu:block_fields",
    "created_at": "2024-03-06T17:58:47Z",
    "built_at": "2024-03-08T14:59:00Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:11dd76050b10c4af5d45b6cfad5e7027a803505b",
    "build_started_at": "2024-03-08T14:34:36Z",
    "run_id": "8204813331"
  },
  {
    "hash": "11e9581a25d89b6eff2325839c5f21fbfa63c473",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Avoid unnecessary notices",
    "pull_request": "4756",
    "created_at": "2024-10-10T12:40:38Z",
    "built_at": "2024-10-17T10:01:30Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:11e9581a25d89b6eff2325839c5f21fbfa63c473",
    "build_started_at": "2024-10-17T09:18:10Z",
    "run_id": "11382238575"
  },
  {
    "hash": "11f14702f97c4490433f1fe5cfb69b541929bede",
    "type": "pull_request",
    "pull_request": 4208,
    "label": "Fiono11:stats_bug_fix",
    "created_at": "2023-04-05T09:49:24Z",
    "built_at": null,
    "build_status": "building",
    "docker_tag": null
  },
  {
    "hash": "1205538a26173c1fb76cd05b006cff18c4fc06b2",
    "type": "pull_request",
    "title": "Directly confirm blocks within unit tests rather than starting/forcing elections",
    "author": "clemahieu",
    "body": "Replaces nano::test::force_confirm with nano::test::confirm and overrides. The action was renamed to test::confirm because the action is to confirm.  election::force_confirm is an action specific to an election where the normal path causes confirmation after the vote tally has quorum and force_confirm simulates this.\r\n\r\nThis removes ledger::force_confirm as it was inappropriately calling the private ledger::confirm(block) rather than the public ledger::confirm(hash).\r\n\r\nWhile this doesn't fix any test specifically it should help with general unit test reliability by not running election functionality when setting up tests.",
    "draft": false,
    "pull_request": 4605,
    "label": "clemahieu:testing_direct_confirmation",
    "created_at": "2024-05-06T22:14:55Z",
    "built_at": "2024-05-06T23:15:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1205538a26173c1fb76cd05b006cff18c4fc06b2",
    "build_started_at": "2024-05-06T22:48:05Z",
    "run_id": "8976802507"
  },
  {
    "hash": "124421bfefe8add44058caf628b8046a699b9dfe",
    "type": "pull_request",
    "pull_request": 4424,
    "label": "pwojcikdev:blockprocessor-context",
    "created_at": "2024-02-08T18:03:48Z",
    "built_at": "2024-02-08T18:51:42Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:124421bfefe8add44058caf628b8046a699b9dfe",
    "build_started_at": "2024-02-08T18:25:52Z",
    "run_id": "7834194590"
  },
  {
    "hash": "1249d50347c9f55b7298d80ff196c5405ab25ba3",
    "type": "commit",
    "created_at": "2023-02-03T18:57:59Z",
    "built_at": "2023-02-15T14:37:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1249d50347c9f55b7298d80ff196c5405ab25ba3"
  },
  {
    "hash": "12571dace3da5ad5a2869e39e287bd21fe84747d",
    "type": "commit",
    "created_at": "2024-03-10T15:59:15Z",
    "built_at": "2024-03-10T20:39:16Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:12571dace3da5ad5a2869e39e287bd21fe84747d",
    "build_started_at": "2024-03-10T20:14:43Z",
    "run_id": "8224504096"
  },
  {
    "hash": "12824f1d3b12fc2b3c350df994fce36f5318fa92",
    "type": "pull_request",
    "title": "Traffic shaping",
    "author": "pwojcikdev",
    "body": "This is a draft PR for an ongoing work that overhauls how outgoing traffic is handled and prioritized. This will significantly improve how the node handles network congestion, which is extremely important during spam.\r\n\r\nDepends on PRs:\r\nhttps://github.com/nanocurrency/nano-node/pull/4784",
    "draft": true,
    "pull_request": 4786,
    "label": "pwojcikdev:traffic-shaping-pr",
    "created_at": "2024-11-18T19:43:02Z",
    "built_at": "2024-12-16T19:09:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:12824f1d3b12fc2b3c350df994fce36f5318fa92",
    "build_started_at": "2024-12-16T18:41:36Z",
    "run_id": "12359143512"
  },
  {
    "hash": "12bc50c7733df24906cf5807d30bf1696d53bcb9",
    "type": "commit",
    "created_at": "2023-11-06T22:33:54Z",
    "built_at": "2023-12-01T10:40:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:12bc50c7733df24906cf5807d30bf1696d53bcb9",
    "build_started_at": "2023-12-01T10:08:26Z",
    "run_id": "7058588921"
  },
  {
    "hash": "12ca4d0ec41fc996c36ec6c8c85cdf8efc2fd89e",
    "type": "pull_request",
    "pull_request": 4433,
    "label": "clemahieu:socket_heap_boost_socket",
    "created_at": "2024-02-12T23:08:04Z",
    "built_at": "2024-02-13T11:00:04Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-02-13T10:35:14Z",
    "run_id": "7885194532"
  },
  {
    "hash": "12cee1690e6b077f5a86b422b35363778d6488d9",
    "type": "pull_request",
    "title": "Log test system exceptions",
    "author": "pwojcikdev",
    "body": null,
    "draft": false,
    "pull_request": 4746,
    "label": "pwojcikdev:log-test-system-exceptions",
    "created_at": "2024-10-07T18:16:51Z",
    "built_at": "2024-10-07T18:59:58Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:12cee1690e6b077f5a86b422b35363778d6488d9",
    "build_started_at": "2024-10-07T18:33:42Z",
    "run_id": "11221754110"
  },
  {
    "hash": "12d1fafc27936cdec86e4f219d5bfc1278a5c6d8",
    "type": "pull_request",
    "pull_request": 4274,
    "label": "clemahieu:nano_prioritization_rename",
    "created_at": "2023-09-01T11:24:46Z",
    "built_at": "2023-09-01T12:11:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:12d1fafc27936cdec86e4f219d5bfc1278a5c6d8"
  },
  {
    "hash": "12d595787cff8fde92cf4eacfff229fe95fecc3a",
    "type": "pull_request",
    "pull_request": 4503,
    "label": "clemahieu:gtest_update_1_14",
    "created_at": "2024-03-19T00:54:44Z",
    "built_at": "2024-03-19T02:07:17Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:12d595787cff8fde92cf4eacfff229fe95fecc3a",
    "build_started_at": "2024-03-19T01:37:16Z",
    "run_id": "8336194179"
  },
  {
    "hash": "132c4232074f8948ea879f9acc84b58423a7d423",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Dedicated election workers",
    "pull_request": "N/A",
    "created_at": "2024-05-24T10:43:13Z",
    "built_at": "2024-06-18T15:12:26Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:132c4232074f8948ea879f9acc84b58423a7d423",
    "build_started_at": "2024-06-18T14:35:34Z",
    "run_id": "9567175263"
  },
  {
    "hash": "135867b88ae4d1e3d5afc32b06435656b971732b",
    "type": "commit",
    "created_at": "2023-04-27T19:26:06Z",
    "built_at": "2023-06-21T17:21:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:135867b88ae4d1e3d5afc32b06435656b971732b"
  },
  {
    "hash": "13616dc3cfb0a36837960f7242fbf21f6a60b5af",
    "type": "pull_request",
    "title": "Multithreaded vote processor",
    "author": "pwojcikdev",
    "body": "Changes vote processor to use multiple threads. While processing of votes inside the election container is still done under exclusive lock, this should help amortize time spent checking vote signatures.",
    "draft": false,
    "pull_request": 4600,
    "label": "pwojcikdev:vote-processor-threads",
    "created_at": "2024-05-03T11:36:29Z",
    "built_at": "2024-05-05T09:19:47Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:13616dc3cfb0a36837960f7242fbf21f6a60b5af",
    "build_started_at": "2024-05-05T08:54:04Z",
    "run_id": "8957051085"
  },
  {
    "hash": "13753f3916e6e2a9fe02b98695456e03939531e0",
    "type": "pull_request",
    "title": "Log node status periodically",
    "author": "pwojcikdev",
    "body": "This logs node status (block count, block rates, peers, quorum info, election count) every 60 seconds. This should provide immediate and easy to access way to check node status to node operators.\r\n\r\nFinal output looks like this:\r\n\r\n<img width=\"1255\" alt=\"Screenshot 2024-07-09 at 13 23 05\" src=\"https://github.com/nanocurrency/nano-node/assets/3044353/49c6bfeb-5bdc-4974-8cb3-813b9fca7bef\">\r\n",
    "draft": false,
    "pull_request": 4676,
    "label": "pwojcikdev:monitor-log",
    "created_at": "2024-07-09T11:26:42Z",
    "built_at": "2024-07-09T12:21:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:13753f3916e6e2a9fe02b98695456e03939531e0",
    "build_started_at": "2024-07-09T11:54:07Z",
    "run_id": "9856525391"
  },
  {
    "hash": "13972dc6e045da10aa8cf35b34feb8506ff0e8ac",
    "type": "pull_request",
    "pull_request": 4461,
    "label": "clemahieu:ledger_query_simplification",
    "created_at": "2024-03-05T21:33:36Z",
    "built_at": "2024-03-06T13:22:24Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:13972dc6e045da10aa8cf35b34feb8506ff0e8ac",
    "build_started_at": "2024-03-06T12:54:22Z",
    "run_id": "8172406416"
  },
  {
    "hash": "13af56e6757b1d431e7641633e8fe027bb94b0dc",
    "type": "commit",
    "created_at": "2023-11-08T17:47:32Z",
    "built_at": "2023-12-12T18:38:10Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:13af56e6757b1d431e7641633e8fe027bb94b0dc",
    "build_started_at": "2023-12-12T18:08:37Z",
    "run_id": "7185514549"
  },
  {
    "hash": "13bfea1fc1945f17ce32b797aded43da912bb6ec",
    "type": "pull_request",
    "title": "Differentiate between node IO runners and general IO thread roles",
    "author": "pwojcikdev",
    "body": null,
    "draft": false,
    "pull_request": 4643,
    "label": "pwojcikdev:daemon-io-thread-role",
    "created_at": "2024-05-25T11:27:55Z",
    "built_at": "2024-05-25T12:03:36Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:13bfea1fc1945f17ce32b797aded43da912bb6ec",
    "build_started_at": "2024-05-25T11:34:42Z",
    "run_id": "9235141607"
  },
  {
    "hash": "143c7b06e4a9e82a1f9a99600270dca0d7e44617",
    "type": "commit",
    "author": "clemahieu",
    "title": "Merge pull request #4619 from clemahieu/scheduler_test_cleanup\n\nScheduler test cleanup",
    "pull_request": "4619",
    "created_at": "2024-05-14T11:34:49Z",
    "built_at": "2024-05-14T12:18:36Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:143c7b06e4a9e82a1f9a99600270dca0d7e44617",
    "build_started_at": "2024-05-14T11:41:17Z",
    "run_id": "9078797295"
  },
  {
    "hash": "144c602b66f217d7deae4897130bfa610fe6ae91",
    "type": "commit",
    "created_at": "2024-03-19T11:37:16Z",
    "built_at": "2024-03-20T08:39:23Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:144c602b66f217d7deae4897130bfa610fe6ae91",
    "build_started_at": "2024-03-20T08:13:47Z",
    "run_id": "8355682154"
  },
  {
    "hash": "1455d49f1348ac1ac4291ad038fbd3e713280b78",
    "type": "commit",
    "author": "clemahieu",
    "title": "Move ledger receivable functions on to ledger set.",
    "pull_request": "4593",
    "created_at": "2024-03-17T20:48:36Z",
    "built_at": "2024-04-30T14:24:26Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1455d49f1348ac1ac4291ad038fbd3e713280b78",
    "build_started_at": "2024-04-30T13:34:48Z",
    "run_id": "8896058416"
  },
  {
    "hash": "145a549e1d7f527beae6e48729cb8dd77022cb10",
    "type": "pull_request",
    "title": "Vote size histogram",
    "author": "pwojcikdev",
    "body": "This samples size of generated votes to make it possible to visualize as grafana heatmap.",
    "draft": false,
    "pull_request": 4751,
    "label": "pwojcikdev:vote-size-histogram",
    "created_at": "2024-10-08T16:04:19Z",
    "built_at": "2024-10-08T16:50:01Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:145a549e1d7f527beae6e48729cb8dd77022cb10",
    "build_started_at": "2024-10-08T16:20:50Z",
    "run_id": "11239589604"
  },
  {
    "hash": "147775c6f7c1312d83e22242ba6982e783b51c33",
    "type": "pull_request",
    "pull_request": 4496,
    "label": "clemahieu:receivable_iteration",
    "created_at": "2024-03-16T20:04:42Z",
    "built_at": "2024-03-16T20:40:26Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:147775c6f7c1312d83e22242ba6982e783b51c33",
    "build_started_at": "2024-03-16T20:15:11Z",
    "run_id": "8310216243"
  },
  {
    "hash": "147a375e28a35de6aa31dfb41155b1b58f8f51a6",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Configuration and environment variable improvements (#4613)\n\n* Move env utilities to `nano::env::...`\r\n\r\n* Env get_int helpers\r\n\r\n* Hardware concurrency override\r\n\r\n* App path override\r\n\r\n* Convert legacy calls to `nano::env::get (...)`\r\n\r\n* Use generic get\r\n\r\n* Inform about environment overrides\r\n\r\n* Consteval sanitizer info\r\n\r\n* Print stats logging info\r\n\r\n* Replace `get_env_threshold_or_default`\r\n\r\n* Allow overriding io threads from env variable\r\n\r\n* Ensure configured thread counts are in reasonable ranges\r\n\r\n* Use `std::clamp`",
    "pull_request": "4613",
    "created_at": "2024-05-13T10:30:49Z",
    "built_at": "2024-05-13T10:59:39Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:147a375e28a35de6aa31dfb41155b1b58f8f51a6",
    "build_started_at": "2024-05-13T10:31:15Z",
    "run_id": "9061376651"
  },
  {
    "hash": "14860eaa09c3dd9f4f68e81a2f1019386806e1b7",
    "type": "commit",
    "created_at": "2024-03-20T13:32:41Z",
    "built_at": "2024-03-21T11:45:56Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:14860eaa09c3dd9f4f68e81a2f1019386806e1b7",
    "build_started_at": "2024-03-21T10:56:10Z",
    "run_id": "8373770720"
  },
  {
    "hash": "148ec836afaa8b8fa90e67bd7e0c63ed2774dbf4",
    "type": "pull_request",
    "pull_request": 4256,
    "label": "gr0vity-dev:prs/unified_artifacts_worflow",
    "created_at": "2023-07-03T18:42:25Z",
    "built_at": "2023-07-16T08:38:09Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:148ec836afaa8b8fa90e67bd7e0c63ed2774dbf4"
  },
  {
    "hash": "14a05695f74c1e9ebaa77aaa202141e65d78c19c",
    "type": "commit",
    "created_at": "2024-03-10T15:14:40Z",
    "built_at": "2024-03-10T20:52:56Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:14a05695f74c1e9ebaa77aaa202141e65d78c19c",
    "build_started_at": "2024-03-10T20:14:43Z",
    "run_id": "8224504096"
  },
  {
    "hash": "14a8c5b98d03e40a0c50974ed457418f5e652d56",
    "type": "pull_request",
    "title": "Bounded election buckets with dynamic reprioritization",
    "author": "pwojcikdev",
    "body": "Based on:\r\n- Elections sets (can't find PR, Colin's initial attempt at bucket limiting)\r\n- Bobs bucket vacancy branch https://github.com/nanocurrency/nano-node/compare/develop...gr0vity-dev:nano-node:wip/bucket_vacancy \r\n\r\nbut simpler, more robust and allows for dynamically dropping and scheduling higher priority elections. Also, buckets can be configured to opportunistically use more available space if AEC is underutilized.",
    "draft": false,
    "pull_request": 4626,
    "label": "pwojcikdev:election-bounding-2",
    "created_at": "2024-05-15T16:21:38Z",
    "built_at": "2024-05-21T11:51:44Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:14a8c5b98d03e40a0c50974ed457418f5e652d56",
    "build_started_at": "2024-05-21T11:25:33Z",
    "run_id": "9173879682"
  },
  {
    "hash": "14a8f556e0f114b508829104795ef10c8f8ec477",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Contains hash functionality",
    "pull_request": "4794",
    "created_at": "2024-10-12T10:32:20Z",
    "built_at": "2024-11-27T08:12:03Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:14a8f556e0f114b508829104795ef10c8f8ec477",
    "build_started_at": "2024-11-27T07:27:46Z",
    "run_id": "12045874797"
  },
  {
    "hash": "14c0217b030bb2f260da5a85af1efc546a64c74b",
    "type": "pull_request",
    "title": "migrate_database_lmdb_to_rocksdb improvements",
    "author": "RickiNano",
    "body": "The `migrate_database_lmdb_to_rocksdb` option is running for a very long time with the current ledger size (almost 200 million blocks). On my local machine it took 65 minutes to complete. Nothing is written on screen during this process and users may think the process has stalled.\r\nThis PR adds some progress feedback. One update for each of the 7 tables that are migrated.\r\nIt also adds a simple disk space check to warn users if they might not have enough space to complete the migration.\r\n~~The current converted RocksDb database is 73 GB, and the warning is given if the system has less than 75GB available.~~\r\nThe warning is given based on the size of the LMDB database that is being migrated. The final RocksDb size is approximately 65% of the LMDB space.",
    "draft": false,
    "pull_request": 4647,
    "label": "RickiNano:lmdb-to-rocksdb",
    "created_at": "2024-06-13T10:47:31Z",
    "built_at": "2024-07-09T15:45:00Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:14c0217b030bb2f260da5a85af1efc546a64c74b",
    "build_started_at": "2024-07-09T15:15:04Z",
    "run_id": "9859694460"
  },
  {
    "hash": "14c4c6ff7116b6ab16e3fb9dad98d4aee71a784d",
    "type": "commit",
    "created_at": "2024-03-10T15:22:45Z",
    "built_at": "2024-03-10T20:56:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:14c4c6ff7116b6ab16e3fb9dad98d4aee71a784d",
    "build_started_at": "2024-03-10T20:14:43Z",
    "run_id": "8224504096"
  },
  {
    "hash": "14db9974d4550b9d038959d9b686fd0f542d8375",
    "type": "commit",
    "created_at": "2024-01-08T23:00:56Z",
    "built_at": "2024-01-08T23:40:32Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:14db9974d4550b9d038959d9b686fd0f542d8375",
    "build_started_at": "2024-01-08T23:09:58Z",
    "run_id": "7454294270"
  },
  {
    "hash": "14e4d7ebf0e0b197de1b57556936b56d46b0ee6d",
    "type": "commit",
    "created_at": "2023-02-14T13:29:52Z",
    "built_at": "2023-02-14T14:00:22Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:14e4d7ebf0e0b197de1b57556936b56d46b0ee6d"
  },
  {
    "hash": "14f4d38cf04ca6916caa5388ddf552a3f183c86e",
    "type": "pull_request",
    "title": "Move inactive_node and node_wrapper into their own files",
    "body": null,
    "draft": false,
    "pull_request": 4541,
    "label": "dsiganos:move_inactive_node_and_node_wrapper_to_their_own_files",
    "created_at": "2024-04-08T08:55:19Z",
    "built_at": "2024-04-08T09:23:22Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:14f4d38cf04ca6916caa5388ddf552a3f183c86e",
    "build_started_at": "2024-04-08T08:57:51Z",
    "run_id": "8597334711"
  },
  {
    "hash": "151722f183fa6ca670d0c54de582aa78321b93d0",
    "type": "pull_request",
    "title": "Use memory weight instead of exact weight when computing wallet reps.",
    "author": "clemahieu",
    "body": "This function is used to check if an account has enough weight to be a rep. If this account isn't in memory because of its high weight, by definition it doesn't have enough weight.\r\n\r\nThis also eliminates a database transaction while holding the reps_cache_mutex in nano::wallets::compute_reps. This mutex is in several hot paths of code such as nano::wallets::reps being called from message_visitor::confirm_req",
    "draft": false,
    "pull_request": 4555,
    "label": "clemahieu:chep_rep_memory_weight",
    "created_at": "2024-04-13T16:18:41Z",
    "built_at": "2024-04-13T16:53:21Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:151722f183fa6ca670d0c54de582aa78321b93d0",
    "build_started_at": "2024-04-13T16:25:51Z",
    "run_id": "8674663208"
  },
  {
    "hash": "152f4449fa745106ae68acd015d7d1cc0b72893c",
    "type": "commit",
    "created_at": "2024-03-20T10:09:59Z",
    "built_at": "2024-03-20T14:52:35Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:152f4449fa745106ae68acd015d7d1cc0b72893c",
    "build_started_at": "2024-03-20T14:09:53Z",
    "run_id": "8360363439"
  },
  {
    "hash": "15566e50aa0f52b0bdb570cde1677ea3688531df",
    "type": "pull_request",
    "pull_request": 4410,
    "label": "RickiNano:Use-testutil-functions-part-2",
    "created_at": "2024-01-27T18:40:13Z",
    "built_at": "2024-01-27T19:12:45Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:15566e50aa0f52b0bdb570cde1677ea3688531df",
    "build_started_at": "2024-01-27T18:45:15Z",
    "run_id": "7680517678"
  },
  {
    "hash": "155aa7d5ccbf226b9b84b376baa8cc8c943eb709",
    "type": "pull_request",
    "title": "Block checker",
    "body": "Rewrite of https://github.com/nanocurrency/nano-node/pull/3727 with functional style checking rather than a pipeline",
    "draft": true,
    "pull_request": 4345,
    "label": "clemahieu:block_checker",
    "created_at": "2023-11-14T12:02:06Z",
    "built_at": "2024-04-03T20:51:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:155aa7d5ccbf226b9b84b376baa8cc8c943eb709",
    "build_started_at": "2024-04-03T20:25:16Z",
    "run_id": "8545059465"
  },
  {
    "hash": "155cb1c2526036defc14d65e9c043871d65632dd",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Keep election in confirming set",
    "pull_request": "N/A",
    "created_at": "2024-10-15T14:18:53Z",
    "built_at": "2024-10-18T09:25:20Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:155cb1c2526036defc14d65e9c043871d65632dd",
    "build_started_at": "2024-10-18T08:49:46Z",
    "run_id": "11400670374"
  },
  {
    "hash": "155f5e774da1cb4f1821d388bbac188c7e8f2d1c",
    "type": "pull_request",
    "pull_request": 4238,
    "label": "clemahieu:scheduling_limiter",
    "created_at": "2023-05-19T01:07:22Z",
    "built_at": "2023-09-12T13:36:21Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:155f5e774da1cb4f1821d388bbac188c7e8f2d1c"
  },
  {
    "hash": "1580da110f5574b6c9c682dc13272894181a99eb",
    "type": "pull_request",
    "pull_request": 4158,
    "label": "clemahieu:bootstrap_ascending_client",
    "created_at": "2023-02-27T20:15:37Z",
    "built_at": "2023-03-13T11:57:56Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1580da110f5574b6c9c682dc13272894181a99eb"
  },
  {
    "hash": "15979e856ebfab415051aa1176ed66f43028cdb2",
    "type": "commit",
    "created_at": "2024-03-07T03:13:22Z",
    "built_at": "2024-03-07T13:58:24Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:15979e856ebfab415051aa1176ed66f43028cdb2",
    "build_started_at": "2024-03-07T13:21:35Z",
    "run_id": "8188836572"
  },
  {
    "hash": "159be4f73f7f704e8395f2d02a8d7d5e0702f627",
    "type": "commit",
    "created_at": "2023-02-25T10:38:09Z",
    "built_at": "2023-02-25T11:12:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:159be4f73f7f704e8395f2d02a8d7d5e0702f627"
  },
  {
    "hash": "15bdcc0abfae19503e9e09a1b5fc6a675ece9f83",
    "type": "pull_request",
    "pull_request": 4296,
    "label": "clemahieu:sucessor_table",
    "created_at": "2023-09-26T13:49:26Z",
    "built_at": "2024-02-21T11:34:03Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:15bdcc0abfae19503e9e09a1b5fc6a675ece9f83",
    "build_started_at": "2024-02-21T11:08:55Z",
    "run_id": "7988067541"
  },
  {
    "hash": "15e57ffd70ffde66279ea48542821f900f3210ef",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Track rep query response time (#4658)\n\n* Track rep query response time\r\n\r\n* Make `stats.sample (...)` signature more ergonomic",
    "pull_request": "4658",
    "created_at": "2024-06-26T18:12:41Z",
    "built_at": "2024-06-26T18:56:24Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:15e57ffd70ffde66279ea48542821f900f3210ef",
    "build_started_at": "2024-06-26T18:30:19Z",
    "run_id": "9684889038"
  },
  {
    "hash": "15e91e2a78fcc7a436801332b4f03c34f40bebee",
    "type": "pull_request",
    "title": "Rework `collect_container_info (..)` functions",
    "author": "pwojcikdev",
    "body": "This simplifies how container info functionality is implemented for node components, avoiding unnecessary and annoying boilerplate.\r\n\r\nPreviously:\r\n```\r\nstd::unique_ptr<nano::container_info_component> nano::block_processor::collect_container_info (std::string const & name)\r\n{\r\n\tnano::lock_guard<nano::mutex> guard{ mutex };\r\n\r\n\tauto composite = std::make_unique<container_info_composite> (name);\r\n\tcomposite->add_component (std::make_unique<container_info_leaf> (container_info_entry{ \"blocks\", queue.size (), 0 }));\r\n\tcomposite->add_component (std::make_unique<container_info_leaf> (container_info_entry{ \"forced\", queue.size ({ nano::block_source::forced }), 0 }));\r\n\tcomposite->add_component (queue.collect_container_info (\"queue\"));\r\n\treturn composite;\r\n}\r\n```\r\n\r\n\r\nNow:\r\n```\r\nnano::container_info nano::block_processor::container_info () const\r\n{\r\n\tnano::lock_guard<nano::mutex> guard{ mutex };\r\n\r\n\tnano::container_info info;\r\n\tinfo.put (\"blocks\", queue.size ());\r\n\tinfo.put (\"forced\", queue.size ({ nano::block_source::forced }));\r\n\tinfo.add (\"queue\", queue.container_info ());\r\n\treturn info;\r\n}\r\n```\r\n",
    "draft": false,
    "pull_request": 4736,
    "label": "pwojcikdev:container-infos-5",
    "created_at": "2024-09-24T19:43:06Z",
    "built_at": "2024-10-03T00:17:38Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:15e91e2a78fcc7a436801332b4f03c34f40bebee",
    "build_started_at": "2024-10-02T23:52:15Z",
    "run_id": "11153352677"
  },
  {
    "hash": "15f008b07f0d3a954d4c0f03d4f32c2074c54b98",
    "type": "commit",
    "created_at": "2024-03-21T13:58:45Z",
    "built_at": "2024-03-24T13:04:18Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:15f008b07f0d3a954d4c0f03d4f32c2074c54b98",
    "build_started_at": "2024-03-24T12:11:57Z",
    "run_id": "8409177637"
  },
  {
    "hash": "15f600ec605d4ea1c0579309e73d5a1068e91619",
    "type": "pull_request",
    "pull_request": 4425,
    "label": "clemahieu:remove_frontiers_table",
    "created_at": "2024-02-10T18:21:12Z",
    "built_at": "2024-03-15T09:58:35Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:15f600ec605d4ea1c0579309e73d5a1068e91619",
    "build_started_at": "2024-03-15T09:34:21Z",
    "run_id": "8294115431"
  },
  {
    "hash": "161f4180a87cd35745d0bd27747b0e4ae3f0e61e",
    "type": "commit",
    "author": "dsiganos",
    "title": "Remove dead code",
    "pull_request": "4594",
    "created_at": "2024-04-30T13:51:17Z",
    "built_at": "2024-04-30T15:08:36Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:161f4180a87cd35745d0bd27747b0e4ae3f0e61e",
    "build_started_at": "2024-04-30T14:39:22Z",
    "run_id": "8896734707"
  },
  {
    "hash": "162643c8a2288e7f2ddf52e267f1156dd600748b",
    "type": "commit",
    "created_at": "2023-08-31T19:19:31Z",
    "built_at": "2023-08-31T20:05:28Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:162643c8a2288e7f2ddf52e267f1156dd600748b"
  },
  {
    "hash": "165cc91fbb7dc78c27b634c216a108b64205558b",
    "type": "pull_request",
    "pull_request": 4337,
    "label": "pwojcikdev:stateless-frontier-server",
    "created_at": "2023-11-08T17:22:02Z",
    "built_at": "2023-11-08T19:15:07Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:165cc91fbb7dc78c27b634c216a108b64205558b",
    "build_started_at": "2023-11-08T18:34:09Z",
    "run_id": "6802551743"
  },
  {
    "hash": "166920fa3cfd9d710ae0fca2822ccfc997a50ab4",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Optimize `vote_cache::collect_container_info` (#4644)",
    "pull_request": "4644",
    "created_at": "2024-05-25T15:22:04Z",
    "built_at": "2024-05-25T15:49:28Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:166920fa3cfd9d710ae0fca2822ccfc997a50ab4",
    "build_started_at": "2024-05-25T15:23:11Z",
    "run_id": "9236448324"
  },
  {
    "hash": "166b7ce488f76c6a681ae7c2fce0b4f3a6f30c25",
    "type": "commit",
    "created_at": "2024-02-14T14:07:37Z",
    "built_at": "2024-02-14T14:39:47Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:166b7ce488f76c6a681ae7c2fce0b4f3a6f30c25",
    "build_started_at": "2024-02-14T14:11:59Z",
    "run_id": "7902482350"
  },
  {
    "hash": "168367ac78f8edcfec2100a367da5d26589086d9",
    "type": "commit",
    "created_at": "2023-04-01T16:45:16Z",
    "built_at": "2023-04-01T17:17:53Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:168367ac78f8edcfec2100a367da5d26589086d9"
  },
  {
    "hash": "16a37b8eadbc356a182ff0e7ed25775f6ff9c437",
    "type": "pull_request",
    "pull_request": 4415,
    "label": "pwojcikdev:update-macos-runners",
    "created_at": "2024-01-31T16:44:18Z",
    "built_at": "2024-01-31T19:57:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:16a37b8eadbc356a182ff0e7ed25775f6ff9c437",
    "build_started_at": "2024-01-31T19:32:16Z",
    "run_id": "7731399401"
  },
  {
    "hash": "16bf30b690a5754baa1d60c583ea054c9635b2e6",
    "type": "commit",
    "author": null,
    "title": "Reduce default poll time from 50ms to 10ms\n\nSome testcases (e.g. node.fork_publish) are racy because too many things can happen between 2 polls. While this doesn't fix the racy testcase, it greatly reduces the likelyhood that testcases are failing due to timing issues",
    "pull_request": "4804",
    "created_at": "2024-12-05T20:23:27Z",
    "built_at": "2024-12-06T11:35:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:16bf30b690a5754baa1d60c583ea054c9635b2e6",
    "build_started_at": "2024-12-06T11:07:35Z",
    "run_id": "12197723413"
  },
  {
    "hash": "16c6bb9defeab14fc982366c7384f40fba051563",
    "type": "pull_request",
    "pull_request": 4459,
    "label": "dsiganos:remove_possible_private_key_access",
    "created_at": "2024-03-05T15:32:08Z",
    "built_at": "2024-03-05T16:03:02Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:16c6bb9defeab14fc982366c7384f40fba051563",
    "build_started_at": "2024-03-05T15:35:05Z",
    "run_id": "8158915838"
  },
  {
    "hash": "16e5ccf20977c7e8bb8ef99a4bf9e97c42505e90",
    "type": "commit",
    "created_at": "2023-01-31T14:58:37Z",
    "built_at": "2023-02-06T20:15:30Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:16e5ccf20977c7e8bb8ef99a4bf9e97c42505e90"
  },
  {
    "hash": "16e927034e9f69a9fbb2212c7936a7b6b77672c1",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Transaction timestamp accessor",
    "pull_request": "4713",
    "created_at": "2024-08-23T08:05:18Z",
    "built_at": "2024-08-27T16:09:36Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:16e927034e9f69a9fbb2212c7936a7b6b77672c1",
    "build_started_at": "2024-08-27T15:42:11Z",
    "run_id": "10581419865"
  },
  {
    "hash": "16f60f86afa84116bae775ec2ca6cf633f055134",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Cleanup",
    "pull_request": "N/A",
    "created_at": "2024-09-23T14:37:40Z",
    "built_at": "2024-09-25T14:22:20Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:16f60f86afa84116bae775ec2ca6cf633f055134",
    "build_started_at": "2024-09-25T13:41:38Z",
    "run_id": "11034557474"
  },
  {
    "hash": "1715e787e653f8513c3694f7915af22f36b50b58",
    "type": "pull_request",
    "title": "migrate_database_lmdb_to_rocksdb improvements",
    "author": "RickiNano",
    "body": "The `migrate_database_lmdb_to_rocksdb` option is running for a very long time with the current ledger size (almost 200 million blocks). On my local machine it took 65 minutes to complete. Nothing is written on screen during this process and users may think the process has stalled.\r\nThis PR adds some progress feedback. One update for each of the 7 tables that are migrated.\r\nIt also adds a simple disk space check to warn users if they might not have enough space to complete the migration.\r\n~~The current converted RocksDb database is 73 GB, and the warning is given if the system has less than 75GB available.~~\r\nThe warning is given based on the size of the LMDB database that is being migrated. The final RocksDb size is approximately 65% of the LMDB space.",
    "draft": false,
    "pull_request": 4647,
    "label": "RickiNano:lmdb-to-rocksdb",
    "created_at": "2024-06-13T10:47:31Z",
    "built_at": "2024-07-09T18:04:15Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1715e787e653f8513c3694f7915af22f36b50b58",
    "build_started_at": "2024-07-09T17:36:17Z",
    "run_id": "9861661588"
  },
  {
    "hash": "1727e0dd16daee4fbb1087f97ce218f9c2b1a493",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge pull request #4791 from pwojcikdev/block-processor-rolled-back-notif\n\nOffload rollback notifications to background thread",
    "pull_request": "4791",
    "created_at": "2024-11-26T20:34:59Z",
    "built_at": "2024-11-26T21:09:30Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1727e0dd16daee4fbb1087f97ce218f9c2b1a493",
    "build_started_at": "2024-11-26T20:41:54Z",
    "run_id": "12038689831"
  },
  {
    "hash": "172fd59958d05decac31259d41022978d78881cd",
    "type": "pull_request",
    "pull_request": 4219,
    "label": "clemahieu:set_bandwidth_params_tsan",
    "created_at": "2023-04-24T16:27:41Z",
    "built_at": "2023-04-24T17:11:22Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:172fd59958d05decac31259d41022978d78881cd"
  },
  {
    "hash": "174c37efbf45f95ccc99c3c97a45debba7372517",
    "type": "commit",
    "author": "clemahieu",
    "title": "Remove ledger::block_exists and replace usages with ledger set exists",
    "pull_request": "N/A",
    "created_at": "2024-03-11T13:16:10Z",
    "built_at": "2024-04-30T14:36:35Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:174c37efbf45f95ccc99c3c97a45debba7372517",
    "build_started_at": "2024-04-30T13:34:48Z",
    "run_id": "8896291467"
  },
  {
    "hash": "174df3470de56c6fc0a1881fed917a0bb46c1f2f",
    "type": "pull_request",
    "pull_request": 4250,
    "label": "gr0vity-dev:wip/unified_artifacts_worflow",
    "created_at": "2023-06-22T15:06:28Z",
    "built_at": "2023-06-22T16:05:39Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:174df3470de56c6fc0a1881fed917a0bb46c1f2f"
  },
  {
    "hash": "175d9d7290d89fcd3e1bf39c999a740663e0e26c",
    "type": "pull_request",
    "title": "migrate_database_lmdb_to_rocksdb improvements",
    "author": "RickiNano",
    "body": "The `migrate_database_lmdb_to_rocksdb` option is running for a very long time with the current ledger size (almost 200 million blocks). On my local machine it took 65 minutes to complete. Nothing is written on screen during this process and users may think the process has stalled.\r\nThis PR adds some progress feedback. One update for each of the 7 tables that are migrated.\r\nIt also adds a simple disk space check to warn users if they might not have enough space to complete the migration.\r\n~~The current converted RocksDb database is 73 GB, and the warning is given if the system has less than 75GB available.~~\r\nThe warning is given based on the size of the LMDB database that is being migrated. The final RocksDb size is approximately 65% of the LMDB space.",
    "draft": false,
    "pull_request": 4647,
    "label": "RickiNano:lmdb-to-rocksdb",
    "created_at": "2024-06-13T10:47:31Z",
    "built_at": "2024-07-09T18:47:20Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:175d9d7290d89fcd3e1bf39c999a740663e0e26c",
    "build_started_at": "2024-07-09T18:19:39Z",
    "run_id": "9862193642"
  },
  {
    "hash": "176733310189c0d2fb66f42eecf395b43adf7c64",
    "type": "pull_request",
    "title": "Fair queuing for request aggregator",
    "author": "pwojcikdev",
    "body": "This implements fair queuing for request aggregator. The benefit is that it removes a small delay that was there due to buffering of requests. This is unnecessary, because client side (`confirmation_solicitor` class) already bundles requests.\r\nI believe that the principle of client->server communication should be that the server does the least processing possible. If client requests data inefficiently, then it will just receive less data and fewer resources will be spent servicing them.",
    "draft": false,
    "pull_request": 4598,
    "label": "pwojcikdev:fair-queuing/request-aggregator-3",
    "created_at": "2024-05-03T07:15:46Z",
    "built_at": "2024-05-07T20:47:46Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:176733310189c0d2fb66f42eecf395b43adf7c64",
    "build_started_at": "2024-05-07T20:19:29Z",
    "run_id": "8991791109"
  },
  {
    "hash": "177558d42b08b7545df9b92fe047a59eb6f6eb87",
    "type": "pull_request",
    "pull_request": 4158,
    "label": "clemahieu:bootstrap_ascending_client",
    "created_at": "2023-02-27T20:15:37Z",
    "built_at": "2023-03-01T01:52:49Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:177558d42b08b7545df9b92fe047a59eb6f6eb87"
  },
  {
    "hash": "179dd047a8206e724210e9c9e6101e9ae2423ec2",
    "type": "pull_request",
    "title": "Disallow database operations on network IO threads",
    "author": "pwojcikdev",
    "body": "Doing synchronous disk IO on network IO threads can introduce very long delays, blocking network thread pool. This adds an assert that will detect this.\r\n\r\nCurrently this doesn't pass tests nicely because legacy bootstrap trips the assert.",
    "draft": false,
    "pull_request": 4772,
    "label": "pwojcikdev:prevent-db-on-io-threads",
    "created_at": "2024-10-27T16:02:45Z",
    "built_at": "2024-11-27T08:30:46Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:179dd047a8206e724210e9c9e6101e9ae2423ec2",
    "build_started_at": "2024-11-27T08:00:00Z",
    "run_id": "12046044927"
  },
  {
    "hash": "17e502d543a96dd85acb8b387cd1201ea57b68e3",
    "type": "commit",
    "created_at": "2024-03-08T09:46:25Z",
    "built_at": "2024-03-09T12:46:12Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:17e502d543a96dd85acb8b387cd1201ea57b68e3",
    "build_started_at": "2024-03-09T12:18:32Z",
    "run_id": "8214449124"
  },
  {
    "hash": "1865d616fa37b1d14c457ff48cb05cb4e466dc1f",
    "type": "commit",
    "created_at": "2023-02-03T20:55:42Z",
    "built_at": "2023-02-15T15:04:27Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1865d616fa37b1d14c457ff48cb05cb4e466dc1f"
  },
  {
    "hash": "186f3f4b9dc2eb923dd061fcfcd429d3c6cc71eb",
    "type": "commit",
    "created_at": "2024-03-18T16:44:01Z",
    "built_at": "2024-03-18T17:14:20Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:186f3f4b9dc2eb923dd061fcfcd429d3c6cc71eb",
    "build_started_at": "2024-03-18T16:48:08Z",
    "run_id": "8330437043"
  },
  {
    "hash": "18749c26ce96fd0dd91eda2af812934fe2203742",
    "type": "commit",
    "created_at": "2024-01-22T19:51:21Z",
    "built_at": "2024-02-08T10:38:44Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:18749c26ce96fd0dd91eda2af812934fe2203742",
    "build_started_at": "2024-02-08T10:13:37Z",
    "run_id": "7828015254"
  },
  {
    "hash": "18b635c158124dcf668888ba56323d0ada1dd57a",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Namespace rename and reindent",
    "pull_request": "4665",
    "created_at": "2024-06-26T18:14:01Z",
    "built_at": "2024-07-09T17:10:20Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:18b635c158124dcf668888ba56323d0ada1dd57a",
    "build_started_at": "2024-07-09T16:43:44Z",
    "run_id": "9860968478"
  },
  {
    "hash": "18c775da887d9a146c40081acf2b921951b1019c",
    "type": "pull_request",
    "title": "Keep weak pointer to node in socket objects",
    "body": "There were occasional lifetime issues when running tests, where socket handlers would complete after parent node is destroyed. While using weak ptr to fix such issues is arguably a symptom of bad design, it's a necessary intermediate step to continue refactoring network code to eventually have async handlers properly controlled.",
    "draft": false,
    "pull_request": 4542,
    "label": "pwojcikdev:networking-fixes/socket-node-weak-ptr",
    "created_at": "2024-04-08T09:20:04Z",
    "built_at": "2024-04-08T09:53:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:18c775da887d9a146c40081acf2b921951b1019c",
    "build_started_at": "2024-04-08T09:25:15Z",
    "run_id": "8597714509"
  },
  {
    "hash": "18ccc17d6bb821aee2713b3fb7764508ff3a3c3e",
    "type": "pull_request",
    "pull_request": 4476,
    "label": "pwojcikdev:fair-queuing-3",
    "created_at": "2024-03-10T19:14:44Z",
    "built_at": "2024-03-10T19:45:36Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:18ccc17d6bb821aee2713b3fb7764508ff3a3c3e",
    "build_started_at": "2024-03-10T19:21:14Z",
    "run_id": "8224248964"
  },
  {
    "hash": "18ebbc1945b014575d697debe8021701d67944a8",
    "type": "pull_request",
    "pull_request": 4282,
    "label": "clemahieu:rocksdb_7_10",
    "created_at": "2023-09-12T20:48:37Z",
    "built_at": "2023-09-12T21:32:50Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:18ebbc1945b014575d697debe8021701d67944a8"
  },
  {
    "hash": "192734aecff5774cdc93e8329c885e4fa36e46d0",
    "type": "pull_request",
    "title": "Remove `election_winner_details` container",
    "author": "pwojcikdev",
    "body": "This removes `election_winner_details` container which proved to be difficult to keep in sync and was leaking entires when rollbacks were performed (as part of bounded backlog work). The election that triggered the cementing is now passed as part of context, ie. the flow of cementing is: `election::confirm_once (...) > confirming_set::add (...) > confirming_set::batch_cemented event > active_elections::block_cemented callback (...)` where election is passed through the pipeline.",
    "draft": false,
    "pull_request": 4755,
    "label": "pwojcikdev:remove-election-winner-details",
    "created_at": "2024-10-16T15:15:58Z",
    "built_at": "2024-10-16T15:46:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:192734aecff5774cdc93e8329c885e4fa36e46d0",
    "build_started_at": "2024-10-16T15:17:43Z",
    "run_id": "11368687585"
  },
  {
    "hash": "194003405148d7fa8e9c8ce553c47a82620be47a",
    "type": "pull_request",
    "pull_request": 4509,
    "label": "clemahieu:election_header_reduction",
    "created_at": "2024-03-20T14:00:22Z",
    "built_at": "2024-03-21T10:38:40Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:194003405148d7fa8e9c8ce553c47a82620be47a",
    "build_started_at": "2024-03-21T10:13:28Z",
    "run_id": "8373219071"
  },
  {
    "hash": "196198e5db5943c3db638c0fcfb3e598f5e3a379",
    "type": "commit",
    "created_at": "2023-03-05T14:19:11Z",
    "built_at": "2023-03-15T02:44:09Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:196198e5db5943c3db638c0fcfb3e598f5e3a379"
  },
  {
    "hash": "19645eafe9abb7e65bd4f2af276539fbbdde21b8",
    "type": "pull_request",
    "title": "Bootstrap weights in plain text",
    "author": "RickiNano",
    "body": "Replaces the binary file with embedded bootstrap weight in plain text.\r\nThe weight values and max block counts in this PR are from 14-08-2024",
    "draft": false,
    "pull_request": 4703,
    "label": "RickiNano:bootstrap-weights",
    "created_at": "2024-08-14T16:45:07Z",
    "built_at": "2024-08-15T14:39:17Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:19645eafe9abb7e65bd4f2af276539fbbdde21b8",
    "build_started_at": "2024-08-15T14:12:42Z",
    "run_id": "10405184773"
  },
  {
    "hash": "19ce7e5f6b6505a1f419945cc29af8cd718188eb",
    "type": "pull_request",
    "pull_request": 4212,
    "label": "clemahieu:bootstrap_ascending_locking",
    "created_at": "2023-04-05T17:34:52Z",
    "built_at": "2023-04-05T19:41:36Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:19ce7e5f6b6505a1f419945cc29af8cd718188eb"
  },
  {
    "hash": "1a216cbb0a5cc9a360f24f05ef95e0fad42c7103",
    "type": "pull_request",
    "pull_request": 4131,
    "label": "simpago:clear-unchecked-table",
    "created_at": "2023-02-15T13:24:53Z",
    "built_at": "2023-02-15T13:57:31Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1a216cbb0a5cc9a360f24f05ef95e0fad42c7103"
  },
  {
    "hash": "1a27707e895df81ff85869075f9b47669aac1d69",
    "type": "pull_request",
    "pull_request": 4345,
    "label": "clemahieu:block_checker",
    "created_at": "2023-11-14T12:02:06Z",
    "built_at": "2024-02-19T20:45:15Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1a27707e895df81ff85869075f9b47669aac1d69",
    "build_started_at": "2024-02-19T20:19:57Z",
    "run_id": "7964795817"
  },
  {
    "hash": "1a3435b0083962691555709650b3f9aa067896e1",
    "type": "pull_request",
    "title": "Link boost stacktrace appropriately for line information.",
    "author": "clemahieu",
    "body": "The previous code was overcomplicating a relatively straightforward requirement to link against librt and libdynamic to get symbolic stacktraces.",
    "draft": false,
    "pull_request": 4771,
    "label": "clemahieu:boost_stacktrace",
    "created_at": "2024-10-27T15:05:55Z",
    "built_at": "2024-10-28T17:24:30Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1a3435b0083962691555709650b3f9aa067896e1",
    "build_started_at": "2024-10-28T16:54:54Z",
    "run_id": "11558802099"
  },
  {
    "hash": "1a3aa359a03377f9757f40023a97ac65b42d44ab",
    "type": "pull_request",
    "pull_request": 4506,
    "label": "pwojcikdev:io-context-shared-ptr",
    "created_at": "2024-03-19T16:03:23Z",
    "built_at": "2024-03-19T16:34:12Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1a3aa359a03377f9757f40023a97ac65b42d44ab",
    "build_started_at": "2024-03-19T16:06:21Z",
    "run_id": "8346341131"
  },
  {
    "hash": "1a5577283395ca894d0971a1a5a4759b3b34eddc",
    "type": "pull_request",
    "pull_request": 4250,
    "label": "gr0vity-dev:wip/unified_artifacts_worflow",
    "created_at": "2023-06-22T15:06:28Z",
    "built_at": "2023-07-01T19:37:58Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1a5577283395ca894d0971a1a5a4759b3b34eddc"
  },
  {
    "hash": "1a955eec3a1408cf7f2ab778a9fd1b86c02ac44f",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Move `record_rep_weights.py` to project root",
    "pull_request": "4703",
    "created_at": "2024-10-29T13:00:22Z",
    "built_at": "2024-10-29T13:59:33Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1a955eec3a1408cf7f2ab778a9fd1b86c02ac44f",
    "build_started_at": "2024-10-29T13:30:07Z",
    "run_id": "11574910766"
  },
  {
    "hash": "1ab5b6708f1e9b7f68521f10f6dd3292b6c70769",
    "type": "pull_request",
    "pull_request": 4221,
    "label": "clemahieu:bootstrap_weak_ptr",
    "created_at": "2023-04-28T08:18:31Z",
    "built_at": "2023-04-28T10:45:24Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1ab5b6708f1e9b7f68521f10f6dd3292b6c70769"
  },
  {
    "hash": "1ac5ac0cb6d9d315675ad0215b52d860ab2be2c1",
    "type": "pull_request",
    "title": "Fix unit test bootstrap_processor.lazy_pruning_missing_block",
    "author": "dsiganos",
    "body": null,
    "draft": false,
    "pull_request": 4575,
    "label": "dsiganos:fix_lazy_pruning_missing_block",
    "created_at": "2024-04-18T03:21:13Z",
    "built_at": "2024-04-22T16:06:18Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1ac5ac0cb6d9d315675ad0215b52d860ab2be2c1",
    "build_started_at": "2024-04-22T15:39:43Z",
    "run_id": "8786888959"
  },
  {
    "hash": "1b1bac07ab06241aa164ae12b54da4e5dfe4784d",
    "type": "commit",
    "created_at": "2024-02-26T10:52:19Z",
    "built_at": "2024-03-04T13:21:37Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1b1bac07ab06241aa164ae12b54da4e5dfe4784d",
    "build_started_at": "2024-03-04T12:43:27Z",
    "run_id": "8140364972"
  },
  {
    "hash": "1b82076cbc8bb9b2793be781dcf515c039182a19",
    "type": "pull_request",
    "title": "Remove conditional compiling.",
    "body": null,
    "draft": false,
    "pull_request": 4544,
    "label": "clemahieu:cleanup_ndebug",
    "created_at": "2024-04-08T16:31:40Z",
    "built_at": "2024-04-08T17:02:24Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1b82076cbc8bb9b2793be781dcf515c039182a19",
    "build_started_at": "2024-04-08T16:33:20Z",
    "run_id": "8603593825"
  },
  {
    "hash": "1b9807af6d46874772ad61051a4b53421bcb1198",
    "type": "commit",
    "created_at": "2024-02-13T13:38:34Z",
    "built_at": "2024-02-13T14:07:49Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1b9807af6d46874772ad61051a4b53421bcb1198",
    "build_started_at": "2024-02-13T13:43:04Z",
    "run_id": "7887429112"
  },
  {
    "hash": "1b99696e6b9bb6c9eca3ab676e3deb2ae494ae81",
    "type": "commit",
    "created_at": "2023-02-09T13:36:59Z",
    "built_at": "2023-02-09T14:06:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1b99696e6b9bb6c9eca3ab676e3deb2ae494ae81"
  },
  {
    "hash": "1ba432984758663bc4aa549c1675c1906269b89c",
    "type": "pull_request",
    "title": "Fix bootstrap <-> blockprocessor notifications",
    "author": "pwojcikdev",
    "body": "https://github.com/nanocurrency/nano-node/pull/4463 Introduces a bug where some accounts wouldn't be unblocked if blocks came as live traffic. This fixes it and adds a few testcases to ensure we won't encounter this problem in the future.",
    "draft": false,
    "pull_request": 4663,
    "label": "pwojcikdev:bootstrap-notifications",
    "created_at": "2024-06-30T17:43:50Z",
    "built_at": "2024-07-04T17:59:28Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1ba432984758663bc4aa549c1675c1906269b89c",
    "build_started_at": "2024-07-04T17:30:43Z",
    "run_id": "9798126325"
  },
  {
    "hash": "1bb5798d01e1bac250c9979f0160b2e342ab1e15",
    "type": "pull_request",
    "pull_request": 4431,
    "label": "pwojcikdev:macos-sanitizers",
    "created_at": "2024-02-12T13:17:22Z",
    "built_at": "2024-02-12T13:49:33Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1bb5798d01e1bac250c9979f0160b2e342ab1e15",
    "build_started_at": "2024-02-12T13:23:56Z",
    "run_id": "7872430864"
  },
  {
    "hash": "1bb5ca7d804742bd37a5716b9bace0b0baeef5b4",
    "type": "pull_request",
    "pull_request": 4326,
    "label": "clemahieu:fix_block_uniquer_linear_scan",
    "created_at": "2023-11-04T23:13:22Z",
    "built_at": "2023-11-05T17:18:21Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1bb5ca7d804742bd37a5716b9bace0b0baeef5b4",
    "build_started_at": "2023-11-05T16:38:26Z",
    "run_id": "6762529028"
  },
  {
    "hash": "1bd4f1e05d8da0cfc2a3add924f88ef370e99a7d",
    "type": "pull_request",
    "title": "Fair queuing for vote processor",
    "author": "pwojcikdev",
    "body": "Similar to the way it was done for block processing, this implements fair queue for vote processor. Votes are processed in round robin manner from all peers, with higher tier votes having slightly higher priority.",
    "draft": false,
    "pull_request": 4536,
    "label": "pwojcikdev:fair-queuing/vote-processor",
    "created_at": "2024-04-04T14:58:58Z",
    "built_at": "2024-04-23T20:02:56Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1bd4f1e05d8da0cfc2a3add924f88ef370e99a7d",
    "build_started_at": "2024-04-23T19:36:28Z",
    "run_id": "8806207151"
  },
  {
    "hash": "1c1d58f855be120c378901ac254650d560ed929e",
    "type": "pull_request",
    "title": "Migration periodic renew transaction",
    "author": "RickiNano",
    "body": null,
    "draft": true,
    "pull_request": 4670,
    "label": "RickiNano:migration-test",
    "created_at": "2024-07-05T07:12:43Z",
    "built_at": "2024-07-05T11:33:25Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1c1d58f855be120c378901ac254650d560ed929e",
    "build_started_at": "2024-07-05T11:04:27Z",
    "run_id": "9807316912"
  },
  {
    "hash": "1c2ea4dab2d04439b70895c143be8921f83e98f0",
    "type": "commit",
    "author": "clemahieu",
    "title": "Merge pull request #4737 from clemahieu/rocksdb_tx_cleanup\n\nRocksdb tx cleanup",
    "pull_request": "4737",
    "created_at": "2024-09-30T06:46:53Z",
    "built_at": "2024-09-30T07:26:45Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1c2ea4dab2d04439b70895c143be8921f83e98f0",
    "build_started_at": "2024-09-30T06:52:27Z",
    "run_id": "11101004382"
  },
  {
    "hash": "1c44ade2aa31ee61fbc7d106fc79abb0dcd715d0",
    "type": "commit",
    "author": "clemahieu",
    "title": "Use ledger::confirm interface",
    "pull_request": "4605",
    "created_at": "2024-05-06T21:30:51Z",
    "built_at": "2024-05-09T13:10:29Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1c44ade2aa31ee61fbc7d106fc79abb0dcd715d0",
    "build_started_at": "2024-05-09T12:44:20Z",
    "run_id": "9017458344"
  },
  {
    "hash": "1c4864798d462222fe6e2802ef64646d2003cd93",
    "type": "pull_request",
    "pull_request": 4177,
    "label": "gr0vity-dev:patch-1",
    "created_at": "2023-03-08T09:35:26Z",
    "built_at": "2023-03-08T10:08:37Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1c4864798d462222fe6e2802ef64646d2003cd93"
  },
  {
    "hash": "1c5df776158d61db246f23c625d43237bd20efaa",
    "type": "pull_request",
    "title": "Run UPNP port mapping on a dedicated thread",
    "author": "pwojcikdev",
    "body": "This reworks the `port_mapping` component responsible for port redirection configuration to run on a dedicated thread. This should help with node resiliency. \r\n\r\nHowever, the problem I noticed is that testing `port_mapping` component doesn't seem to be part of our CI. There is a comment indicating that maybe this was attempted in the past:\r\n> // Long discovery time and fast setup/teardown make this impractical for testing\r\n\r\nI'd recommend that we look into it. Perhaps it can be done as part of our system test suite.",
    "draft": false,
    "pull_request": 4591,
    "label": "pwojcikdev:portmapping-thread",
    "created_at": "2024-04-28T11:49:57Z",
    "built_at": "2024-04-28T13:06:45Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1c5df776158d61db246f23c625d43237bd20efaa",
    "build_started_at": "2024-04-28T12:38:29Z",
    "run_id": "8867637817"
  },
  {
    "hash": "1c613cf03501cd51f100886638670053a334e1cc",
    "type": "pull_request",
    "pull_request": 4519,
    "label": "clemahieu:confirming_set",
    "created_at": "2024-03-23T22:40:41Z",
    "built_at": "2024-03-24T10:10:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1c613cf03501cd51f100886638670053a334e1cc",
    "build_started_at": "2024-03-24T09:45:21Z",
    "run_id": "8408413936"
  },
  {
    "hash": "1c6594aa2779bb76909eaa285b4ce2c204471450",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Improve `backlog_index::next ()`",
    "pull_request": "4787",
    "created_at": "2024-11-26T18:52:32Z",
    "built_at": "2024-11-29T16:07:51Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1c6594aa2779bb76909eaa285b4ce2c204471450",
    "build_started_at": "2024-11-29T15:39:54Z",
    "run_id": "12087435038"
  },
  {
    "hash": "1c7b1d5a2a8579316764fc3bdd28073b26cb7b75",
    "type": "pull_request",
    "title": "Bounded backlog",
    "author": "pwojcikdev",
    "body": "This is ongoing work for bounded backlog. This limits the number of unconfirmed blocks that the node needs to store. The implementation of this mechanism is nontrivial because the node relies heavily on the fact that unconfirmed blocks are present in the ledger.\r\n\r\nDepends on PRs:\r\nhttps://github.com/nanocurrency/nano-node/pull/4758",
    "draft": true,
    "pull_request": 4787,
    "label": "pwojcikdev:bounded-backlog-pr",
    "created_at": "2024-11-18T20:36:19Z",
    "built_at": "2024-11-24T23:16:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1c7b1d5a2a8579316764fc3bdd28073b26cb7b75",
    "build_started_at": "2024-11-24T22:49:27Z",
    "run_id": "12000258500"
  },
  {
    "hash": "1c83e83ac4b02abda0e7f36aa748d5527fc89802",
    "type": "pull_request",
    "pull_request": 4211,
    "label": "clemahieu:bootstrap_channel_scoring",
    "created_at": "2023-04-05T17:07:44Z",
    "built_at": "2023-04-14T11:28:34Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1c83e83ac4b02abda0e7f36aa748d5527fc89802"
  },
  {
    "hash": "1caf7fa09ca632189c660e335df5a6a0cb2c1596",
    "type": "pull_request",
    "title": "Optimize cemented callbacks",
    "author": "pwojcikdev",
    "body": "This attempts to optimize the election cementing callbacks. It often takes as long or even longer to cement a confirmed election as it takes to get it confirmed in the first place. This is not a complete solution, there is still a delay, but I hope it's a step in the right direction. \r\nWe're debugging this together with @gr0vity-dev who really is doing incredible work to dig deep into this issue.\r\n\r\n![image](https://github.com/nanocurrency/nano-node/assets/3044353/006a4fc1-d499-478a-a372-7b5240b7ef01)\r\n",
    "draft": false,
    "pull_request": 4642,
    "label": "pwojcikdev:cemented-observers-optimize",
    "created_at": "2024-05-24T13:34:30Z",
    "built_at": "2024-05-24T14:15:17Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1caf7fa09ca632189c660e335df5a6a0cb2c1596",
    "build_started_at": "2024-05-24T13:48:57Z",
    "run_id": "9225021696"
  },
  {
    "hash": "1cbbf353e20c510a8b995e6f43ee64689162af24",
    "type": "commit",
    "created_at": "2023-02-18T00:18:41Z",
    "built_at": "2023-02-18T13:01:29Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1cbbf353e20c510a8b995e6f43ee64689162af24"
  },
  {
    "hash": "1cbf85fdef2c7b7b98afb59b85ef0765f53a6130",
    "type": "pull_request",
    "title": "migrate_database_lmdb_to_rocksdb improvements",
    "author": "RickiNano",
    "body": "The `migrate_database_lmdb_to_rocksdb` option is running for a very long time with the current ledger size (almost 200 million blocks). On my local machine it took 65 minutes to complete. Nothing is written on screen during this process and users may think the process has stalled.\r\nThis PR adds some progress feedback. One update for each of the 7 tables that are migrated.\r\nIt also adds a simple disk space check to warn users if they might not have enough space to complete the migration.\r\n~~The current converted RocksDb database is 73 GB, and the warning is given if the system has less than 75GB available.~~\r\nThe warning is given based on the size of the LMDB database that is being migrated. The final RocksDb size is approximately 65% of the LMDB space.",
    "draft": false,
    "pull_request": 4647,
    "label": "RickiNano:lmdb-to-rocksdb",
    "created_at": "2024-06-13T10:47:31Z",
    "built_at": "2024-07-09T17:30:44Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-07-09T17:14:30Z",
    "run_id": "9861367113"
  },
  {
    "hash": "1cd5564be5c3b3827469df40e7aee47807e96b74",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Add `is_originator` flag to publish messages (#4654)\n\n* Publish message `originator` flag\r\n\r\n* Set and use the `is_originator` flag when publishing and processing blocks\r\n\r\n* Cleanup",
    "pull_request": "4654",
    "created_at": "2024-07-15T13:18:36Z",
    "built_at": "2024-07-15T13:54:58Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1cd5564be5c3b3827469df40e7aee47807e96b74",
    "build_started_at": "2024-07-15T13:26:28Z",
    "run_id": "9940288381"
  },
  {
    "hash": "1cf1f7c5ecb5037c4f727d722f184ce41814dd13",
    "type": "pull_request",
    "title": "Add  cli support for `disable_max_peers...` node flags",
    "author": "gr0vity-dev",
    "body": "I noticed that the following node flags can't be passed from cli and make the node crash on startup :\r\n```\r\ndisable_max_peers_per_ip\r\ndisable_max_peers_per_subnetwork\r\ndisable_bootstrap_bulk_pull_server\r\ndisable_bootstrap_bulk_push_client\r\ndisable_tcp_realtime\r\ndisable_ongoing_telemetry_requests\r\ndisable_block_processor_republishing\r\nforce_use_write_queue\r\ndisable_search_pending\r\nread_only\r\ndisable_connection_cleanup\r\ninactive_node\r\nbootstrap_interval\r\n```\r\n\r\nIn this pull request I added support for\r\n- `disable_max_peers_per_ip`\r\n- `disable_max_peers_per_subnetwork`\r\n\r\nbecause they are useful for local testing",
    "draft": false,
    "pull_request": 4620,
    "label": "gr0vity-dev:prs/add_node_flags_to_cli_1",
    "created_at": "2024-05-14T07:20:39Z",
    "built_at": "2024-05-14T08:10:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1cf1f7c5ecb5037c4f727d722f184ce41814dd13",
    "build_started_at": "2024-05-14T07:42:07Z",
    "run_id": "9075369468"
  },
  {
    "hash": "1d07e46bd9815709b1b1542c3b7d19b2a95d02e6",
    "type": "pull_request",
    "title": "Network filter for votes",
    "author": "pwojcikdev",
    "body": "This filters out vote duplicates early on during packet processing. This showed significant reduction in number of processed votes for synthetic network simulations and when running on a live network representative.\r\n\r\nThe network filter now implements an age cutoff for its entries, so rebroadcasts are allowed after 60 seconds by default. This should remove the need for explicit clearing in case entries are dropped further in the pipeline.\r\n\r\nTest results from @gr0vity-dev:\r\n![image](https://github.com/user-attachments/assets/a6b3c148-ee22-4508-9f30-e18c06613ecd)\r\n\r\n",
    "draft": false,
    "pull_request": 4735,
    "label": "pwojcikdev:vote-duplicate-filter",
    "created_at": "2024-09-24T18:15:03Z",
    "built_at": "2024-09-24T18:42:50Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1d07e46bd9815709b1b1542c3b7d19b2a95d02e6",
    "build_started_at": "2024-09-24T18:16:53Z",
    "run_id": "11019580039"
  },
  {
    "hash": "1d0b671c9f338e90f3a14bfeb80f0c161e48bf16",
    "type": "commit",
    "created_at": "2023-02-16T18:14:12Z",
    "built_at": "2023-02-16T18:47:09Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1d0b671c9f338e90f3a14bfeb80f0c161e48bf16"
  },
  {
    "hash": "1d1d1526969d6917d842cb5da891398acbb2b1e6",
    "type": "commit",
    "created_at": "2023-03-12T21:57:48Z",
    "built_at": "2023-03-15T03:16:13Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1d1d1526969d6917d842cb5da891398acbb2b1e6"
  },
  {
    "hash": "1d34d857dda6d74046f83aabdd9384799202aac8",
    "type": "pull_request",
    "pull_request": 4295,
    "label": "clemahieu:block_split",
    "created_at": "2023-09-25T22:11:53Z",
    "built_at": "2023-10-03T12:15:28Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1d34d857dda6d74046f83aabdd9384799202aac8"
  },
  {
    "hash": "1d3848ec90833db332e3b0ff19cf01ce0e222921",
    "type": "pull_request",
    "pull_request": 4486,
    "label": "clemahieu:ledger_view",
    "created_at": "2024-03-12T14:33:24Z",
    "built_at": "2024-03-24T21:15:12Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-24T20:59:27Z",
    "run_id": "8412068823"
  },
  {
    "hash": "1d4e8363c2e46d2bfa4c1f490189764639f77519",
    "type": "commit",
    "author": "clemahieu",
    "title": "Disable backtrace in CI build until backtrace log linking is resolved. (#4764)",
    "pull_request": "4764",
    "created_at": "2024-10-22T22:39:31Z",
    "built_at": "2024-10-22T22:45:58Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-10-22T22:42:03Z",
    "run_id": "11469677257"
  },
  {
    "hash": "1d6e2e0a1d485db9655a8c27e35563a5e6a51cbf",
    "type": "pull_request",
    "title": "Backlog scan refactoring",
    "author": "pwojcikdev",
    "body": "This modifies backlog scan process to use batch events which are more efficient compared to 1-by-1 events and also renames the component from `backlog` to `backlog_scan` to avoid confusion with bounded backlog.\r\n\r\nPart of https://github.com/nanocurrency/nano-node/pull/4787 work.",
    "draft": false,
    "pull_request": 4790,
    "label": "pwojcikdev:backlog-scan-reworks",
    "created_at": "2024-11-25T16:07:34Z",
    "built_at": "2024-11-25T16:55:40Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1d6e2e0a1d485db9655a8c27e35563a5e6a51cbf",
    "build_started_at": "2024-11-25T16:28:08Z",
    "run_id": "12014446984"
  },
  {
    "hash": "1d87b4fe7d9f010dae36d4de003660b170acae8c",
    "type": "pull_request",
    "pull_request": 4404,
    "label": "clemahieu:block_processor_flush_remove",
    "created_at": "2024-01-26T18:37:48Z",
    "built_at": "2024-01-28T20:06:33Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1d87b4fe7d9f010dae36d4de003660b170acae8c",
    "build_started_at": "2024-01-28T19:41:00Z",
    "run_id": "7687992170"
  },
  {
    "hash": "1d8e661ef1b2136f71f8d8a6b3edb547352e82be",
    "type": "pull_request",
    "pull_request": 4342,
    "label": "RickiNano:configurable-unchecked-blocks",
    "created_at": "2023-11-12T21:33:37Z",
    "built_at": "2024-01-28T19:43:52Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1d8e661ef1b2136f71f8d8a6b3edb547352e82be",
    "build_started_at": "2024-01-28T19:18:45Z",
    "run_id": "7687892865"
  },
  {
    "hash": "1d8fc9e57447b917f165eefc24a2d29b4b5e9d76",
    "type": "commit",
    "created_at": "2023-03-09T14:54:47Z",
    "built_at": "2023-03-09T15:37:44Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1d8fc9e57447b917f165eefc24a2d29b4b5e9d76"
  },
  {
    "hash": "1db2a4da92b7c641d79a459168988850a7a1c550",
    "type": "pull_request",
    "title": "Logo2",
    "author": "darkod77",
    "body": null,
    "draft": false,
    "pull_request": 4783,
    "label": "darkod77:logo2",
    "created_at": "2024-11-10T17:18:12Z",
    "built_at": null,
    "build_status": "building",
    "docker_tag": null,
    "build_started_at": "2024-11-10T17:26:22Z",
    "run_id": null
  },
  {
    "hash": "1db6577f29a37d14286e17fcf35401416baf3972",
    "type": "pull_request",
    "title": "Log node status periodically",
    "author": "pwojcikdev",
    "body": "This logs node status (block count, block rates, peers, quorum info, election count) every 60 seconds. This should provide immediate and easy to access way to check node status for node operators.\r\n\r\nFinal output looks like this:\r\n\r\n<img width=\"1086\" alt=\"Screenshot 2024-07-09 at 14 43 45\" src=\"https://github.com/nanocurrency/nano-node/assets/3044353/b8123f91-a1d6-414e-804b-6ebfbbfee19a\">\r\n\r\n",
    "draft": false,
    "pull_request": 4676,
    "label": "pwojcikdev:monitor-log",
    "created_at": "2024-07-09T11:26:42Z",
    "built_at": "2024-07-09T18:11:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1db6577f29a37d14286e17fcf35401416baf3972",
    "build_started_at": "2024-07-09T17:43:38Z",
    "run_id": "9861743172"
  },
  {
    "hash": "1dc5458651b8e8f2279ae59d3c2617ae0d849339",
    "type": "commit",
    "author": "clemahieu",
    "title": "Fix build errors converting and comparing to int. (#4633)",
    "pull_request": "4633",
    "created_at": "2024-05-23T01:17:16Z",
    "built_at": "2024-05-23T02:20:47Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1dc5458651b8e8f2279ae59d3c2617ae0d849339",
    "build_started_at": "2024-05-23T01:54:48Z",
    "run_id": "9201013289"
  },
  {
    "hash": "1de21328589d4b265794a00856929e7cab80e7a8",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Fix c_str lifetimes",
    "pull_request": "4690",
    "created_at": "2024-08-03T11:35:59Z",
    "built_at": "2024-08-11T19:02:51Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1de21328589d4b265794a00856929e7cab80e7a8",
    "build_started_at": "2024-08-11T18:19:33Z",
    "run_id": "10341941806"
  },
  {
    "hash": "1de26b61205d9ac3beb0c3d7ed1e77d09a0ced03",
    "type": "commit",
    "created_at": "2023-09-21T11:02:17Z",
    "built_at": "2023-09-21T11:50:26Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1de26b61205d9ac3beb0c3d7ed1e77d09a0ced03"
  },
  {
    "hash": "1e085920100dbdab563c0fdee04c6c2e2c451d7a",
    "type": "pull_request",
    "title": "Reduce likelyhood of race in node.fork_publish",
    "author": "gr0vity-dev",
    "body": "This testcase fails a lot on windows github runners and in **~3%** locally.\r\n\r\n1. Reorder block processing in direct succession to increase likelihood of fork handling before election confirmation. (With this change alone the testcase fails in ~**0.2%**)\r\n\r\n2. Reduce default poll interval from 50ms to 10ms to reduce internal node operations between 2 polls. (With this change alone the testcase fails in ~**0.2%**)\r\n\r\nBoth changes are needed - Reordering alone or poll interval changes alone were insufficient. With both changes applied, test passes reliably (10000/10000).",
    "draft": false,
    "pull_request": 4804,
    "label": "gr0vity-dev:prs/fix-node-fork_publish",
    "created_at": "2024-12-05T21:05:53Z",
    "built_at": "2024-12-05T23:08:22Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1e085920100dbdab563c0fdee04c6c2e2c451d7a",
    "build_started_at": "2024-12-05T22:38:39Z",
    "run_id": "12188201726"
  },
  {
    "hash": "1e15e8d9523a5f2b4d30f0240d54b922d9b9a4b3",
    "type": "pull_request",
    "title": "Frontier scan client",
    "author": "pwojcikdev",
    "body": "This implements frontier scan client for the new bootstrapper. It should be the last missing piece blocking removal of legacy bootstrap code.\r\n\r\nBuilds on top of https://github.com/nanocurrency/nano-node/pull/4734\r\n\r\nHere are some initial test results from @gr0vity-dev showing that there are no obvious problems.\r\n\r\n![image](https://github.com/user-attachments/assets/50ebf35e-aedc-4cdf-a1ea-eea0c699e332)\r\n",
    "draft": false,
    "pull_request": 4739,
    "label": "pwojcikdev:frontier-scan-5",
    "created_at": "2024-09-28T13:10:19Z",
    "built_at": "2024-10-27T13:25:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1e15e8d9523a5f2b4d30f0240d54b922d9b9a4b3",
    "build_started_at": "2024-10-27T12:58:00Z",
    "run_id": "11540677613"
  },
  {
    "hash": "1e3688b170acbeaf815b67fb1c7e74ffdb067a75",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge pull request #4808 from pwojcikdev/socket-test-renaming\n\nOrganize socket tests",
    "pull_request": "4808",
    "created_at": "2024-12-10T18:38:46Z",
    "built_at": "2024-12-10T19:11:49Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1e3688b170acbeaf815b67fb1c7e74ffdb067a75",
    "build_started_at": "2024-12-10T18:42:47Z",
    "run_id": "12262617494"
  },
  {
    "hash": "1e51a7f696dbecf6710ba72b6762c2e5296950a5",
    "type": "pull_request",
    "pull_request": 4281,
    "label": "clemahieu:manual_scheduler",
    "created_at": "2023-09-12T17:49:20Z",
    "built_at": "2023-09-12T18:29:09Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1e51a7f696dbecf6710ba72b6762c2e5296950a5"
  },
  {
    "hash": "1e57b5b4143d512109ec6dff5203fcada245e1cb",
    "type": "pull_request",
    "pull_request": 4286,
    "label": "clemahieu:nano_store_lib",
    "created_at": "2023-09-19T13:14:01Z",
    "built_at": "2023-09-20T18:25:39Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1e57b5b4143d512109ec6dff5203fcada245e1cb"
  },
  {
    "hash": "1e8e3193ebaea127dda512d71152bdf7e0df6237",
    "type": "pull_request",
    "pull_request": 4519,
    "label": "clemahieu:confirming_set",
    "created_at": "2024-03-23T22:40:41Z",
    "built_at": "2024-03-23T23:13:39Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1e8e3193ebaea127dda512d71152bdf7e0df6237",
    "build_started_at": "2024-03-23T22:46:11Z",
    "run_id": "8404999346"
  },
  {
    "hash": "1ebcec3ce25e30a3afa07bc778f7caaef6e77f6a",
    "type": "commit",
    "created_at": "2024-03-21T16:55:22Z",
    "built_at": "2024-03-21T17:33:48Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1ebcec3ce25e30a3afa07bc778f7caaef6e77f6a",
    "build_started_at": "2024-03-21T17:06:16Z",
    "run_id": "8378957940"
  },
  {
    "hash": "1ec359a98dc8f2292db35776c53285ae84ef3706",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Tests",
    "pull_request": "N/A",
    "created_at": "2024-09-23T17:07:46Z",
    "built_at": "2024-09-25T14:41:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1ec359a98dc8f2292db35776c53285ae84ef3706",
    "build_started_at": "2024-09-25T13:41:38Z",
    "run_id": "11034870267"
  },
  {
    "hash": "1ed7c33a52afc72c00a9f3e5edd8e2973419787d",
    "type": "pull_request",
    "pull_request": 4211,
    "label": "clemahieu:bootstrap_channel_scoring",
    "created_at": "2023-04-05T17:07:44Z",
    "built_at": "2023-04-05T17:46:57Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1ed7c33a52afc72c00a9f3e5edd8e2973419787d"
  },
  {
    "hash": "1eeae3a3b828910d70cf761b024e70f30c2c08d2",
    "type": "pull_request",
    "title": "Fair queuing for vote processor",
    "body": "Similar to the way it was done for block processing, this implements fair queue for vote processor. Votes are processed in round robin manner from all peers, with higher tier votes having slightly higher priority.",
    "draft": false,
    "pull_request": 4536,
    "label": "pwojcikdev:fair-queuing/vote-processor",
    "created_at": "2024-04-04T14:58:58Z",
    "built_at": "2024-04-04T15:47:07Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1eeae3a3b828910d70cf761b024e70f30c2c08d2",
    "build_started_at": "2024-04-04T15:07:21Z",
    "run_id": "8557165890"
  },
  {
    "hash": "1ef520a258c17eb40450c7eb9b8c9c00dc171881",
    "type": "commit",
    "created_at": "2023-12-01T10:07:47Z",
    "built_at": "2023-12-01T10:53:23Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1ef520a258c17eb40450c7eb9b8c9c00dc171881",
    "build_started_at": "2023-12-01T10:08:26Z",
    "run_id": "7058588921"
  },
  {
    "hash": "1f09f21a2def27b78ca7107296f928bb996f8972",
    "type": "commit",
    "created_at": "2023-12-25T21:35:09Z",
    "built_at": "2024-01-08T23:50:11Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1f09f21a2def27b78ca7107296f928bb996f8972",
    "build_started_at": "2024-01-08T23:09:58Z",
    "run_id": "7454294270"
  },
  {
    "hash": "1f0b151167d7273a0395d7e8f5697cfbf8d0904b",
    "type": "commit",
    "created_at": "2023-02-08T21:04:00Z",
    "built_at": "2023-02-08T21:41:16Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1f0b151167d7273a0395d7e8f5697cfbf8d0904b"
  },
  {
    "hash": "1f0fd2e8162871b075865415178146e66d3067f0",
    "type": "pull_request",
    "pull_request": 4449,
    "label": "pwojcikdev:repcrawler-overhaul-2",
    "created_at": "2024-02-25T14:21:12Z",
    "built_at": "2024-03-08T16:12:18Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1f0fd2e8162871b075865415178146e66d3067f0",
    "build_started_at": "2024-03-08T15:44:16Z",
    "run_id": "8205645786"
  },
  {
    "hash": "1f1c8abc216a246f12214ddccba58eccb4d51bea",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Database scan fix (#4742)\n\n* Tests\r\n\r\n* Fix",
    "pull_request": "4742",
    "created_at": "2024-10-03T13:33:56Z",
    "built_at": "2024-10-03T14:08:51Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1f1c8abc216a246f12214ddccba58eccb4d51bea",
    "build_started_at": "2024-10-03T13:42:40Z",
    "run_id": "11163174003"
  },
  {
    "hash": "1f57759bc9fca378cbdc4bade17ac6ef2d43fc81",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Thread runner cleanup",
    "pull_request": "N/A",
    "created_at": "2024-05-05T14:20:37Z",
    "built_at": "2024-05-14T11:45:44Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1f57759bc9fca378cbdc4bade17ac6ef2d43fc81",
    "build_started_at": "2024-05-14T11:08:37Z",
    "run_id": "9078442593"
  },
  {
    "hash": "1f69bc061baa028f29da553b376aded28a1b872a",
    "type": "pull_request",
    "pull_request": 4313,
    "label": "pwojcikdev:fix-aec-confirmed-race",
    "created_at": "2023-10-09T18:48:38Z",
    "built_at": "2023-10-09T19:38:28Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1f69bc061baa028f29da553b376aded28a1b872a"
  },
  {
    "hash": "1f935335b9e355f5627ad1f6aa5659d1ebcb79d1",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Bound the growth of `election_winner_details` set (#4720)\n\n* Bound the growth of `election_winner_details` set\r\n\r\n* Notify about vacancy change\r\n\r\n* Make election buckets always respect AEC vacancy\r\n\r\n* Build script",
    "pull_request": "4720",
    "created_at": "2024-09-05T15:26:25Z",
    "built_at": "2024-09-05T15:58:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1f935335b9e355f5627ad1f6aa5659d1ebcb79d1",
    "build_started_at": "2024-09-05T15:30:43Z",
    "run_id": "10723492962"
  },
  {
    "hash": "1fa126552fe47977079de159ca4ea4774379deed",
    "type": "pull_request",
    "pull_request": 4255,
    "label": "brandon-bb:to_string",
    "created_at": "2023-07-01T14:57:38Z",
    "built_at": "2023-07-01T16:13:51Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1fa126552fe47977079de159ca4ea4774379deed"
  },
  {
    "hash": "1fa2f4ef851740ca4987ace2e957baa86c998e11",
    "type": "pull_request",
    "pull_request": 4486,
    "label": "clemahieu:ledger_view",
    "created_at": "2024-03-12T14:33:24Z",
    "built_at": "2024-03-25T15:44:46Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-25T15:29:10Z",
    "run_id": "8422662275"
  },
  {
    "hash": "1fa80760b56d808d6f543020f4e451d63e70d7f4",
    "type": "pull_request",
    "title": "Creating nano::secure::transaction type",
    "body": "Creating nano::secure::transaction type which is used by nano::ledger and can be expanded to include memory locking.",
    "draft": false,
    "pull_request": 4543,
    "label": "clemahieu:transaction_parameter",
    "created_at": "2024-04-08T13:57:07Z",
    "built_at": "2024-04-10T12:24:38Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1fa80760b56d808d6f543020f4e451d63e70d7f4",
    "build_started_at": "2024-04-10T11:56:05Z",
    "run_id": "8630782232"
  },
  {
    "hash": "1fb3e9f535892f0b79f4111e767d7ade0a872987",
    "type": "commit",
    "title": "Election age statistics (#4537)\n\n* Add election age information to statistics",
    "pull_request": "4537",
    "created_at": "2024-04-09T11:13:52Z",
    "built_at": "2024-04-09T11:46:16Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1fb3e9f535892f0b79f4111e767d7ade0a872987",
    "build_started_at": "2024-04-09T11:20:05Z",
    "run_id": "8614834221"
  },
  {
    "hash": "1fbd6d4a8d0dd063ac3f9c4e07518884463254ca",
    "type": "commit",
    "created_at": "2023-08-31T14:44:07Z",
    "built_at": "2023-08-31T15:24:59Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1fbd6d4a8d0dd063ac3f9c4e07518884463254ca"
  },
  {
    "hash": "1fcbe6317c914bdb41458fac325f1d55c3a16afc",
    "type": "commit",
    "created_at": "2023-02-03T17:49:02Z",
    "built_at": "2023-02-08T10:28:00Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1fcbe6317c914bdb41458fac325f1d55c3a16afc"
  },
  {
    "hash": "1fce19b3e92bc4077ca9896f5ed51aa48071ae83",
    "type": "commit",
    "author": "clemahieu",
    "title": "Fixing leak where cursor would not be closed before being overwritten.",
    "pull_request": "4770",
    "created_at": "2024-10-27T11:50:03Z",
    "built_at": "2024-10-27T17:11:09Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1fce19b3e92bc4077ca9896f5ed51aa48071ae83",
    "build_started_at": "2024-10-27T16:41:00Z",
    "run_id": "11542157059"
  },
  {
    "hash": "1fda9d2976b30054611e53b886490d53cc8dce04",
    "type": "commit",
    "title": "Moving write_database_queue in to nano::store namespace/library.",
    "pull_request": "4535",
    "created_at": "2024-04-04T10:25:43Z",
    "built_at": "2024-04-12T10:14:04Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:1fda9d2976b30054611e53b886490d53cc8dce04",
    "build_started_at": "2024-04-12T09:48:30Z",
    "run_id": "8660196808"
  },
  {
    "hash": "2016dffc8263c75037d6fa9eb2fce5bc91833eb0",
    "type": "pull_request",
    "pull_request": 4345,
    "label": "clemahieu:block_checker",
    "created_at": "2023-11-14T12:02:06Z",
    "built_at": "2024-02-20T10:04:47Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2016dffc8263c75037d6fa9eb2fce5bc91833eb0",
    "build_started_at": "2024-02-20T09:36:34Z",
    "run_id": "7971328630"
  },
  {
    "hash": "202437b3911d480892d3ac12b98d7b0e49c929c9",
    "type": "pull_request",
    "pull_request": 4200,
    "label": "clemahieu:election_confirmed_durable",
    "created_at": "2023-03-27T20:55:35Z",
    "built_at": "2023-03-27T21:39:48Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:202437b3911d480892d3ac12b98d7b0e49c929c9"
  },
  {
    "hash": "202d55298522be9288b067c151e1214ff6ee3254",
    "type": "commit",
    "author": "RickiNano",
    "title": "Create weights in plain text by python script",
    "pull_request": "N/A",
    "created_at": "2024-10-26T12:05:45Z",
    "built_at": "2024-10-29T14:10:57Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:202d55298522be9288b067c151e1214ff6ee3254",
    "build_started_at": "2024-10-29T13:30:07Z",
    "run_id": "11575128603"
  },
  {
    "hash": "20718b0eb994a79214de21d172a9fb46163269d3",
    "type": "pull_request",
    "pull_request": 4420,
    "label": "gr0vity-dev:wip/fix_recently_confirmed_race",
    "created_at": "2024-02-05T15:52:57Z",
    "built_at": "2024-02-07T21:28:25Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:20718b0eb994a79214de21d172a9fb46163269d3",
    "build_started_at": "2024-02-07T21:00:14Z",
    "run_id": "7821076277"
  },
  {
    "hash": "208f8de37b3d24999f5246cec59f64843b59e75c",
    "type": "pull_request",
    "title": "Traffic shaping",
    "author": "pwojcikdev",
    "body": "This is a draft PR for an ongoing work that overhauls how outgoing traffic is handled and prioritized. This will significantly improve how the node handles network congestion, which is extremely important during spam.\r\n\r\nDepends on PRs:\r\nhttps://github.com/nanocurrency/nano-node/pull/4784",
    "draft": true,
    "pull_request": 4786,
    "label": "pwojcikdev:traffic-shaping-pr",
    "created_at": "2024-11-18T19:43:02Z",
    "built_at": "2024-11-19T10:18:33Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:208f8de37b3d24999f5246cec59f64843b59e75c",
    "build_started_at": "2024-11-19T09:49:40Z",
    "run_id": "11910430633"
  },
  {
    "hash": "2095d20fc68e2f140a15d708902f9fab5e4486c7",
    "type": "commit",
    "title": "Refactor print_all_blocks() to take a store rather than a whole node.",
    "pull_request": "4553",
    "created_at": "2024-04-12T14:35:09Z",
    "built_at": "2024-04-14T02:54:46Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2095d20fc68e2f140a15d708902f9fab5e4486c7",
    "build_started_at": "2024-04-14T02:26:53Z",
    "run_id": "8677810576"
  },
  {
    "hash": "209d6661d80fca26f3c9fbbbd817d07c9148c757",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Initiate handshake",
    "pull_request": "N/A",
    "created_at": "2024-03-19T09:31:05Z",
    "built_at": "2024-05-04T10:02:29Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:209d6661d80fca26f3c9fbbbd817d07c9148c757",
    "build_started_at": "2024-05-04T09:36:39Z",
    "run_id": "8949591987"
  },
  {
    "hash": "20a3be022a891bdccbec8767d5ade03849428acd",
    "type": "pull_request",
    "pull_request": 4461,
    "label": "clemahieu:ledger_query_simplification",
    "created_at": "2024-03-05T21:33:36Z",
    "built_at": "2024-03-05T22:06:31Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:20a3be022a891bdccbec8767d5ade03849428acd",
    "build_started_at": "2024-03-05T21:38:34Z",
    "run_id": "8163349032"
  },
  {
    "hash": "20a6241aad491a5dd2196340b277801722f51baa",
    "type": "pull_request",
    "title": "Overhaul of `online_reps` class",
    "author": "pwojcikdev",
    "body": "This is an overhaul of `online_reps` class:\r\n\r\n- Run periodic online weight sampling on a dedicated thread, which makes it more robust and easier to debug.\r\n- Eliminate use of `store.online_weight.count ()` and erasing entries based on their timestamps instead (2 weeks for live, 1 day for beta). \r\n- Add stats and logging to improve observability.\r\n- Add asserts to ensure data consistency.\r\n- Split and rewrite functions, so they are (subjectively) cleaner.\r\n- Ensure that `nano::online_reps::trended ()` can never return value lower than the limit configured via `online_weight_minimum`.",
    "draft": false,
    "pull_request": 4656,
    "label": "pwojcikdev:online-reps-overhaul",
    "created_at": "2024-06-26T08:29:08Z",
    "built_at": "2024-06-26T11:11:50Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:20a6241aad491a5dd2196340b277801722f51baa",
    "build_started_at": "2024-06-26T10:45:32Z",
    "run_id": "9678234642"
  },
  {
    "hash": "20dd6e4a33d40d2d299f45a0677f89efb33c0e55",
    "type": "pull_request",
    "title": "Update boost to 1.86",
    "author": "pwojcikdev",
    "body": "Updating boost now gives us a lot of time to test and discover potential problems before the next release.",
    "draft": false,
    "pull_request": 4743,
    "label": "pwojcikdev:boost-update-1-86",
    "created_at": "2024-10-03T15:37:36Z",
    "built_at": "2024-10-03T16:08:45Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-10-03T15:42:11Z",
    "run_id": "11165170447"
  },
  {
    "hash": "20f77685ebef75d3b5a7b8d10e5ba1611d298764",
    "type": "commit",
    "created_at": "2023-10-07T21:27:21Z",
    "built_at": "2023-10-17T15:44:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:20f77685ebef75d3b5a7b8d10e5ba1611d298764"
  },
  {
    "hash": "2115385360dc2eb506fb527711e9c439bf697f98",
    "type": "pull_request",
    "title": "Add bucket that was accidentally removed during refactor of buckets.",
    "author": "clemahieu",
    "body": null,
    "draft": false,
    "pull_request": 4715,
    "label": "clemahieu:re_add_bucket",
    "created_at": "2024-08-27T09:31:06Z",
    "built_at": "2024-08-27T09:59:31Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2115385360dc2eb506fb527711e9c439bf697f98",
    "build_started_at": "2024-08-27T09:32:34Z",
    "run_id": "10575527252"
  },
  {
    "hash": "214968564730c075e8abde8e378b04e612bb0ffe",
    "type": "pull_request",
    "title": "Fair queuing for request aggregator",
    "author": "pwojcikdev",
    "body": "This implements fair queuing for request aggregator. The benefit is that it removes a small delay that was there due to buffering of requests. This is unnecessary, because client side (`confirmation_solicitor` class) already bundles requests.\r\nI believe that the principle of client->server communication should be that the server does the least processing possible. If client requests data inefficiently, then it will just receive less data and fewer resources will be spent servicing them.",
    "draft": false,
    "pull_request": 4598,
    "label": "pwojcikdev:fair-queuing/request-aggregator-3",
    "created_at": "2024-05-03T07:15:46Z",
    "built_at": "2024-05-03T07:55:27Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:214968564730c075e8abde8e378b04e612bb0ffe",
    "build_started_at": "2024-05-03T07:26:35Z",
    "run_id": "8935583516"
  },
  {
    "hash": "214fed258a931545a7698e1bfe5e3ae1a91541a0",
    "type": "pull_request",
    "pull_request": 3727,
    "label": "clemahieu:block_pipeline",
    "created_at": "2022-02-09T15:28:27Z",
    "built_at": "2023-02-06T02:32:22Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:214fed258a931545a7698e1bfe5e3ae1a91541a0"
  },
  {
    "hash": "2151c2727a502b415b8c0e080fd228010bd07c94",
    "type": "pull_request",
    "title": "Election age statistics",
    "body": "This PR adds information to the `election_statistics` RPC call about the maximum and average age of elections in AEC .\r\nThis will help identify long running elections.\r\nI have also updated the unit test to create an election\r\n\r\nRequest:\r\n```\r\n{\r\n  \"action\": \"election_statistics\"\r\n}\r\n```\r\nResponse example:\r\n```\r\n{\r\n    \"normal\": \"200\",\r\n    \"hinted\": \"22\",\r\n    \"optimistic\": \"425\",\r\n    \"total\": \"647\",\r\n    \"aec_utilization_percentage\": \"8.09\",\r\n    \"max_election_age\": \"6\",\r\n    \"average_election_age\": \"2.46\"\r\n}\r\n```",
    "draft": false,
    "pull_request": 4537,
    "label": "RickiNano:election-age-statistics",
    "created_at": "2024-04-04T19:09:27Z",
    "built_at": "2024-04-05T12:42:56Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2151c2727a502b415b8c0e080fd228010bd07c94",
    "build_started_at": "2024-04-05T12:15:36Z",
    "run_id": "8569621417"
  },
  {
    "hash": "217619921b08993493a6e97d9fd8180b426c89a3",
    "type": "pull_request",
    "pull_request": 4111,
    "label": "pwojcikdev:optimistic-elections-2-rebased",
    "created_at": "2023-02-08T18:34:22Z",
    "built_at": "2023-02-09T10:58:04Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:217619921b08993493a6e97d9fd8180b426c89a3"
  },
  {
    "hash": "21a8fb1c64006486b772107f5a565a45c35c1e5e",
    "type": "commit",
    "created_at": "2023-05-15T11:59:14Z",
    "built_at": "2023-05-15T13:20:44Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:21a8fb1c64006486b772107f5a565a45c35c1e5e"
  },
  {
    "hash": "21abfc2ae4018c2ca0c3a4bbeed6348b7a8e0056",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Bounded election buckets with dynamic reprioritization (#4626)\n\n* Keep track of started elections in buckets\r\n\r\n* Stats\r\n\r\n* Tests\r\n\r\n* Fix compiler warning\r\n\r\n* add nano::scheduler::priority_bucket config\r\n\r\n# Conflicts:\r\n#\tnano/node/scheduler/bucket.cpp\r\n\r\n* Fix test\r\n\r\n* Explicitly pass config to bucket\r\n\r\n* Bucket tests\r\n\r\n---------\r\n\r\nCo-authored-by: gr0vity-dev <homebot@users.noreply.github.com>",
    "pull_request": "4626",
    "created_at": "2024-07-11T13:10:31Z",
    "built_at": "2024-07-11T13:55:00Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:21abfc2ae4018c2ca0c3a4bbeed6348b7a8e0056",
    "build_started_at": "2024-07-11T13:23:53Z",
    "run_id": "9892280694"
  },
  {
    "hash": "21b77a88290d5b1c15cfc6e1ebb01fa4c2706b6d",
    "type": "commit",
    "created_at": "2023-09-01T10:34:42Z",
    "built_at": "2023-09-01T13:26:10Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:21b77a88290d5b1c15cfc6e1ebb01fa4c2706b6d"
  },
  {
    "hash": "21e48cdbc4c33193342df30a460c3bd8149a6be8",
    "type": "commit",
    "author": "clemahieu",
    "title": "Merge pull request #4605 from clemahieu/testing_direct_confirmation\n\nDirectly confirm blocks within unit tests rather than starting/forcing elections",
    "pull_request": "4605",
    "created_at": "2024-05-09T12:37:52Z",
    "built_at": "2024-05-09T13:23:36Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:21e48cdbc4c33193342df30a460c3bd8149a6be8",
    "build_started_at": "2024-05-09T12:44:20Z",
    "run_id": "9017618010"
  },
  {
    "hash": "220ac3de022c61ead2611a1fe2703b3fe4726eae",
    "type": "commit",
    "created_at": "2023-12-12T18:01:56Z",
    "built_at": "2023-12-12T18:55:13Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:220ac3de022c61ead2611a1fe2703b3fe4726eae",
    "build_started_at": "2023-12-12T18:08:37Z",
    "run_id": "7185514549"
  },
  {
    "hash": "2213183369f377066c4668f5ebc04aa0f230fe76",
    "type": "pull_request",
    "pull_request": 4111,
    "label": "pwojcikdev:optimistic-elections-2-rebased",
    "created_at": "2023-02-08T18:34:22Z",
    "built_at": "2023-02-23T15:59:57Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2213183369f377066c4668f5ebc04aa0f230fe76"
  },
  {
    "hash": "221428ba1b9b6916ed170cbdb6e07206044118ad",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Add epochs to `network_filter`",
    "pull_request": "4735",
    "created_at": "2024-09-24T17:19:38Z",
    "built_at": "2024-09-25T15:00:32Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:221428ba1b9b6916ed170cbdb6e07206044118ad",
    "build_started_at": "2024-09-25T13:41:38Z",
    "run_id": "11035224757"
  },
  {
    "hash": "221cded1d7d728c3d847081241e0ef92a4a3de53",
    "type": "pull_request",
    "pull_request": 4483,
    "label": "simpago:store-rep-weights-on-disk",
    "created_at": "2024-03-12T10:24:20Z",
    "built_at": "2024-03-19T07:01:18Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:221cded1d7d728c3d847081241e0ef92a4a3de53",
    "build_started_at": "2024-03-19T06:34:05Z",
    "run_id": "8338613220"
  },
  {
    "hash": "223d255d9b13ddd7479bbfcb5f8df773a7633530",
    "type": "pull_request",
    "pull_request": 4149,
    "label": "clemahieu:active_transaction_stats",
    "created_at": "2023-02-22T18:00:16Z",
    "built_at": "2023-02-22T19:21:57Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:223d255d9b13ddd7479bbfcb5f8df773a7633530"
  },
  {
    "hash": "226fce7055ad11bcd2db0b8d8882aefc6973616d",
    "type": "commit",
    "created_at": "2023-05-05T10:05:35Z",
    "built_at": "2023-05-05T10:39:42Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:226fce7055ad11bcd2db0b8d8882aefc6973616d"
  },
  {
    "hash": "2277b88518f337f361e55409834231de1d933251",
    "type": "pull_request",
    "pull_request": 4486,
    "label": "clemahieu:ledger_view",
    "created_at": "2024-03-12T14:33:24Z",
    "built_at": "2024-03-17T21:10:06Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-17T20:55:00Z",
    "run_id": "8318217857"
  },
  {
    "hash": "227fc4d8017a923ab43812bbe216a440cb7c66a3",
    "type": "commit",
    "created_at": "2023-05-31T14:46:43Z",
    "built_at": "2023-05-31T15:22:59Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:227fc4d8017a923ab43812bbe216a440cb7c66a3"
  },
  {
    "hash": "22abd717a4b8671c0924d5471b012a6efdf6452c",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge pull request #4784 from pwojcikdev/bootstrap-tuning-3\n\nBootstrap tuning",
    "pull_request": "4784",
    "created_at": "2024-11-22T23:35:16Z",
    "built_at": "2024-11-23T00:24:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:22abd717a4b8671c0924d5471b012a6efdf6452c",
    "build_started_at": "2024-11-22T23:40:48Z",
    "run_id": "11981968489"
  },
  {
    "hash": "238a7faaf5aaf3a62b15e22bc4ad69257f028ab7",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge pull request #4790 from pwojcikdev/backlog-scan-reworks\n\nBacklog scan refactoring",
    "pull_request": "4790",
    "created_at": "2024-11-27T00:01:21Z",
    "built_at": "2024-11-27T01:26:15Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:238a7faaf5aaf3a62b15e22bc4ad69257f028ab7",
    "build_started_at": "2024-11-27T00:59:54Z",
    "run_id": "12041727395"
  },
  {
    "hash": "23c6bb5b40486b66a705f42720c6e8182a688063",
    "type": "commit",
    "created_at": "2023-03-30T21:07:33Z",
    "built_at": "2023-03-30T21:51:45Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:23c6bb5b40486b66a705f42720c6e8182a688063"
  },
  {
    "hash": "23d42a0b9991209975ea12112ce31a256daf9e05",
    "type": "pull_request",
    "pull_request": 4182,
    "label": "thsfs:add_bootstrap_ascending_config",
    "created_at": "2023-03-15T01:47:36Z",
    "built_at": "2023-03-20T19:59:35Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:23d42a0b9991209975ea12112ce31a256daf9e05"
  },
  {
    "hash": "23e7268d996229921a144c44335f015608623828",
    "type": "pull_request",
    "pull_request": 4211,
    "label": "clemahieu:bootstrap_channel_scoring",
    "created_at": "2023-04-05T17:07:44Z",
    "built_at": "2023-04-13T22:54:57Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:23e7268d996229921a144c44335f015608623828"
  },
  {
    "hash": "2426f2c531e6a88d0473919bf6e0c07de40f2b3f",
    "type": "pull_request",
    "title": "Cleaner daemon stopping",
    "author": "pwojcikdev",
    "body": "Current daemon stopping logic is unnecessarily convoluted and relies on io context being stopped first, which is problematic. This should unblock https://github.com/nanocurrency/nano-node/pull/4523. I expect this will also make it easier to move io context into the node.\r\n\r\nThere are no CI tests that ensure proper daemon operation, but by testing it manually it seems to work fine. I'll see if I can implement such test and submit it in another PR.\r\n\r\n```\r\n[2024-04-14 19:10:39.736] [daemon] [warning] Interrupt signal received (SIGTERM), stopping...\r\n[2024-04-14 19:10:39.736] [daemon] [info] Stopping...\r\n[2024-04-14 19:10:39.736] [rpc] [error] Error accepting RPC connection: Operation canceled\r\n[2024-04-14 19:10:39.736] [node] [info] Node stopping...\r\n[2024-04-14 19:10:39.768] [tcp_listener] [error] Unable to accept connection: Operation canceled (0.0.0.0)\r\n[2024-04-14 19:10:39.769] [tcp_listener] [error] Acceptor is not open\r\n[2024-04-14 19:10:39.778] [upnp] [warning] UPnP shutdown TCP port mapping failed: 714 (NoSuchEntryInArray)\r\n[2024-04-14 19:10:39.972] [daemon] [info] Daemon stopped\r\n```",
    "draft": false,
    "pull_request": 4560,
    "label": "pwojcikdev:networking-fixes/daemon-latch-rebased",
    "created_at": "2024-04-14T17:17:49Z",
    "built_at": "2024-04-17T08:44:00Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2426f2c531e6a88d0473919bf6e0c07de40f2b3f",
    "build_started_at": "2024-04-17T07:51:58Z",
    "run_id": "8718601374"
  },
  {
    "hash": "244e49c6f7682f9f535ffcb0f52dfdd1e18066d0",
    "type": "commit",
    "created_at": "2024-01-30T06:06:48Z",
    "built_at": "2024-01-30T06:43:10Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:244e49c6f7682f9f535ffcb0f52dfdd1e18066d0",
    "build_started_at": "2024-01-30T06:18:24Z",
    "run_id": "7707111723"
  },
  {
    "hash": "2477ce19ed70896b9c74fee7a5a138eb033437c2",
    "type": "pull_request",
    "pull_request": 4374,
    "label": "dsiganos:fix_warning_about_temporary_object",
    "created_at": "2024-01-19T11:43:58Z",
    "built_at": "2024-01-19T12:09:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2477ce19ed70896b9c74fee7a5a138eb033437c2",
    "build_started_at": "2024-01-19T11:44:02Z",
    "run_id": "7583312125"
  },
  {
    "hash": "2482106994b278d4f482b16fb951a04131a1e300",
    "type": "pull_request",
    "pull_request": 4313,
    "label": "pwojcikdev:fix-aec-confirmed-race",
    "created_at": "2023-10-09T18:48:38Z",
    "built_at": "2023-10-11T11:39:26Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2482106994b278d4f482b16fb951a04131a1e300"
  },
  {
    "hash": "248cd1b25b82199fbbbf7d5531a94295015bc3de",
    "type": "pull_request",
    "title": "Move assert to a dedicated header",
    "author": "pwojcikdev",
    "body": null,
    "draft": false,
    "pull_request": 4773,
    "label": "pwojcikdev:assert-header",
    "created_at": "2024-10-27T18:14:57Z",
    "built_at": "2024-11-03T11:51:14Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-11-03T11:33:29Z",
    "run_id": "11650974040"
  },
  {
    "hash": "24a55d8f6bd73bc41f390cb5fee7fb50cd326d4d",
    "type": "commit",
    "title": "Rename nano::store::write_database_queue to nano::store::write_queue",
    "pull_request": "N/A",
    "created_at": "2024-04-04T10:29:55Z",
    "built_at": "2024-04-12T10:20:23Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:24a55d8f6bd73bc41f390cb5fee7fb50cd326d4d",
    "build_started_at": "2024-04-12T09:48:30Z",
    "run_id": "8660276962"
  },
  {
    "hash": "24d99df5e31188bcf4daed8f85ab915e2b0aff76",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Better logging",
    "pull_request": "4595",
    "created_at": "2024-05-01T11:38:05Z",
    "built_at": "2024-05-04T10:10:11Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:24d99df5e31188bcf4daed8f85ab915e2b0aff76",
    "build_started_at": "2024-05-04T09:36:39Z",
    "run_id": "8949619625"
  },
  {
    "hash": "24e4cfad103fab27178c5a692e3b0490cbd2b6ee",
    "type": "pull_request",
    "pull_request": 4484,
    "label": "clemahieu:ledger_successor_simplify",
    "created_at": "2024-03-12T12:33:19Z",
    "built_at": "2024-03-13T15:52:07Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-13T15:36:18Z",
    "run_id": "8267419205"
  },
  {
    "hash": "24f62ce930809f6d16d83523838495b1b52e3d3d",
    "type": "pull_request",
    "title": "Fix bootstrap <-> blockprocessor notifications",
    "author": "pwojcikdev",
    "body": "https://github.com/nanocurrency/nano-node/pull/4463 Introduces a bug where some accounts wouldn't be unblocked if blocks came as live traffic. This fixes it and adds a few testcases to ensure we won't encounter this problem in the future.",
    "draft": false,
    "pull_request": 4663,
    "label": "pwojcikdev:bootstrap-notifications",
    "created_at": "2024-06-30T17:43:50Z",
    "built_at": "2024-06-30T18:12:50Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:24f62ce930809f6d16d83523838495b1b52e3d3d",
    "build_started_at": "2024-06-30T17:47:10Z",
    "run_id": "9733851161"
  },
  {
    "hash": "2500dfb9021fae126bcbe33347b8efce9cfae0fe",
    "type": "commit",
    "created_at": "2023-04-19T16:00:13Z",
    "built_at": "2023-04-21T16:10:53Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2500dfb9021fae126bcbe33347b8efce9cfae0fe"
  },
  {
    "hash": "250ed204aa9e3ecfe46a250a2d9a44a195c03c4f",
    "type": "commit",
    "created_at": "2024-01-17T10:29:00Z",
    "built_at": "2024-01-17T10:59:16Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:250ed204aa9e3ecfe46a250a2d9a44a195c03c4f",
    "build_started_at": "2024-01-17T10:31:30Z",
    "run_id": "7554388769"
  },
  {
    "hash": "2526b75e61fc1fcb8b4daaf182ece15edafb5205",
    "type": "commit",
    "created_at": "2024-02-23T17:41:50Z",
    "built_at": "2024-02-23T18:11:37Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2526b75e61fc1fcb8b4daaf182ece15edafb5205",
    "build_started_at": "2024-02-23T17:45:44Z",
    "run_id": "8023004739"
  },
  {
    "hash": "25351a6e08a2b7bfed58cf8c3bdb2ba2be6091d6",
    "type": "pull_request",
    "pull_request": 4246,
    "label": "pwojcikdev:parallel-core-tests",
    "created_at": "2023-06-06T23:26:01Z",
    "built_at": "2023-06-06T23:57:09Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:25351a6e08a2b7bfed58cf8c3bdb2ba2be6091d6"
  },
  {
    "hash": "254aa88dc14bdccfe303f9d819d609ab844e26ec",
    "type": "commit",
    "created_at": "2024-03-07T15:38:50Z",
    "built_at": "2024-03-07T16:11:35Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:254aa88dc14bdccfe303f9d819d609ab844e26ec",
    "build_started_at": "2024-03-07T15:43:13Z",
    "run_id": "8190876650"
  },
  {
    "hash": "25acf690dc1930f5849850d22c3b68a68965ebd3",
    "type": "commit",
    "created_at": "2023-03-14T20:40:02Z",
    "built_at": "2023-04-01T17:26:32Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:25acf690dc1930f5849850d22c3b68a68965ebd3"
  },
  {
    "hash": "25b8088c9829841b4bb5ac8d23500e55a7fd8116",
    "type": "pull_request",
    "title": "More vote cache optimizations",
    "author": "pwojcikdev",
    "body": "This builds on top of https://github.com/nanocurrency/nano-node/pull/4627 and optimizes insertion of votes into the vote cache and fixes a significant performance regression in `trigger_vote_cache` function.",
    "draft": false,
    "pull_request": 4629,
    "label": "pwojcikdev:vote-cache-fixing-2",
    "created_at": "2024-05-18T20:52:02Z",
    "built_at": "2024-05-18T21:25:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:25b8088c9829841b4bb5ac8d23500e55a7fd8116",
    "build_started_at": "2024-05-18T20:58:06Z",
    "run_id": "9142586166"
  },
  {
    "hash": "25fd24d18e9ff2bff05adf78fb42073cbfd8080c",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Use unique ptr to store `bootstrap_server` component",
    "pull_request": "N/A",
    "created_at": "2024-10-29T16:18:58Z",
    "built_at": "2024-10-31T14:18:29Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:25fd24d18e9ff2bff05adf78fb42073cbfd8080c",
    "build_started_at": "2024-10-31T13:47:32Z",
    "run_id": "11613142356"
  },
  {
    "hash": "264ce72637f508a42997bbfaa306fff9afe8ec6a",
    "type": "pull_request",
    "title": "Enum utils",
    "author": "pwojcikdev",
    "body": "This organizes enum conversion functions and adds additional checks. This avoids unnecessary boilerplate code.",
    "draft": false,
    "pull_request": 4601,
    "label": "pwojcikdev:enum-utils",
    "created_at": "2024-05-05T11:55:45Z",
    "built_at": "2024-05-05T14:21:26Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:264ce72637f508a42997bbfaa306fff9afe8ec6a",
    "build_started_at": "2024-05-05T13:56:12Z",
    "run_id": "8958763186"
  },
  {
    "hash": "2669027a6bad2d1fc9391d6ad601220996b2db3c",
    "type": "pull_request",
    "pull_request": 4336,
    "label": "clemahieu:block_uniquer_try_emplace",
    "created_at": "2023-11-08T10:04:36Z",
    "built_at": "2023-11-08T10:43:37Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2669027a6bad2d1fc9391d6ad601220996b2db3c",
    "build_started_at": "2023-11-08T10:15:32Z",
    "run_id": "6796773838"
  },
  {
    "hash": "2673c53d576686840ac920a80709e0b7823e8208",
    "type": "pull_request",
    "title": "Enable debug logging for core tests",
    "author": "gr0vity-dev",
    "body": "Failures on GitHub runners are sometimes hard to reproduce locally. Adding detailed logging helps analyze test failures directly from CI logs.\r\n\r\n- Enables NANO_LOG_STATS and debug level logging for core tests across all CI platforms\r\n- Helps diagnose intermittent test failures by providing more detailed execution traces",
    "draft": false,
    "pull_request": 4807,
    "label": "gr0vity-dev:prs/enable-debug-log-for-core-tests",
    "created_at": "2024-12-07T08:45:19Z",
    "built_at": "2024-12-07T12:11:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2673c53d576686840ac920a80709e0b7823e8208",
    "build_started_at": "2024-12-07T11:42:51Z",
    "run_id": "12212417312"
  },
  {
    "hash": "26f06511f8f624ccfad1b0516b90361835fde3eb",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Rename `ascendboot` to `bootstrap`",
    "pull_request": "N/A",
    "created_at": "2024-10-29T16:30:48Z",
    "built_at": "2024-10-31T14:25:25Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:26f06511f8f624ccfad1b0516b90361835fde3eb",
    "build_started_at": "2024-10-31T13:47:32Z",
    "run_id": "11613258285"
  },
  {
    "hash": "2708ec109649067dade2c2ad6ac92e67a543e20e",
    "type": "pull_request",
    "pull_request": 4490,
    "label": "pwojcikdev:networking-fixes-thread",
    "created_at": "2024-03-14T16:53:00Z",
    "built_at": "2024-03-14T17:23:03Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2708ec109649067dade2c2ad6ac92e67a543e20e",
    "build_started_at": "2024-03-14T16:57:22Z",
    "run_id": "8284576723"
  },
  {
    "hash": "271e953986dcf7f7823b533980c6618ca9991894",
    "type": "pull_request",
    "title": "Add `NANO_TRACING` argument to Dockerfile",
    "author": "gr0vity-dev",
    "body": "To allow docker images with tracing support, we need to be able to pass `NANO_TRACING` via build-arg like this :\r\n\r\n`docker build --build-arg NANO_TRACING=ON -f docker/node/Dockerfile -t NODE_NAME .`\r\n\r\nDuring testing I sometimes need docker images with tracing enabled.",
    "draft": false,
    "pull_request": 4603,
    "label": "gr0vity-dev:prs/add_tracing_to_docker",
    "created_at": "2024-05-06T07:17:13Z",
    "built_at": "2024-05-06T07:58:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:271e953986dcf7f7823b533980c6618ca9991894",
    "build_started_at": "2024-05-06T07:32:19Z",
    "run_id": "8965350860"
  },
  {
    "hash": "274c6714cacc567087a01f954826f498ff560463",
    "type": "commit",
    "author": "dsiganos",
    "title": "A system test to exercise the rpc stop command (#4573)\n\nIntroduce a systest case for rpc stop command",
    "pull_request": "4573",
    "created_at": "2024-04-30T13:47:44Z",
    "built_at": "2024-04-30T14:50:53Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:274c6714cacc567087a01f954826f498ff560463",
    "build_started_at": "2024-04-30T13:49:17Z",
    "run_id": "8896510044"
  },
  {
    "hash": "275c34de815066e44d8e197d2cb5f9e1ef4e04fa",
    "type": "pull_request",
    "pull_request": 4463,
    "label": "pwojcikdev:bootstrap-avoid-live-traffic",
    "created_at": "2024-03-06T11:52:12Z",
    "built_at": "2024-03-06T12:21:21Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:275c34de815066e44d8e197d2cb5f9e1ef4e04fa",
    "build_started_at": "2024-03-06T11:56:08Z",
    "run_id": "8171629566"
  },
  {
    "hash": "277339ed7e687f25e115e3372bc74b3b2503e636",
    "type": "commit",
    "created_at": "2024-03-25T13:25:40Z",
    "built_at": "2024-03-25T13:57:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:277339ed7e687f25e115e3372bc74b3b2503e636",
    "build_started_at": "2024-03-25T13:29:30Z",
    "run_id": "8420893800"
  },
  {
    "hash": "27820f92647e15149f05a138d6885e93c9c23165",
    "type": "pull_request",
    "pull_request": 4223,
    "label": "pwojcikdev:rpc-errors-improvements",
    "created_at": "2023-05-03T19:44:17Z",
    "built_at": "2023-05-12T14:29:35Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:27820f92647e15149f05a138d6885e93c9c23165"
  },
  {
    "hash": "278d6decfc374a62faee2d74b6bb798a7ed06521",
    "type": "pull_request",
    "pull_request": 4425,
    "label": "clemahieu:remove_frontiers_table",
    "created_at": "2024-02-10T18:21:12Z",
    "built_at": "2024-03-22T17:51:35Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:278d6decfc374a62faee2d74b6bb798a7ed06521",
    "build_started_at": "2024-03-22T17:27:13Z",
    "run_id": "8394157619"
  },
  {
    "hash": "27a4c83259d6ca896b5dad840208743f677fd4f6",
    "type": "commit",
    "created_at": "2023-04-13T12:45:21Z",
    "built_at": "2023-04-13T13:32:42Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:27a4c83259d6ca896b5dad840208743f677fd4f6"
  },
  {
    "hash": "27b904b97546afeae421e3c9dde0be1ad11cc910",
    "type": "pull_request",
    "pull_request": 4376,
    "label": "RickiNano:assert-conversions-part-2",
    "created_at": "2024-01-19T17:32:45Z",
    "built_at": "2024-01-21T17:51:00Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:27b904b97546afeae421e3c9dde0be1ad11cc910",
    "build_started_at": "2024-01-21T17:23:08Z",
    "run_id": "7602741537"
  },
  {
    "hash": "27d0a2665fa8acec1488713a3e410efb3b6f9482",
    "type": "pull_request",
    "title": "Add flamegraph generation in CI build",
    "author": "clemahieu",
    "body": "Flamegraphs are attached to the workflow build as artifacts.\r\n\r\nNew tests can be added by creating a new gtest in slow_test.\r\nTests like TEST (flamegraph, testname_x) will be executed if testname_x is added to the flamegraph.yml file test matrix.",
    "draft": true,
    "pull_request": 4638,
    "label": "clemahieu:flamegraph_test",
    "created_at": "2024-05-23T01:21:53Z",
    "built_at": "2024-05-23T02:50:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:27d0a2665fa8acec1488713a3e410efb3b6f9482",
    "build_started_at": "2024-05-23T01:54:48Z",
    "run_id": "9201258120"
  },
  {
    "hash": "2807ceecb4a1bc19afcb29f96da392998227538e",
    "type": "pull_request",
    "pull_request": 4158,
    "label": "clemahieu:bootstrap_ascending_client",
    "created_at": "2023-02-27T20:15:37Z",
    "built_at": "2023-03-14T23:03:49Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2807ceecb4a1bc19afcb29f96da392998227538e"
  },
  {
    "hash": "2810e4cc5ff511590685c1bd80c97017ff5622aa",
    "type": "pull_request",
    "pull_request": 4461,
    "label": "clemahieu:ledger_query_simplification",
    "created_at": "2024-03-05T21:33:36Z",
    "built_at": "2024-03-06T14:03:25Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2810e4cc5ff511590685c1bd80c97017ff5622aa",
    "build_started_at": "2024-03-06T13:35:47Z",
    "run_id": "8172980679"
  },
  {
    "hash": "284d32820e4e15e0fc6832632beaad4fe587c5db",
    "type": "commit",
    "created_at": "2024-01-31T16:55:55Z",
    "built_at": "2024-01-31T17:22:49Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:284d32820e4e15e0fc6832632beaad4fe587c5db",
    "build_started_at": "2024-01-31T16:56:18Z",
    "run_id": "7729573301"
  },
  {
    "hash": "285c56d369fbf8f2aa186a640d98c352bba59bef",
    "type": "pull_request",
    "title": "Fix correctness, sanity check, and resolve shutdown issue.",
    "author": "clemahieu",
    "body": "There was a missing mutex lock entries_mutex in unchecked_map::collect_container_info.\r\n\r\nSanity check the equality of the iterator qualified root to the item searched for.\r\n\r\nConsider stopped flag when wait-looping. Use condition_variable::wait rather than this_thread::sleep_for",
    "draft": false,
    "pull_request": 4719,
    "label": "clemahieu:tsan_fixes",
    "created_at": "2024-09-03T02:23:56Z",
    "built_at": "2024-09-03T03:14:23Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:285c56d369fbf8f2aa186a640d98c352bba59bef",
    "build_started_at": "2024-09-03T02:47:10Z",
    "run_id": "10675723578"
  },
  {
    "hash": "287c500c498823d5e7f4356bc62a1fb313410752",
    "type": "pull_request",
    "title": "RPC endpoint for election statistics",
    "body": "This pull request adds a new election_statistics RPC endpoint to help identify bottlenecks within the AEC.\r\nThe endpoint will respond with the number of active elections for each electiontype. It will also return the percentage of AEC slots in use.\r\nIf this is merged, I intend to expand the dataset with the average and max election age.\r\n\r\nRequest:\r\n```\r\n{\r\n    \"action\": \"election_statistics\" \r\n}\r\n```\r\n\r\nResponse example:\r\n```\r\n{\r\n    \"normal\": \"1595\",\r\n    \"hinted\": \"70\",\r\n    \"optimistic\": \"222\",\r\n    \"total\": \"1887\",\r\n    \"aec_utilization_percentage\": \"37.74\"\r\n}\r\n```",
    "draft": false,
    "pull_request": 4533,
    "label": "RickiNano:aec-statistics",
    "created_at": "2024-04-03T17:29:00Z",
    "built_at": "2024-04-03T18:55:20Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:287c500c498823d5e7f4356bc62a1fb313410752",
    "build_started_at": "2024-04-03T18:30:12Z",
    "run_id": "8543746595"
  },
  {
    "hash": "28960e219fe9986b941f7edb4ce823211d60ec89",
    "type": "commit",
    "created_at": "2024-01-26T03:52:49Z",
    "built_at": "2024-01-26T04:17:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:28960e219fe9986b941f7edb4ce823211d60ec89",
    "build_started_at": "2024-01-26T03:52:50Z",
    "run_id": "7663748479"
  },
  {
    "hash": "2897be497e80b14b78337ca0b7b87abb84744c5d",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Signal manager thread role (#4565)",
    "pull_request": "4565",
    "created_at": "2024-04-15T12:27:19Z",
    "built_at": "2024-04-15T13:08:31Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2897be497e80b14b78337ca0b7b87abb84744c5d",
    "build_started_at": "2024-04-15T12:43:00Z",
    "run_id": "8689302589"
  },
  {
    "hash": "28af014a737d77111cab868e16904a4b5ebfce1c",
    "type": "pull_request",
    "title": "Remove temporary channels",
    "author": "pwojcikdev",
    "body": "Our current networking design is strange in this aspect, that we treat connections accepted by our node (temporary channels) differently to connections that are initiated by our node. There is no fundamental reason for such behavior, TCP allows for bidirectional communication and doing so may lead to more robust network, since some peers aren't directly reachable (NAT, firewalls).\r\n\r\nThe logic for handling those temporary channels was also not great, it created a new channel for each processed message which led to inefficiencies, especially when paired with fair queuing. Look at `nano::transport::tcp_channels::process_message (...)`. It also used node id for channel lookup when processing messages. Here I'm associating each realtime connection with a single channel, without relying on node id, which is simpler and more robust approach.\r\n\r\nThis PR moves management of lower-level connections fully to `tcp_listener` and implements them using coroutines. Each connection attempt is given a timeout (by default 60 seconds) and node id conflicts are only rejected for same IP addresses.\r\n\r\nPrevious attempt to fix this issue was https://github.com/nanocurrency/nano-node/pull/3928",
    "draft": false,
    "pull_request": 4595,
    "label": "pwojcikdev:networking-fixes/connecting-4",
    "created_at": "2024-04-30T18:06:51Z",
    "built_at": "2024-05-01T12:18:28Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:28af014a737d77111cab868e16904a4b5ebfce1c",
    "build_started_at": "2024-05-01T11:52:12Z",
    "run_id": "8908961785"
  },
  {
    "hash": "28b9f4f36b117dac6c35dd145596140a4d3a00e5",
    "type": "pull_request",
    "title": "QT wallet: proper display of state open block in GUI history",
    "author": "SergiySW",
    "body": "State open block should be marked as \"Receive\".\r\nFor open blocks `previous` == 0 and function `nano::ledger_set_any::block_balance ()` will return `std::nullopt` resulting in displaying \"Unknown\" block type.",
    "draft": false,
    "pull_request": 4744,
    "label": "SergiySW:qt_state_open",
    "created_at": "2024-10-06T20:20:47Z",
    "built_at": null,
    "build_status": "building",
    "docker_tag": null,
    "build_started_at": "2024-10-25T16:50:38Z",
    "run_id": null
  },
  {
    "hash": "28f95c773385b7767066e93c45d27a7410bb1990",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Channel local endpoint getter",
    "pull_request": "4595",
    "created_at": "2024-04-29T19:15:42Z",
    "built_at": "2024-05-04T10:16:44Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:28f95c773385b7767066e93c45d27a7410bb1990",
    "build_started_at": "2024-05-04T09:36:39Z",
    "run_id": "8949650498"
  },
  {
    "hash": "2903a9977a520c69554500196d1f9c76a07f8bfd",
    "type": "commit",
    "created_at": "2024-02-23T10:29:39Z",
    "built_at": "2024-02-23T11:01:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2903a9977a520c69554500196d1f9c76a07f8bfd",
    "build_started_at": "2024-02-23T10:36:25Z",
    "run_id": "8017972262"
  },
  {
    "hash": "290b273faa2e5bf54b0ec342a9d235f9d8b67f49",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Binary tree ledger context",
    "pull_request": "4665",
    "created_at": "2024-06-26T20:23:52Z",
    "built_at": "2024-07-09T17:20:28Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:290b273faa2e5bf54b0ec342a9d235f9d8b67f49",
    "build_started_at": "2024-07-09T16:43:44Z",
    "run_id": "9861057044"
  },
  {
    "hash": "291151e354ecd61cf4a74ba7f030ae9b73907674",
    "type": "pull_request",
    "title": "Max election age precision",
    "body": "`max_election_age` is currently being casted as `std::chrono::seconds` which causes the value to be rounded to nearest second. This pr changes it to use `double` and returns the value with 2 decimals.\r\nIt's unfortunate that I did not notice this issue in the original PR.\r\nThe unit test is also updated to test that both election age values are greater than zero. On my machine they are 0.09 seconds during unit test.\r\nI also implemented the syntax Colin suggested for `oldest_election_start` to avoid the if statement",
    "draft": false,
    "pull_request": 4549,
    "label": "RickiNano:max-age-decimals",
    "created_at": "2024-04-10T06:10:14Z",
    "built_at": "2024-04-10T13:08:42Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:291151e354ecd61cf4a74ba7f030ae9b73907674",
    "build_started_at": "2024-04-10T12:42:22Z",
    "run_id": "8631414079"
  },
  {
    "hash": "2931630f361baef10ed2be9c827ba888123118c0",
    "type": "pull_request",
    "pull_request": 4213,
    "label": "thsfs:bootstrap_ascending_class_files_split",
    "created_at": "2023-04-07T13:02:58Z",
    "built_at": "2023-04-07T15:27:42Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2931630f361baef10ed2be9c827ba888123118c0"
  },
  {
    "hash": "29380eb154ae4336455dd7721df454e214833b0a",
    "type": "pull_request",
    "title": "Fix correctness, sanity check, and resolve shutdown issue.",
    "author": "clemahieu",
    "body": "There was a missing mutex lock entries_mutex in unchecked_map::collect_container_info.\r\n\r\nSanity check the equality of the iterator qualified root to the item searched for.\r\n\r\nConsider stopped flag when wait-looping. Use condition_variable::wait rather than this_thread::sleep_for",
    "draft": false,
    "pull_request": 4719,
    "label": "clemahieu:tsan_fixes",
    "created_at": "2024-09-03T02:23:56Z",
    "built_at": "2024-09-03T18:50:32Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:29380eb154ae4336455dd7721df454e214833b0a",
    "build_started_at": "2024-09-03T18:22:30Z",
    "run_id": "10688470614"
  },
  {
    "hash": "295f4671b3971790e1e1f94cad4fc9e92bed2202",
    "type": "commit",
    "created_at": "2023-02-14T12:41:26Z",
    "built_at": "2023-02-14T13:33:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:295f4671b3971790e1e1f94cad4fc9e92bed2202"
  },
  {
    "hash": "296e91b921dedc8839e9571da5ec4857849b228f",
    "type": "commit",
    "created_at": "2023-02-03T01:25:00Z",
    "built_at": "2023-02-06T20:08:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:296e91b921dedc8839e9571da5ec4857849b228f"
  },
  {
    "hash": "298b3486d9424fc8fbf53404bd81de3c17b77f3b",
    "type": "pull_request",
    "pull_request": 4318,
    "label": "clemahieu:election_state_mutex",
    "created_at": "2023-10-26T14:21:12Z",
    "built_at": "2023-11-01T10:22:25Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:298b3486d9424fc8fbf53404bd81de3c17b77f3b",
    "build_started_at": "2023-11-01T09:28:37Z",
    "run_id": "6717972888"
  },
  {
    "hash": "29947cfda7bb0dbe35b8d9028cde22f6c282251b",
    "type": "pull_request",
    "title": "Max election age precision",
    "body": "`max_election_age` is currently being casted as `std::chrono::seconds` which causes the value to be rounded to nearest second. This pr changes it to use `double` and returns the value with 2 decimals.\r\nIt's unfortunate that I did not notice this issue in the original PR.\r\nThe unit test is also updated to test that both election age values are greater than zero. On my machine they are 0.09 seconds during unit test.\r\nI also implemented the syntax Colin suggested for `oldest_election_start` to avoid the if statement",
    "draft": false,
    "pull_request": 4549,
    "label": "RickiNano:max-age-decimals",
    "created_at": "2024-04-10T06:10:14Z",
    "built_at": "2024-04-10T06:43:17Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:29947cfda7bb0dbe35b8d9028cde22f6c282251b",
    "build_started_at": "2024-04-10T06:15:16Z",
    "run_id": "8626821084"
  },
  {
    "hash": "299bfbc4c9173e60ec22a988ea305c9aebfe13f4",
    "type": "commit",
    "created_at": "2024-01-26T16:47:10Z",
    "built_at": "2024-01-31T17:34:57Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:299bfbc4c9173e60ec22a988ea305c9aebfe13f4",
    "build_started_at": "2024-01-31T16:56:18Z",
    "run_id": "7729573301"
  },
  {
    "hash": "29a8f2ceebed8c4bfb71333beaa76e670b33c61a",
    "type": "pull_request",
    "pull_request": 4070,
    "label": "JerzyStanislawski:rpc_accounts_receivable_sorting_fix",
    "created_at": "2023-01-24T00:12:09Z",
    "built_at": "2023-02-04T22:13:12Z",
    "build_status": "fail",
    "docker_tag": ""
  },
  {
    "hash": "29cd166fe5e29eba6537fd7a2c41041afa1de1af",
    "type": "commit",
    "created_at": "2023-09-17T17:44:29Z",
    "built_at": "2023-09-20T19:44:34Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:29cd166fe5e29eba6537fd7a2c41041afa1de1af"
  },
  {
    "hash": "29e7218959b8ea8166a44b305ae30597b6c3426b",
    "type": "pull_request",
    "title": "Cleaner daemon stopping",
    "author": "pwojcikdev",
    "body": "Current daemon stopping logic is unnecessarily convoluted and relies on io context being stopped first, which is problematic. This should unblock https://github.com/nanocurrency/nano-node/pull/4523. I expect this will also make it easier to move io context into the node.\r\n\r\nThere are no CI tests that ensure proper daemon operation, but by testing it manually it seems to work fine. I'll see if I can implement such test and submit it in another PR.\r\n\r\n```\r\n[2024-04-14 19:10:39.736] [daemon] [warning] Interrupt signal received (SIGTERM), stopping...\r\n[2024-04-14 19:10:39.736] [daemon] [info] Stopping...\r\n[2024-04-14 19:10:39.736] [rpc] [error] Error accepting RPC connection: Operation canceled\r\n[2024-04-14 19:10:39.736] [node] [info] Node stopping...\r\n[2024-04-14 19:10:39.768] [tcp_listener] [error] Unable to accept connection: Operation canceled (0.0.0.0)\r\n[2024-04-14 19:10:39.769] [tcp_listener] [error] Acceptor is not open\r\n[2024-04-14 19:10:39.778] [upnp] [warning] UPnP shutdown TCP port mapping failed: 714 (NoSuchEntryInArray)\r\n[2024-04-14 19:10:39.972] [daemon] [info] Daemon stopped\r\n```",
    "draft": false,
    "pull_request": 4560,
    "label": "pwojcikdev:networking-fixes/daemon-latch-rebased",
    "created_at": "2024-04-14T17:17:49Z",
    "built_at": "2024-04-14T22:45:47Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:29e7218959b8ea8166a44b305ae30597b6c3426b",
    "build_started_at": "2024-04-14T22:18:13Z",
    "run_id": "8681296123"
  },
  {
    "hash": "2a0325021c502f29b633fd694700cbb028b49fb9",
    "type": "pull_request",
    "title": "Bounded backlog",
    "author": "pwojcikdev",
    "body": "This is ongoing work for bounded backlog. This limits the number of unconfirmed blocks that the node needs to store. The implementation of this mechanism is nontrivial because the node relies heavily on the fact that unconfirmed blocks are present in the ledger.\r\n\r\nDepends on PRs:\r\nhttps://github.com/nanocurrency/nano-node/pull/4758",
    "draft": true,
    "pull_request": 4787,
    "label": "pwojcikdev:bounded-backlog-pr",
    "created_at": "2024-11-18T20:36:19Z",
    "built_at": "2024-11-19T00:08:25Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2a0325021c502f29b633fd694700cbb028b49fb9",
    "build_started_at": "2024-11-18T23:38:27Z",
    "run_id": "11903151111"
  },
  {
    "hash": "2a1203c646cf810eb4edbf3997dec74ad59b3bbb",
    "type": "pull_request",
    "title": "Fix a TSAN issue in active_transactions.confirm_new",
    "author": "dsiganos",
    "body": null,
    "draft": false,
    "pull_request": 4582,
    "label": "dsiganos:fix_tsan_active_transactions_confirm_new",
    "created_at": "2024-04-23T12:25:01Z",
    "built_at": "2024-04-23T13:12:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2a1203c646cf810eb4edbf3997dec74ad59b3bbb",
    "build_started_at": "2024-04-23T12:44:59Z",
    "run_id": "8800621619"
  },
  {
    "hash": "2a155b7dca071920094d839042fbb55f271c6851",
    "type": "commit",
    "author": "RickiNano",
    "title": "Simplified RocksDb migration logic (#4740)",
    "pull_request": "4740",
    "created_at": "2024-09-30T19:02:01Z",
    "built_at": "2024-09-30T19:32:56Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2a155b7dca071920094d839042fbb55f271c6851",
    "build_started_at": "2024-09-30T19:06:42Z",
    "run_id": "11112529464"
  },
  {
    "hash": "2a1b37996eb74ad7523a4fa87a071cfbe1686713",
    "type": "pull_request",
    "title": "Offload block processor notifications",
    "author": "pwojcikdev",
    "body": "This offloads block processors notifications to be processed on a background thread, so that block processor can continue checking new blocks without waiting for other components to do their work. Checking new blocks requires a write-transaction, while handling `batch_processed` event is done with read-only transaction, both can happen in parallel.\r\n\r\nThe changes here are based on top of https://github.com/nanocurrency/nano-node/pull/4762 which is a necessary prerequisite.",
    "draft": false,
    "pull_request": 4763,
    "label": "pwojcikdev:offload-block-processor-notifications",
    "created_at": "2024-10-22T15:43:39Z",
    "built_at": "2024-10-22T17:38:36Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2a1b37996eb74ad7523a4fa87a071cfbe1686713",
    "build_started_at": "2024-10-22T17:11:08Z",
    "run_id": "11465119704"
  },
  {
    "hash": "2a201efdc3f6e70571b99053d495c2e22fb15d05",
    "type": "pull_request",
    "title": "Encapsulate ledger cache counts",
    "body": "This is a cleanup PR for encapsulating the various ledger counts in ledger_cache which get new ledger accessors.",
    "draft": false,
    "pull_request": 4528,
    "label": "clemahieu:encapsulate_ledger_cache",
    "created_at": "2024-03-30T16:17:33Z",
    "built_at": "2024-03-31T22:37:26Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2a201efdc3f6e70571b99053d495c2e22fb15d05",
    "build_started_at": "2024-03-31T22:13:09Z",
    "run_id": "8501239383"
  },
  {
    "hash": "2a23efced60a18dd9922e5800d21e85a63ffb4ee",
    "type": "commit",
    "created_at": "2023-03-20T16:13:31Z",
    "built_at": "2023-03-21T11:50:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2a23efced60a18dd9922e5800d21e85a63ffb4ee"
  },
  {
    "hash": "2a6c51e7a4c48c88d4b864ae02bf94fe547b712d",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Rename `channel_tcp` to `tcp_channel`",
    "pull_request": "4651",
    "created_at": "2024-06-17T15:38:18Z",
    "built_at": "2024-06-18T13:40:24Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2a6c51e7a4c48c88d4b864ae02bf94fe547b712d",
    "build_started_at": "2024-06-18T12:54:53Z",
    "run_id": "9565688916"
  },
  {
    "hash": "2ac4aa79d8cd408918d91fa708880142a247d595",
    "type": "commit",
    "title": "Use enclosing transaction within scheduler::optimistic::run_one rather than opening a new one.",
    "pull_request": "4559",
    "created_at": "2024-04-11T14:24:53Z",
    "built_at": "2024-04-15T00:06:22Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2ac4aa79d8cd408918d91fa708880142a247d595",
    "build_started_at": "2024-04-14T22:18:13Z",
    "run_id": "8681640720"
  },
  {
    "hash": "2ad38a606a5ed7d6797939166810a140791d9bc1",
    "type": "pull_request",
    "pull_request": 4522,
    "label": "clemahieu:db_guard_nodiscard",
    "created_at": "2024-03-24T21:31:15Z",
    "built_at": "2024-03-24T21:59:26Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2ad38a606a5ed7d6797939166810a140791d9bc1",
    "build_started_at": "2024-03-24T21:34:39Z",
    "run_id": "8412278557"
  },
  {
    "hash": "2b1e7116d3d1977dda9dffc398d27bf7fd4cbea2",
    "type": "pull_request",
    "pull_request": 4111,
    "label": "pwojcikdev:optimistic-elections-2-rebased",
    "created_at": "2023-02-08T18:34:22Z",
    "built_at": "2023-02-22T14:30:19Z",
    "build_status": "fail",
    "docker_tag": ""
  },
  {
    "hash": "2b2fd12106b8be409362dc84d28ea9a3db3ab389",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Hashing cleanup",
    "pull_request": "4767",
    "created_at": "2024-10-25T10:41:45Z",
    "built_at": "2024-10-25T23:40:18Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2b2fd12106b8be409362dc84d28ea9a3db3ab389",
    "build_started_at": "2024-10-25T22:56:00Z",
    "run_id": "11526651763"
  },
  {
    "hash": "2b5006f5211bda1dc95e1f6c88c41d4b4f77b4b4",
    "type": "pull_request",
    "title": "A system test to exercise the rpc stop command",
    "author": "dsiganos",
    "body": null,
    "draft": false,
    "pull_request": 4573,
    "label": "dsiganos:rpc_stop_test_case",
    "created_at": "2024-04-17T10:40:12Z",
    "built_at": "2024-04-17T11:31:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2b5006f5211bda1dc95e1f6c88c41d4b4f77b4b4",
    "build_started_at": "2024-04-17T11:04:49Z",
    "run_id": "8720774960"
  },
  {
    "hash": "2b6d28dfb0b09d950417a9e3733cfc8ebb5ae434",
    "type": "pull_request",
    "title": "Shorten transaction lifetimes by using temporary expressions in some trivial cases.",
    "author": "clemahieu",
    "body": null,
    "draft": false,
    "pull_request": 4566,
    "label": "clemahieu:temporary_expression_transactions",
    "created_at": "2024-04-15T20:07:12Z",
    "built_at": "2024-04-15T20:36:58Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2b6d28dfb0b09d950417a9e3733cfc8ebb5ae434",
    "build_started_at": "2024-04-15T20:08:54Z",
    "run_id": "8695423055"
  },
  {
    "hash": "2b6ee636cacc4a560c35deac109fa05f63d27d8f",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Constexpr check NANO_ASIO_HANDLER_TRACKING (#4562)",
    "pull_request": "4562",
    "created_at": "2024-04-15T08:04:52Z",
    "built_at": "2024-04-15T08:34:04Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2b6ee636cacc4a560c35deac109fa05f63d27d8f",
    "build_started_at": "2024-04-15T08:06:27Z",
    "run_id": "8685587472"
  },
  {
    "hash": "2b727612cd454e5fed7fa59873c166a6eaa7ada0",
    "type": "pull_request",
    "pull_request": 4277,
    "label": "clemahieu:start_election_return",
    "created_at": "2023-09-05T10:44:05Z",
    "built_at": "2023-09-05T11:33:21Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2b727612cd454e5fed7fa59873c166a6eaa7ada0"
  },
  {
    "hash": "2b73bf399eebb7135eaa18348e4912ab9273253d",
    "type": "pull_request",
    "pull_request": 4111,
    "label": "pwojcikdev:optimistic-elections-2-rebased",
    "created_at": "2023-02-08T18:34:22Z",
    "built_at": "2023-02-08T19:14:10Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2b73bf399eebb7135eaa18348e4912ab9273253d"
  },
  {
    "hash": "2b8245c81580ec3faa37b31b04164a6ef90cdcf3",
    "type": "pull_request",
    "pull_request": 4238,
    "label": "clemahieu:scheduling_limiter",
    "created_at": "2023-05-19T01:07:22Z",
    "built_at": "2023-09-03T14:16:56Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2b8245c81580ec3faa37b31b04164a6ef90cdcf3"
  },
  {
    "hash": "2ba14ed395fddcc4c40949d16b38cd3244a55793",
    "type": "commit",
    "author": "clemahieu",
    "title": "Add test to verify the \"unopened\" rpc can seek past the requested account",
    "pull_request": "4707",
    "created_at": "2024-08-19T14:06:17Z",
    "built_at": "2024-08-20T13:18:09Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2ba14ed395fddcc4c40949d16b38cd3244a55793",
    "build_started_at": "2024-08-20T12:17:20Z",
    "run_id": "10471867597"
  },
  {
    "hash": "2ba48077785d25ac007cc62c8a9876c2dc31320e",
    "type": "pull_request",
    "pull_request": 4494,
    "label": "clemahieu:ledger_context_pool",
    "created_at": "2024-03-16T14:40:40Z",
    "built_at": "2024-03-16T15:08:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2ba48077785d25ac007cc62c8a9876c2dc31320e",
    "build_started_at": "2024-03-16T14:44:36Z",
    "run_id": "8308510675"
  },
  {
    "hash": "2bab5333bcc6acc1def3e440c481c0ab74b2c8d0",
    "type": "pull_request",
    "pull_request": 4519,
    "label": "clemahieu:confirming_set",
    "created_at": "2024-03-23T22:40:41Z",
    "built_at": "2024-03-24T13:43:37Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2bab5333bcc6acc1def3e440c481c0ab74b2c8d0",
    "build_started_at": "2024-03-24T13:19:00Z",
    "run_id": "8409627913"
  },
  {
    "hash": "2badf066470bb1d082c6ade98d65ea528569d0de",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Stats for `node::process_confirmed ()`",
    "pull_request": "N/A",
    "created_at": "2024-10-12T11:30:12Z",
    "built_at": "2024-10-18T09:46:32Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2badf066470bb1d082c6ade98d65ea528569d0de",
    "build_started_at": "2024-10-18T08:49:46Z",
    "run_id": "11400965008"
  },
  {
    "hash": "2bbf85eadfabd501d14d7407a66eace940aadac2",
    "type": "pull_request",
    "pull_request": 4168,
    "label": "pwojcikdev:handshake-v2-merged",
    "created_at": "2023-03-03T22:04:06Z",
    "built_at": "2023-03-07T22:59:18Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2bbf85eadfabd501d14d7407a66eace940aadac2"
  },
  {
    "hash": "2bc5a890736c4d66d556965ce9767bce846ec1dc",
    "type": "pull_request",
    "pull_request": 4483,
    "label": "simpago:store-rep-weights-on-disk",
    "created_at": "2024-03-12T10:24:20Z",
    "built_at": "2024-03-12T10:41:15Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-12T10:25:45Z",
    "run_id": "8247240799"
  },
  {
    "hash": "2bcabac74fc6855c9a09e79eae2c7e12fe70808c",
    "type": "pull_request",
    "title": "Link boost stacktrace appropriately for line information.",
    "author": "clemahieu",
    "body": "The previous code was overcomplicating a relatively straightforward requirement to link against librt and libdynamic to get symbolic stacktraces.",
    "draft": false,
    "pull_request": 4771,
    "label": "clemahieu:boost_stacktrace",
    "created_at": "2024-10-27T15:05:55Z",
    "built_at": "2024-10-27T15:48:02Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2bcabac74fc6855c9a09e79eae2c7e12fe70808c",
    "build_started_at": "2024-10-27T15:19:27Z",
    "run_id": "11541636118"
  },
  {
    "hash": "2be34b76d487345b6883227a0b32074345eaf22d",
    "type": "pull_request",
    "pull_request": 4383,
    "label": "dsiganos:fix_bootstrap_unit_tests",
    "created_at": "2024-01-21T13:11:59Z",
    "built_at": "2024-01-21T13:49:42Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2be34b76d487345b6883227a0b32074345eaf22d",
    "build_started_at": "2024-01-21T13:25:04Z",
    "run_id": "7601543694"
  },
  {
    "hash": "2bf65e7de87438ce00c2c16e7925dfcf5060c330",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Peer scoring fix",
    "pull_request": "4786",
    "created_at": "2024-11-04T20:27:23Z",
    "built_at": "2024-11-23T01:19:37Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2bf65e7de87438ce00c2c16e7925dfcf5060c330",
    "build_started_at": "2024-11-22T23:40:48Z",
    "run_id": "11982520283"
  },
  {
    "hash": "2c5815cfbc1132d4fcd353e26b3768ea9565d8f0",
    "type": "pull_request",
    "pull_request": 4296,
    "label": "clemahieu:sucessor_table",
    "created_at": "2023-09-26T13:49:26Z",
    "built_at": "2024-02-20T16:39:53Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2c5815cfbc1132d4fcd353e26b3768ea9565d8f0",
    "build_started_at": "2024-02-20T16:08:44Z",
    "run_id": "7976474907"
  },
  {
    "hash": "2c60504c293a083148a5d3e2aef43b064a82111c",
    "type": "pull_request",
    "pull_request": 4409,
    "label": "gr0vity-dev:prs/fix_unittests_active_transactions.inactive_votes_cache_election_start",
    "created_at": "2024-01-27T09:26:54Z",
    "built_at": "2024-01-27T10:07:01Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2c60504c293a083148a5d3e2aef43b064a82111c",
    "build_started_at": "2024-01-27T09:39:21Z",
    "run_id": "7677795269"
  },
  {
    "hash": "2c6439f094932a3a29a68f3b877074313727cbb6",
    "type": "commit",
    "author": "RickiNano",
    "title": "Add option to generate bootstrap weight files",
    "pull_request": "N/A",
    "created_at": "2024-10-25T20:24:08Z",
    "built_at": "2024-10-29T14:17:32Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2c6439f094932a3a29a68f3b877074313727cbb6",
    "build_started_at": "2024-10-29T13:30:07Z",
    "run_id": "11575259806"
  },
  {
    "hash": "2c6ed183b1eb15d0757b882f2e3898ded5c2b62e",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Pass logger to thread_runner",
    "pull_request": "N/A",
    "created_at": "2024-05-05T18:36:56Z",
    "built_at": "2024-05-14T11:54:59Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2c6ed183b1eb15d0757b882f2e3898ded5c2b62e",
    "build_started_at": "2024-05-14T11:08:37Z",
    "run_id": "9078527518"
  },
  {
    "hash": "2c8c34b680e79374afd6872ad2fb3ae95bda7141",
    "type": "pull_request",
    "pull_request": 3727,
    "label": "clemahieu:block_pipeline",
    "created_at": "2022-02-09T15:28:27Z",
    "built_at": "2023-02-05T22:00:38Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2c8c34b680e79374afd6872ad2fb3ae95bda7141"
  },
  {
    "hash": "2ca2e2d9b22ef4e8fe1347af6d7c9232cdf1a4fe",
    "type": "pull_request",
    "pull_request": 4107,
    "label": "thsfs:remove-udp-test-network-self-discard",
    "created_at": "2023-02-07T14:32:34Z",
    "built_at": "2023-02-07T15:09:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2ca2e2d9b22ef4e8fe1347af6d7c9232cdf1a4fe"
  },
  {
    "hash": "2ca909df5f8edf0025189955d217daddb8ade92d",
    "type": "pull_request",
    "pull_request": 4387,
    "label": "dsiganos:fix_rpc_receivable_unconfirmed",
    "created_at": "2024-01-22T17:13:48Z",
    "built_at": "2024-01-22T17:54:33Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2ca909df5f8edf0025189955d217daddb8ade92d",
    "build_started_at": "2024-01-22T17:26:55Z",
    "run_id": "7615011509"
  },
  {
    "hash": "2cba578576eebfd5c004db8f3a4e177c2f307aa7",
    "type": "pull_request",
    "title": "Telemetry database backend",
    "author": "pwojcikdev",
    "body": "Improved version of stalled #4675 that should be backwards compatible.",
    "draft": false,
    "pull_request": 4694,
    "label": "pwojcikdev:telemetry-database-backend",
    "created_at": "2024-08-06T09:24:05Z",
    "built_at": "2024-08-06T16:50:45Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2cba578576eebfd5c004db8f3a4e177c2f307aa7",
    "build_started_at": "2024-08-06T16:23:45Z",
    "run_id": "10270298674"
  },
  {
    "hash": "2ccba41baeb2a4b487b5709e9a898699b613bd00",
    "type": "commit",
    "created_at": "2023-02-18T12:25:04Z",
    "built_at": "2023-02-18T13:30:37Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2ccba41baeb2a4b487b5709e9a898699b613bd00"
  },
  {
    "hash": "2ce2378a50e69d037f32300b73fd30676834cda8",
    "type": "pull_request",
    "pull_request": 4276,
    "label": "clemahieu:remove_priority_flush",
    "created_at": "2023-09-04T14:45:54Z",
    "built_at": "2023-09-05T08:52:43Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2ce2378a50e69d037f32300b73fd30676834cda8"
  },
  {
    "hash": "2d08704c8b3d42e8038fe90e6e6719f541fff135",
    "type": "commit",
    "created_at": "2024-03-15T11:40:53Z",
    "built_at": "2024-03-15T12:17:40Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2d08704c8b3d42e8038fe90e6e6719f541fff135",
    "build_started_at": "2024-03-15T11:52:51Z",
    "run_id": "8295661667"
  },
  {
    "hash": "2d2e7625c504116c030d69e79710949421914dc3",
    "type": "pull_request",
    "title": "Various cleanups to store classes",
    "author": "clemahieu",
    "body": "Use unqualified names and type inference when possible.\r\n\r\nAdd type aliases for iterators in store classes.\r\n\r\nRename store/final.hpp to store/final_vote.hpp to match names in lmdb and rocksdb backend.",
    "draft": false,
    "pull_request": 4760,
    "label": "clemahieu:store_cleanup",
    "created_at": "2024-10-20T20:16:30Z",
    "built_at": "2024-10-20T20:36:08Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-10-20T20:17:08Z",
    "run_id": "11429316026"
  },
  {
    "hash": "2d5ba7afe0d0c47ac41829223cfb156eec4a06db",
    "type": "pull_request",
    "pull_request": 3727,
    "label": "clemahieu:block_pipeline",
    "created_at": "2022-02-09T15:28:27Z",
    "built_at": "2023-02-05T23:54:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2d5ba7afe0d0c47ac41829223cfb156eec4a06db"
  },
  {
    "hash": "2d711279785199acbe6a7e5e9481cb57d1cd241b",
    "type": "pull_request",
    "pull_request": 4278,
    "label": "pwojcikdev:update-code-sanitizers-wip",
    "created_at": "2023-09-05T16:20:25Z",
    "built_at": "2023-09-05T21:43:24Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2d711279785199acbe6a7e5e9481cb57d1cd241b"
  },
  {
    "hash": "2d8dc01d517b3e29f3d0a75b9ff0791e5e86865f",
    "type": "commit",
    "created_at": "2023-09-14T19:36:32Z",
    "built_at": "2023-09-15T16:09:18Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2d8dc01d517b3e29f3d0a75b9ff0791e5e86865f"
  },
  {
    "hash": "2dce5e273d0d5e2ff4046377e5441ce6cf8eb77e",
    "type": "pull_request",
    "pull_request": 4259,
    "label": "clemahieu:constant_dead_code",
    "created_at": "2023-07-25T14:10:51Z",
    "built_at": "2023-07-25T14:51:11Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2dce5e273d0d5e2ff4046377e5441ce6cf8eb77e"
  },
  {
    "hash": "2dd63458c5d848e47df97696da0f5aaf567cadff",
    "type": "commit",
    "created_at": "2023-04-21T15:14:33Z",
    "built_at": "2023-04-21T16:00:46Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2dd63458c5d848e47df97696da0f5aaf567cadff"
  },
  {
    "hash": "2dd660582983f99e2df0218c31061e125be8be71",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Revert \"Rewrite optimistic scheduler in terms of ledger sets and add ledger set height(account) overload.\"\n\nThis reverts commit 95121403a21fde71cc21728b237c54e8500a0105.\n\n# Conflicts:\n#\tnano/node/backlog_population.cpp\n#\tnano/node/node.cpp",
    "pull_request": "4636",
    "created_at": "2024-05-22T12:29:37Z",
    "built_at": "2024-05-23T07:33:55Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-05-23T07:11:40Z",
    "run_id": "9203759642"
  },
  {
    "hash": "2ddbc6b545403240e42c65e22498456159ac5f79",
    "type": "pull_request",
    "pull_request": 4385,
    "label": "dsiganos:fix_fork_replacement_tally",
    "created_at": "2024-01-22T12:33:40Z",
    "built_at": "2024-01-22T13:09:40Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2ddbc6b545403240e42c65e22498456159ac5f79",
    "build_started_at": "2024-01-22T12:44:17Z",
    "run_id": "7611304800"
  },
  {
    "hash": "2de5816e87e6dad22c337602f2ea5ff52c36886b",
    "type": "commit",
    "created_at": "2024-03-10T20:10:10Z",
    "built_at": "2024-03-10T21:15:22Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2de5816e87e6dad22c337602f2ea5ff52c36886b",
    "build_started_at": "2024-03-10T20:14:43Z",
    "run_id": "8224504096"
  },
  {
    "hash": "2e025fed7e43fccc80b513032187b00fc44a328e",
    "type": "pull_request",
    "title": "Avoid creating temporary inproc channels",
    "author": "pwojcikdev",
    "body": "This avoids allocating a new inproc channel for each generated vote. Also, a bug where fair queue wouldn't clean up expired channels is fixed. ",
    "draft": false,
    "pull_request": 4625,
    "label": "pwojcikdev:vote-generator-inproc",
    "created_at": "2024-05-15T14:43:32Z",
    "built_at": "2024-05-16T09:50:28Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2e025fed7e43fccc80b513032187b00fc44a328e",
    "build_started_at": "2024-05-16T09:22:01Z",
    "run_id": "9109799164"
  },
  {
    "hash": "2e074cb1fbb8a38b6b013f34516d751c44300978",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Adjust config descriptions",
    "pull_request": "N/A",
    "created_at": "2024-10-29T17:06:58Z",
    "built_at": "2024-10-31T14:40:39Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2e074cb1fbb8a38b6b013f34516d751c44300978",
    "build_started_at": "2024-10-31T13:47:32Z",
    "run_id": "11613517190"
  },
  {
    "hash": "2e118dd16eca34210c2ad4deb7b94dc60a366fd5",
    "type": "commit",
    "created_at": "2023-11-07T17:09:24Z",
    "built_at": "2023-11-08T14:50:28Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2e118dd16eca34210c2ad4deb7b94dc60a366fd5",
    "build_started_at": "2023-11-08T14:25:03Z",
    "run_id": "6799598907"
  },
  {
    "hash": "2e1f21b2a132ba287e4466924aefc5d59406c31b",
    "type": "commit",
    "created_at": "2023-03-03T17:45:50Z",
    "built_at": "2023-03-07T21:18:04Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2e1f21b2a132ba287e4466924aefc5d59406c31b"
  },
  {
    "hash": "2e9f5bd1f439b6750f50c73d3cb9531903c3c894",
    "type": "commit",
    "created_at": "2023-06-13T15:27:58Z",
    "built_at": "2023-06-13T16:05:11Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2e9f5bd1f439b6750f50c73d3cb9531903c3c894"
  },
  {
    "hash": "2eb60ab4479dea329831364b52dc7f54a4a26046",
    "type": "pull_request",
    "pull_request": 4471,
    "label": "pwojcikdev:vote-processor-tiers",
    "created_at": "2024-03-08T11:10:27Z",
    "built_at": "2024-03-09T11:03:25Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2eb60ab4479dea329831364b52dc7f54a4a26046",
    "build_started_at": "2024-03-09T10:36:25Z",
    "run_id": "8213953857"
  },
  {
    "hash": "2ebe7182f4f8a042b2b8c5f0fbb2c9716c52289f",
    "type": "pull_request",
    "pull_request": 4188,
    "label": "clemahieu:test_chain_fixes",
    "created_at": "2023-03-20T18:25:52Z",
    "built_at": "2023-03-20T19:16:20Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2ebe7182f4f8a042b2b8c5f0fbb2c9716c52289f"
  },
  {
    "hash": "2ef2038bf695cdc37948a12b17022b51c6ebec21",
    "type": "pull_request",
    "pull_request": 4307,
    "label": "RickiNano:remove-unused-enumerations",
    "created_at": "2023-10-03T17:00:31Z",
    "built_at": "2023-10-03T17:48:39Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2ef2038bf695cdc37948a12b17022b51c6ebec21"
  },
  {
    "hash": "2efbcf270189f4382f8c84bbe026db12162fdf42",
    "type": "pull_request",
    "pull_request": 4185,
    "label": "clemahieu:node_rep_weight_fix",
    "created_at": "2023-03-17T16:42:46Z",
    "built_at": "2023-03-17T17:18:28Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2efbcf270189f4382f8c84bbe026db12162fdf42"
  },
  {
    "hash": "2f01c88490e15bc2891af7d8672bcd5132f93a7d",
    "type": "commit",
    "created_at": "2023-04-05T18:05:19Z",
    "built_at": "2023-04-05T18:54:45Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2f01c88490e15bc2891af7d8672bcd5132f93a7d"
  },
  {
    "hash": "2f1f8955d53984e3d9718b0ec6e253f5695915bc",
    "type": "pull_request",
    "title": "Node configuration auto updater",
    "author": "RickiNano",
    "body": "This pull request introduces a new command line feature `--update_config` , which updates the nodes current configuration by merging custom settings into the latest configuration template. Custom settings will be uncommented in the new configuration, while default values will be commented.\r\nThis feature simplifies the process for node operators to maintain an up-to-date configuration without manually merging the current configuration with the new one.\r\n\r\nFeatures:\r\n* Updates config file with new entries, tables and documentation\r\n* Removes entries that are no longer referenced in code\r\n* Preserves custom values from current configuration\r\n* Formatted output\r\n\r\nLimitations:\r\n* Currently only works with node configuration file but could easily be extended to rpc an log configs\r\n",
    "draft": false,
    "pull_request": 4579,
    "label": "RickiNano:auto_update_config",
    "created_at": "2024-04-20T07:34:06Z",
    "built_at": "2024-04-20T08:00:17Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2f1f8955d53984e3d9718b0ec6e253f5695915bc",
    "build_started_at": "2024-04-20T07:34:56Z",
    "run_id": "8763518629"
  },
  {
    "hash": "2f24a98bb8d52f5441714c058892cb27ef90a0ee",
    "type": "pull_request",
    "pull_request": 4519,
    "label": "clemahieu:confirming_set",
    "created_at": "2024-03-23T22:40:41Z",
    "built_at": "2024-03-24T23:13:33Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2f24a98bb8d52f5441714c058892cb27ef90a0ee",
    "build_started_at": "2024-03-24T22:47:57Z",
    "run_id": "8412660760"
  },
  {
    "hash": "2f35b00ca1a5fbd21dc48ff70f84a1eaf21ef925",
    "type": "commit",
    "created_at": "2024-03-13T12:21:53Z",
    "built_at": null,
    "build_status": "building",
    "docker_tag": null,
    "build_started_at": "2024-03-15T11:52:51Z",
    "run_id": "8295661667"
  },
  {
    "hash": "2f69c60c6776a58795b69a98d276ba699d05526a",
    "type": "commit",
    "created_at": "2024-03-19T09:11:40Z",
    "built_at": "2024-03-19T09:45:22Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2f69c60c6776a58795b69a98d276ba699d05526a",
    "build_started_at": "2024-03-19T09:20:19Z",
    "run_id": "8340495054"
  },
  {
    "hash": "2fa01e22d7c6d117fc0ac184c5ca0c25c0ac471c",
    "type": "commit",
    "author": "RickiNano",
    "title": "Update to RocksDb V9.7.2 (#4753)",
    "pull_request": "4753",
    "created_at": "2024-10-15T21:00:30Z",
    "built_at": "2024-10-15T21:40:11Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2fa01e22d7c6d117fc0ac184c5ca0c25c0ac471c",
    "build_started_at": "2024-10-15T21:12:58Z",
    "run_id": "11354467520"
  },
  {
    "hash": "2fa91852d13a417fc70a61ad266981ae0d8d5c4d",
    "type": "pull_request",
    "title": "Test daemon interrupt handling",
    "author": "pwojcikdev",
    "body": "This adds a system test that ensures correct behavior of daemon interrupt handling. Additionally this cleans up and improves output of the whole systest suite.",
    "draft": false,
    "pull_request": 4563,
    "label": "pwojcikdev:daemon-systests-rebased",
    "created_at": "2024-04-14T20:07:22Z",
    "built_at": "2024-04-15T03:17:15Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2fa91852d13a417fc70a61ad266981ae0d8d5c4d",
    "build_started_at": "2024-04-14T22:18:13Z",
    "run_id": "8682487397"
  },
  {
    "hash": "2fa92c40f7122bc1ef83e7577476095ca7609c73",
    "type": "commit",
    "created_at": "2024-03-23T13:28:24Z",
    "built_at": "2024-03-25T14:02:43Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2fa92c40f7122bc1ef83e7577476095ca7609c73",
    "build_started_at": "2024-03-25T13:29:30Z",
    "run_id": "8420893800"
  },
  {
    "hash": "2fb1affc583b360d4d17423bc6a0a1b514aa3008",
    "type": "pull_request",
    "title": "Optimize election scheduler activate function",
    "author": "pwojcikdev",
    "body": "This reverts some of the changes made during refactoring to block sets. The new versions were doing many redundant database lookups, which started to become a bottleneck.",
    "draft": false,
    "pull_request": 4636,
    "label": "pwojcikdev:revert-activate-develop",
    "created_at": "2024-05-22T12:48:37Z",
    "built_at": "2024-05-22T18:06:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2fb1affc583b360d4d17423bc6a0a1b514aa3008",
    "build_started_at": "2024-05-22T17:39:30Z",
    "run_id": "9195940778"
  },
  {
    "hash": "2fd368a643813165fb817fc957fd8e880fa6fca4",
    "type": "pull_request",
    "pull_request": 4525,
    "label": "pwojcikdev:networking-fixes/io-context-stopping",
    "created_at": "2024-03-27T18:00:21Z",
    "built_at": "2024-03-27T18:47:57Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2fd368a643813165fb817fc957fd8e880fa6fca4",
    "build_started_at": "2024-03-27T18:19:29Z",
    "run_id": "8456718858"
  },
  {
    "hash": "2fd3c6ccff77daf204455cd4979d990226ce1296",
    "type": "pull_request",
    "pull_request": 4109,
    "label": "clemahieu:unit_test_remove_flush",
    "created_at": "2023-02-08T13:24:56Z",
    "built_at": "2023-02-08T14:00:07Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2fd3c6ccff77daf204455cd4979d990226ce1296"
  },
  {
    "hash": "2fef78394b96abf120f5f13420e8753b90d682ae",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge pull request #4780 from pwojcikdev/fix-write-guard\n\nFix database write guard",
    "pull_request": "4780",
    "created_at": "2024-11-04T17:46:57Z",
    "built_at": "2024-11-04T18:58:32Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:2fef78394b96abf120f5f13420e8753b90d682ae",
    "build_started_at": "2024-11-04T18:31:28Z",
    "run_id": "11669726674"
  },
  {
    "hash": "30046491e25fe8b5f009092935e349d704ca1f60",
    "type": "commit",
    "created_at": "2023-03-14T16:46:27Z",
    "built_at": "2023-03-14T17:31:56Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:30046491e25fe8b5f009092935e349d704ca1f60"
  },
  {
    "hash": "301a418e225ad474d9f4e54a9ccb91d2d5ae10cd",
    "type": "pull_request",
    "pull_request": 4347,
    "label": "pwojcikdev:bootstrap-fixes",
    "created_at": "2023-12-01T10:12:34Z",
    "built_at": "2023-12-01T11:02:29Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:301a418e225ad474d9f4e54a9ccb91d2d5ae10cd",
    "build_started_at": "2023-12-01T10:28:14Z",
    "run_id": "7058814499"
  },
  {
    "hash": "303c9ea5c3df3ee0c7865c2cff7574a0e0cb2758",
    "type": "commit",
    "created_at": "2023-02-09T11:53:24Z",
    "built_at": "2023-02-09T12:26:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:303c9ea5c3df3ee0c7865c2cff7574a0e0cb2758"
  },
  {
    "hash": "3045222b11e378aec48f4f099b7c3e5ffb86192f",
    "type": "pull_request",
    "pull_request": 4393,
    "label": "RickiNano:convenience-functions",
    "created_at": "2024-01-24T13:48:09Z",
    "built_at": "2024-01-24T21:34:48Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3045222b11e378aec48f4f099b7c3e5ffb86192f",
    "build_started_at": "2024-01-24T21:06:49Z",
    "run_id": "7646245790"
  },
  {
    "hash": "3048b95fdf2a6abb7311a8075a90e9de7aaf4aa8",
    "type": "pull_request",
    "title": "Database scan improvements",
    "author": "pwojcikdev",
    "body": "This uses iterators for fetching accounts for ascending bootstrap database scan. This significantly reduces the load on the database backend in case of RocksDB.",
    "draft": false,
    "pull_request": 4734,
    "label": "pwojcikdev:database-scan-improvements",
    "created_at": "2024-09-24T14:44:18Z",
    "built_at": null,
    "build_status": "building",
    "docker_tag": null,
    "build_started_at": "2024-09-25T13:49:10Z",
    "run_id": null
  },
  {
    "hash": "30552660601c275c984b7a19358cfba7c5ab5df7",
    "type": "pull_request",
    "pull_request": 4238,
    "label": "clemahieu:scheduling_limiter",
    "created_at": "2023-05-19T01:07:22Z",
    "built_at": "2023-09-03T16:35:20Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:30552660601c275c984b7a19358cfba7c5ab5df7"
  },
  {
    "hash": "3061d0009d58271631caa6087ab5781a2bde8d03",
    "type": "pull_request",
    "pull_request": 4277,
    "label": "clemahieu:start_election_return",
    "created_at": "2023-09-05T10:44:05Z",
    "built_at": "2023-09-05T11:58:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3061d0009d58271631caa6087ab5781a2bde8d03"
  },
  {
    "hash": "3070280aa8418735760f8b6272e5a83ad5d39666",
    "type": "pull_request",
    "title": "Add comment/warning to node::block_confirmed_or_being_confirmed functions",
    "author": "clemahieu",
    "body": "Indicate potentially unexpected behavior with respect to MVCC database transactions.",
    "draft": false,
    "pull_request": 4540,
    "label": "clemahieu:comment-node_being_confirmed",
    "created_at": "2024-04-07T18:11:44Z",
    "built_at": "2024-05-07T11:13:45Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3070280aa8418735760f8b6272e5a83ad5d39666",
    "build_started_at": "2024-05-07T10:44:45Z",
    "run_id": "8983989615"
  },
  {
    "hash": "308f394afe3ea6d540fea730afef65069b2e5daa",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge pull request #4772 from pwojcikdev/prevent-db-on-io-threads\n\nDisallow database operations on network IO threads",
    "pull_request": "4772",
    "created_at": "2024-11-27T16:10:11Z",
    "built_at": "2024-11-27T16:47:17Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:308f394afe3ea6d540fea730afef65069b2e5daa",
    "build_started_at": "2024-11-27T16:18:37Z",
    "run_id": "12054302370"
  },
  {
    "hash": "30a0d1e311b7e18b9cafeb3375135bcf12a938ce",
    "type": "commit",
    "title": "Use memory weight instead of exact weight. (#4555)",
    "pull_request": "4555",
    "created_at": "2024-04-13T19:34:44Z",
    "built_at": "2024-04-13T20:08:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:30a0d1e311b7e18b9cafeb3375135bcf12a938ce",
    "build_started_at": "2024-04-13T19:36:13Z",
    "run_id": "8675844544"
  },
  {
    "hash": "30a2d047bf0df3f5d85d76e14953d48cc6a99dec",
    "type": "pull_request",
    "pull_request": 4482,
    "label": "simpago:rep-weight-table",
    "created_at": "2024-03-12T10:20:34Z",
    "built_at": "2024-03-13T08:58:06Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-13T08:42:04Z",
    "run_id": "8261764682"
  },
  {
    "hash": "30a3cc2462a7083c710f7314dfdaed5c3915312d",
    "type": "commit",
    "created_at": "2024-03-15T23:31:57Z",
    "built_at": "2024-03-18T17:26:11Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:30a3cc2462a7083c710f7314dfdaed5c3915312d",
    "build_started_at": "2024-03-18T16:48:08Z",
    "run_id": "8330437043"
  },
  {
    "hash": "30a6bc583ea4ddec09117e1779b1d116566b9f30",
    "type": "commit",
    "created_at": "2023-10-01T18:57:30Z",
    "built_at": "2023-10-01T19:48:51Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:30a6bc583ea4ddec09117e1779b1d116566b9f30"
  },
  {
    "hash": "30af8b38b026b0d223a04e6230f960fafb8ede16",
    "type": "pull_request",
    "pull_request": 4345,
    "label": "clemahieu:block_checker",
    "created_at": "2023-11-14T12:02:06Z",
    "built_at": "2024-03-19T01:05:37Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-19T00:50:02Z",
    "run_id": "8335768254"
  },
  {
    "hash": "30bf99e91c50e0ba776310fd86748fa6f2f172c1",
    "type": "commit",
    "created_at": "2023-04-03T17:21:11Z",
    "built_at": "2023-04-03T17:55:03Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:30bf99e91c50e0ba776310fd86748fa6f2f172c1"
  },
  {
    "hash": "30c1c8eca8e96b2020c5f55533ab50453f5a2580",
    "type": "commit",
    "author": "dsiganos",
    "title": "Stop using boost::asio::ip::udp::endpoint (#4585)\n\nWe are not using UDP anymore so there is no need to be referring to\r\nboost::asio::ip::udp::endpoint.",
    "pull_request": "4585",
    "created_at": "2024-04-26T16:55:05Z",
    "built_at": "2024-04-26T17:21:30Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:30c1c8eca8e96b2020c5f55533ab50453f5a2580",
    "build_started_at": "2024-04-26T16:55:36Z",
    "run_id": "8851652465"
  },
  {
    "hash": "30d6b4ddc339bfc3b04e35442c3b30b466ccb6ab",
    "type": "pull_request",
    "pull_request": 4250,
    "label": "gr0vity-dev:wip/unified_artifacts_worflow",
    "created_at": "2023-06-22T15:06:28Z",
    "built_at": "2023-07-01T21:15:43Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:30d6b4ddc339bfc3b04e35442c3b30b466ccb6ab"
  },
  {
    "hash": "30f2de0439746e213876a57294b6256abfb9d674",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Vote cache processor (#4631)",
    "pull_request": "4631",
    "created_at": "2024-05-24T08:08:34Z",
    "built_at": "2024-05-24T08:45:40Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:30f2de0439746e213876a57294b6256abfb9d674",
    "build_started_at": "2024-05-24T08:16:29Z",
    "run_id": "9220860791"
  },
  {
    "hash": "310b90a3753d6cdc3b2c31b5bf7f410a8c5f0bf6",
    "type": "pull_request",
    "title": "Fix `rep_self_vote` test",
    "author": "pwojcikdev",
    "body": null,
    "draft": false,
    "pull_request": 4797,
    "label": "pwojcikdev:fix-rep-self-vote-test",
    "created_at": "2024-11-29T22:23:02Z",
    "built_at": "2024-11-29T22:59:22Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:310b90a3753d6cdc3b2c31b5bf7f410a8c5f0bf6",
    "build_started_at": "2024-11-29T22:31:24Z",
    "run_id": "12091235114"
  },
  {
    "hash": "311192822728bc48885409a57156989777e3943b",
    "type": "pull_request",
    "pull_request": 3780,
    "label": "nanocurrency:flow_control_model",
    "created_at": "2022-04-05T08:00:04Z",
    "built_at": "2023-02-04T22:16:21Z",
    "build_status": "fail",
    "docker_tag": ""
  },
  {
    "hash": "311bf685bf6c269a57b7e2d9fe7be864eb7cfba8",
    "type": "commit",
    "title": "Rpc endpoint for election statistics (#4533)",
    "pull_request": "4533",
    "created_at": "2024-04-03T20:24:16Z",
    "built_at": "2024-04-03T20:57:34Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:311bf685bf6c269a57b7e2d9fe7be864eb7cfba8",
    "build_started_at": "2024-04-03T20:25:16Z",
    "run_id": "8545154653"
  },
  {
    "hash": "315b77742c9493c6950ee062b04b001fa6c576f0",
    "type": "commit",
    "created_at": "2024-03-19T12:05:10Z",
    "built_at": "2024-03-20T08:51:57Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:315b77742c9493c6950ee062b04b001fa6c576f0",
    "build_started_at": "2024-03-20T08:13:47Z",
    "run_id": "8355682154"
  },
  {
    "hash": "317f18543905017286569b6591ccec2b76871f46",
    "type": "pull_request",
    "title": "migrate_database_lmdb_to_rocksdb improvements",
    "author": "RickiNano",
    "body": "The `migrate_database_lmdb_to_rocksdb` option is running for a very long time with the current ledger size (almost 200 million blocks). On my local machine it took 65 minutes to complete. Nothing is written on screen during this process and users may think the process has stalled.\r\nThis PR adds some progress feedback. One update for each of the 7 tables that are migrated.\r\nIt also adds a simple disk space check to warn users if they might not have enough space to complete the migration.\r\n~~The current converted RocksDb database is 73 GB, and the warning is given if the system has less than 75GB available.~~\r\nThe warning is given based on the size of the LMDB database that is being migrated. The final RocksDb size is approximately 65% of the LMDB space.",
    "draft": false,
    "pull_request": 4647,
    "label": "RickiNano:lmdb-to-rocksdb",
    "created_at": "2024-06-13T10:47:31Z",
    "built_at": "2024-07-10T16:51:55Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-07-10T16:31:24Z",
    "run_id": "9878001617"
  },
  {
    "hash": "3183fc4d94497c2844efe629f56834a334a874bc",
    "type": "pull_request",
    "pull_request": 4243,
    "label": "pwojcikdev:logging-artifact-hashes",
    "created_at": "2023-05-31T22:33:24Z",
    "built_at": "2023-05-31T23:15:02Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3183fc4d94497c2844efe629f56834a334a874bc"
  },
  {
    "hash": "319b064292a1ccab1fabb01506e3256e1345980a",
    "type": "pull_request",
    "pull_request": 4140,
    "label": "thsfs:load_test_fix",
    "created_at": "2023-02-16T21:02:51Z",
    "built_at": "2023-02-16T21:40:34Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:319b064292a1ccab1fabb01506e3256e1345980a"
  },
  {
    "hash": "319da175d677245d3f3552a53954b74d9d21e51d",
    "type": "pull_request",
    "pull_request": 4289,
    "label": "clemahieu:lmdb_0_9_31",
    "created_at": "2023-09-21T11:28:11Z",
    "built_at": "2023-09-21T18:13:26Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:319da175d677245d3f3552a53954b74d9d21e51d"
  },
  {
    "hash": "31a9e7b73f201798add9aa2ab7cce6871342ebe4",
    "type": "commit",
    "author": "clemahieu",
    "title": "Add missing deque include.",
    "pull_request": "4776",
    "created_at": "2024-10-28T22:31:22Z",
    "built_at": "2024-10-31T03:49:24Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-10-31T03:33:18Z",
    "run_id": "11605646615"
  },
  {
    "hash": "31b88655a0c2351deafd5fa6bed1bbb0100de455",
    "type": "pull_request",
    "pull_request": 4400,
    "label": "dsiganos:avoid_printing_cerr_colors_warning_in_cli_mode",
    "created_at": "2024-01-26T15:54:42Z",
    "built_at": "2024-01-26T16:25:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:31b88655a0c2351deafd5fa6bed1bbb0100de455",
    "build_started_at": "2024-01-26T15:58:30Z",
    "run_id": "7670366309"
  },
  {
    "hash": "31f7f0acb36c81d7947269a22180c59ec598cbed",
    "type": "commit",
    "created_at": "2024-03-22T18:52:43Z",
    "built_at": "2024-03-22T19:23:07Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:31f7f0acb36c81d7947269a22180c59ec598cbed",
    "build_started_at": "2024-03-22T18:54:56Z",
    "run_id": "8395125876"
  },
  {
    "hash": "32014465e23c1ea4366c58cfba775bae1cce6c0f",
    "type": "pull_request",
    "title": "Fixes TSAN issues.",
    "body": "TSAN identified issues in peer_container.tcp_channel_cleanup_works and node.fork_keep",
    "draft": false,
    "pull_request": 4547,
    "label": "clemahieu:tsan_fix",
    "created_at": "2024-04-09T20:56:51Z",
    "built_at": "2024-04-09T21:24:36Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:32014465e23c1ea4366c58cfba775bae1cce6c0f",
    "build_started_at": "2024-04-09T20:59:30Z",
    "run_id": "8622203607"
  },
  {
    "hash": "3218a49c4012c5b8d326f4398624b3210afce375",
    "type": "pull_request",
    "pull_request": 4491,
    "label": "pwojcikdev:networking-fixes-move-network-common",
    "created_at": "2024-03-14T18:45:16Z",
    "built_at": "2024-03-14T19:16:27Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3218a49c4012c5b8d326f4398624b3210afce375",
    "build_started_at": "2024-03-14T18:48:42Z",
    "run_id": "8286061496"
  },
  {
    "hash": "324be978fa0ca9c7c85719616ceb21221a3bd8be",
    "type": "pull_request",
    "title": "Encapsulate ledger cache counts",
    "body": "This is a cleanup PR for encapsulating the various ledger counts in ledger_cache which get new ledger accessors.",
    "draft": false,
    "pull_request": 4528,
    "label": "clemahieu:encapsulate_ledger_cache",
    "created_at": "2024-03-30T16:17:33Z",
    "built_at": "2024-03-30T16:48:44Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:324be978fa0ca9c7c85719616ceb21221a3bd8be",
    "build_started_at": "2024-03-30T16:20:01Z",
    "run_id": "8491955577"
  },
  {
    "hash": "327806b838449bd1316948ea06d0cb1a2b11d5b6",
    "type": "pull_request",
    "pull_request": 4151,
    "label": "pwojcikdev:election-scheduler-stats",
    "created_at": "2023-02-22T20:31:54Z",
    "built_at": "2023-02-22T21:09:20Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:327806b838449bd1316948ea06d0cb1a2b11d5b6"
  },
  {
    "hash": "328bf8c5abf969d11c419355315896543a48f79f",
    "type": "commit",
    "created_at": "2024-03-22T18:16:01Z",
    "built_at": "2024-03-25T14:11:45Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:328bf8c5abf969d11c419355315896543a48f79f",
    "build_started_at": "2024-03-25T13:29:30Z",
    "run_id": "8420893800"
  },
  {
    "hash": "328c340529aee3ea65f3b464b767a740a21e416a",
    "type": "commit",
    "created_at": "2024-03-19T10:45:16Z",
    "built_at": "2024-03-20T08:59:10Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:328c340529aee3ea65f3b464b767a740a21e416a",
    "build_started_at": "2024-03-20T08:13:47Z",
    "run_id": "8355682154"
  },
  {
    "hash": "32a2e4e3d5cefb19c1ff1cd72d914d6e3ef2f6f8",
    "type": "pull_request",
    "pull_request": 4267,
    "label": "clemahieu:remove_signature_threads",
    "created_at": "2023-08-22T12:30:21Z",
    "built_at": "2023-08-22T15:59:10Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:32a2e4e3d5cefb19c1ff1cd72d914d6e3ef2f6f8"
  },
  {
    "hash": "32b151b4156c0f8585c9fbb810eb869d47e46383",
    "type": "commit",
    "created_at": "2023-09-08T11:16:00Z",
    "built_at": "2023-09-08T23:36:40Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:32b151b4156c0f8585c9fbb810eb869d47e46383"
  },
  {
    "hash": "32ba0103ccac42ee4738856c2e330578f6e6c6d8",
    "type": "pull_request",
    "pull_request": 4354,
    "label": "clemahieu:socket_threads",
    "created_at": "2024-01-09T01:21:46Z",
    "built_at": "2024-01-09T11:40:10Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:32ba0103ccac42ee4738856c2e330578f6e6c6d8",
    "build_started_at": "2024-01-09T11:14:52Z",
    "run_id": "7460359616"
  },
  {
    "hash": "32bd188cdeacdd9872c3f93bd06394bd53c359c1",
    "type": "pull_request",
    "pull_request": 4318,
    "label": "clemahieu:election_state_mutex",
    "created_at": "2023-10-26T14:21:12Z",
    "built_at": "2023-10-31T20:28:03Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:32bd188cdeacdd9872c3f93bd06394bd53c359c1",
    "build_started_at": "2023-10-31T19:49:16Z",
    "run_id": "6711726856"
  },
  {
    "hash": "32c9108ec271e2c8e9067a287e56bfce6c6fa464",
    "type": "pull_request",
    "pull_request": 4160,
    "label": "thsfs:inproc_channel_with_message_desserializer",
    "created_at": "2023-02-27T20:25:02Z",
    "built_at": "2023-02-27T21:57:45Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:32c9108ec271e2c8e9067a287e56bfce6c6fa464"
  },
  {
    "hash": "32d265e2c4bafc1474b0d03356106393b2949b21",
    "type": "pull_request",
    "pull_request": 4158,
    "label": "clemahieu:bootstrap_ascending_client",
    "created_at": "2023-02-27T20:15:37Z",
    "built_at": "2023-03-14T02:57:10Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:32d265e2c4bafc1474b0d03356106393b2949b21"
  },
  {
    "hash": "32d583eb92e04d750bb899f51f4af24f659c422e",
    "type": "pull_request",
    "title": "Bound the growth of `election_winner_details` set",
    "author": "pwojcikdev",
    "body": null,
    "draft": false,
    "pull_request": 4720,
    "label": "pwojcikdev:aec-bound-election-winners",
    "created_at": "2024-09-04T19:29:31Z",
    "built_at": "2024-09-04T19:59:35Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-09-04T19:37:17Z",
    "run_id": "10708375423"
  },
  {
    "hash": "32d71600ac6463f1ce0c8a77445001cdbd3460ea",
    "type": "pull_request",
    "title": "Fair queuing for vote processor",
    "body": "Similar to the way it was done for block processing, this implements fair queue for vote processor. Votes are processed in round robin manner from all peers, with higher tier votes having slightly higher priority.",
    "draft": false,
    "pull_request": 4536,
    "label": "pwojcikdev:fair-queuing/vote-processor",
    "created_at": "2024-04-04T14:58:58Z",
    "built_at": "2024-04-05T21:03:29Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:32d71600ac6463f1ce0c8a77445001cdbd3460ea",
    "build_started_at": "2024-04-05T20:38:04Z",
    "run_id": "8575452889"
  },
  {
    "hash": "32ea736711421b0a9c78e14766534168f8580e4d",
    "type": "pull_request",
    "pull_request": 4189,
    "label": "thsfs:fix_cryptopp_includes",
    "created_at": "2023-03-20T21:56:19Z",
    "built_at": "2023-03-20T22:26:53Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:32ea736711421b0a9c78e14766534168f8580e4d"
  },
  {
    "hash": "32f72159351e6b5aaada1c0ffaea8b8909084ac1",
    "type": "pull_request",
    "pull_request": 4168,
    "label": "pwojcikdev:handshake-v2-merged",
    "created_at": "2023-03-03T22:04:06Z",
    "built_at": "2023-03-07T22:46:53Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:32f72159351e6b5aaada1c0ffaea8b8909084ac1"
  },
  {
    "hash": "3303efcb7ff91a61850863035beaed0929fe69d3",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Introduce `message_processor` component",
    "pull_request": "4609",
    "created_at": "2024-04-04T21:35:28Z",
    "built_at": "2024-05-10T13:42:15Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3303efcb7ff91a61850863035beaed0929fe69d3",
    "build_started_at": "2024-05-10T13:16:28Z",
    "run_id": "9032832910"
  },
  {
    "hash": "330856a37883f5e5d4d8dcbf9657df2d2ad92e62",
    "type": "pull_request",
    "pull_request": 4412,
    "label": "pwojcikdev:tracing-4-develop",
    "created_at": "2024-01-30T17:15:41Z",
    "built_at": "2024-02-06T20:34:04Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:330856a37883f5e5d4d8dcbf9657df2d2ad92e62",
    "build_started_at": "2024-02-06T20:08:18Z",
    "run_id": "7805471293"
  },
  {
    "hash": "330d54b7b629b9270f15dbc0a8258f907c6ab74a",
    "type": "pull_request",
    "title": "QT wallet: proper display of state open block in GUI history",
    "author": "SergiySW",
    "body": "State open block should be marked as \"Receive\".\r\nFor open blocks `previous` == 0 and function `nano::ledger_set_any::block_balance ()` will return `std::nullopt` resulting in displaying \"Unknown\" block type.",
    "draft": false,
    "pull_request": 4744,
    "label": "SergiySW:qt_state_open",
    "created_at": "2024-10-06T20:20:47Z",
    "built_at": null,
    "build_status": "building",
    "docker_tag": null,
    "build_started_at": "2024-10-06T20:29:45Z",
    "run_id": null
  },
  {
    "hash": "3332bad6911de5a4f1f9885f67a10cd1f2201d88",
    "type": "commit",
    "created_at": "2024-03-22T18:06:45Z",
    "built_at": "2024-03-25T14:16:57Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3332bad6911de5a4f1f9885f67a10cd1f2201d88",
    "build_started_at": "2024-03-25T13:29:30Z",
    "run_id": "8420893800"
  },
  {
    "hash": "333a5055bc21d48151e2f4980355446e13c372ce",
    "type": "pull_request",
    "title": "Run UPNP port mapping on a dedicated thread",
    "author": "pwojcikdev",
    "body": "This reworks the `port_mapping` component responsible for port redirection configuration to run on a dedicated thread. This should help with node resiliency. \r\n\r\nHowever, the problem I noticed is that testing `port_mapping` component doesn't seem to be part of our CI. There is a comment indicating that this might have been attempted in the past:\r\n> // Long discovery time and fast setup/teardown make this impractical for testing\r\n\r\nI'd recommend that we look into it. Perhaps it can be done as part of our system test suite.",
    "draft": false,
    "pull_request": 4591,
    "label": "pwojcikdev:portmapping-thread",
    "created_at": "2024-04-28T11:49:57Z",
    "built_at": "2024-04-28T12:21:22Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:333a5055bc21d48151e2f4980355446e13c372ce",
    "build_started_at": "2024-04-28T11:53:40Z",
    "run_id": "8867366330"
  },
  {
    "hash": "334a9de57f7ef7b4d3534ed7c9fb1381bced3544",
    "type": "pull_request",
    "pull_request": 4513,
    "label": "gr0vity-dev:wip/nano-nightly_builds",
    "created_at": "2024-03-21T15:35:51Z",
    "built_at": "2024-03-21T16:04:10Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:334a9de57f7ef7b4d3534ed7c9fb1381bced3544",
    "build_started_at": "2024-03-21T15:39:06Z",
    "run_id": "8377740510"
  },
  {
    "hash": "339c8193089213c458b5371250e25961a90a9198",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Limit batch size for block processor (#4655)\n\n* Limited batch sizes for block processor\r\n\r\n* Remove legacy test",
    "pull_request": "4655",
    "created_at": "2024-07-03T11:47:45Z",
    "built_at": "2024-07-03T12:15:18Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:339c8193089213c458b5371250e25961a90a9198",
    "build_started_at": "2024-07-03T11:47:50Z",
    "run_id": "9777247104"
  },
  {
    "hash": "33a3ce0a712c8b9398f2c29a62142fbca8af771a",
    "type": "pull_request",
    "title": "Move assert to a dedicated header",
    "author": "pwojcikdev",
    "body": null,
    "draft": false,
    "pull_request": 4773,
    "label": "pwojcikdev:assert-header",
    "created_at": "2024-10-27T18:14:57Z",
    "built_at": "2024-11-12T00:20:24Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:33a3ce0a712c8b9398f2c29a62142fbca8af771a",
    "build_started_at": "2024-11-11T23:46:33Z",
    "run_id": "11788026013"
  },
  {
    "hash": "33bf1db9e9ec00d63c6bc2ccc59c308bd29e4fea",
    "type": "pull_request",
    "pull_request": 4454,
    "label": "pwojcikdev:block-broadcaster-2",
    "created_at": "2024-03-04T16:29:07Z",
    "built_at": "2024-03-04T23:30:34Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:33bf1db9e9ec00d63c6bc2ccc59c308bd29e4fea",
    "build_started_at": "2024-03-04T23:02:48Z",
    "run_id": "8148229381"
  },
  {
    "hash": "33c4a33d6aea7c9eb29eb6977b5365b5b23d7cd1",
    "type": "pull_request",
    "pull_request": 4246,
    "label": "pwojcikdev:parallel-core-tests",
    "created_at": "2023-06-06T23:26:01Z",
    "built_at": "2023-06-12T12:59:27Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:33c4a33d6aea7c9eb29eb6977b5365b5b23d7cd1"
  },
  {
    "hash": "33d6a5b54cdd8433e00021fb4d784fc2c450c5e0",
    "type": "pull_request",
    "title": "Offload block processor notifications",
    "author": "pwojcikdev",
    "body": "This offloads block processors notifications to be processed on a background thread, so that block processor can continue checking new blocks without waiting for other components to do their work. Checking new blocks requires a write-transaction, while handling `batch_processed` event is done with read-only transaction, both can happen in parallel.\r\n\r\nThe changes here are based on top of https://github.com/nanocurrency/nano-node/pull/4762 which is a necessary prerequisite.",
    "draft": false,
    "pull_request": 4763,
    "label": "pwojcikdev:offload-block-processor-notifications",
    "created_at": "2024-10-22T15:43:39Z",
    "built_at": "2024-10-22T16:16:15Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:33d6a5b54cdd8433e00021fb4d784fc2c450c5e0",
    "build_started_at": "2024-10-22T15:48:15Z",
    "run_id": "11463821752"
  },
  {
    "hash": "33d9f41286f3f610a9cf2ba5f6cf7f85fdc08f2b",
    "type": "pull_request",
    "pull_request": 4173,
    "label": "clemahieu:flatbuffer_version_bump",
    "created_at": "2023-03-06T11:18:55Z",
    "built_at": "2023-03-06T17:30:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:33d9f41286f3f610a9cf2ba5f6cf7f85fdc08f2b"
  },
  {
    "hash": "33f80b3d17a1824820f3b2956a16413e1c243ac3",
    "type": "pull_request",
    "pull_request": 4519,
    "label": "clemahieu:confirming_set",
    "created_at": "2024-03-23T22:40:41Z",
    "built_at": "2024-03-24T22:09:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:33f80b3d17a1824820f3b2956a16413e1c243ac3",
    "build_started_at": "2024-03-24T21:34:39Z",
    "run_id": "8412278557"
  },
  {
    "hash": "342801bcddc46b1bf79cc6f91f6a26adfde33359",
    "type": "commit",
    "author": "clemahieu",
    "title": "Remove unused inclusion of utility.hpp",
    "pull_request": "4776",
    "created_at": "2024-10-28T21:56:44Z",
    "built_at": "2024-10-31T04:02:53Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-10-31T03:33:18Z",
    "run_id": "11605767503"
  },
  {
    "hash": "343cec0c9dc721682f00ca82aba84c50e8288787",
    "type": "pull_request",
    "title": "Avoid creating temporary inproc channels",
    "author": "pwojcikdev",
    "body": "This avoids allocating a new inproc channel for each generated vote. Also, a bug where fair queue wouldn't clean up expired channels is fixed. ",
    "draft": false,
    "pull_request": 4625,
    "label": "pwojcikdev:vote-generator-inproc",
    "created_at": "2024-05-15T14:43:32Z",
    "built_at": "2024-05-16T09:17:37Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:343cec0c9dc721682f00ca82aba84c50e8288787",
    "build_started_at": "2024-05-16T08:48:32Z",
    "run_id": "9109315451"
  },
  {
    "hash": "344e82f64a2a58bb996dafa1fbd755deeb3ace8b",
    "type": "commit",
    "author": "clemahieu",
    "title": "Revert \"Remove by tally index\"\n\nThis reverts commit c734caf4d1ad840df83983e40b86e5d2c1f56a69.",
    "pull_request": "4627",
    "created_at": "2024-05-17T12:59:21Z",
    "built_at": "2024-05-19T09:29:03Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:344e82f64a2a58bb996dafa1fbd755deeb3ace8b",
    "build_started_at": "2024-05-19T09:03:51Z",
    "run_id": "9146481596"
  },
  {
    "hash": "344efdc4f2b962041b6aba1faa207a8073530cbc",
    "type": "commit",
    "created_at": "2023-11-07T16:56:09Z",
    "built_at": "2023-11-08T15:15:43Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2023-11-08T14:25:03Z",
    "run_id": "6799598907"
  },
  {
    "hash": "345e1d8ac67a0fb5b093a972c147ef831183a963",
    "type": "pull_request",
    "pull_request": 4318,
    "label": "clemahieu:election_state_mutex",
    "created_at": "2023-10-26T14:21:12Z",
    "built_at": "2024-01-12T14:37:58Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:345e1d8ac67a0fb5b093a972c147ef831183a963",
    "build_started_at": "2024-01-12T14:10:37Z",
    "run_id": "7503260659"
  },
  {
    "hash": "346067e75d8973b1c7ef85cd7a2c8e6d8118f652",
    "type": "commit",
    "created_at": "2023-04-05T16:10:39Z",
    "built_at": "2023-04-05T17:19:07Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:346067e75d8973b1c7ef85cd7a2c8e6d8118f652"
  },
  {
    "hash": "34735f71bf6676b227d76be444a662e9707e9873",
    "type": "pull_request",
    "title": "migrate_database_lmdb_to_rocksdb improvements",
    "author": "RickiNano",
    "body": "The `migrate_database_lmdb_to_rocksdb` option is running for a very long time with the current ledger size (almost 200 million blocks). On my local machine it took 65 minutes to complete. Nothing is written on screen during this process and users may think the process has stalled.\r\nThis PR adds some progress feedback. One update for each of the 7 tables that are migrated.\r\nIt also adds a simple disk space check to warn users if they might not have enough space to complete the migration.\r\n~~The current converted RocksDb database is 73 GB, and the warning is given if the system has less than 75GB available.~~\r\nThe warning is given based on the size of the LMDB database that is being migrated. The final RocksDb size is approximately 65% of the LMDB space.",
    "draft": false,
    "pull_request": 4647,
    "label": "RickiNano:lmdb-to-rocksdb",
    "created_at": "2024-06-13T10:47:31Z",
    "built_at": "2024-07-02T23:58:20Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:34735f71bf6676b227d76be444a662e9707e9873",
    "build_started_at": "2024-07-02T23:29:48Z",
    "run_id": "9769345288"
  },
  {
    "hash": "3478a7a40398580fc3bd32d74dba3eafe62b32b2",
    "type": "pull_request",
    "pull_request": 4286,
    "label": "clemahieu:nano_store_lib",
    "created_at": "2023-09-19T13:14:01Z",
    "built_at": "2023-09-20T04:26:05Z",
    "build_status": "fail",
    "docker_tag": ""
  },
  {
    "hash": "34829fe535b301314d1d39d1aea6563b5e136d8a",
    "type": "pull_request",
    "pull_request": 4492,
    "label": "clemahieu:flatbuffers_v24_3_7",
    "created_at": "2024-03-15T10:21:46Z",
    "built_at": "2024-03-15T12:00:56Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:34829fe535b301314d1d39d1aea6563b5e136d8a",
    "build_started_at": "2024-03-15T11:30:48Z",
    "run_id": "8295505347"
  },
  {
    "hash": "34a2069bc7117c0eb4e84a8c22d917274cbb5dcf",
    "type": "pull_request",
    "pull_request": 4133,
    "label": "clemahieu:election_occupancy",
    "created_at": "2023-02-15T18:23:49Z",
    "built_at": "2023-02-21T01:32:27Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:34a2069bc7117c0eb4e84a8c22d917274cbb5dcf"
  },
  {
    "hash": "34b6c142b17b85ef59b2499590e35c5779040742",
    "type": "pull_request",
    "title": "Database scan fix",
    "author": "pwojcikdev",
    "body": "There was a typo in one of the classes responsible for iterating over database. This fixes it and also adds more tests.",
    "draft": false,
    "pull_request": 4742,
    "label": "pwojcikdev:database-scan-fixes",
    "created_at": "2024-10-02T15:42:16Z",
    "built_at": "2024-10-02T16:13:59Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:34b6c142b17b85ef59b2499590e35c5779040742",
    "build_started_at": "2024-10-02T15:47:31Z",
    "run_id": "11147129485"
  },
  {
    "hash": "34d7c1ac056349c058af48fa74bcee6313b80ed2",
    "type": "commit",
    "author": "clemahieu",
    "title": "Add bucket that was accidentally removed during refactor of buckets. (#4715)",
    "pull_request": "4715",
    "created_at": "2024-08-27T10:57:31Z",
    "built_at": "2024-08-27T11:30:51Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:34d7c1ac056349c058af48fa74bcee6313b80ed2",
    "build_started_at": "2024-08-27T11:03:13Z",
    "run_id": "10576842207"
  },
  {
    "hash": "352f66a2070e22bb9900abd69f016095c58eb983",
    "type": "commit",
    "created_at": "2023-02-08T12:39:14Z",
    "built_at": "2023-02-08T13:16:51Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:352f66a2070e22bb9900abd69f016095c58eb983"
  },
  {
    "hash": "353b1a8b70746bea935e804c069924e5e3f83b63",
    "type": "commit",
    "author": "clemahieu",
    "title": "Update live network bootstrap weights (#4710)",
    "pull_request": "4710",
    "created_at": "2024-08-20T18:24:30Z",
    "built_at": "2024-08-20T19:02:52Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:353b1a8b70746bea935e804c069924e5e3f83b63",
    "build_started_at": "2024-08-20T18:34:59Z",
    "run_id": "10477250497"
  },
  {
    "hash": "3551af984013e403b9989ec49380fc3d0e35d851",
    "type": "pull_request",
    "title": "Remove tls support",
    "author": "pwojcikdev",
    "body": "Reimplementing TLS (HTTPS) support is unnecessary and against best practices. Support for secure RPC/Websockets can easily be achieved by using a reverse proxy.",
    "draft": false,
    "pull_request": 4646,
    "label": "pwojcikdev:remove-tls-rpc",
    "created_at": "2024-06-02T20:04:58Z",
    "built_at": "2024-06-02T20:42:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3551af984013e403b9989ec49380fc3d0e35d851",
    "build_started_at": "2024-06-02T20:16:21Z",
    "run_id": "9340939894"
  },
  {
    "hash": "358bf03f35e4a99b05d88a6948f3d713b5bff491",
    "type": "commit",
    "created_at": "2023-11-06T19:48:42Z",
    "built_at": "2023-11-06T20:19:17Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:358bf03f35e4a99b05d88a6948f3d713b5bff491",
    "build_started_at": "2023-11-06T19:53:38Z",
    "run_id": "6775822256"
  },
  {
    "hash": "3595953b4d8b01e1e904e819e7f44c6c45f319de",
    "type": "commit",
    "author": "RickiNano",
    "title": "Use RocksDb default options",
    "pull_request": "N/A",
    "created_at": "2024-08-30T15:43:18Z",
    "built_at": "2024-09-25T10:15:25Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3595953b4d8b01e1e904e819e7f44c6c45f319de",
    "build_started_at": "2024-09-25T09:19:52Z",
    "run_id": "11030582966"
  },
  {
    "hash": "35ab9d408f0ba881c55c6766d1fb230f04b36090",
    "type": "commit",
    "created_at": "2024-03-16T19:07:32Z",
    "built_at": "2024-03-18T17:35:21Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:35ab9d408f0ba881c55c6766d1fb230f04b36090",
    "build_started_at": "2024-03-18T16:48:08Z",
    "run_id": "8330437043"
  },
  {
    "hash": "35b0fcdea48c6aeb9d8b1dbfdfb97ba87ee12a5d",
    "type": "pull_request",
    "title": "Exit migration if existing rocksdb ledger found",
    "author": "RickiNano",
    "body": "Halt migration if rocksdb folder already exists instead of deleting it.",
    "draft": false,
    "pull_request": 4778,
    "label": "RickiNano:migration-fix",
    "created_at": "2024-11-02T18:50:07Z",
    "built_at": "2024-11-02T19:53:31Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:35b0fcdea48c6aeb9d8b1dbfdfb97ba87ee12a5d",
    "build_started_at": "2024-11-02T19:26:44Z",
    "run_id": "11645254003"
  },
  {
    "hash": "35cca28da20dbf697d30e0748f068aa60c12a269",
    "type": "pull_request",
    "pull_request": 4111,
    "label": "pwojcikdev:optimistic-elections-2-rebased",
    "created_at": "2023-02-08T18:34:22Z",
    "built_at": "2023-02-23T14:36:22Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:35cca28da20dbf697d30e0748f068aa60c12a269"
  },
  {
    "hash": "35da7e6d8989ee16a48c242ecaa1f4898412bc2b",
    "type": "commit",
    "created_at": "2024-03-22T17:10:28Z",
    "built_at": "2024-03-22T17:45:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:35da7e6d8989ee16a48c242ecaa1f4898412bc2b",
    "build_started_at": "2024-03-22T17:19:57Z",
    "run_id": "8394068316"
  },
  {
    "hash": "3603b5fe87d01fdb2a0312d6ba4c7c867e199cfa",
    "type": "pull_request",
    "pull_request": 4504,
    "label": "pwojcikdev:networking-fixes/handshake-refactor",
    "created_at": "2024-03-19T09:24:42Z",
    "built_at": "2024-03-19T11:43:52Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3603b5fe87d01fdb2a0312d6ba4c7c867e199cfa",
    "build_started_at": "2024-03-19T11:18:09Z",
    "run_id": "8342077620"
  },
  {
    "hash": "360ef3d5646a680ed0d2d78c1680679e8ea594a9",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Use read/write transaction variant in vote generator (#4639)",
    "pull_request": "4639",
    "created_at": "2024-05-23T21:51:21Z",
    "built_at": "2024-05-23T22:23:21Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:360ef3d5646a680ed0d2d78c1680679e8ea594a9",
    "build_started_at": "2024-05-23T21:57:23Z",
    "run_id": "9215373921"
  },
  {
    "hash": "3621d2df32664df0f2842abc81416dc4ccadf152",
    "type": "pull_request",
    "pull_request": 3727,
    "label": "clemahieu:block_pipeline",
    "created_at": "2022-02-09T15:28:27Z",
    "built_at": "2023-02-05T18:37:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3621d2df32664df0f2842abc81416dc4ccadf152"
  },
  {
    "hash": "36724d06c1697cf2c0f6d2b31bf28028f7db6304",
    "type": "pull_request",
    "pull_request": 4306,
    "label": "gr0vity-dev:prs/refactor_act_tx_cemented-cb",
    "created_at": "2023-10-02T19:22:43Z",
    "built_at": "2023-10-02T20:08:18Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:36724d06c1697cf2c0f6d2b31bf28028f7db6304"
  },
  {
    "hash": "367dcad1d7f1bb124d263ac3399b17a8e6daa0c4",
    "type": "pull_request",
    "pull_request": 4239,
    "label": "thsfs:bump-rhel-compatible-linux",
    "created_at": "2023-05-29T22:22:09Z",
    "built_at": "2023-05-29T23:01:09Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:367dcad1d7f1bb124d263ac3399b17a8e6daa0c4"
  },
  {
    "hash": "368a2772f7944aa4623f306fc48b5c5126955c05",
    "type": "pull_request",
    "pull_request": 4316,
    "label": "RickiNano:remove-includes",
    "created_at": "2023-10-19T15:38:21Z",
    "built_at": "2023-10-19T16:39:04Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:368a2772f7944aa4623f306fc48b5c5126955c05",
    "build_started_at": "2023-10-19T15:44:29Z",
    "run_id": "6577037049"
  },
  {
    "hash": "368ce6ea05d3a8f1bf48b72a0dea215846bf9521",
    "type": "pull_request",
    "pull_request": 4485,
    "label": "simpago:rep-cache-min-weight",
    "created_at": "2024-03-12T13:26:39Z",
    "built_at": "2024-03-13T09:15:23Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-13T08:56:40Z",
    "run_id": "8261924035"
  },
  {
    "hash": "368d8e20b8ba5c86de2381fde6ecb1a2dc7baecb",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Use coroutines in tcp listener (#4581)\n\n* Async utils\r\n\r\n* Use coroutines\r\n\r\n* Typo",
    "pull_request": "4581",
    "created_at": "2024-04-24T09:09:41Z",
    "built_at": "2024-04-24T09:42:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:368d8e20b8ba5c86de2381fde6ecb1a2dc7baecb",
    "build_started_at": "2024-04-24T09:15:31Z",
    "run_id": "8814128227"
  },
  {
    "hash": "371f267b9f0f2f2bcac86dc9aa9a2fcae3d7feac",
    "type": "pull_request",
    "pull_request": 4251,
    "label": "brandon-bb:develop",
    "created_at": "2023-06-23T20:57:59Z",
    "built_at": "2023-06-23T23:11:55Z",
    "build_status": "fail",
    "docker_tag": ""
  },
  {
    "hash": "372c321a32ee291a2d636ba0b340d725b1ee574d",
    "type": "pull_request",
    "title": "Internal node io context",
    "author": "pwojcikdev",
    "body": "Currently all nodes, rpc and ipc servers share common IO context. This PR changes it, so that each node owns and runs its own io_context. This ensures that any io operations scheduled to run using that executor can't outlive the node itself. This greatly simplifies system design.\r\n\r\nIt's likely that this will uncover many race conditions in tests. The most obvious ones should already be fixed, but please keep in mind that if a test starts failing after this PR, it likely wasn't fully correct to start with. ",
    "draft": false,
    "pull_request": 4618,
    "label": "pwojcikdev:node-io-context-6",
    "created_at": "2024-05-13T13:49:29Z",
    "built_at": "2024-05-13T14:19:33Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:372c321a32ee291a2d636ba0b340d725b1ee574d",
    "build_started_at": "2024-05-13T13:53:18Z",
    "run_id": "9064146647"
  },
  {
    "hash": "372c53c3166110189e97b5bfad7a9692423f325a",
    "type": "pull_request",
    "title": "Bootstrap weights in plain text",
    "author": "RickiNano",
    "body": "Replaces the binary file with embedded bootstrap weight in plain text.\r\nThe weight values and max block counts in this PR are from 14-08-2024",
    "draft": false,
    "pull_request": 4703,
    "label": "RickiNano:bootstrap-weights",
    "created_at": "2024-08-14T16:45:07Z",
    "built_at": "2024-08-15T08:51:46Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:372c53c3166110189e97b5bfad7a9692423f325a",
    "build_started_at": "2024-08-15T08:24:48Z",
    "run_id": "10401005000"
  },
  {
    "hash": "37359c5f2aa871e2ae7be75e7820bc204777a41d",
    "type": "pull_request",
    "pull_request": 4269,
    "label": "clemahieu:stats_lasy_time_sampling",
    "created_at": "2023-08-30T10:41:04Z",
    "built_at": "2023-08-30T17:31:01Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:37359c5f2aa871e2ae7be75e7820bc204777a41d"
  },
  {
    "hash": "37482cf51c3f81a36d2286f998a0a5fc3ee316ab",
    "type": "commit",
    "created_at": "2023-05-28T13:16:09Z",
    "built_at": "2023-06-21T17:35:29Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:37482cf51c3f81a36d2286f998a0a5fc3ee316ab"
  },
  {
    "hash": "37484b68653b54c22c73b2d6a48ab4ef7a8f838c",
    "type": "pull_request",
    "title": "Max election age precision",
    "body": "`max_election_age` is currently being casted as `std::chrono::seconds` which causes the value to be rounded to nearest second. This pr changes it to use `double` and returns the value with 2 decimals.\r\nIt's unfortunate that I did not notice this issue in the original PR.\r\nThe unit test is also updated to test that both election age values are greater than zero. On my machine they are 0.09 seconds during unit test.\r\nI also implemented the syntax Colin suggested for `oldest_election_start` to avoid the if statement",
    "draft": false,
    "pull_request": 4549,
    "label": "RickiNano:max-age-decimals",
    "created_at": "2024-04-10T06:10:14Z",
    "built_at": "2024-04-10T08:20:09Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:37484b68653b54c22c73b2d6a48ab4ef7a8f838c",
    "build_started_at": "2024-04-10T07:54:46Z",
    "run_id": "8627843624"
  },
  {
    "hash": "378752165253648a7a345898e26f806304b171c7",
    "type": "pull_request",
    "pull_request": 4476,
    "label": "pwojcikdev:fair-queuing-3",
    "created_at": "2024-03-10T19:14:44Z",
    "built_at": "2024-03-14T18:02:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:378752165253648a7a345898e26f806304b171c7",
    "build_started_at": "2024-03-14T17:37:51Z",
    "run_id": "8285142816"
  },
  {
    "hash": "378e69bb168fe4f5ee549291f839a3295d2b6acb",
    "type": "pull_request",
    "title": "Fair queuing for vote processor",
    "body": "Similar to the way it was done for block processing, this implements fair queue for vote processor. Votes are processed in round robin manner from all peers, with higher tier votes having slightly higher priority.",
    "draft": false,
    "pull_request": 4536,
    "label": "pwojcikdev:fair-queuing/vote-processor",
    "created_at": "2024-04-04T14:58:58Z",
    "built_at": "2024-04-07T18:13:21Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:378e69bb168fe4f5ee549291f839a3295d2b6acb",
    "build_started_at": "2024-04-07T17:45:22Z",
    "run_id": "8590538788"
  },
  {
    "hash": "37a1a825ecc2d447e587b229a21feb9b649dc165",
    "type": "pull_request",
    "title": "Cementing rate limiter",
    "author": "pwojcikdev",
    "body": "Part of bounded backlog PR https://github.com/nanocurrency/nano-node/pull/4787 that adds cementing rate limiter. This is not expected to be exposed to end-users but is necessary for inducing backlog during testing to test the bounded backlog behavior.",
    "draft": false,
    "pull_request": 4789,
    "label": "pwojcikdev:cementing-rate-limiter-pr",
    "created_at": "2024-11-25T15:55:20Z",
    "built_at": "2024-11-26T18:45:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:37a1a825ecc2d447e587b229a21feb9b649dc165",
    "build_started_at": "2024-11-26T18:18:21Z",
    "run_id": "12036658889"
  },
  {
    "hash": "37a27400f1d40ddb9806cd9f02f057a37bf760d6",
    "type": "commit",
    "created_at": "2024-03-19T11:18:49Z",
    "built_at": "2024-03-20T09:10:03Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:37a27400f1d40ddb9806cd9f02f057a37bf760d6",
    "build_started_at": "2024-03-20T08:13:47Z",
    "run_id": "8355682154"
  },
  {
    "hash": "37dbc3c7780bfcfccf3e515d1bf651f88776800e",
    "type": "commit",
    "author": "clemahieu",
    "title": "Merge pull request #4632 from clemahieu/priority_sorting_cleanup\n\nClean up priority scheduler bucket look ups",
    "pull_request": "4632",
    "created_at": "2024-05-21T09:44:31Z",
    "built_at": "2024-05-21T10:14:57Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:37dbc3c7780bfcfccf3e515d1bf651f88776800e",
    "build_started_at": "2024-05-21T09:45:29Z",
    "run_id": "9172540863"
  },
  {
    "hash": "37ee2203d7ba22f689dcfccac9e410c20b9445fd",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Remove bootstrap rpc tests",
    "pull_request": "4777",
    "created_at": "2024-10-29T18:39:37Z",
    "built_at": "2024-10-31T14:59:23Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:37ee2203d7ba22f689dcfccac9e410c20b9445fd",
    "build_started_at": "2024-10-31T13:47:32Z",
    "run_id": "11613880269"
  },
  {
    "hash": "37f4f5c2d6fb385d62a72603ad21385b2cb3db50",
    "type": "pull_request",
    "title": "Convert store iterators to variants rather than using polymorphism.",
    "author": "clemahieu",
    "body": "This converts the store iterators from version that use polymorphism to using std::variant.\r\n\r\nThe primary drivers for this change is to simplify and allow more complex iterators to be created where this was previously fairly difficult to do.\r\n\r\nThe iterators are separated in the 3 parts:\r\n- The base database iterators LMDB/RocksDB that use the library's native data type, MDB_val/Slice.\r\n- A variant database iterator that can hold any of the raw database iterators and adapts the native database type to std::span<uint8_t>\r\n- A strong-typed database iterator that mirrors existing iterator behavior with strong typing for key/value pairs.\r\n\r\nThe iterators are bi-directional with a sentinel value to signify end of iteration. The iterators are also circular so after reaching the end-sentinel value, further incrementing will wrap around to the beginning, or decrementing will position the iterator at the last key/value.\r\n\r\nUsing std::variant also eliminates heap allocations when constructing iterators which can improve performance in some circumstances.",
    "draft": false,
    "pull_request": 4759,
    "label": "clemahieu:store_iterator_cleanup",
    "created_at": "2024-10-20T19:24:20Z",
    "built_at": "2024-10-27T01:29:00Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:37f4f5c2d6fb385d62a72603ad21385b2cb3db50",
    "build_started_at": "2024-10-27T00:58:26Z",
    "run_id": "11536298610"
  },
  {
    "hash": "3805e36b5a276ba622734dffd502e0abca7acd3f",
    "type": "pull_request",
    "pull_request": 4412,
    "label": "pwojcikdev:tracing-4-develop",
    "created_at": "2024-01-30T17:15:41Z",
    "built_at": "2024-02-01T18:38:24Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3805e36b5a276ba622734dffd502e0abca7acd3f",
    "build_started_at": "2024-02-01T18:12:35Z",
    "run_id": "7745744022"
  },
  {
    "hash": "38b23918820038d417b4622e0bd2c7ed3135fa5a",
    "type": "pull_request",
    "pull_request": 4486,
    "label": "clemahieu:ledger_view",
    "created_at": "2024-03-12T14:33:24Z",
    "built_at": "2024-03-21T18:58:20Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-21T18:41:38Z",
    "run_id": "8380160282"
  },
  {
    "hash": "38c0c347e4873ca022429d000c40fd91120ef768",
    "type": "commit",
    "created_at": "2024-02-01T15:33:29Z",
    "built_at": "2024-02-01T16:03:28Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:38c0c347e4873ca022429d000c40fd91120ef768",
    "build_started_at": "2024-02-01T15:34:57Z",
    "run_id": "7743734697"
  },
  {
    "hash": "38ca13f200ec8820f34d9ad8c3318dca37dadea1",
    "type": "pull_request",
    "pull_request": 4457,
    "label": "clemahieu:remove_could_fit",
    "created_at": "2024-03-05T11:23:51Z",
    "built_at": "2024-03-05T11:57:10Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:38ca13f200ec8820f34d9ad8c3318dca37dadea1",
    "build_started_at": "2024-03-05T11:29:32Z",
    "run_id": "8155508967"
  },
  {
    "hash": "38ea6b629a71819155e86a6719cab81888787185",
    "type": "commit",
    "created_at": "2023-08-30T16:03:35Z",
    "built_at": "2023-08-31T10:03:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:38ea6b629a71819155e86a6719cab81888787185"
  },
  {
    "hash": "3913d98f85fa0a8416902aa883fc846c38eb99e4",
    "type": "pull_request",
    "pull_request": 4133,
    "label": "clemahieu:election_occupancy",
    "created_at": "2023-02-15T18:23:49Z",
    "built_at": "2023-02-16T14:58:28Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3913d98f85fa0a8416902aa883fc846c38eb99e4"
  },
  {
    "hash": "3950ef87c63ad527083c5f26dbb2962f451040e4",
    "type": "pull_request",
    "title": "Fix handling of `gap_previous`",
    "author": "pwojcikdev",
    "body": "It seems that the legacy bootstrap interferes with ascending bootstrap when handling `gap_previous` block result. This modifies the check, so that it's only triggered for live traffic (where it indicates that the account has some recent activity but we're still missing dependencies).",
    "draft": false,
    "pull_request": 4696,
    "label": "pwojcikdev:bootstrap-gap-previous-fix",
    "created_at": "2024-08-07T14:49:04Z",
    "built_at": "2024-08-07T19:48:58Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3950ef87c63ad527083c5f26dbb2962f451040e4",
    "build_started_at": "2024-08-07T19:21:20Z",
    "run_id": "10290454331"
  },
  {
    "hash": "396548e31ccc9792ac6b236167c43bf861b98611",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Rename stats",
    "pull_request": "N/A",
    "created_at": "2024-10-29T16:49:42Z",
    "built_at": "2024-10-31T15:12:03Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:396548e31ccc9792ac6b236167c43bf861b98611",
    "build_started_at": "2024-10-31T13:47:32Z",
    "run_id": "11614087438"
  },
  {
    "hash": "397ad79aa837b0a06e95e6c1250c5befa9687c17",
    "type": "pull_request",
    "title": "Traffic shaping",
    "author": "pwojcikdev",
    "body": "This is a draft PR for an ongoing work that overhauls how outgoing traffic is handled and prioritized. This will significantly improve how the node handles network congestion, which is extremely important during spam.\r\n\r\nDepends on PRs:\r\nhttps://github.com/nanocurrency/nano-node/pull/4784",
    "draft": true,
    "pull_request": 4786,
    "label": "pwojcikdev:traffic-shaping-pr",
    "created_at": "2024-11-18T19:43:02Z",
    "built_at": "2024-12-16T22:17:22Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:397ad79aa837b0a06e95e6c1250c5befa9687c17",
    "build_started_at": "2024-12-16T21:47:32Z",
    "run_id": "12361886130"
  },
  {
    "hash": "39af74a3fa001483fce3fb662e2fc64125da3104",
    "type": "pull_request",
    "title": "Cementing fixes",
    "author": "pwojcikdev",
    "body": "Builds on https://github.com/nanocurrency/nano-node/pull/4720",
    "draft": false,
    "pull_request": 4722,
    "label": "pwojcikdev:fix-cementing",
    "created_at": "2024-09-05T15:25:12Z",
    "built_at": "2024-09-05T18:53:13Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:39af74a3fa001483fce3fb662e2fc64125da3104",
    "build_started_at": "2024-09-05T18:23:12Z",
    "run_id": "10726021510"
  },
  {
    "hash": "39d2c658efac88b0c18e066f1deb2d600d10e053",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Adjust `tcp_listener` logging verbosity (#4674)",
    "pull_request": "4674",
    "created_at": "2024-07-07T14:30:41Z",
    "built_at": "2024-07-07T15:05:30Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:39d2c658efac88b0c18e066f1deb2d600d10e053",
    "build_started_at": "2024-07-07T14:36:32Z",
    "run_id": "9828110213"
  },
  {
    "hash": "39f45284d6f7a0ad4f2af485dac6ab1c233388bd",
    "type": "pull_request",
    "title": "Node configuration auto updater",
    "author": "RickiNano",
    "body": "This pull request introduces a new command line feature `--update_config` , which updates the nodes current configuration by merging custom settings into the latest configuration template. Custom settings will be uncommented in the new configuration, while default values will be commented.\r\nThis feature simplifies the process for node operators to maintain an up-to-date configuration without manually merging the current configuration with the new one.\r\n\r\nFeatures:\r\n* Updates config file with new entries, tables and documentation\r\n* Removes entries that are no longer referenced in code\r\n* Preserves custom values from current configuration\r\n* Formatted output\r\n\r\nLimitations:\r\n* Currently only works with node configuration file but could easily be extended to rpc an log configs\r\n",
    "draft": false,
    "pull_request": 4579,
    "label": "RickiNano:auto_update_config",
    "created_at": "2024-04-20T07:34:06Z",
    "built_at": "2024-04-24T16:49:12Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:39f45284d6f7a0ad4f2af485dac6ab1c233388bd",
    "build_started_at": "2024-04-24T16:20:12Z",
    "run_id": "8819884177"
  },
  {
    "hash": "3a0bfaa633cff342dd6f048496acd2ccc75aeaf4",
    "type": "pull_request",
    "pull_request": 4131,
    "label": "simpago:clear-unchecked-table",
    "created_at": "2023-02-15T13:24:53Z",
    "built_at": "2023-05-05T21:03:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3a0bfaa633cff342dd6f048496acd2ccc75aeaf4"
  },
  {
    "hash": "3a496cbaca2cd2cfb6370907d44ba85311dc1a59",
    "type": "commit",
    "created_at": "2023-02-28T13:02:15Z",
    "built_at": "2023-02-28T13:34:38Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3a496cbaca2cd2cfb6370907d44ba85311dc1a59"
  },
  {
    "hash": "3a6a8c376458e07fbd3cfcf8a7d7545aca7805d9",
    "type": "pull_request",
    "pull_request": 4485,
    "label": "simpago:rep-cache-min-weight",
    "created_at": "2024-03-12T13:26:39Z",
    "built_at": "2024-03-19T06:52:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3a6a8c376458e07fbd3cfcf8a7d7545aca7805d9",
    "build_started_at": "2024-03-19T06:12:09Z",
    "run_id": "8338402619"
  },
  {
    "hash": "3a7fbb95f6ebfaa8a264d0e1b26d8254693b6207",
    "type": "pull_request",
    "pull_request": 4481,
    "label": "clemahieu:remove_root_exists",
    "created_at": "2024-03-12T00:46:00Z",
    "built_at": "2024-03-12T01:28:32Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3a7fbb95f6ebfaa8a264d0e1b26d8254693b6207",
    "build_started_at": "2024-03-12T00:59:11Z",
    "run_id": "8241927781"
  },
  {
    "hash": "3aa357d2523817ea07136fd32b073ad266efcdec",
    "type": "commit",
    "author": "gr0vity-dev",
    "title": "During release process, create pull request to increment major version on instead of a direct commit (#4380)\n\n* remove unused section\r\n\r\n* Create pull request to increment major version on instead of a direct commit\r\n\r\n- develop branch is protected, so the workflow create a PR instead of a direct commit\r\n\r\n* fix : reset changes before preparing the release branch\r\n\r\n- reset local changes made to MAJOR_VERSION before pushing to releases\r\n\r\n---------\r\n\r\nCo-authored-by: gr0vity-dev <homebot@users.noreply.github.com>\r\nCo-authored-by: gr0vity-dev <gr0vity-dev@mail.void>",
    "pull_request": "4380",
    "created_at": "2024-05-06T11:34:42Z",
    "built_at": "2024-05-06T12:02:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3aa357d2523817ea07136fd32b073ad266efcdec",
    "build_started_at": "2024-05-06T11:34:48Z",
    "run_id": "8968418400"
  },
  {
    "hash": "3ab03dce35c4a4a6632f0035f9cdde81a9252da8",
    "type": "pull_request",
    "pull_request": 4050,
    "label": "thsfs:valgrind_workflow",
    "created_at": "2023-01-14T02:48:52Z",
    "built_at": "2023-02-04T22:40:48Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3ab03dce35c4a4a6632f0035f9cdde81a9252da8"
  },
  {
    "hash": "3ab0ecc6009c763a98d624bee0ffbf4a729e8cd9",
    "type": "pull_request",
    "title": "Link boost stacktrace appropriately for line information.",
    "author": "clemahieu",
    "body": "The previous code was overcomplicating a relatively straightforward requirement to link against librt and libdynamic to get symbolic stacktraces.",
    "draft": false,
    "pull_request": 4771,
    "label": "clemahieu:boost_stacktrace",
    "created_at": "2024-10-27T15:05:55Z",
    "built_at": "2024-10-28T16:50:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3ab0ecc6009c763a98d624bee0ffbf4a729e8cd9",
    "build_started_at": "2024-10-28T16:20:51Z",
    "run_id": "11558229761"
  },
  {
    "hash": "3ae057090c2e248e4a027cfa1b530605020a29d3",
    "type": "pull_request",
    "pull_request": 4215,
    "label": "clemahieu:throttle_tuning",
    "created_at": "2023-04-19T15:37:21Z",
    "built_at": "2023-04-20T15:32:25Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3ae057090c2e248e4a027cfa1b530605020a29d3"
  },
  {
    "hash": "3af4bdd9171b6af45c480c08f8c06ba1a524b635",
    "type": "pull_request",
    "title": "Offload vote cache lookup to a separate thread",
    "author": "pwojcikdev",
    "body": "This moves processing of cached votes away from congested election schedulers threads.",
    "draft": false,
    "pull_request": 4631,
    "label": "pwojcikdev:vote-cache-processor",
    "created_at": "2024-05-20T10:55:51Z",
    "built_at": "2024-05-20T13:00:52Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3af4bdd9171b6af45c480c08f8c06ba1a524b635",
    "build_started_at": "2024-05-20T12:34:56Z",
    "run_id": "9158766205"
  },
  {
    "hash": "3afdcd5b2b54d0389e9af22a923ac930c28f9f47",
    "type": "pull_request",
    "pull_request": 4516,
    "label": "clemahieu:websocket_vote_code",
    "created_at": "2024-03-22T17:33:30Z",
    "built_at": "2024-03-22T18:15:37Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3afdcd5b2b54d0389e9af22a923ac930c28f9f47",
    "build_started_at": "2024-03-22T17:49:16Z",
    "run_id": "8394398238"
  },
  {
    "hash": "3b118742208a66cec15eae91bfdbe3742592837e",
    "type": "pull_request",
    "pull_request": 4256,
    "label": "gr0vity-dev:prs/unified_artifacts_worflow",
    "created_at": "2023-07-03T18:42:25Z",
    "built_at": "2023-07-11T20:07:36Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3b118742208a66cec15eae91bfdbe3742592837e"
  },
  {
    "hash": "3b22533c0ccd6578f52a3ea8f995c9e71f03d410",
    "type": "commit",
    "created_at": "2023-10-04T11:55:36Z",
    "built_at": "2023-10-04T12:55:20Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3b22533c0ccd6578f52a3ea8f995c9e71f03d410"
  },
  {
    "hash": "3b4b6a4fa121040f3811f2af12f3f5b800bcd0ab",
    "type": "pull_request",
    "pull_request": 3844,
    "label": "CathalT:ignore-asan-warnings",
    "created_at": "2022-06-20T22:42:42Z",
    "built_at": "2023-02-04T22:44:49Z",
    "build_status": "fail",
    "docker_tag": ""
  },
  {
    "hash": "3b57c1f5f9ddd9bd45e2b744c7433dd67f597122",
    "type": "commit",
    "created_at": "2024-01-09T16:48:00Z",
    "built_at": "2024-01-09T17:16:35Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3b57c1f5f9ddd9bd45e2b744c7433dd67f597122",
    "build_started_at": "2024-01-09T16:50:19Z",
    "run_id": "7464212153"
  },
  {
    "hash": "3b775c5a49ae595e68cc5d0822c5034ecfceab17",
    "type": "commit",
    "created_at": "2023-04-27T22:46:42Z",
    "built_at": "2023-06-21T17:39:01Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3b775c5a49ae595e68cc5d0822c5034ecfceab17"
  },
  {
    "hash": "3b7d58d0cda1d1d3cf1b4a55454a3cb1bec68f52",
    "type": "pull_request",
    "pull_request": 4319,
    "label": "clemahieu:rocksdb_8_6_7",
    "created_at": "2023-10-31T12:13:37Z",
    "built_at": "2023-10-31T13:13:43Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3b7d58d0cda1d1d3cf1b4a55454a3cb1bec68f52",
    "build_started_at": "2023-10-31T12:21:55Z",
    "run_id": "6706398160"
  },
  {
    "hash": "3baac25d88ab137c98e8e3c0a342213a6c4ee33a",
    "type": "pull_request",
    "pull_request": 4437,
    "label": "dsiganos:cleanup_stop_of_components",
    "created_at": "2024-02-17T15:58:57Z",
    "built_at": "2024-02-17T18:39:32Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3baac25d88ab137c98e8e3c0a342213a6c4ee33a",
    "build_started_at": "2024-02-17T18:15:00Z",
    "run_id": "7943455753"
  },
  {
    "hash": "3bda9a2eed28ec5c518fdfc36c5c178df2c83596",
    "type": "pull_request",
    "pull_request": 4511,
    "label": "xiaoxianBoy:fix-typos",
    "created_at": "2024-03-21T05:21:18Z",
    "built_at": "2024-03-21T06:17:38Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3bda9a2eed28ec5c518fdfc36c5c178df2c83596",
    "build_started_at": "2024-03-21T05:25:17Z",
    "run_id": "8370130206"
  },
  {
    "hash": "3bee5d30850ea64b4620ee7ea133e56b0df13230",
    "type": "commit",
    "created_at": "2023-04-24T14:45:04Z",
    "built_at": "2023-06-21T18:03:18Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3bee5d30850ea64b4620ee7ea133e56b0df13230"
  },
  {
    "hash": "3bffc6990eebdb68a196ecdd4632a12f97089593",
    "type": "commit",
    "created_at": "2023-02-15T10:03:08Z",
    "built_at": "2023-02-15T10:47:02Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3bffc6990eebdb68a196ecdd4632a12f97089593"
  },
  {
    "hash": "3c671305a0b2bef3215b9933b9eb2669b873db5e",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Revert account iterator (#4706)",
    "pull_request": "4706",
    "created_at": "2024-08-17T07:24:28Z",
    "built_at": "2024-08-17T07:56:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3c671305a0b2bef3215b9933b9eb2669b873db5e",
    "build_started_at": "2024-08-17T07:28:21Z",
    "run_id": "10430558847"
  },
  {
    "hash": "3ca0480cde19764f6c9929c6e84e5a63e13fa44f",
    "type": "commit",
    "author": "clemahieu",
    "title": "Merge pull request #4770 from clemahieu/lmdb_iterator_leak",
    "pull_request": "4770",
    "created_at": "2024-10-27T16:34:57Z",
    "built_at": "2024-10-27T17:18:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3ca0480cde19764f6c9929c6e84e5a63e13fa44f",
    "build_started_at": "2024-10-27T16:41:00Z",
    "run_id": "11542205361"
  },
  {
    "hash": "3ce52fc49af80dbb73187fe903da1e7b3c0a719d",
    "type": "commit",
    "created_at": "2024-03-06T11:58:46Z",
    "built_at": "2024-03-06T18:10:23Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3ce52fc49af80dbb73187fe903da1e7b3c0a719d",
    "build_started_at": "2024-03-06T17:44:51Z",
    "run_id": "8176435828"
  },
  {
    "hash": "3d14f1e46d960d255355da1fcf3c26f1bfe907e2",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Block processor batch rolled back event",
    "pull_request": "4791",
    "created_at": "2024-10-26T21:57:16Z",
    "built_at": "2024-11-26T21:17:34Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3d14f1e46d960d255355da1fcf3c26f1bfe907e2",
    "build_started_at": "2024-11-26T20:41:54Z",
    "run_id": "12038788111"
  },
  {
    "hash": "3d18d0b2c18660288decad801d225760da6cf9b4",
    "type": "pull_request",
    "title": "Add New Bucket for Specific Amount Range",
    "author": "gr0vity-dev",
    "body": "Related Issue: #4472\r\n\r\n**Description:**\r\n\r\nThis PR adds an additional bucket for amounts between >Ӿ0.000001 and Ӿ0.0003. The implementation details are as follows:\r\n\r\n    - Amounts of Ӿ0.000001 or less would still fall in the very first bucket.\r\n    - More precisely amounts above Ӿ0.00000121 and below Ӿ0.000309 will fall in this new bucket.\r\n    - All existing buckets remain unchanged to minimize the impact of bucket reallocation.\r\n\r\nThe reasoning behind adding an additional bucket is to ensure that all existing buckets retain their current allocation criteria.\r\n",
    "draft": false,
    "pull_request": 4661,
    "label": "gr0vity-dev:prs/additional_bucket",
    "created_at": "2024-06-28T11:23:05Z",
    "built_at": "2024-06-28T12:18:33Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3d18d0b2c18660288decad801d225760da6cf9b4",
    "build_started_at": "2024-06-28T11:51:26Z",
    "run_id": "9711959817"
  },
  {
    "hash": "3d50471725c2a202458f6858902ecc2eab912eb6",
    "type": "pull_request",
    "pull_request": 4362,
    "label": "brandon-bb:polymorph",
    "created_at": "2024-01-16T17:22:06Z",
    "built_at": "2024-01-16T17:52:07Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3d50471725c2a202458f6858902ecc2eab912eb6",
    "build_started_at": "2024-01-16T17:27:13Z",
    "run_id": "7545287291"
  },
  {
    "hash": "3d681c6981a62809e2812ab4f6747b30bdd10da0",
    "type": "pull_request",
    "pull_request": 4486,
    "label": "clemahieu:ledger_view",
    "created_at": "2024-03-12T14:33:24Z",
    "built_at": "2024-03-27T13:10:00Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-27T12:53:45Z",
    "run_id": "8452081767"
  },
  {
    "hash": "3d6e181bd11e18a27b9994572714da46f64a5564",
    "type": "pull_request",
    "title": "Database scan improvements",
    "author": "pwojcikdev",
    "body": "This uses iterators for fetching accounts for ascending bootstrap database scan. This significantly reduces the load on the database backend in case of RocksDB.",
    "draft": false,
    "pull_request": 4734,
    "label": "pwojcikdev:database-scan-improvements",
    "created_at": "2024-09-24T14:44:18Z",
    "built_at": "2024-09-24T15:16:19Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3d6e181bd11e18a27b9994572714da46f64a5564",
    "build_started_at": "2024-09-24T14:45:53Z",
    "run_id": "11016244255"
  },
  {
    "hash": "3d72ae91f138fbb4b6bd42fef8f164bd16956696",
    "type": "pull_request",
    "title": "Disallow database operations on network IO threads",
    "author": "pwojcikdev",
    "body": "Doing synchronous disk IO on network IO threads can introduce very long delays, blocking network thread pool. This adds an assert that will detect this.\r\n\r\nCurrently this doesn't pass tests nicely because legacy bootstrap trips the assert.",
    "draft": false,
    "pull_request": 4772,
    "label": "pwojcikdev:prevent-db-on-io-threads",
    "created_at": "2024-10-27T16:02:45Z",
    "built_at": "2024-10-27T16:53:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3d72ae91f138fbb4b6bd42fef8f164bd16956696",
    "build_started_at": "2024-10-27T16:26:12Z",
    "run_id": "11542062645"
  },
  {
    "hash": "3d8338763fa8bf931c783da515ac9eba8729835f",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Track channel cleanup stats",
    "pull_request": "N/A",
    "created_at": "2024-05-06T14:03:45Z",
    "built_at": "2024-05-14T12:00:42Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3d8338763fa8bf931c783da515ac9eba8729835f",
    "build_started_at": "2024-05-14T11:08:37Z",
    "run_id": "9078633053"
  },
  {
    "hash": "3d8b2b96f7219af85089fd8478e343183bc832dd",
    "type": "pull_request",
    "title": "Traffic shaping",
    "author": "pwojcikdev",
    "body": "This is a draft PR for an ongoing work that overhauls how outgoing traffic is handled and prioritized. This will significantly improve how the node handles network congestion, which is extremely important during spam.\r\n\r\nDepends on PRs:\r\nhttps://github.com/nanocurrency/nano-node/pull/4784",
    "draft": true,
    "pull_request": 4786,
    "label": "pwojcikdev:traffic-shaping-pr",
    "created_at": "2024-11-18T19:43:02Z",
    "built_at": "2024-11-19T13:54:21Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3d8b2b96f7219af85089fd8478e343183bc832dd",
    "build_started_at": "2024-11-19T13:24:12Z",
    "run_id": "11913996768"
  },
  {
    "hash": "3d96b34b0ce7b209794d0c4e561ab3b5561e4120",
    "type": "pull_request",
    "title": "Fixing shared->unique assignment and no return in control flow.",
    "body": null,
    "draft": false,
    "pull_request": 4529,
    "label": "clemahieu:rpc_build_fix",
    "created_at": "2024-03-31T12:03:55Z",
    "built_at": "2024-03-31T12:42:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3d96b34b0ce7b209794d0c4e561ab3b5561e4120",
    "build_started_at": "2024-03-31T12:14:26Z",
    "run_id": "8498069815"
  },
  {
    "hash": "3da2dbdce4c7395eb2fb6aa1aa98b17b705c32cb",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Socket tests renaming",
    "pull_request": "4808",
    "created_at": "2024-11-14T21:54:09Z",
    "built_at": "2024-12-10T19:20:49Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3da2dbdce4c7395eb2fb6aa1aa98b17b705c32cb",
    "build_started_at": "2024-12-10T18:42:47Z",
    "run_id": "12262772955"
  },
  {
    "hash": "3db853d40d1468d3349b663ec962cd25d2a12ef6",
    "type": "pull_request",
    "title": "Organize socket tests",
    "author": "pwojcikdev",
    "body": null,
    "draft": false,
    "pull_request": 4808,
    "label": "pwojcikdev:socket-test-renaming",
    "created_at": "2024-12-10T13:19:57Z",
    "built_at": "2024-12-10T14:02:01Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3db853d40d1468d3349b663ec962cd25d2a12ef6",
    "build_started_at": "2024-12-10T13:33:47Z",
    "run_id": "12257218810"
  },
  {
    "hash": "3dc15fd10c5b0420b752518fa746684b6782ad0d",
    "type": "pull_request",
    "pull_request": 4476,
    "label": "pwojcikdev:fair-queuing-3",
    "created_at": "2024-03-10T19:14:44Z",
    "built_at": "2024-03-10T22:02:49Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3dc15fd10c5b0420b752518fa746684b6782ad0d",
    "build_started_at": "2024-03-10T21:37:20Z",
    "run_id": "8224939830"
  },
  {
    "hash": "3dc70af0678f9a92cf02e80140cc2becc83f9b58",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Wait until fair queue source drains before removal (#4597)",
    "pull_request": "4597",
    "created_at": "2024-05-03T10:20:52Z",
    "built_at": "2024-05-03T10:50:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3dc70af0678f9a92cf02e80140cc2becc83f9b58",
    "build_started_at": "2024-05-03T10:21:24Z",
    "run_id": "8937552266"
  },
  {
    "hash": "3ddfd780e4a479a6b33f374b036bfb11eb8498c0",
    "type": "pull_request",
    "pull_request": 4449,
    "label": "pwojcikdev:repcrawler-overhaul-2",
    "created_at": "2024-02-25T14:21:12Z",
    "built_at": "2024-03-05T13:12:43Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3ddfd780e4a479a6b33f374b036bfb11eb8498c0",
    "build_started_at": "2024-03-05T12:44:53Z",
    "run_id": "8156453516"
  },
  {
    "hash": "3de22489d4a19d5dc03158f2c4701f236a15c23c",
    "type": "commit",
    "created_at": "2023-03-14T21:02:30Z",
    "built_at": "2023-04-01T17:39:48Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3de22489d4a19d5dc03158f2c4701f236a15c23c"
  },
  {
    "hash": "3e0d54f7f7544d0d42cc0d79806598db42831f2c",
    "type": "commit",
    "created_at": "2023-02-14T14:15:29Z",
    "built_at": "2023-02-14T15:07:30Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3e0d54f7f7544d0d42cc0d79806598db42831f2c"
  },
  {
    "hash": "3e0ff0471fc92b178b333d5640456de0e23f7e91",
    "type": "commit",
    "created_at": "2023-09-20T17:31:04Z",
    "built_at": "2023-09-20T18:25:34Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3e0ff0471fc92b178b333d5640456de0e23f7e91"
  },
  {
    "hash": "3e5055e3c6b5496eebcc0115f8b5b1df87b0e7f1",
    "type": "commit",
    "created_at": "2024-03-11T15:38:34Z",
    "built_at": "2024-03-22T17:59:19Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3e5055e3c6b5496eebcc0115f8b5b1df87b0e7f1",
    "build_started_at": "2024-03-22T17:19:57Z",
    "run_id": "8394068316"
  },
  {
    "hash": "3e7e881e924621cd0c2c24dd9703563ebb112ab5",
    "type": "commit",
    "created_at": "2023-03-01T21:54:11Z",
    "built_at": "2023-03-01T22:30:04Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3e7e881e924621cd0c2c24dd9703563ebb112ab5"
  },
  {
    "hash": "3e8c5ad020ea64454a8c7c8c3178a9f85cc1d556",
    "type": "pull_request",
    "pull_request": 4405,
    "label": "Napetrou:develop",
    "created_at": "2024-01-26T18:45:09Z",
    "built_at": "2024-01-26T19:05:41Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-01-26T18:47:45Z",
    "run_id": "7672144783"
  },
  {
    "hash": "3ea0c512a92a60a21dc39ff55976013c00296dea",
    "type": "pull_request",
    "title": "Ascending bootstrap dependency resolution",
    "author": "pwojcikdev",
    "body": "This is the first part of our (mine & @gr0vity-dev) work on improving ascending bootstrapper. This part contains a new dependency resolution strategy among a few other smaller improvements.\r\n\r\nAn example of how it dependency resolution process works: let's have three accounts A, B, C. A depends on a transaction sent by B, and B depends on a transaction sent by C. Let's now assume we have a ledger that is not synced 100%, might be because we're doing an initial sync or our node was offline for a while. If account A performs a new live transaction, we can't process it immediately, because we're still missing chains for B & C. In the previous version resolving these dependencies was slow, as it was relying on sequential sampling of the whole ledger. With this improved algorithm, we first add account A to the blocking set, resolve its dependency as account B, since B is blocked we repeat the same process for B, finally arriving at account C that unblocks all these chains.",
    "draft": false,
    "pull_request": 4692,
    "label": "pwojcikdev:dependency-walking-rebased",
    "created_at": "2024-08-05T16:36:15Z",
    "built_at": "2024-08-05T17:14:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3ea0c512a92a60a21dc39ff55976013c00296dea",
    "build_started_at": "2024-08-05T16:43:38Z",
    "run_id": "10252739875"
  },
  {
    "hash": "3eb50a327684f976f057f499c4c6a4af6a91eb2e",
    "type": "commit",
    "created_at": "2024-03-21T17:22:12Z",
    "built_at": "2024-03-21T17:57:32Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3eb50a327684f976f057f499c4c6a4af6a91eb2e",
    "build_started_at": "2024-03-21T17:27:38Z",
    "run_id": "8379254241"
  },
  {
    "hash": "3ebb6f737b285dfdc21006c388e4c8b0376138db",
    "type": "pull_request",
    "pull_request": 4412,
    "label": "pwojcikdev:tracing-4-develop",
    "created_at": "2024-01-30T17:15:41Z",
    "built_at": "2024-02-06T22:20:59Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3ebb6f737b285dfdc21006c388e4c8b0376138db",
    "build_started_at": "2024-02-06T21:56:13Z",
    "run_id": "7806621219"
  },
  {
    "hash": "3ebe2fbfb874a98293830844727a1fb4ea429d96",
    "type": "pull_request",
    "title": "migrate_database_lmdb_to_rocksdb improvements",
    "author": "RickiNano",
    "body": "The `migrate_database_lmdb_to_rocksdb` option is running for a very long time with the current ledger size (almost 200 million blocks). On my local machine it took 65 minutes to complete. Nothing is written on screen during this process and users may think the process has stalled.\r\nThis PR adds some progress feedback. One update for each of the 7 tables that are migrated.\r\nIt also adds a simple disk space check to warn users if they might not have enough space to complete the migration.\r\n~~The current converted RocksDb database is 73 GB, and the warning is given if the system has less than 75GB available.~~\r\nThe warning is given based on the size of the LMDB database that is being migrated. The final RocksDb size is approximately 65% of the LMDB space.",
    "draft": false,
    "pull_request": 4647,
    "label": "RickiNano:lmdb-to-rocksdb",
    "created_at": "2024-06-13T10:47:31Z",
    "built_at": "2024-07-05T12:08:40Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3ebe2fbfb874a98293830844727a1fb4ea429d96",
    "build_started_at": "2024-07-05T11:39:49Z",
    "run_id": "9807733075"
  },
  {
    "hash": "3eee57bdaed079067d11b8fef8d010b5e77a5b9e",
    "type": "pull_request",
    "pull_request": 4180,
    "label": "thsfs:add_gap_tracker_class",
    "created_at": "2023-03-09T18:23:06Z",
    "built_at": "2023-03-09T19:01:44Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3eee57bdaed079067d11b8fef8d010b5e77a5b9e"
  },
  {
    "hash": "3f0510db9005bc37a6bc1ca0870fa47b6a3fa7ca",
    "type": "pull_request",
    "title": "Fix race condition in test election_scheduler.no_vacancy",
    "author": "dsiganos",
    "body": "Blocks send and receive are not confirmed for sure since nothing waits for their confirmation. If they do not confirm in time, then one of the blocks send or receive will take the only available place in the AEC and not block2 as expected.",
    "draft": false,
    "pull_request": 4570,
    "label": "dsiganos:fix_election_scheduler_no_vacancy",
    "created_at": "2024-04-17T05:10:37Z",
    "built_at": "2024-04-17T05:42:02Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3f0510db9005bc37a6bc1ca0870fa47b6a3fa7ca",
    "build_started_at": "2024-04-17T05:14:26Z",
    "run_id": "8716674181"
  },
  {
    "hash": "3f089a2ef633a2f9160a6243bfa03d495fcca640",
    "type": "pull_request",
    "title": "Rocksdb overhaul and clean up",
    "author": "RickiNano",
    "body": "The main scope of this PR is to clean up and simplify the RocksDb implementation. It also aims to rely mostly on RocksDb default options instead of hardcoded values\r\nI recommend reading this PR commit by commit.\r\n\r\nRead cache and write cache is now set in the config file, and they both defaults to RocksDb's recommended values\r\nRead cache can be configured 1-1024MB and defaults to 32MB per table\r\nWrite cache can be configured 1-256MB and defaults to 64MB per table\r\nPreviously block_cache (read cache) was from 8MB and up, depending on which table and the value of Memory_multiplier.\r\n\r\nAll Column families are now using the same options for simplicity.\r\n\r\nSeveral hardcoded options have been removed and the default RocksDb value is now used. Here is a list of the options with the old hardcoded value and the new RocksDb default.\r\n\r\n### **Database options**\r\n| Key name | Current value | New value | Comment|\r\n| -----------| ------------- |------------- |------------- |\r\n|max_total_wal_size\t\t\t\t|1GB\t\t\t\t|0\t\t\t\t\t|0 means dynamic|\r\n|memtable_whole_key_filtering\t|true\t\t\t\t|false\t\t\t\t\t||\r\n|max_manifest_file_size\t\t\t|100MB\t\t\t\t|1GB\t\t\t\t\t||\r\n|compaction_pri\t\t\t\t|kMinOverlappingRatio\t|kMinOverlappingRatio\t\t||\r\n|enable_pipelined_write\t\t\t|true\t\t\t\t|false\t\t\t\t\t||\r\n|max_file_opening_threads\t\t|-1\t\t\t\t\t|16\t\t\t\t\t|If max_open_files is -1, DB will open all files on DB::Open()|\r\n\r\n### **ColumnFamily options**\r\n| Key name | Current value | New value | Comment|\r\n| -----------| ------------- |------------- |------------- |\r\n|max_bytes_for_level_multiplier\t\t|8\t\t\t|10\t\t\t||\r\n|max_write_buffer_size_to_maintain\t|16MB\t\t|0\t\t\t|DEPRECATED|\r\n|ttl\t\t\t\t\t\t\t\t|1 day\t\t|30 days\t\t||\r\n|target_file_size_multiplier\t\t\t|10\t\t\t|1\t\t|\t1 means files in different levels will have similar size\r\n|target_file_size_base\t\t\t\t|32MB\t\t|64MB\t\t||\r\n|write_buffer_size\t\t\t\t\t|32MB\t\t|64MB\t|\tConfigurable. Config default 64MB. RocksDb default also 64MB|\r\n|max_write_buffer_number\t\t\t|2\t\t\t|2|\t\t||\r\n|max_write_buffer_size_to_maintain\t|16-48MB\t|0|\t\t|\tSetting this value to 0 will cause write buffers to be freed immediately after they are flushed|\r\n\r\n### **Table options**\r\n| Key name | Current value | New value | Comment|\r\n| -----------| ------------- |------------- |------------- |\r\n|format_version\t|4\t|5\t| See notes below|\r\n|block_cache|\t\t8-64MB\t|\t32MB| Read cache per table|\r\n|block_size\t|16MB\t\t|0\t\t|\t0 means RocksDb is autocalculating size |\r\n\r\nData format version:\r\nThe current data storage format version is 4 but this PR changes it to the latest version 5.\r\nVersion 5 introduces enhancements and optimizations, particularly around prefix iterators and performance improvements in how RocksDB handles certain read operations. Version 5 retains compatibility with data created using version 4. Only new data is written in version 5. No data migration is needed\r\n\r\nCompression:\r\nChanging compression mode to kSnappyCompression will reduce ledger size and disk utilization. However, from my testing the total compression rate was less than 5% so I recommend that we continue using uncompressed storage.\r\n\r\nInitial testing:\r\nI have tested this PR on an existing live RocksDb ledger for 7+ days 24/7. I have also bootstrapped a live ledger from scratch. \r\nI have tested with maximum cache settings on a 16GB system. 8 GB was used after 48 hours and was not increasing.\r\nMy current PR node (NanoTicker) is now running on this version with RocksDb.\r\nAll testing was done on Windows. \r\n\r\nFurther improvements:\r\nThe existing implementation uses a tombstone map containing deleted entries. It also creates an event listener that flushes tombstones on delete. I don't see any point in doing this. RocksDb can handle tombstones internally. There is a comment claiming that too many tombstones can affect read performance.\r\nWithout the code that handles tombstone mapping it still runs fine (including on loads of deletes). I did not see any change in performance from this.\r\nI decided to leave the tombstone handling as is, since I'm not certain if it may be needed in some special cases.\r\n\r\nResources:\r\nhttps://betterprogramming.pub/navigating-the-minefield-of-rocksdb-configuration-options-246af1e1d3f9\r\nhttps://github.com/facebook/rocksdb/wiki",
    "draft": false,
    "pull_request": 4730,
    "label": "RickiNano:Rocksdb-overhaul",
    "created_at": "2024-09-12T16:57:39Z",
    "built_at": "2024-09-12T17:28:38Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3f089a2ef633a2f9160a6243bfa03d495fcca640",
    "build_started_at": "2024-09-12T17:00:33Z",
    "run_id": "10835342737"
  },
  {
    "hash": "3f26816b98214c971552263fde8851e844da1654",
    "type": "pull_request",
    "pull_request": 4372,
    "label": "RickiNano:use-assert-eq",
    "created_at": "2024-01-18T13:11:09Z",
    "built_at": "2024-01-18T14:54:21Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3f26816b98214c971552263fde8851e844da1654",
    "build_started_at": "2024-01-18T14:26:25Z",
    "run_id": "7571433411"
  },
  {
    "hash": "3f48972f6661a7f35903bbf63fd9226102408386",
    "type": "pull_request",
    "pull_request": 4255,
    "label": "brandon-bb:to_string",
    "created_at": "2023-07-01T14:57:38Z",
    "built_at": "2023-07-01T15:50:58Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3f48972f6661a7f35903bbf63fd9226102408386"
  },
  {
    "hash": "3f5a2f547196e86164af2d66ccf125b400d4022b",
    "type": "pull_request",
    "pull_request": 3923,
    "label": "nanocurrency:remove-upd-support-from-peer-container-tests",
    "created_at": "2022-08-26T21:20:38Z",
    "built_at": "2023-02-09T21:13:52Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3f5a2f547196e86164af2d66ccf125b400d4022b"
  },
  {
    "hash": "3f61cd94a63a2d93d5a99ee7ae0286b63058440c",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Async task helper (#4590)\n\n* Introduce async task class\r\n\r\n* Use in `tcp_listener`\r\n\r\n* Comments\r\n\r\n* Tests\r\n\r\n* Use constructor for spawning",
    "pull_request": "4590",
    "created_at": "2024-04-28T12:37:05Z",
    "built_at": "2024-04-28T13:17:12Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3f61cd94a63a2d93d5a99ee7ae0286b63058440c",
    "build_started_at": "2024-04-28T12:38:29Z",
    "run_id": "8867731251"
  },
  {
    "hash": "3f7140e888a7e0c7a320e233de16c89ea07065e5",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Bundle ledger transaction and write guard into a single object (#4653)\n\n* Bundle transaction and write guard in a single object\r\n\r\n* Add tests",
    "pull_request": "4653",
    "created_at": "2024-06-23T14:14:34Z",
    "built_at": "2024-06-23T14:40:36Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3f7140e888a7e0c7a320e233de16c89ea07065e5",
    "build_started_at": "2024-06-23T14:14:38Z",
    "run_id": "9634109947"
  },
  {
    "hash": "3fc705b2865962d404e8348efab8bdba7baa00b5",
    "type": "pull_request",
    "title": "Configuration and environment variable improvements",
    "author": "pwojcikdev",
    "body": "This cleans up code related to overriding node configuration:\r\n- Extracts environment variable reading, which is now done in a more generic, C++ way.\r\n- Always prints info when an environment variable overrides config.\r\n- Ensures that configured thread counts are in reasonable ranges. (And slightly tweaks default for `request_aggregator`)\r\n- Converts `is_<sanitizer>` calls to constevals",
    "draft": false,
    "pull_request": 4613,
    "label": "pwojcikdev:env-utils",
    "created_at": "2024-05-11T08:40:34Z",
    "built_at": "2024-05-11T09:12:39Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3fc705b2865962d404e8348efab8bdba7baa00b5",
    "build_started_at": "2024-05-11T08:43:48Z",
    "run_id": "9042468683"
  },
  {
    "hash": "3feddcbdc56c80ff6433503aee7622aa4690c79d",
    "type": "pull_request",
    "pull_request": 4208,
    "label": "Fiono11:stats_bug_fix",
    "created_at": "2023-04-05T09:49:24Z",
    "built_at": null,
    "build_status": "building",
    "docker_tag": null
  },
  {
    "hash": "3ff72fd4e8d6758dee5758a78f66edbecd5736db",
    "type": "pull_request",
    "pull_request": 4416,
    "label": "dsiganos:remove_needless_mutex_unlock_lock",
    "created_at": "2024-01-31T17:41:56Z",
    "built_at": "2024-01-31T18:16:29Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:3ff72fd4e8d6758dee5758a78f66edbecd5736db",
    "build_started_at": "2024-01-31T17:51:09Z",
    "run_id": "7730256320"
  },
  {
    "hash": "4003a8afac02e340840a976be9ce60d193c9089d",
    "type": "pull_request",
    "title": "Move confirming_set on to ledger and add a shared_mutex for keeping memory objects in sync with the ledger",
    "author": "clemahieu",
    "body": "This adds a shared_mutex to ledger transactions which allows shared read access and exclusive write access to the ledger. This should fix the problem identified here https://github.com/nanocurrency/nano-node/pull/4540, and find similar need when synchronizing bounded backlog memory objects. I will break this PR up in to discrete chunks starting with https://github.com/nanocurrency/nano-node/pull/4566.\r\n\r\nThe existing ledger operations use store transactions as the synchronization method though this uses an MVCC strategy which doesn't play well when also synchronizing memory objects. Adding a shared_mutex to the transaction means ledger writes are done exclusively to ledger reads while reads can co-exist with other reads.\r\n\r\nThere are several seemingly unrelated changes added but there is a commonality in their purpose: they addressed deadlocks that occur under the new mutually exclusive write transaction behavior. The changes fall under 2 major categories:\r\n\r\n### Non-obvious recursive acquisition of ledger read transaction.\r\nWhile the ledger transactions support shared/concurrent read access, they no longer support recursive read transaction acquisition e.g. acquiring a ledger read transaction while an existing one is on the thread stack. The reason for this is that if a write transaction with exclusive lock access is requested elsewhere in the program between two read transactions requests, the second inner read transaction will be deadlocked. This is due to the behavior of shared_mutex where once unique_lock access is requested, it will block new shared_lock acquisition until the unique_lock can be serviced.\r\n\r\n### Lock order inversion by holding a read transaction across component boundaries.\r\nA common pattern is for the node to have a component with a thread that accepts input guarded by a mutex and the thread does some database operation during its loop. This means as a general rule components have a lock order of: _component-mutex_ then _ledger-mutex_.\r\nComponents also issue notifications or callbacks during their processing loop which sends data to other components. We run into issues when a component needs to pass data to another component: if the database mutex is being held while dispatching this creates a _ledger-mutex_ then _component-mutex_ lock order inversion which TSAN identifies.\r\nTo solve these cases the component must not hold a database transaction while making a callback or notifying observers.\r\n\r\nIt was inconvenient at first to fix up all these cases, however, it seemed to generally address places that might have caused read transactions to stay open for a long time or give unexpected results because of MVCC behavior instead of mutex behavior.",
    "draft": true,
    "pull_request": 4567,
    "label": "clemahieu:ledger_confirming_set",
    "created_at": "2024-04-16T10:11:59Z",
    "built_at": "2024-04-16T10:40:45Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4003a8afac02e340840a976be9ce60d193c9089d",
    "build_started_at": "2024-04-16T10:12:34Z",
    "run_id": "8703833322"
  },
  {
    "hash": "401a3fd4fbe33c17734d133949b8c3219f9bcbe3",
    "type": "pull_request",
    "title": "Move assert to a dedicated header",
    "author": "pwojcikdev",
    "body": null,
    "draft": false,
    "pull_request": 4773,
    "label": "pwojcikdev:assert-header",
    "created_at": "2024-10-27T18:14:57Z",
    "built_at": "2024-11-03T14:43:31Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:401a3fd4fbe33c17734d133949b8c3219f9bcbe3",
    "build_started_at": "2024-11-03T14:16:26Z",
    "run_id": "11652063774"
  },
  {
    "hash": "401d61c24cae89e94d62c5580523d5d3f814616b",
    "type": "commit",
    "author": "RickiNano",
    "title": "Node configuration auto updater (#4579)\n\nThis pull request introduces a new command line feature --update_config , which updates the nodes current configuration by merging custom settings into the latest configuration template. Custom settings will be uncommented in the new configuration, while default values will be commented.\r\nThis feature simplifies the process for node operators to maintain an up-to-date configuration without manually merging the current configuration with the new one.\r\n\r\nFeatures:\r\n\r\nUpdates config file with new entries, tables and documentation\r\nRemoves entries that are no longer referenced in code\r\nPreserves custom values from current configuration\r\nFormatted output\r\nLimitations:\r\n\r\nCurrently only works with node configuration file but could easily be extended to rpc an log configs",
    "pull_request": "4579",
    "created_at": "2024-04-30T13:47:04Z",
    "built_at": "2024-04-30T14:58:12Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:401d61c24cae89e94d62c5580523d5d3f814616b",
    "build_started_at": "2024-04-30T13:49:17Z",
    "run_id": "8896623898"
  },
  {
    "hash": "40306635ec11ac12d7cca712c83f8a812079e9de",
    "type": "commit",
    "created_at": "2024-02-20T18:09:04Z",
    "built_at": "2024-02-20T18:47:11Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:40306635ec11ac12d7cca712c83f8a812079e9de",
    "build_started_at": "2024-02-20T18:22:00Z",
    "run_id": "7978177270"
  },
  {
    "hash": "403cc664ae5c4c98f46bf00e09a61aff45da998a",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Mark rebroadcasted votes",
    "pull_request": "4621",
    "created_at": "2024-05-13T17:34:13Z",
    "built_at": "2024-05-17T07:44:40Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:403cc664ae5c4c98f46bf00e09a61aff45da998a",
    "build_started_at": "2024-05-17T07:17:57Z",
    "run_id": "9124462576"
  },
  {
    "hash": "40457a32d9aea5d4588a3a33c3e0bd91a5ed6835",
    "type": "pull_request",
    "pull_request": 4199,
    "label": "thsfs:add_cmake_for_submodules",
    "created_at": "2023-03-22T19:51:02Z",
    "built_at": "2023-03-22T20:03:07Z",
    "build_status": "fail",
    "docker_tag": ""
  },
  {
    "hash": "40716707fb6e80199ea1e4416a1028f4730277c7",
    "type": "pull_request",
    "title": "Remove legacy bootstrap",
    "author": "pwojcikdev",
    "body": "This removes legacy bootstrap, which was replaced by the new ascending bootstrap. Legacy bootstrap implementation was unnecessarily complicated with many inefficiencies. Debugging it was a pain and slowed down development of new features. \r\n\r\nAll the `bootstrap_ascending*` classes and stats are renamed to simply `bootstrap`.\r\n\r\nTODO for the future is porting previous `bootstrap_processor` test suite to use the new bootstrapper.",
    "draft": false,
    "pull_request": 4777,
    "label": "pwojcikdev:remove-legacy-bootstrap-2",
    "created_at": "2024-10-29T17:20:20Z",
    "built_at": "2024-10-30T12:16:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:40716707fb6e80199ea1e4416a1028f4730277c7",
    "build_started_at": "2024-10-30T11:49:25Z",
    "run_id": "11592571707"
  },
  {
    "hash": "407605e9c4b7761c3010289a160f73cf1fbc54e4",
    "type": "pull_request",
    "pull_request": 4158,
    "label": "clemahieu:bootstrap_ascending_client",
    "created_at": "2023-02-27T20:15:37Z",
    "built_at": "2023-02-27T21:28:50Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:407605e9c4b7761c3010289a160f73cf1fbc54e4"
  },
  {
    "hash": "4089c05366b73e920e96d61c1f925747dfdf1895",
    "type": "pull_request",
    "pull_request": 4252,
    "label": "clemahieu:extract_rollback_conflict",
    "created_at": "2023-06-25T09:58:30Z",
    "built_at": "2023-06-25T10:39:39Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4089c05366b73e920e96d61c1f925747dfdf1895"
  },
  {
    "hash": "408a4cfbbbe4575e0773aaa927b0b2b20cec8ac7",
    "type": "pull_request",
    "title": "Add per-bucket election limiter",
    "author": "clemahieu",
    "body": "This change is a simpler version of the priority scheduler per-bucket limiter that tracks the number of elections it's started while retaining the ability to queue blocks for activation once elections already started for the bucket complete.\r\n\r\nThis removes the priority scheduler thread. Elections are activated at time of call to ::activate or when a different election is being cleaned up.",
    "draft": false,
    "pull_request": 4623,
    "label": "clemahieu:merge_buckets_priority",
    "created_at": "2024-05-14T22:54:24Z",
    "built_at": "2024-05-15T15:15:53Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:408a4cfbbbe4575e0773aaa927b0b2b20cec8ac7",
    "build_started_at": "2024-05-15T14:49:46Z",
    "run_id": "9097859291"
  },
  {
    "hash": "40b48d6ee4e43c3250d83af018f39faa247b80c7",
    "type": "pull_request",
    "pull_request": 4359,
    "label": "pwojcikdev:bound-hinted-iterations",
    "created_at": "2024-01-14T16:27:33Z",
    "built_at": "2024-01-14T16:55:30Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:40b48d6ee4e43c3250d83af018f39faa247b80c7",
    "build_started_at": "2024-01-14T16:30:02Z",
    "run_id": "7520404676"
  },
  {
    "hash": "40cc5aed81aaa399921ce95f7aeeeec9471ee11a",
    "type": "pull_request",
    "pull_request": 4286,
    "label": "clemahieu:nano_store_lib",
    "created_at": "2023-09-19T13:14:01Z",
    "built_at": "2023-09-20T02:56:29Z",
    "build_status": "fail",
    "docker_tag": ""
  },
  {
    "hash": "40d231061afd62297e4476ef01737c55cd0e3aad",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge branch 'develop' into remove-legacy-bootstrap-2\n\n# Conflicts:\n#\tnano/node/bootstrap/account_sets.hpp\n#\tnano/node/bootstrap/bootstrap.cpp\n#\tnano/node/bootstrap/bootstrap.hpp\n#\tnano/node/bootstrap/bootstrap_attempt.hpp\n#\tnano/node/bootstrap/bootstrap_bulk_push.cpp\n#\tnano/node/bootstrap/bootstrap_bulk_push.hpp\n#\tnano/node/bootstrap/bootstrap_connections.cpp\n#\tnano/node/bootstrap/bootstrap_connections.hpp\n#\tnano/node/bootstrap/bootstrap_lazy.cpp\n#\tnano/node/json_handler.cpp",
    "pull_request": "4777",
    "created_at": "2024-10-31T12:01:29Z",
    "built_at": "2024-10-31T15:15:49Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:40d231061afd62297e4476ef01737c55cd0e3aad",
    "build_started_at": "2024-10-31T13:47:32Z",
    "run_id": "11614217167"
  },
  {
    "hash": "41099e588da8a7b437ea658978a0c838e075cfab",
    "type": "pull_request",
    "pull_request": 4293,
    "label": "clemahieu:remove_upgrade_code",
    "created_at": "2023-09-25T13:25:17Z",
    "built_at": "2023-09-25T14:07:10Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:41099e588da8a7b437ea658978a0c838e075cfab"
  },
  {
    "hash": "4114177e3772a623bde6340bb510e37354c591d6",
    "type": "pull_request",
    "pull_request": 4181,
    "label": "thsfs:add_process_live_dipatcher_class",
    "created_at": "2023-03-10T02:28:40Z",
    "built_at": "2023-03-10T03:45:37Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4114177e3772a623bde6340bb510e37354c591d6"
  },
  {
    "hash": "411e9bf6264a866de62b135a281daefbab1220fe",
    "type": "pull_request",
    "title": "Fair queuing for request aggregator",
    "author": "pwojcikdev",
    "body": "This implements fair queuing for request aggregator. The benefit is that it removes a small delay that was there due to buffering of requests. This is unnecessary, because client side (`confirmation_solicitor` class) already bundles requests.\r\nI believe that the principle of client->server communication should be that the server does the least processing possible. If client requests data inefficiently, then it will just receive less data and fewer resources will be spent servicing them.",
    "draft": false,
    "pull_request": 4598,
    "label": "pwojcikdev:fair-queuing/request-aggregator-3",
    "created_at": "2024-05-03T07:15:46Z",
    "built_at": "2024-05-03T07:45:21Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:411e9bf6264a866de62b135a281daefbab1220fe",
    "build_started_at": "2024-05-03T07:19:14Z",
    "run_id": "8935510851"
  },
  {
    "hash": "41414d96e891fd4af84a2dbfaea0f5e5fac384f0",
    "type": "pull_request",
    "pull_request": 4365,
    "label": "clemahieu:search_receivable_wallet_action",
    "created_at": "2024-01-17T15:35:23Z",
    "built_at": "2024-01-17T16:04:33Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:41414d96e891fd4af84a2dbfaea0f5e5fac384f0",
    "build_started_at": "2024-01-17T15:38:29Z",
    "run_id": "7558136296"
  },
  {
    "hash": "4189bdfe2df214be9c4050b7528e13a86a105b19",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Rework `request_aggregator::aggregate` logic",
    "pull_request": "4779",
    "created_at": "2024-11-03T18:45:50Z",
    "built_at": "2024-11-04T22:20:10Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4189bdfe2df214be9c4050b7528e13a86a105b19",
    "build_started_at": "2024-11-04T21:44:22Z",
    "run_id": "11673295329"
  },
  {
    "hash": "418c9b3b83190486a431843b10bbdc63c58d6f8e",
    "type": "pull_request",
    "pull_request": 4510,
    "label": "pwojcikdev:aec-vote-map-result",
    "created_at": "2024-03-20T16:25:24Z",
    "built_at": "2024-03-21T12:38:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:418c9b3b83190486a431843b10bbdc63c58d6f8e",
    "build_started_at": "2024-03-21T12:12:10Z",
    "run_id": "8374699756"
  },
  {
    "hash": "41986ffcc3bf5b560c223bce69a0770deb746830",
    "type": "commit",
    "created_at": "2023-10-09T12:00:28Z",
    "built_at": "2023-10-17T16:04:50Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:41986ffcc3bf5b560c223bce69a0770deb746830"
  },
  {
    "hash": "41c83a77e1483288b4cd6f514652cd9f8d3df026",
    "type": "commit",
    "created_at": "2024-03-15T18:24:56Z",
    "built_at": "2024-03-24T13:17:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:41c83a77e1483288b4cd6f514652cd9f8d3df026",
    "build_started_at": "2024-03-24T12:11:57Z",
    "run_id": "8409177637"
  },
  {
    "hash": "41c8fd0382c1310d79cd7bd528fc13e10a1e6043",
    "type": "pull_request",
    "pull_request": 4164,
    "label": "pwojcikdev:prs/blockprocessor-verify-work",
    "created_at": "2023-03-01T19:36:13Z",
    "built_at": "2023-03-01T20:08:36Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:41c8fd0382c1310d79cd7bd528fc13e10a1e6043"
  },
  {
    "hash": "41de2b4b56081fc87a1ad0ea1b6119f95ece0e86",
    "type": "commit",
    "author": "RickiNano",
    "title": "Move rep weights data to text files",
    "pull_request": "N/A",
    "created_at": "2024-10-25T20:23:33Z",
    "built_at": "2024-10-29T14:24:07Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:41de2b4b56081fc87a1ad0ea1b6119f95ece0e86",
    "build_started_at": "2024-10-29T13:30:07Z",
    "run_id": "11575387773"
  },
  {
    "hash": "41e4d36f490a4be1e1c4e7723bd4f3c22caf9a45",
    "type": "pull_request",
    "pull_request": 4486,
    "label": "clemahieu:ledger_view",
    "created_at": "2024-03-12T14:33:24Z",
    "built_at": null,
    "build_status": "building",
    "docker_tag": null,
    "build_started_at": "2024-03-25T15:51:37Z",
    "run_id": "8422979285"
  },
  {
    "hash": "41edc272b7f1994daffbd7f2d7b484e769fab65f",
    "type": "pull_request",
    "title": "Node configuration auto updater",
    "author": "RickiNano",
    "body": "This pull request introduces a new command line feature `--update_config` , which updates the nodes current configuration by merging custom settings into the latest configuration template. Custom settings will be uncommented in the new configuration, while default values will be commented.\r\nThis feature simplifies the process for node operators to maintain an up-to-date configuration without manually merging the current configuration with the new one.\r\n\r\nFeatures:\r\n* Updates config file with new entries, tables and documentation\r\n* Removes entries that are no longer referenced in code\r\n* Preserves custom values from current configuration\r\n* Formatted output\r\n\r\nLimitations:\r\n* Currently only works with node configuration file but could easily be extended to rpc an log configs\r\n",
    "draft": false,
    "pull_request": 4579,
    "label": "RickiNano:auto_update_config",
    "created_at": "2024-04-20T07:34:06Z",
    "built_at": "2024-04-24T19:14:19Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:41edc272b7f1994daffbd7f2d7b484e769fab65f",
    "build_started_at": "2024-04-24T18:40:21Z",
    "run_id": "8821640502"
  },
  {
    "hash": "41f9706b493504fb1d3ae3ae4fa0e8fd5cedb73e",
    "type": "pull_request",
    "pull_request": 4091,
    "label": "dsiganos:fix_fork_publish_inactive",
    "created_at": "2023-01-31T12:57:54Z",
    "built_at": "2023-02-04T23:02:26Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:41f9706b493504fb1d3ae3ae4fa0e8fd5cedb73e"
  },
  {
    "hash": "41feb779b90b704ba67c0ab8e4540ef80000271b",
    "type": "commit",
    "created_at": "2023-09-18T23:27:30Z",
    "built_at": "2023-09-20T19:46:36Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:41feb779b90b704ba67c0ab8e4540ef80000271b"
  },
  {
    "hash": "4204f980ff8bfb10f70ad5c63687a7e61606b7bf",
    "type": "pull_request",
    "title": "Optimize cemented callbacks",
    "author": "pwojcikdev",
    "body": "This attempts to optimize the election cementing callbacks. It often takes as long or even longer to cement a confirmed election as it takes to get it confirmed in the first place. This is not a complete solution, there is still a delay, but I hope it's a step in the right direction. \r\nWe're debugging this together with @gr0vity-dev who really is doing incredible work to dig deep into this issue.\r\n\r\n![image](https://github.com/nanocurrency/nano-node/assets/3044353/006a4fc1-d499-478a-a372-7b5240b7ef01)\r\n",
    "draft": false,
    "pull_request": 4642,
    "label": "pwojcikdev:cemented-observers-optimize",
    "created_at": "2024-05-24T13:34:30Z",
    "built_at": "2024-05-24T22:54:09Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4204f980ff8bfb10f70ad5c63687a7e61606b7bf",
    "build_started_at": "2024-05-24T22:28:11Z",
    "run_id": "9230613808"
  },
  {
    "hash": "4251ff1b6a131768e3ab1172ef3816f88c8de44d",
    "type": "pull_request",
    "title": "Stats overhaul",
    "author": "pwojcikdev",
    "body": "# Stats overhaul\r\n\r\nThe goal of this PR is to address some of the issues that have been increasingly cropping up with the current stats system. I believe that having a more flexible and performant system will allow us to experiment and iterate faster.\r\n\r\nThe immediate problem that is fixed is the fact that we ran out of space for declaring new stat enums:\r\n```\r\nIn file included from /nano-node/nano/lib/stats.hpp:5:\r\n/nano-node/nano/lib/stats_enums.hpp:407:2: error: enumerator value 256 is not representable in the underlying type 'uint8_t' (aka 'unsigned char')\r\n```\r\n\r\nHowever, this PR contains a bit more than that. The main changes are:\r\n- Do not require `stat::detail` enum to have `uint8` underlying type. This allows for practically unlimited number of custom stats.\r\n- Offload heavy IO operations (saving stats to disk) to a dedicated thread. Previously this was done inside the call to stat update functions, which introduced latency spikes.\r\n- Rework the way histograms are handled. Previously histograms needed to be registered with the stats system beforehand, which could be cumbersome and as a result not used. Now we store samples in a ring buffer and leave histogram creation to the user (e.g. nano-prom-exporter).\r\nNote: I'm still not sure whether this approach is really better, this needs a bit more experimentation.\r\n- Use read-write locks with atomic integers for counter values. This is a bit experimental, but on my system it seems to give some performance benefits. I'll try to include microbenchmarking suite as part of a separate PR (ongoing work is here https://github.com/pwojcikdev/nano-node/tree/stats-benchmarking )\r\n- Remove special semantics of `stat::detail::all` enum. Previously we tracked a special `all` entry that was used to aggregate all stats of a given type. It was used only by unit tests and required special filters to remove from grafana dashboards, where it unnecessarily cluttered the view. Now stat aggregation is handled by a dedicated overload of `stats::count ()` function.\r\n\r\n## Heatmaps\r\n\r\nI added experimental support for histogram generation to my fork of the `nano-prom-exporter` (https://github.com/pwojcikdev/nano-prom-exporter/commits/histograms/). This allows for generating heatmaps like this one:\r\n\r\n<img width=\"2991\" alt=\"Screenshot 2024-03-06 at 10 20 51\" src=\"https://github.com/nanocurrency/nano-node/assets/3044353/ec59d9ed-6dbf-4bbe-a710-b894bb2d6106\">\r\n",
    "draft": false,
    "pull_request": 4583,
    "label": "pwojcikdev:stats-improvements-2",
    "created_at": "2024-04-24T14:26:18Z",
    "built_at": "2024-04-25T17:41:43Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4251ff1b6a131768e3ab1172ef3816f88c8de44d",
    "build_started_at": "2024-04-25T17:15:25Z",
    "run_id": "8836694467"
  },
  {
    "hash": "42544be68ee053909ca0d1de70d9bfc224d34917",
    "type": "commit",
    "created_at": "2024-03-05T18:34:20Z",
    "built_at": "2024-03-05T19:10:52Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:42544be68ee053909ca0d1de70d9bfc224d34917",
    "build_started_at": "2024-03-05T18:41:15Z",
    "run_id": "8161367837"
  },
  {
    "hash": "4266c5fc99f702dad4de72c675b13e71d1ccfafe",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Fix rep_crawler tests",
    "pull_request": "N/A",
    "created_at": "2024-04-29T18:29:56Z",
    "built_at": "2024-05-04T10:24:19Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4266c5fc99f702dad4de72c675b13e71d1ccfafe",
    "build_started_at": "2024-05-04T09:36:39Z",
    "run_id": "8949677172"
  },
  {
    "hash": "427fded3e0975101f991ce97a4cb9c13d4bf02b6",
    "type": "commit",
    "created_at": "2023-03-07T20:45:45Z",
    "built_at": "2023-03-08T16:42:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:427fded3e0975101f991ce97a4cb9c13d4bf02b6"
  },
  {
    "hash": "429d2c5c60cab5bcb7e44ecdef820ee3a23797cb",
    "type": "pull_request",
    "pull_request": 4195,
    "label": "thsfs:fix_windows_build_warnings",
    "created_at": "2023-03-21T21:08:21Z",
    "built_at": "2023-03-30T18:35:20Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:429d2c5c60cab5bcb7e44ecdef820ee3a23797cb"
  },
  {
    "hash": "42e783265cf123b580f141fef30d1ff1e461f29a",
    "type": "pull_request",
    "pull_request": 4191,
    "label": "clemahieu:scoped_thread_remove",
    "created_at": "2023-03-20T22:20:11Z",
    "built_at": "2023-03-20T23:00:59Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:42e783265cf123b580f141fef30d1ff1e461f29a"
  },
  {
    "hash": "42e8c30a5f3e9977c0f03077bd28a88d989472c3",
    "type": "pull_request",
    "pull_request": 4158,
    "label": "clemahieu:bootstrap_ascending_client",
    "created_at": "2023-02-27T20:15:37Z",
    "built_at": "2023-03-14T14:49:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:42e8c30a5f3e9977c0f03077bd28a88d989472c3"
  },
  {
    "hash": "42f03b12160f3ce83fc161e800bd8470f9b6b307",
    "type": "pull_request",
    "title": "Incremental backoff for `local_block_broadcaster`",
    "author": "pwojcikdev",
    "body": "This implements incremental backoff for block rebroadcasting. Previously block rebroadcasts happened every 60 seconds. This changes it, so that early on rebroadcasts happen more frequently, with 3 second interval increase. Ie. first rebroadcast happens after 3 seconds, second after 9, third after 18 etc.\r\n\r\nAdditionally there are improvements that were necessary to implement the above: avoiding unnecessary locking and config cleanup.",
    "draft": false,
    "pull_request": 4662,
    "label": "pwojcikdev:aggressive-block-broadcasts",
    "created_at": "2024-06-29T16:22:17Z",
    "built_at": "2024-06-29T18:06:39Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:42f03b12160f3ce83fc161e800bd8470f9b6b307",
    "build_started_at": "2024-06-29T17:39:16Z",
    "run_id": "9725856375"
  },
  {
    "hash": "42f0d465c689b983d8073951f91efd86c1cd89bc",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Fix tests",
    "pull_request": "4618",
    "created_at": "2024-05-05T22:03:14Z",
    "built_at": "2024-05-14T12:25:10Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:42f0d465c689b983d8073951f91efd86c1cd89bc",
    "build_started_at": "2024-05-14T11:08:37Z",
    "run_id": "9078880645"
  },
  {
    "hash": "430346c0ffc8160f122a9578188dcb5a7999473c",
    "type": "commit",
    "created_at": "2023-02-22T11:55:21Z",
    "built_at": "2023-02-22T12:31:26Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:430346c0ffc8160f122a9578188dcb5a7999473c"
  },
  {
    "hash": "431964cd265b82e067569eb32374fba4b1491a0a",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Use unique ptr for `telemetry`",
    "pull_request": "4728",
    "created_at": "2024-09-09T20:43:13Z",
    "built_at": "2024-09-17T10:13:12Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:431964cd265b82e067569eb32374fba4b1491a0a",
    "build_started_at": "2024-09-17T09:35:37Z",
    "run_id": "10900528687"
  },
  {
    "hash": "431a3374c06f16b53595933a45aee1187d218ac5",
    "type": "pull_request",
    "pull_request": 4158,
    "label": "clemahieu:bootstrap_ascending_client",
    "created_at": "2023-02-27T20:15:37Z",
    "built_at": "2023-03-05T17:23:35Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:431a3374c06f16b53595933a45aee1187d218ac5"
  },
  {
    "hash": "431cf8339eb0f4c72091e392e96a04bf4dc0c4d0",
    "type": "pull_request",
    "pull_request": 4165,
    "label": "clemahieu:block_processor_cleanup",
    "created_at": "2023-03-02T09:54:58Z",
    "built_at": "2023-03-02T10:37:10Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:431cf8339eb0f4c72091e392e96a04bf4dc0c4d0"
  },
  {
    "hash": "433e0c9d6d1b9dddc354a4d9904c14ca268c247e",
    "type": "commit",
    "author": "clemahieu",
    "title": "Renaming election_behavior::normal to election_behavior::priority",
    "pull_request": "4611",
    "created_at": "2024-05-10T08:26:05Z",
    "built_at": "2024-05-13T11:13:45Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:433e0c9d6d1b9dddc354a4d9904c14ca268c247e",
    "build_started_at": "2024-05-13T10:46:03Z",
    "run_id": "9061559027"
  },
  {
    "hash": "433f341ac1e5c1d5da2937482d9dd989a8cea657",
    "type": "commit",
    "author": "clemahieu",
    "title": "Rewrite priority scheduler in terms of ledger sets.",
    "pull_request": "4593",
    "created_at": "2024-03-21T16:26:35Z",
    "built_at": "2024-04-30T15:12:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:433f341ac1e5c1d5da2937482d9dd989a8cea657",
    "build_started_at": "2024-04-30T13:34:48Z",
    "run_id": "8896839343"
  },
  {
    "hash": "4351aa48225aa5b05526763dbe2df6bc49ade226",
    "type": "pull_request",
    "pull_request": 4411,
    "label": "clemahieu:improve_node_fork_multi_flip",
    "created_at": "2024-01-29T17:38:00Z",
    "built_at": "2024-01-29T18:12:44Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4351aa48225aa5b05526763dbe2df6bc49ade226",
    "build_started_at": "2024-01-29T17:44:00Z",
    "run_id": "7700224104"
  },
  {
    "hash": "435493c75be08f3744b551c51e477f1a46091914",
    "type": "pull_request",
    "pull_request": 4512,
    "label": "pwojcikdev:hinted-scheduler-config-disable",
    "created_at": "2024-03-21T15:31:54Z",
    "built_at": "2024-03-21T16:15:04Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:435493c75be08f3744b551c51e477f1a46091914",
    "build_started_at": "2024-03-21T15:39:06Z",
    "run_id": "8377740510"
  },
  {
    "hash": "43746c33b750facac6df55093f54ecdb5ff58c37",
    "type": "commit",
    "author": "clemahieu",
    "title": "Merge pull request #4683 from clemahieu/large_votes\n\nEnable large votes",
    "pull_request": "4683",
    "created_at": "2024-07-18T17:07:00Z",
    "built_at": "2024-07-18T17:55:09Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:43746c33b750facac6df55093f54ecdb5ff58c37",
    "build_started_at": "2024-07-18T17:13:38Z",
    "run_id": "9995971293"
  },
  {
    "hash": "43776c4686e17574b43a9285ee9be7b346ea2fe1",
    "type": "pull_request",
    "title": "Bounded election buckets with dynamic reprioritization",
    "author": "pwojcikdev",
    "body": "Based on:\r\n- Elections sets (can't find PR, Colin's initial attempt at bucket limiting)\r\n- Bobs bucket vacancy branch https://github.com/nanocurrency/nano-node/compare/develop...gr0vity-dev:nano-node:wip/bucket_vacancy \r\n\r\nbut simpler, more robust and allows for dynamically dropping and scheduling higher priority elections. Also, buckets can be configured to opportunistically use more available space if AEC is underutilized.",
    "draft": false,
    "pull_request": 4626,
    "label": "pwojcikdev:election-bounding-2",
    "created_at": "2024-05-15T16:21:38Z",
    "built_at": "2024-05-21T15:11:30Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:43776c4686e17574b43a9285ee9be7b346ea2fe1",
    "build_started_at": "2024-05-21T14:43:39Z",
    "run_id": "9176628253"
  },
  {
    "hash": "43938618e721fc3ab4015e62c1217074a2d6d9df",
    "type": "commit",
    "author": "clemahieu",
    "title": "Rewrite inactive_vote_cache.existing_vote to directly process blocks and start elections.",
    "pull_request": "4619",
    "created_at": "2024-05-13T17:44:55Z",
    "built_at": "2024-05-14T13:14:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:43938618e721fc3ab4015e62c1217074a2d6d9df",
    "build_started_at": "2024-05-14T11:41:17Z",
    "run_id": "9079579158"
  },
  {
    "hash": "43a575e2895599df2081a5ee12443bfddb2421aa",
    "type": "pull_request",
    "title": "Add ability for channels to pause/resume processing of incoming messages",
    "author": "clemahieu",
    "body": "This is a follow on to PR https://github.com/nanocurrency/nano-node/pull/4609 and responds to the fair queue for a channel being full by pausing incoming message processing for the channel.\r\n\r\nPausing incoming message handling will cause TCP flow control to back up to the sender and limit incoming data.",
    "draft": false,
    "pull_request": 4612,
    "label": "clemahieu:pause_channel",
    "created_at": "2024-05-10T11:32:25Z",
    "built_at": "2024-05-10T12:02:30Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:43a575e2895599df2081a5ee12443bfddb2421aa",
    "build_started_at": "2024-05-10T11:35:42Z",
    "run_id": "9031627572"
  },
  {
    "hash": "43ae1f2aadd7eb7362a7fa7f1d4db3ca989e2be0",
    "type": "pull_request",
    "pull_request": 4465,
    "label": "clemahieu:block_fields",
    "created_at": "2024-03-06T17:58:47Z",
    "built_at": "2024-03-06T18:24:44Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:43ae1f2aadd7eb7362a7fa7f1d4db3ca989e2be0",
    "build_started_at": "2024-03-06T17:59:24Z",
    "run_id": "8176594185"
  },
  {
    "hash": "43dae2f543d1f98be3d1301c53fc835a2ad00e0a",
    "type": "commit",
    "created_at": "2024-03-25T15:42:16Z",
    "built_at": "2024-03-25T16:10:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:43dae2f543d1f98be3d1301c53fc835a2ad00e0a",
    "build_started_at": "2024-03-25T15:44:23Z",
    "run_id": "8422876611"
  },
  {
    "hash": "4407ad73d5fb75a49c2d129f923c62a5512b5143",
    "type": "pull_request",
    "pull_request": 4353,
    "label": "pwojcikdev:ub-fixes-3",
    "created_at": "2024-01-08T17:42:35Z",
    "built_at": "2024-01-08T20:51:20Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4407ad73d5fb75a49c2d129f923c62a5512b5143",
    "build_started_at": "2024-01-08T20:23:37Z",
    "run_id": "7452776218"
  },
  {
    "hash": "442f0cdb35b2c190786f5410bbc4e8aaed114c42",
    "type": "pull_request",
    "pull_request": 4211,
    "label": "clemahieu:bootstrap_channel_scoring",
    "created_at": "2023-04-05T17:07:44Z",
    "built_at": "2023-04-13T17:39:44Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:442f0cdb35b2c190786f5410bbc4e8aaed114c42"
  },
  {
    "hash": "4439f46d0c2f932e06f4c2ad984914c31ba348e6",
    "type": "commit",
    "created_at": "2024-03-16T13:18:14Z",
    "built_at": "2024-03-18T17:49:10Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4439f46d0c2f932e06f4c2ad984914c31ba348e6",
    "build_started_at": "2024-03-18T16:48:08Z",
    "run_id": "8330437043"
  },
  {
    "hash": "4443b76c3fbd7be20afe816b0bcbbf150233ac8e",
    "type": "commit",
    "created_at": "2023-05-17T17:48:24Z",
    "built_at": "2023-05-31T13:24:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4443b76c3fbd7be20afe816b0bcbbf150233ac8e"
  },
  {
    "hash": "4444e9bc1525f71c26e4a496ad651b1d45a520de",
    "type": "pull_request",
    "title": "Redesign the priority scheduler to maintain a 1-to-1 link with running elections",
    "author": "clemahieu",
    "body": "This change appropriately prioritises elections by bucket and then by LRU account. Overfilled buckets have the lowest priority block election cancelled and rolled back.",
    "draft": true,
    "pull_request": 4593,
    "label": "clemahieu:priority_limiter",
    "created_at": "2024-04-30T12:53:50Z",
    "built_at": "2024-05-10T13:54:38Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4444e9bc1525f71c26e4a496ad651b1d45a520de",
    "build_started_at": "2024-05-10T13:25:46Z",
    "run_id": "9032952684"
  },
  {
    "hash": "444f0f2e99b3ba9b3c7af2d4febe17c5f5b7968a",
    "type": "commit",
    "created_at": "2023-05-15T11:58:56Z",
    "built_at": "2023-05-15T13:40:42Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:444f0f2e99b3ba9b3c7af2d4febe17c5f5b7968a"
  },
  {
    "hash": "4463ba756622b57c257cea4e271ae50f8ffbdfdf",
    "type": "pull_request",
    "title": "Use a dedicated thread for tcp listener",
    "author": "pwojcikdev",
    "body": "While I'm not aware of any problems with previous implementation, the async way of implementing `tcp_listener` was generally harder to understand and to evolve over time. It was especially problematic when making changes to other aspects of networking code. Given that our connections are long-lived and relatively infrequent, there is very little need for tcp acceptor code to be focused on performance and instead we should prioritize readability and maintainability. This modifies it to instead run on a single, dedicated thread and use blocking IO operations.",
    "draft": false,
    "pull_request": 4523,
    "label": "pwojcikdev:networking-fixes/tcp-listener-2",
    "created_at": "2024-03-25T16:06:32Z",
    "built_at": "2024-04-17T13:34:49Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4463ba756622b57c257cea4e271ae50f8ffbdfdf",
    "build_started_at": "2024-04-17T13:09:20Z",
    "run_id": "8722462027"
  },
  {
    "hash": "449c87399dd1d26adb66bda38c263876419ee8b4",
    "type": "commit",
    "created_at": "2024-01-30T15:59:36Z",
    "built_at": "2024-01-30T16:41:29Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:449c87399dd1d26adb66bda38c263876419ee8b4",
    "build_started_at": "2024-01-30T16:15:18Z",
    "run_id": "7714137305"
  },
  {
    "hash": "44a4d1ad49612644727200059b56072177f9cad8",
    "type": "commit",
    "created_at": "2023-12-27T15:47:32Z",
    "built_at": "2024-01-08T23:54:38Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:44a4d1ad49612644727200059b56072177f9cad8",
    "build_started_at": "2024-01-08T23:09:58Z",
    "run_id": "7454294270"
  },
  {
    "hash": "44eb3248f20cf489f1126a32683fead4dbdf3326",
    "type": "pull_request",
    "pull_request": 4334,
    "label": "pwojcikdev:hinted-fixes",
    "created_at": "2023-11-07T17:55:27Z",
    "built_at": "2023-11-07T18:45:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:44eb3248f20cf489f1126a32683fead4dbdf3326",
    "build_started_at": "2023-11-07T18:19:47Z",
    "run_id": "6788688520"
  },
  {
    "hash": "44fc2b4b749e044e7d00bc018299dbd6e9b7e138",
    "type": "pull_request",
    "pull_request": 4184,
    "label": "clemahieu:rpc_test_check_fix",
    "created_at": "2023-03-16T12:58:10Z",
    "built_at": "2023-03-16T19:12:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:44fc2b4b749e044e7d00bc018299dbd6e9b7e138"
  },
  {
    "hash": "4507ccc85492e12e558a30b7fff5112a829d2d64",
    "type": "pull_request",
    "pull_request": 4486,
    "label": "clemahieu:ledger_view",
    "created_at": "2024-03-12T14:33:24Z",
    "built_at": "2024-03-18T22:42:35Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-18T22:24:23Z",
    "run_id": "8334444480"
  },
  {
    "hash": "455de92574d7084ef4e9f5e82c6bd82b414cb30e",
    "type": "pull_request",
    "title": "Limit batch size for block processor",
    "author": "pwojcikdev",
    "body": "This limits a single block processor batch size to 256 blocks. This makes batch sizes uniform across all components. Additionally, if disk is slow and database transaction is held longer than 500ms, the transaction is refreshed during batch processing.",
    "draft": false,
    "pull_request": 4655,
    "label": "pwojcikdev:blockprocessor-batch-size",
    "created_at": "2024-06-23T17:00:19Z",
    "built_at": "2024-06-23T21:07:53Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:455de92574d7084ef4e9f5e82c6bd82b414cb30e",
    "build_started_at": "2024-06-23T20:38:49Z",
    "run_id": "9636279826"
  },
  {
    "hash": "456acf9e4ad38126e64e84c023e610938fb2877d",
    "type": "pull_request",
    "title": "Redesign the priority scheduler to maintain a 1-to-1 link with running elections",
    "author": "clemahieu",
    "body": "This change appropriately prioritises elections by bucket and then by LRU account. Overfilled buckets have the lowest priority block election cancelled and rolled back.",
    "draft": true,
    "pull_request": 4593,
    "label": "clemahieu:priority_limiter",
    "created_at": "2024-04-30T12:53:50Z",
    "built_at": "2024-04-30T16:54:00Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:456acf9e4ad38126e64e84c023e610938fb2877d",
    "build_started_at": "2024-04-30T16:27:18Z",
    "run_id": "8898320889"
  },
  {
    "hash": "45733b05dc9fff56912c6ecd67b64363b4fbf0c7",
    "type": "pull_request",
    "pull_request": 4286,
    "label": "clemahieu:nano_store_lib",
    "created_at": "2023-09-19T13:14:01Z",
    "built_at": "2023-09-19T13:43:01Z",
    "build_status": "fail",
    "docker_tag": ""
  },
  {
    "hash": "4581625fc2295ddfead98794e095b2a022e8bdd6",
    "type": "pull_request",
    "title": "Log node status periodically",
    "author": "pwojcikdev",
    "body": "This logs node status (block count, block rates, peers, quorum info, election count) every 60 seconds. This should provide immediate and easy to access way to check node status to node operators.\r\n\r\nFinal output looks like this:\r\n\r\n<img width=\"1255\" alt=\"Screenshot 2024-07-09 at 13 23 05\" src=\"https://github.com/nanocurrency/nano-node/assets/3044353/49c6bfeb-5bdc-4974-8cb3-813b9fca7bef\">\r\n",
    "draft": false,
    "pull_request": 4676,
    "label": "pwojcikdev:monitor-log",
    "created_at": "2024-07-09T11:26:42Z",
    "built_at": "2024-07-09T12:00:56Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4581625fc2295ddfead98794e095b2a022e8bdd6",
    "build_started_at": "2024-07-09T11:32:12Z",
    "run_id": "9856241280"
  },
  {
    "hash": "45c3045649b92a2bf507fd1865f4b8af37ee0bd4",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Move network_constants to a dedicated header (#4800)\n\n* Move network_constants to constants.hpp\r\n\r\n* Cleanup",
    "pull_request": "4800",
    "created_at": "2024-11-30T19:17:44Z",
    "built_at": "2024-11-30T19:46:21Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:45c3045649b92a2bf507fd1865f4b8af37ee0bd4",
    "build_started_at": "2024-11-30T19:20:04Z",
    "run_id": "12098897035"
  },
  {
    "hash": "45c7b4fe395f0428e2b017a0f82598098d83b196",
    "type": "pull_request",
    "pull_request": 4342,
    "label": "RickiNano:configurable-unchecked-blocks",
    "created_at": "2023-11-12T21:33:37Z",
    "built_at": "2023-11-12T22:01:18Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:45c7b4fe395f0428e2b017a0f82598098d83b196",
    "build_started_at": "2023-11-12T21:34:01Z",
    "run_id": "6843244922"
  },
  {
    "hash": "45d612ab86586cd4632c6aeb8b9b2d63d6daf36f",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge pull request #4618 from pwojcikdev/node-io-context-6\n\nInternal node io context",
    "pull_request": "4618",
    "created_at": "2024-05-14T10:58:00Z",
    "built_at": "2024-05-14T13:25:59Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:45d612ab86586cd4632c6aeb8b9b2d63d6daf36f",
    "build_started_at": "2024-05-14T11:08:37Z",
    "run_id": "9079780589"
  },
  {
    "hash": "46696f7646a3708c7a607f3850d1d99719b84da8",
    "type": "pull_request",
    "title": "Remove `election_winner_details` container",
    "author": "pwojcikdev",
    "body": "This removes `election_winner_details` container which proved to be difficult to keep in sync and was leaking entires when rollbacks were performed (as part of bounded backlog work). The election that triggered the cementing is now passed as part of context, ie. the flow of cementing is: `election::confirm_once (...) > confirming_set::add (...) > confirming_set::batch_cemented event > active_elections::block_cemented callback (...)` where election is passed through the pipeline.",
    "draft": false,
    "pull_request": 4755,
    "label": "pwojcikdev:remove-election-winner-details",
    "created_at": "2024-10-16T15:15:58Z",
    "built_at": "2024-10-17T22:10:53Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:46696f7646a3708c7a607f3850d1d99719b84da8",
    "build_started_at": "2024-10-17T21:42:55Z",
    "run_id": "11393506838"
  },
  {
    "hash": "46b00bf828c433eaf6d6aa72fa0ddccfb49310e8",
    "type": "pull_request",
    "pull_request": 4426,
    "label": "gr0vity-dev:wip/beta-reset",
    "created_at": "2024-02-10T23:18:19Z",
    "built_at": "2024-02-10T23:49:49Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:46b00bf828c433eaf6d6aa72fa0ddccfb49310e8",
    "build_started_at": "2024-02-10T23:21:38Z",
    "run_id": "7858050875"
  },
  {
    "hash": "46b7af8b66b13bbcd7a9f31285f75d25f044d3d0",
    "type": "commit",
    "created_at": "2023-04-06T19:24:53Z",
    "built_at": "2023-04-13T13:59:15Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:46b7af8b66b13bbcd7a9f31285f75d25f044d3d0"
  },
  {
    "hash": "46e12ebace56b25893a46d64d280f27d0c29c6f5",
    "type": "commit",
    "created_at": "2023-03-02T08:33:06Z",
    "built_at": "2023-03-02T09:06:13Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:46e12ebace56b25893a46d64d280f27d0c29c6f5"
  },
  {
    "hash": "46e3b3dd6f6ea355208ed10fee91112a2870c266",
    "type": "pull_request",
    "pull_request": 4154,
    "label": "pwojcikdev:prs/cleanup-handshake-message",
    "created_at": "2023-02-24T22:08:39Z",
    "built_at": "2023-02-24T22:51:23Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:46e3b3dd6f6ea355208ed10fee91112a2870c266"
  },
  {
    "hash": "46ed8a12a945df00d1289b7c818ffb9c7062ba9e",
    "type": "pull_request",
    "pull_request": 4161,
    "label": "clemahieu:block_processor_drop",
    "created_at": "2023-02-27T23:23:24Z",
    "built_at": "2023-02-28T00:00:01Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:46ed8a12a945df00d1289b7c818ffb9c7062ba9e"
  },
  {
    "hash": "46f9ad5877d3e8a1fd700c19dbf7d89996ed2bd1",
    "type": "pull_request",
    "title": "Add per-bucket election limiter",
    "author": "clemahieu",
    "body": "This change is a simpler version of the priority scheduler per-bucket limiter that tracks the number of elections it's started while retaining the ability to queue blocks for activation once elections already started for the bucket complete.\r\n\r\nThis removes the priority scheduler thread. Elections are activated at time of call to ::activate or when a different election is being cleaned up.",
    "draft": false,
    "pull_request": 4623,
    "label": "clemahieu:merge_buckets_priority",
    "created_at": "2024-05-14T22:54:24Z",
    "built_at": "2024-05-15T03:13:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:46f9ad5877d3e8a1fd700c19dbf7d89996ed2bd1",
    "build_started_at": "2024-05-15T02:45:18Z",
    "run_id": "9089229637"
  },
  {
    "hash": "47150d83dd2eeb3196cc1a63ddc1693a72e93c89",
    "type": "pull_request",
    "pull_request": 4325,
    "label": "pwojcikdev:hinted-transaction-refresh",
    "created_at": "2023-11-03T00:58:03Z",
    "built_at": "2023-11-03T11:11:58Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:47150d83dd2eeb3196cc1a63ddc1693a72e93c89",
    "build_started_at": "2023-11-03T10:29:09Z",
    "run_id": "6744048512"
  },
  {
    "hash": "471a0a347a7f6a3b313f3fce556c5adabcca9bde",
    "type": "commit",
    "created_at": "2023-01-30T20:26:20Z",
    "built_at": "2023-02-06T20:22:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:471a0a347a7f6a3b313f3fce556c5adabcca9bde"
  },
  {
    "hash": "47539ac7181a8ea8d66dc3a04d87282b9176efcf",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Enable reporting memory leaks when running sanitizers (#4769)",
    "pull_request": "4769",
    "created_at": "2024-10-27T11:46:34Z",
    "built_at": "2024-10-27T12:19:32Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:47539ac7181a8ea8d66dc3a04d87282b9176efcf",
    "build_started_at": "2024-10-27T11:51:15Z",
    "run_id": "11540223959"
  },
  {
    "hash": "47568010c014eff636e228c750ac2d854a2696c6",
    "type": "commit",
    "created_at": "2023-07-20T17:37:15Z",
    "built_at": "2023-07-20T18:32:33Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:47568010c014eff636e228c750ac2d854a2696c6"
  },
  {
    "hash": "47654f406155d7146de2d372bb634034f572d160",
    "type": "pull_request",
    "pull_request": 4415,
    "label": "pwojcikdev:update-macos-runners",
    "created_at": "2024-01-31T16:44:18Z",
    "built_at": "2024-01-31T17:15:40Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:47654f406155d7146de2d372bb634034f572d160",
    "build_started_at": "2024-01-31T16:49:07Z",
    "run_id": "7729488531"
  },
  {
    "hash": "47749fbe46c89e59699ed77b2e57270e76a045c6",
    "type": "pull_request",
    "title": "Redesign the priority scheduler to maintain a 1-to-1 link with running elections",
    "author": "clemahieu",
    "body": "This change appropriately prioritises elections by bucket and then by LRU account. Overfilled buckets have the lowest priority block election cancelled and rolled back.",
    "draft": true,
    "pull_request": 4593,
    "label": "clemahieu:priority_limiter",
    "created_at": "2024-04-30T12:53:50Z",
    "built_at": "2024-04-30T13:53:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:47749fbe46c89e59699ed77b2e57270e76a045c6",
    "build_started_at": "2024-04-30T13:19:07Z",
    "run_id": "8895630731"
  },
  {
    "hash": "47889a2ffa97d1a4265d0f175d5a79e63f3e4fc3",
    "type": "pull_request",
    "pull_request": 4267,
    "label": "clemahieu:remove_signature_threads",
    "created_at": "2023-08-22T12:30:21Z",
    "built_at": "2023-09-07T11:56:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:47889a2ffa97d1a4265d0f175d5a79e63f3e4fc3"
  },
  {
    "hash": "4791f3b7abe1b969063fd73c71d7c2798d5efbb2",
    "type": "pull_request",
    "pull_request": 4345,
    "label": "clemahieu:block_checker",
    "created_at": "2023-11-14T12:02:06Z",
    "built_at": "2024-03-18T19:38:26Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-18T19:20:13Z",
    "run_id": "8332424212"
  },
  {
    "hash": "47a718eee395f05e83f656cc4f30cd4b8eb8f863",
    "type": "pull_request",
    "pull_request": 4248,
    "label": "pwojcikdev:ci-overhaul-rebased",
    "created_at": "2023-06-20T15:31:32Z",
    "built_at": "2023-06-20T19:46:39Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:47a718eee395f05e83f656cc4f30cd4b8eb8f863"
  },
  {
    "hash": "47b18f9b5f261f3a5d638b51ea4802eacf9b0a94",
    "type": "commit",
    "author": "clemahieu",
    "title": "Merge pull request #4665 from pwojcikdev/bounded-cementing\n\nBounded cementing",
    "pull_request": "4665",
    "created_at": "2024-07-09T16:42:39Z",
    "built_at": "2024-07-09T17:25:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:47b18f9b5f261f3a5d638b51ea4802eacf9b0a94",
    "build_started_at": "2024-07-09T16:43:44Z",
    "run_id": "9861147515"
  },
  {
    "hash": "47d68ac3a45b31f33750b69bfd9f1d5ae6de77f4",
    "type": "commit",
    "created_at": "2024-03-06T17:40:43Z",
    "built_at": "2024-03-06T18:18:18Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:47d68ac3a45b31f33750b69bfd9f1d5ae6de77f4",
    "build_started_at": "2024-03-06T17:44:51Z",
    "run_id": "8176435828"
  },
  {
    "hash": "47e6ae24de51ebc554debb836631887e8f2e375b",
    "type": "pull_request",
    "pull_request": 4100,
    "label": "dsiganos:introduce_system_start_election",
    "created_at": "2023-02-03T01:41:02Z",
    "built_at": "2023-02-07T21:26:01Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:47e6ae24de51ebc554debb836631887e8f2e375b"
  },
  {
    "hash": "47e7c811680f5ea1332e19ad1fc7ed01f838ad0d",
    "type": "commit",
    "created_at": "2024-03-11T21:09:46Z",
    "built_at": "2024-03-11T21:45:27Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:47e7c811680f5ea1332e19ad1fc7ed01f838ad0d",
    "build_started_at": "2024-03-11T21:20:40Z",
    "run_id": "8239878777"
  },
  {
    "hash": "47fe1e864707e33e0070ae0861212eaec7f775fd",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Simplify `system.add_node` checks (#4614)",
    "pull_request": "4614",
    "created_at": "2024-05-14T15:03:26Z",
    "built_at": "2024-05-14T15:39:44Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:47fe1e864707e33e0070ae0861212eaec7f775fd",
    "build_started_at": "2024-05-14T15:12:26Z",
    "run_id": "9081818148"
  },
  {
    "hash": "48214dcb1e194f474ceb7356185c8dbbd0a4d5ae",
    "type": "pull_request",
    "title": "Signal manager thread role",
    "author": "pwojcikdev",
    "body": null,
    "draft": false,
    "pull_request": 4565,
    "label": "pwojcikdev:sigman-thread-role",
    "created_at": "2024-04-15T11:32:00Z",
    "built_at": "2024-04-15T12:04:38Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:48214dcb1e194f474ceb7356185c8dbbd0a4d5ae",
    "build_started_at": "2024-04-15T11:37:07Z",
    "run_id": "8688402572"
  },
  {
    "hash": "48293b86b27f77508d2c2fcd057b969b982e3cad",
    "type": "pull_request",
    "title": "Remove legacy bootstrap",
    "author": "pwojcikdev",
    "body": "This removes legacy bootstrap, which was replaced by the new ascending bootstrap. Legacy bootstrap implementation was unnecessarily complicated with many inefficiencies. Debugging it was a pain and slowed down development of new features. \r\n\r\nAll the `bootstrap_ascending*` classes and stats are renamed to simply `bootstrap`.\r\n\r\nTODO for the future is porting previous `bootstrap_processor` test suite to use the new bootstrapper.",
    "draft": false,
    "pull_request": 4777,
    "label": "pwojcikdev:remove-legacy-bootstrap-2",
    "created_at": "2024-10-29T17:20:20Z",
    "built_at": "2024-10-29T21:52:18Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:48293b86b27f77508d2c2fcd057b969b982e3cad",
    "build_started_at": "2024-10-29T21:24:26Z",
    "run_id": "11582704030"
  },
  {
    "hash": "483c6906e8fe556a2347f225c1af16fc04f702aa",
    "type": "commit",
    "author": "clemahieu",
    "title": "Pass transaction in to end iterator for future use. (#4761)",
    "pull_request": "4761",
    "created_at": "2024-10-21T22:19:36Z",
    "built_at": "2024-10-21T23:00:29Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:483c6906e8fe556a2347f225c1af16fc04f702aa",
    "build_started_at": "2024-10-21T22:30:10Z",
    "run_id": "11449680315"
  },
  {
    "hash": "4847439c0772dfff8d65cb29dae405260360fe58",
    "type": "pull_request",
    "title": "Remove `election_winner_details` container",
    "author": "pwojcikdev",
    "body": "This removes `election_winner_details` container which proved to be difficult to keep in sync and was leaking entires when rollbacks were performed (as part of bounded backlog work). The election that triggered the cementing is now passed as part of context, ie. the flow of cementing is: `election::confirm_once (...) > confirming_set::add (...) > confirming_set::batch_cemented event > active_elections::block_cemented callback (...)` where election is passed through the pipeline.",
    "draft": false,
    "pull_request": 4755,
    "label": "pwojcikdev:remove-election-winner-details",
    "created_at": "2024-10-16T15:15:58Z",
    "built_at": "2024-10-17T22:59:29Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4847439c0772dfff8d65cb29dae405260360fe58",
    "build_started_at": "2024-10-17T22:32:10Z",
    "run_id": "11394057096"
  },
  {
    "hash": "485a104a30e1be447063ed4fbfb64136a012a00a",
    "type": "pull_request",
    "title": "Fix unit test bootstrap_processor.lazy_pruning_missing_block",
    "author": "dsiganos",
    "body": null,
    "draft": false,
    "pull_request": 4575,
    "label": "dsiganos:fix_lazy_pruning_missing_block",
    "created_at": "2024-04-18T03:21:13Z",
    "built_at": "2024-04-18T13:47:28Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:485a104a30e1be447063ed4fbfb64136a012a00a",
    "build_started_at": "2024-04-18T13:22:10Z",
    "run_id": "8738721240"
  },
  {
    "hash": "4876e450b55ed9cfd1520b715c56e697faa43b73",
    "type": "pull_request",
    "pull_request": 4347,
    "label": "pwojcikdev:bootstrap-fixes",
    "created_at": "2023-12-01T10:12:34Z",
    "built_at": "2023-12-01T11:46:10Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4876e450b55ed9cfd1520b715c56e697faa43b73",
    "build_started_at": "2023-12-01T11:21:20Z",
    "run_id": "7059356191"
  },
  {
    "hash": "4889d3cf91769310329345760e479ee4d56ef8d4",
    "type": "commit",
    "created_at": "2024-01-17T07:01:46Z",
    "built_at": "2024-01-17T07:31:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4889d3cf91769310329345760e479ee4d56ef8d4",
    "build_started_at": "2024-01-17T07:07:16Z",
    "run_id": "7552222720"
  },
  {
    "hash": "48a0cbb7638a39ee3d9fca588aa26d6bace07c87",
    "type": "pull_request",
    "pull_request": 4419,
    "label": "gr0vity-dev:prs/fix_unittests/election_scheduler.no_vacancy",
    "created_at": "2024-02-02T13:49:50Z",
    "built_at": "2024-02-02T14:17:42Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:48a0cbb7638a39ee3d9fca588aa26d6bace07c87",
    "build_started_at": "2024-02-02T13:52:05Z",
    "run_id": "7756885542"
  },
  {
    "hash": "48a4bf885f0ae2dba56785fb2271f3c66e0123bc",
    "type": "pull_request",
    "pull_request": 4255,
    "label": "brandon-bb:to_string",
    "created_at": "2023-07-01T14:57:38Z",
    "built_at": "2023-08-30T17:57:15Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:48a4bf885f0ae2dba56785fb2271f3c66e0123bc"
  },
  {
    "hash": "48c0ba4f55416463c050ff048be13fdef3b8906f",
    "type": "pull_request",
    "title": "Ed25519 dalek rust",
    "author": "Fiono11",
    "body": null,
    "draft": true,
    "pull_request": 4752,
    "label": "Fiono11:ed25519-dalek-rust",
    "created_at": "2024-10-09T16:30:54Z",
    "built_at": null,
    "build_status": "building",
    "docker_tag": null,
    "build_started_at": "2024-10-09T16:34:09Z",
    "run_id": null
  },
  {
    "hash": "48c98a2aa76540640b2a0d84d885f22e87333305",
    "type": "commit",
    "author": "clemahieu",
    "title": "Fix active_elections.activate_account_chain\n\nThis test is supposed to be testing the node's internal election activation logic but this is being circumvented by activating elections within the test itself.",
    "pull_request": "4619",
    "created_at": "2024-05-13T15:33:25Z",
    "built_at": "2024-05-14T13:45:38Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:48c98a2aa76540640b2a0d84d885f22e87333305",
    "build_started_at": "2024-05-14T11:41:17Z",
    "run_id": "9080069022"
  },
  {
    "hash": "48d390cc2cd990a37d4df6b9e3824d0c98ba696b",
    "type": "pull_request",
    "pull_request": 4199,
    "label": "thsfs:add_cmake_for_submodules",
    "created_at": "2023-03-22T19:51:02Z",
    "built_at": "2023-03-23T21:37:53Z",
    "build_status": "fail",
    "docker_tag": ""
  },
  {
    "hash": "48db9f07660f1a05959ffe4dbf70056ad27e6172",
    "type": "pull_request",
    "pull_request": 4484,
    "label": "clemahieu:ledger_successor_simplify",
    "created_at": "2024-03-12T12:33:19Z",
    "built_at": "2024-03-13T14:29:41Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-13T14:14:06Z",
    "run_id": "8266151397"
  },
  {
    "hash": "48ebf8de619b8949d53cbe59e6e658ba25ec1cb5",
    "type": "pull_request",
    "title": "Node configuration auto updater",
    "author": "RickiNano",
    "body": "This pull request introduces a new command line feature `--update_config` , which updates the nodes current configuration by merging custom settings into the latest configuration template. Custom settings will be uncommented in the new configuration, while default values will be commented.\r\nThis feature simplifies the process for node operators to maintain an up-to-date configuration without manually merging the current configuration with the new one.\r\n\r\nFeatures:\r\n* Updates config file with new entries, tables and documentation\r\n* Removes entries that are no longer referenced in code\r\n* Preserves custom values from current configuration\r\n* Formatted output\r\n\r\nLimitations:\r\n* Currently only works with node configuration file but could easily be extended to rpc an log configs\r\n",
    "draft": false,
    "pull_request": 4579,
    "label": "RickiNano:auto_update_config",
    "created_at": "2024-04-20T07:34:06Z",
    "built_at": "2024-04-24T20:02:17Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:48ebf8de619b8949d53cbe59e6e658ba25ec1cb5",
    "build_started_at": "2024-04-24T19:31:22Z",
    "run_id": "8822237944"
  },
  {
    "hash": "48f4b0c7cde11321ef67621981194d0611bdf8eb",
    "type": "pull_request",
    "title": "Optimize cemented callbacks",
    "author": "pwojcikdev",
    "body": "This attempts to optimize the election cementing callbacks. It often takes as long or even longer to cement a confirmed election as it takes to get it confirmed in the first place. This is not a complete solution, there is still a delay, but I hope it's a step in the right direction. \r\nWe're debugging this together with @gr0vity-dev who really is doing incredible work to dig deep into this issue.\r\n\r\n![image](https://github.com/nanocurrency/nano-node/assets/3044353/006a4fc1-d499-478a-a372-7b5240b7ef01)\r\n",
    "draft": false,
    "pull_request": 4642,
    "label": "pwojcikdev:cemented-observers-optimize",
    "created_at": "2024-05-24T13:34:30Z",
    "built_at": "2024-05-24T16:35:48Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:48f4b0c7cde11321ef67621981194d0611bdf8eb",
    "build_started_at": "2024-05-24T16:09:38Z",
    "run_id": "9226865831"
  },
  {
    "hash": "48fb94bf46da0b4d7e6e4c2125f51fcdef0295ca",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Collect container info",
    "pull_request": "N/A",
    "created_at": "2024-05-24T13:46:40Z",
    "built_at": "2024-06-18T15:19:39Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:48fb94bf46da0b4d7e6e4c2125f51fcdef0295ca",
    "build_started_at": "2024-06-18T14:35:34Z",
    "run_id": "9567285628"
  },
  {
    "hash": "49009d77aedbeeacca686f29d7b9b778f7a013db",
    "type": "commit",
    "created_at": "2023-02-02T17:52:01Z",
    "built_at": "2023-02-06T20:36:45Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:49009d77aedbeeacca686f29d7b9b778f7a013db"
  },
  {
    "hash": "4920edd3cb6b7b8ede966c2b8719a12ced1ec245",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge branch 'develop' into networking-fixes/tcp-listener-2",
    "pull_request": "4523",
    "created_at": "2024-04-19T09:29:45Z",
    "built_at": "2024-04-22T10:43:28Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4920edd3cb6b7b8ede966c2b8719a12ced1ec245",
    "build_started_at": "2024-04-22T10:18:03Z",
    "run_id": "8782379377"
  },
  {
    "hash": "49443419325e7386c2ee19b6705c25f66cef059a",
    "type": "commit",
    "created_at": "2023-02-18T01:12:20Z",
    "built_at": "2023-02-18T13:44:37Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:49443419325e7386c2ee19b6705c25f66cef059a"
  },
  {
    "hash": "49540bf947c3f12a28559a324b2a642d7bdf8eab",
    "type": "pull_request",
    "pull_request": 4185,
    "label": "clemahieu:node_rep_weight_fix",
    "created_at": "2023-03-17T16:42:46Z",
    "built_at": "2023-03-18T22:29:52Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:49540bf947c3f12a28559a324b2a642d7bdf8eab"
  },
  {
    "hash": "496539cf184171d06a4d3430eb198d1653a36a29",
    "type": "pull_request",
    "title": "Bounded election buckets with dynamic reprioritization",
    "author": "pwojcikdev",
    "body": "Based on:\r\n- Elections sets (can't find PR, Colin's initial attempt at bucket limiting)\r\n- Bobs bucket vacancy branch https://github.com/nanocurrency/nano-node/compare/develop...gr0vity-dev:nano-node:wip/bucket_vacancy \r\n\r\nbut simpler, more robust and allows for dynamically dropping and scheduling higher priority elections. Also, buckets can be configured to opportunistically use more available space if AEC is underutilized.",
    "draft": false,
    "pull_request": 4626,
    "label": "pwojcikdev:election-bounding-2",
    "created_at": "2024-05-15T16:21:38Z",
    "built_at": "2024-07-10T17:18:36Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:496539cf184171d06a4d3430eb198d1653a36a29",
    "build_started_at": "2024-07-10T16:49:45Z",
    "run_id": "9878246007"
  },
  {
    "hash": "4986ae3914de57aec4b366f9890d6108615b3c8e",
    "type": "commit",
    "created_at": "2023-04-06T21:37:06Z",
    "built_at": "2023-04-13T14:13:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4986ae3914de57aec4b366f9890d6108615b3c8e"
  },
  {
    "hash": "49957188db01b7663fedaab8aa88380a7b5630e4",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge pull request #4748 from RickiNano/Vote-wait\n\nSimplify vote generator",
    "pull_request": "4748",
    "created_at": "2024-10-22T09:12:34Z",
    "built_at": "2024-10-22T09:41:15Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:49957188db01b7663fedaab8aa88380a7b5630e4",
    "build_started_at": "2024-10-22T09:13:17Z",
    "run_id": "11457038351"
  },
  {
    "hash": "49a6b4119be34b6f9fa4e2922522650173d35840",
    "type": "pull_request",
    "pull_request": 4449,
    "label": "pwojcikdev:repcrawler-overhaul-2",
    "created_at": "2024-02-25T14:21:12Z",
    "built_at": "2024-03-08T16:23:46Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:49a6b4119be34b6f9fa4e2922522650173d35840",
    "build_started_at": "2024-03-08T15:58:52Z",
    "run_id": "8205801281"
  },
  {
    "hash": "49b280b300aabcd67dc7cda75f1bf4ca69623649",
    "type": "pull_request",
    "pull_request": 4345,
    "label": "clemahieu:block_checker",
    "created_at": "2023-11-14T12:02:06Z",
    "built_at": "2024-02-18T10:08:19Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:49b280b300aabcd67dc7cda75f1bf4ca69623649",
    "build_started_at": "2024-02-18T09:43:26Z",
    "run_id": "7948111729"
  },
  {
    "hash": "49b2e7312dbb4b352611405a8615c106cdd2858d",
    "type": "pull_request",
    "title": "Introduce ledger view classes to separate confirmed/unconfirmed operations on the ledger",
    "author": "clemahieu",
    "body": "The motivation for this PR is in preparation for bounded backlog changes. Currently, both confirmed and unconfirmed transactions are together on disk and the ACID properties of the ledger are encapsulated with a database transaction.\r\n\r\nWith the bounded backlog, blocks will be stored in memory so there will need to be memory synchronization in addition to database synchronization. Rather than filling the ledger class with unconfirmed/confirmed variants for each operation.\r\n\r\nThe ledger is divided in to several sets and subsets:\r\nledger::confirmed - The set of confirmed transactions\r\nledger::any - The superset of confirmed and unconfirmed transactions\r\n\r\nWhen unconfirmed blocks are held in memory the set ledger::unconfirmed will be added which holds only unconfirmed transactions.\r\n\r\nIn the future the confirming_set can be moved on to ledger which is the subset of unconfirmed blocks that are queued to be moved in to the confirmed set.",
    "draft": false,
    "pull_request": 4486,
    "label": "clemahieu:ledger_view",
    "created_at": "2024-03-12T14:33:24Z",
    "built_at": "2024-04-15T21:51:18Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:49b2e7312dbb4b352611405a8615c106cdd2858d",
    "build_started_at": "2024-04-15T21:22:08Z",
    "run_id": "8696268577"
  },
  {
    "hash": "49b8ccea28682a4412b2533a1b29f27eb145c93e",
    "type": "commit",
    "created_at": "2023-02-08T22:02:05Z",
    "built_at": "2023-02-08T22:37:43Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:49b8ccea28682a4412b2533a1b29f27eb145c93e"
  },
  {
    "hash": "49cf520bfdd82486ad05e57586c920bf1133aba3",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Tests #2",
    "pull_request": "4735",
    "created_at": "2024-09-24T17:48:55Z",
    "built_at": null,
    "build_status": "building",
    "docker_tag": null,
    "build_started_at": "2024-09-25T13:41:38Z",
    "run_id": null
  },
  {
    "hash": "4a00f05a759ed095d676fe2c930f2501b81a480b",
    "type": "pull_request",
    "title": "Introduce `active_transactions_config`",
    "author": "gr0vity-dev",
    "body": "Introduce `active_transactions_config` :\r\n\r\n\r\n| Old config                                | New config                                   |\r\n|-------------------------------------------|----------------------------------------------|\r\n| active_elections_size                     | active_transactions.size                     |\r\n| active_elections_hinted_limit_percentage | active_transactions.hinted_limit_percentage |\r\n| active_elections_optimistic_limit_percentage | active_transactions.optimistic_limit_percentage |\r\n| confirmation_history_size                 | active_transactions.confirmation_history_size|\r\n|  /                 | active_transactions.confirmation_cache|\r\n\r\n\r\n\r\nNewly introduced `confirmation_cache` is used in `recently_confirmed{ config.confirmation_cache },`  instead of the hardcoded value `65536`\r\n",
    "draft": false,
    "pull_request": 4604,
    "label": "gr0vity-dev:prs/active_transactions_config",
    "created_at": "2024-05-06T10:16:04Z",
    "built_at": "2024-05-07T14:17:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4a00f05a759ed095d676fe2c930f2501b81a480b",
    "build_started_at": "2024-05-07T13:51:35Z",
    "run_id": "8986607047"
  },
  {
    "hash": "4a14086454d991f6bc4c3f5b0685732682f623dc",
    "type": "commit",
    "created_at": "2023-02-01T16:38:27Z",
    "built_at": "2023-02-06T20:53:47Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4a14086454d991f6bc4c3f5b0685732682f623dc"
  },
  {
    "hash": "4a144c6cf4305ab73f81878d0729aa1b6bb49160",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge pull request #4735 from pwojcikdev/vote-duplicate-filter\n\nNetwork filter for votes",
    "pull_request": "4735",
    "created_at": "2024-09-25T13:31:25Z",
    "built_at": null,
    "build_status": "building",
    "docker_tag": null,
    "build_started_at": "2024-09-25T13:41:38Z",
    "run_id": null
  },
  {
    "hash": "4a2c86a8ff2a792e4e52ddaeef4d37ea91db4d53",
    "type": "commit",
    "created_at": "2023-02-16T21:24:36Z",
    "built_at": "2023-02-16T22:05:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4a2c86a8ff2a792e4e52ddaeef4d37ea91db4d53"
  },
  {
    "hash": "4a57d9a4ce80a8dc634bf6c909e599934d9b3652",
    "type": "pull_request",
    "pull_request": 4133,
    "label": "clemahieu:election_occupancy",
    "created_at": "2023-02-15T18:23:49Z",
    "built_at": "2023-03-07T04:57:59Z",
    "build_status": "fail",
    "docker_tag": ""
  },
  {
    "hash": "4a7ac42d9f757c4ad309535515178b1bd2987a5c",
    "type": "pull_request",
    "title": "Add database information to telemetry data",
    "author": "RickiNano",
    "body": "Adds telemetry information about the type of database backend the node is using.\r\nThe telemetry RPC function reports both individual database backend information or consolidated (average). The reported database backend for each node will be either 'RocksDb' , 'LMDB' or \"Unknown\". \r\n'Unknown' is for nodes running v26.1 or earlier that does not send any database information in telemetry data.",
    "draft": false,
    "pull_request": 4675,
    "label": "RickiNano:Telemetry-db-backend",
    "created_at": "2024-07-08T18:09:12Z",
    "built_at": "2024-07-10T11:34:13Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4a7ac42d9f757c4ad309535515178b1bd2987a5c",
    "build_started_at": "2024-07-10T11:07:21Z",
    "run_id": "9873057272"
  },
  {
    "hash": "4a81e72b852616f40e6525302a95832fe8bf58d4",
    "type": "pull_request",
    "pull_request": 4496,
    "label": "clemahieu:receivable_iteration",
    "created_at": "2024-03-16T20:04:42Z",
    "built_at": "2024-03-17T10:07:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4a81e72b852616f40e6525302a95832fe8bf58d4",
    "build_started_at": "2024-03-17T09:35:52Z",
    "run_id": "8314481988"
  },
  {
    "hash": "4aa3cf42b4ab561514be85dff8b5aec71a35bdce",
    "type": "pull_request",
    "pull_request": 4334,
    "label": "pwojcikdev:hinted-fixes",
    "created_at": "2023-11-07T17:55:27Z",
    "built_at": "2023-11-07T18:27:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4aa3cf42b4ab561514be85dff8b5aec71a35bdce",
    "build_started_at": "2023-11-07T17:59:44Z",
    "run_id": "6788456144"
  },
  {
    "hash": "4ad3629218a21327ba0d2fcde4366346e7d90ae4",
    "type": "pull_request",
    "title": "Rework random block sampling for rep crawler",
    "author": "pwojcikdev",
    "body": "This improves how random blocks are sampled for rep crawler. The issue with previous way was that it sometimes caused tests to fail, simply because block hashes were too close together and it was improbable for some to be chosen. \r\n\r\nThis was never a problem for live network where there are many more blocks, but randomly failing tests are annoying nevertheless. The new way avoids some code repetition so that's a plus.",
    "draft": false,
    "pull_request": 4792,
    "label": "pwojcikdev:random-block-sampling",
    "created_at": "2024-11-25T16:25:21Z",
    "built_at": "2024-11-25T17:12:56Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4ad3629218a21327ba0d2fcde4366346e7d90ae4",
    "build_started_at": "2024-11-25T16:28:08Z",
    "run_id": "12014750086"
  },
  {
    "hash": "4ad900ec31abf5245a50da65f30038742479fb27",
    "type": "pull_request",
    "pull_request": 4468,
    "label": "clemahieu:block_ledger_header_reduction",
    "created_at": "2024-03-07T09:52:14Z",
    "built_at": "2024-03-07T12:24:38Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4ad900ec31abf5245a50da65f30038742479fb27",
    "build_started_at": "2024-03-07T11:59:51Z",
    "run_id": "8187715569"
  },
  {
    "hash": "4b0434d7e88412ffd357322982807a2e1130cafc",
    "type": "pull_request",
    "title": "Introduce `active_transactions_config`",
    "author": "gr0vity-dev",
    "body": "Introduce `active_transactions_config` :\r\n\r\n\r\n| Old config                                | New config                                   |\r\n|-------------------------------------------|----------------------------------------------|\r\n| active_elections_size                     | active_transactions.size                     |\r\n| active_elections_hinted_limit_percentage | active_transactions.hinted_limit_percentage |\r\n| active_elections_optimistic_limit_percentage | active_transactions.optimistic_limit_percentage |\r\n| confirmation_history_size                 | active_transactions.confirmation_history_size|\r\n|  /                 | active_transactions.confirmation_cache|\r\n\r\n\r\n\r\nNewly introduced `confirmation_cache` is used in `recently_confirmed{ config.confirmation_cache },`  instead of the hardcoded value `65536`\r\n",
    "draft": false,
    "pull_request": 4604,
    "label": "gr0vity-dev:prs/active_transactions_config",
    "created_at": "2024-05-06T10:16:04Z",
    "built_at": "2024-05-06T14:41:02Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4b0434d7e88412ffd357322982807a2e1130cafc",
    "build_started_at": "2024-05-06T14:11:55Z",
    "run_id": "8970539614"
  },
  {
    "hash": "4b0e2e8e156ffed09d71e99d8c83b359a58fa1e0",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Rename `push_task` to `post` to match asio naming",
    "pull_request": "N/A",
    "created_at": "2024-10-22T13:53:15Z",
    "built_at": "2024-10-27T11:56:10Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4b0e2e8e156ffed09d71e99d8c83b359a58fa1e0",
    "build_started_at": "2024-10-27T11:28:44Z",
    "run_id": "11540098371"
  },
  {
    "hash": "4b1408fafd416df11f3139f7a833cbaf2eea40db",
    "type": "commit",
    "created_at": "2024-02-05T19:54:53Z",
    "built_at": "2024-02-08T10:52:09Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4b1408fafd416df11f3139f7a833cbaf2eea40db",
    "build_started_at": "2024-02-08T10:13:37Z",
    "run_id": "7828015254"
  },
  {
    "hash": "4b2f574c8a2496431986a7c01cb0f2fd91b22430",
    "type": "commit",
    "created_at": "2024-03-07T15:29:53Z",
    "built_at": "2024-03-09T13:02:22Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4b2f574c8a2496431986a7c01cb0f2fd91b22430",
    "build_started_at": "2024-03-09T12:18:32Z",
    "run_id": "8214449124"
  },
  {
    "hash": "4b4c271d3c63cbbe4ce357b846deafc5173dc02f",
    "type": "commit",
    "created_at": "2023-03-10T12:09:24Z",
    "built_at": "2023-03-10T13:06:19Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4b4c271d3c63cbbe4ce357b846deafc5173dc02f"
  },
  {
    "hash": "4b7f91f191a347d386e6d42348c461171104ed6f",
    "type": "commit",
    "created_at": "2023-10-17T17:11:56Z",
    "built_at": "2023-10-17T18:09:53Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4b7f91f191a347d386e6d42348c461171104ed6f"
  },
  {
    "hash": "4b9a64211f48d6c44637490c341de240cdde9a68",
    "type": "pull_request",
    "title": "Remove `election_winner_details` container",
    "author": "pwojcikdev",
    "body": "This removes `election_winner_details` container which proved to be difficult to keep in sync and was leaking entires when rollbacks were performed (as part of bounded backlog work). The election that triggered the cementing is now passed as part of context, ie. the flow of cementing is: `election::confirm_once (...) > confirming_set::add (...) > confirming_set::batch_cemented event > active_elections::block_cemented callback (...)` where election is passed through the pipeline.",
    "draft": false,
    "pull_request": 4755,
    "label": "pwojcikdev:remove-election-winner-details",
    "created_at": "2024-10-16T15:15:58Z",
    "built_at": "2024-10-17T22:41:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4b9a64211f48d6c44637490c341de240cdde9a68",
    "build_started_at": "2024-10-17T22:14:34Z",
    "run_id": "11393861805"
  },
  {
    "hash": "4bac9419795f8a2789c240e25fae8fad55c3b671",
    "type": "commit",
    "created_at": "2024-02-27T15:43:55Z",
    "built_at": "2024-03-06T18:49:57Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4bac9419795f8a2789c240e25fae8fad55c3b671",
    "build_started_at": "2024-03-06T17:44:51Z",
    "run_id": "8176435828"
  },
  {
    "hash": "4bb2db82ddbb3b7133069c6b371fe768a1db8b77",
    "type": "pull_request",
    "pull_request": 4477,
    "label": "RickiNano:toml-description-rename",
    "created_at": "2024-03-11T15:42:34Z",
    "built_at": "2024-03-12T12:03:19Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4bb2db82ddbb3b7133069c6b371fe768a1db8b77",
    "build_started_at": "2024-03-12T11:38:53Z",
    "run_id": "8248150914"
  },
  {
    "hash": "4bcb3b1a5405398b022daa4ab061656e37ad4cef",
    "type": "pull_request",
    "pull_request": 4159,
    "label": "pwojcikdev:prs/improve-processing-queue-2",
    "created_at": "2023-02-27T20:18:28Z",
    "built_at": "2023-02-27T21:02:20Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4bcb3b1a5405398b022daa4ab061656e37ad4cef"
  },
  {
    "hash": "4bfdbee3a0a609642fd42c50ee1f148680bfb9db",
    "type": "pull_request",
    "title": "Convert store iterators to variants rather than using polymorphism.",
    "author": "clemahieu",
    "body": "This converts the store iterators from version that use polymorphism to using std::variant.\r\n\r\nThe primary drivers for this change is to simplify and allow more complex iterators to be created where this was previously fairly difficult to do.\r\n\r\nThe iterators are separated in the 3 parts:\r\n- The base database iterators LMDB/RocksDB that use the library's native data type, MDB_val/Slice.\r\n- A variant database iterator that can hold any of the raw database iterators and adapts the native database type to std::span<uint8_t>\r\n- A strong-typed database iterator that mirrors existing iterator behavior with strong typing for key/value pairs.\r\n\r\nThe iterators are bi-directional with a sentinel value to signify end of iteration. The iterators are also circular so after reaching the end-sentinel value, further incrementing will wrap around to the beginning, or decrementing will position the iterator at the last key/value.\r\n\r\nUsing std::variant also eliminates heap allocations when constructing iterators which can improve performance in some circumstances.",
    "draft": false,
    "pull_request": 4759,
    "label": "clemahieu:store_iterator_cleanup",
    "created_at": "2024-10-20T19:24:20Z",
    "built_at": "2024-10-26T16:22:23Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4bfdbee3a0a609642fd42c50ee1f148680bfb9db",
    "build_started_at": "2024-10-26T15:54:36Z",
    "run_id": "11533094781"
  },
  {
    "hash": "4c05173db4a99b239422c0d0430439f432a45a55",
    "type": "pull_request",
    "title": "Rename to core_test_main to entry for consistency",
    "author": "pwojcikdev",
    "body": null,
    "draft": false,
    "pull_request": 4572,
    "label": "pwojcikdev:core-test-entry",
    "created_at": "2024-04-17T09:38:36Z",
    "built_at": "2024-04-17T10:04:40Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4c05173db4a99b239422c0d0430439f432a45a55",
    "build_started_at": "2024-04-17T09:38:37Z",
    "run_id": "8719703576"
  },
  {
    "hash": "4c4ab80bee7cfc7884d6f392392c1c2e0d45920e",
    "type": "pull_request",
    "title": "Block checker",
    "body": "Rewrite of https://github.com/nanocurrency/nano-node/pull/3727 with functional style checking rather than a pipeline",
    "draft": true,
    "pull_request": 4345,
    "label": "clemahieu:block_checker",
    "created_at": "2023-11-14T12:02:06Z",
    "built_at": "2024-04-07T18:52:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4c4ab80bee7cfc7884d6f392392c1c2e0d45920e",
    "build_started_at": "2024-04-07T18:28:04Z",
    "run_id": "8590789824"
  },
  {
    "hash": "4c6b0766a6cfb28fd2eaf37a917be12edf8398b0",
    "type": "commit",
    "created_at": "2023-09-01T11:43:35Z",
    "built_at": "2023-09-01T13:32:26Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4c6b0766a6cfb28fd2eaf37a917be12edf8398b0"
  },
  {
    "hash": "4c813b25e565684254c0c3d1eab599c0ce64dcc2",
    "type": "pull_request",
    "title": "Directly confirm blocks within unit tests rather than starting/forcing elections",
    "author": "clemahieu",
    "body": "Replaces nano::test::force_confirm with nano::test::confirm and overrides. The action was renamed to test::confirm because the action is to confirm.  election::force_confirm is an action specific to an election where the normal path causes confirmation after the vote tally has quorum and force_confirm simulates this.\r\n\r\nThis removes ledger::force_confirm as it was inappropriately calling the private ledger::confirm(block) rather than the public ledger::confirm(hash).\r\n\r\nWhile this doesn't fix any test specifically it should help with general unit test reliability by not running election functionality when setting up tests.",
    "draft": false,
    "pull_request": 4605,
    "label": "clemahieu:testing_direct_confirmation",
    "created_at": "2024-05-06T22:14:55Z",
    "built_at": "2024-05-09T02:09:24Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4c813b25e565684254c0c3d1eab599c0ce64dcc2",
    "build_started_at": "2024-05-09T01:39:25Z",
    "run_id": "9011023124"
  },
  {
    "hash": "4ce88b462173fe3be0d0880c572a1c4e6a67b9f7",
    "type": "pull_request",
    "title": "Optimize `vote_cache::collect_container_info`",
    "author": "pwojcikdev",
    "body": "This single stat was taking unreasonably large chunk of total time spent in container info calls.",
    "draft": false,
    "pull_request": 4644,
    "label": "pwojcikdev:vote-cache-info-optimize",
    "created_at": "2024-05-25T12:41:12Z",
    "built_at": "2024-05-25T13:09:01Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4ce88b462173fe3be0d0880c572a1c4e6a67b9f7",
    "build_started_at": "2024-05-25T12:43:23Z",
    "run_id": "9235532141"
  },
  {
    "hash": "4d2412e54dd894885d6649bc2f5e2c11736c557f",
    "type": "pull_request",
    "title": "Fix race condition between election creation and vote_cache triggering",
    "author": "clemahieu",
    "body": "The vote_cache is triggered after an election is created, and specifically after the active_elections mutex is released, which causes a race condition when checking the votes in an election.",
    "draft": false,
    "pull_request": 4610,
    "label": "clemahieu:fix_inactive_votes_cache_multiple_votes",
    "created_at": "2024-05-08T22:13:59Z",
    "built_at": "2024-05-08T22:55:44Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4d2412e54dd894885d6649bc2f5e2c11736c557f",
    "build_started_at": "2024-05-08T22:26:45Z",
    "run_id": "9009358042"
  },
  {
    "hash": "4d4a7cc0a7ddb258b223345ddc24c6af28f70967",
    "type": "commit",
    "author": "RickiNano",
    "title": "Consolidate table option functions",
    "pull_request": "N/A",
    "created_at": "2024-08-30T16:44:40Z",
    "built_at": "2024-09-25T10:21:49Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4d4a7cc0a7ddb258b223345ddc24c6af28f70967",
    "build_started_at": "2024-09-25T09:19:52Z",
    "run_id": "11030687839"
  },
  {
    "hash": "4d52049219342bd2708d81ea03b3cc95447463eb",
    "type": "pull_request",
    "pull_request": 4339,
    "label": "pwojcikdev:generic-uniquer",
    "created_at": "2023-11-10T12:47:03Z",
    "built_at": "2023-11-11T16:22:29Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4d52049219342bd2708d81ea03b3cc95447463eb",
    "build_started_at": "2023-11-11T15:29:52Z",
    "run_id": "6835092581"
  },
  {
    "hash": "4d5664a1e18945d626395ce2d76b330824584c56",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Use `nano::transport::traffic_type` for bandwidth limiter selection",
    "pull_request": "4728",
    "created_at": "2024-09-09T19:15:23Z",
    "built_at": "2024-09-17T10:16:59Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4d5664a1e18945d626395ce2d76b330824584c56",
    "build_started_at": "2024-09-17T09:35:37Z",
    "run_id": "10900636056"
  },
  {
    "hash": "4d66da7d4a66e6523c3c9ebc0e2c25b71c30fca7",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge pull request #4560 from pwojcikdev/networking-fixes/daemon-latch-rebased\n\nCleaner daemon stopping",
    "pull_request": "4560",
    "created_at": "2024-04-17T09:10:00Z",
    "built_at": "2024-04-17T09:42:33Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4d66da7d4a66e6523c3c9ebc0e2c25b71c30fca7",
    "build_started_at": "2024-04-17T09:14:33Z",
    "run_id": "8719374251"
  },
  {
    "hash": "4d6e67f493442268bb39522fab2148a10d767938",
    "type": "pull_request",
    "pull_request": 4200,
    "label": "clemahieu:election_confirmed_durable",
    "created_at": "2023-03-27T20:55:35Z",
    "built_at": "2023-03-28T11:24:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4d6e67f493442268bb39522fab2148a10d767938"
  },
  {
    "hash": "4d86e5fab3f950ba0b4815a61f3febc82bacbf22",
    "type": "commit",
    "author": "clemahieu",
    "title": "Using standard threads rather than boost threads and using default stack size.",
    "pull_request": "N/A",
    "created_at": "2024-10-27T18:16:08Z",
    "built_at": "2024-10-31T04:24:01Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4d86e5fab3f950ba0b4815a61f3febc82bacbf22",
    "build_started_at": "2024-10-31T03:33:18Z",
    "run_id": "11605828797"
  },
  {
    "hash": "4d93c0fec76c9e60373502e9f1ff3995617dcdf7",
    "type": "pull_request",
    "pull_request": 4184,
    "label": "clemahieu:rpc_test_check_fix",
    "created_at": "2023-03-16T12:58:10Z",
    "built_at": "2023-03-16T16:17:09Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4d93c0fec76c9e60373502e9f1ff3995617dcdf7"
  },
  {
    "hash": "4d985d8e6661c4ca832c982c769338dd73394347",
    "type": "pull_request",
    "pull_request": 4330,
    "label": "clemahieu:lmdb_env_reopen",
    "created_at": "2023-11-06T16:41:37Z",
    "built_at": "2023-11-06T17:23:58Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4d985d8e6661c4ca832c982c769338dd73394347",
    "build_started_at": "2023-11-06T16:43:18Z",
    "run_id": "6773809432"
  },
  {
    "hash": "4db4cf7f7634629aa200844f7de1ad7aef0368a6",
    "type": "pull_request",
    "pull_request": 4182,
    "label": "thsfs:add_bootstrap_ascending_config",
    "created_at": "2023-03-15T01:47:36Z",
    "built_at": "2023-03-15T03:40:24Z",
    "build_status": "fail",
    "docker_tag": ""
  },
  {
    "hash": "4db94223bb5105dfd751596f0ebc33fc7d95f55c",
    "type": "pull_request",
    "title": "Do not wait for cancellation signal",
    "author": "pwojcikdev",
    "body": "Waiting for cancellation signal is unnecessary and was causing a deadlock in `tcp_listener` class.\r\n\r\n```\r\nThread 37 (LWP 25214):\r\n#0  0x00007fa2b77c388d in syscall () from target:/lib/x86_64-linux-gnu/libc.so.6\r\n#1  0x000055dc7f386491 in std::__atomic_futex_unsigned_base::_M_futex_wait_until(unsigned int*, unsigned int, bool, std::chrono::duration<long, std::ratio<1l, 1l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> >) ()\r\n#2  0x000055dc7e9d1175 in std::__atomic_futex_unsigned<2147483648u>::_M_load_and_test_until (__ns=..., __s=..., __has_timeout=<optimized out>, __mo=<optimized out>, __equal=<optimized out>, __operand=<optimized out>, __assumed=<optimized out>, this=<optimized out>) at /tmp/src/submodules/boost/libs/asio/include/boost/asio/scheduler.hpp:646\r\n#3  std::__atomic_futex_unsigned<2147483648u>::_M_load_and_test (__mo=<optimized out>, __equal=<optimized out>, __operand=<optimized out>, __assumed=<optimized out>, this=<optimized out>) at /usr/include/x86_64-linux-gnu/bits/gthr-default.h:159\r\n#4  std::__atomic_futex_unsigned<2147483648u>::_M_load_when_equal (__mo=<error reading variable: dwarf2_find_location_expression: Corrupted DWARF expression.>, __val=<error reading variable: dwarf2_find_location_expression: Corrupted DWARF expression.>, this=<error reading variable: dwarf2_find_location_expression: Corrupted DWARF expression.>) at /usr/include/x86_64-linux-gnu/bits/gthr-default.h:213\r\n#5  std::__future_base::_State_baseV2::wait (this=<error reading variable: dwarf2_find_location_expression: Corrupted DWARF expression.>) at /tmp/src/submodules/boost/libs/asio/include/boost/asio/execution/impl/bad_address_cast.hpp:336\r\n#6  std::__basic_future<void>::wait (this=0x7fa23cff73b0, this@entry=<error reading variable: dwarf2_find_location_expression: Corrupted DWARF expression.>) at /tmp/src/submodules/boost/libs/asio/include/boost/asio/execution/impl/bad_address_cast.hpp:694\r\n#7  nano::async::cancellation::emit (type=boost::asio::cancellation_type::all, type@entry=<error reading variable: dwarf2_find_location_expression: Corrupted DWARF expression.>, this=0x7fa1e0074838, this@entry=<error reading variable: dwarf2_find_location_expression: Corrupted DWARF expression.>) at /tmp/src/submodules/boost/libs/asio/include/boost/asio/detail/atomic_futex.h:57\r\n#8  nano::async::task::cancel (this=0x7fa1e0074820, this@entry=<error reading variable: dwarf2_find_location_expression: Corrupted DWARF expression.>) at /tmp/src/submodules/boost/libs/asio/include/boost/asio/detail/atomic_futex.h:143\r\n#9  nano::transport::tcp_listener::timeout() () at /tmp/src/submodules/boost/libs/asio/include/boost/asio/ip/string_view:212\r\n#10 0x000055dc7e9d1369 in nano::transport::tcp_listener::run_cleanup() () at /tmp/src/submodules/boost/libs/asio/include/boost/asio/ip/string_view:171\r\n#11 0x000055dc7f3b89f4 in execute_native_thread_routine ()\r\n#12 0x00007fa2b7739ac3 in ?? () from target:/lib/x86_64-linux-gnu/libc.so.6\r\n#13 0x00007fa2b77caa04 in clone () from target:/lib/x86_64-linux-gnu/libc.so.6\r\n\r\nThread 35 (LWP 25212):\r\n#0  0x00007fa2b77362c0 in ?? () from target:/lib/x86_64-linux-gnu/libc.so.6\r\n#1  0x00007fa2b773d002 in pthread_mutex_lock () from target:/lib/x86_64-linux-gnu/libc.so.6\r\n#2  0x000055dc7e9d00d0 in __gthread_mutex_lock (__mutex=0x55dc847a67e8) at /tmp/src/submodules/boost/libs/asio/include/boost/asio/socket_holder.hpp:749\r\n#3  std::mutex::lock (this=0x55dc847a67e8) at /tmp/src/build/nano/node/tcp_listener.cpp:100\r\n#4  nano::mutex::lock (this=0x55dc847a67e8) at /tmp/src/submodules/boost/libs/asio/include/boost/asio/detail/std_mutex.h:77\r\n#5  std::unique_lock<nano::mutex>::lock (this=0x7fa23dff8be0) at /tmp/src/submodules/boost/libs/system/include/boost/system/detail/use_awaitable.hpp:139\r\n#6  std::unique_lock<nano::mutex>::unique_lock (__m=..., this=0x7fa23dff8be0) at /tmp/src/submodules/boost/libs/system/include/boost/system/detail/use_awaitable.hpp:69\r\n#7  nano::transport::tcp_listener::connect(boost::asio::ip::address, unsigned short) () at /tmp/src/submodules/boost/libs/asio/include/boost/asio/ip/string_view:223\r\n#8  0x000055dc7e9badc2 in nano::transport::tcp_channels::start_tcp (this=<optimized out>, endpoint=...) at /usr/include/x86_64-linux-gnu/bits/socket_ops.ipp:60\r\n#9  0x000055dc7e919cda in nano::network::merge_peer (peer_a=..., this=<optimized out>) at /tmp/src/submodules/boost/libs/asio/include/boost/asio/detail/unordered_map.h:334\r\n#10 nano::network::merge_peer (this=<optimized out>, peer_a=...) at /tmp/src/submodules/boost/libs/asio/include/boost/asio/detail/unordered_map.h:328\r\n#11 0x000055dc7eaf6d65 in (anonymous namespace)::process_visitor::keepalive (this=0x7fa23dff8e20, message=...) at /tmp/src/build/nano/node/messages.hpp:177\r\n#12 0x000055dc7eaf72c5 in nano::message_processor::process(nano::message const&, std::shared_ptr<nano::transport::channel> const&) () at /tmp/src/build/nano/node/messages.hpp:287\r\n#13 0x000055dc7eaf8d45 in nano::message_processor::run_batch(std::unique_lock<nano::mutex>&) () at /tmp/src/build/nano/node/messages.hpp:146\r\n#14 0x000055dc7eaf91c2 in nano::message_processor::run() () at /tmp/src/build/nano/node/messages.hpp:115\r\n#15 0x000055dc7eaf92bd in operator() (__closure=0x55dc8036a388) at /tmp/src/build/nano/node/messages.hpp:35\r\n#16 std::__invoke_impl<void, nano::message_processor::start()::<lambda()> > (__f=...) at /tmp/src/nano/lib/std_function.h:61\r\n#17 std::__invoke<nano::message_processor::start()::<lambda()> > (__fn=...) at /tmp/src/nano/lib/std_function.h:96\r\n#18 std::thread::_Invoker<std::tuple<nano::message_processor::start()::<lambda()> > >::_M_invoke<0> (this=0x55dc8036a388) at /usr/include/c++/11/exception_implementation.hpp:259\r\n#19 std::thread::_Invoker<std::tuple<nano::message_processor::start()::<lambda()> > >::operator() (this=0x55dc8036a388) at /usr/include/c++/11/exception_implementation.hpp:266\r\n#20 std::thread::_State_impl<std::thread::_Invoker<std::tuple<nano::message_processor::start()::{lambda()#1}> > >::_M_run() () at /usr/include/c++/11/exception_implementation.hpp:211\r\n#21 0x000055dc7f3b89f4 in execute_native_thread_routine ()\r\n#22 0x00007fa2b7739ac3 in ?? () from target:/lib/x86_64-linux-gnu/libc.so.6\r\n#23 0x00007fa2b77caa04 in clone () from target:/lib/x86_64-linux-gnu/libc.so.6\r\n\r\n// More IO threads with the same stacktrace\r\n// ....\r\n```",
    "draft": false,
    "pull_request": 4664,
    "label": "pwojcikdev:aysnc-cancelation-do-not-wait",
    "created_at": "2024-07-01T08:22:35Z",
    "built_at": "2024-07-01T22:00:48Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4db94223bb5105dfd751596f0ebc33fc7d95f55c",
    "build_started_at": "2024-07-01T21:31:57Z",
    "run_id": "9751348336"
  },
  {
    "hash": "4de038d604b9e1fc6582b6d570b757ccfe68fe98",
    "type": "pull_request",
    "title": "Use ledger::confirm",
    "body": "Fix a number of tests that directly accessed the confirmation_height store and used ledger::confirm or removed the access if unused.",
    "draft": false,
    "pull_request": 4531,
    "label": "clemahieu:use_ledger_confirm",
    "created_at": "2024-04-01T12:20:54Z",
    "built_at": "2024-04-01T12:51:59Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4de038d604b9e1fc6582b6d570b757ccfe68fe98",
    "build_started_at": "2024-04-01T12:26:43Z",
    "run_id": "8508019866"
  },
  {
    "hash": "4df232fa542b97a0811b3278f9364fb2263b7453",
    "type": "pull_request",
    "pull_request": 4354,
    "label": "clemahieu:socket_threads",
    "created_at": "2024-01-09T01:21:46Z",
    "built_at": "2024-01-09T02:29:16Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4df232fa542b97a0811b3278f9364fb2263b7453",
    "build_started_at": "2024-01-09T02:05:01Z",
    "run_id": "7455688707"
  },
  {
    "hash": "4e1390383c8301f59595d6d564caa4a7019891b8",
    "type": "pull_request",
    "pull_request": 4502,
    "label": "clemahieu:final_vote_canary_remove",
    "created_at": "2024-03-19T00:54:28Z",
    "built_at": "2024-03-19T10:24:15Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4e1390383c8301f59595d6d564caa4a7019891b8",
    "build_started_at": "2024-03-19T09:58:10Z",
    "run_id": "8340981023"
  },
  {
    "hash": "4e3c5e9bce21bdd33754936d8072f768d29155ed",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Increase beta same IP connection limits (#4657)",
    "pull_request": "4657",
    "created_at": "2024-06-26T11:23:36Z",
    "built_at": "2024-06-26T11:49:57Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4e3c5e9bce21bdd33754936d8072f768d29155ed",
    "build_started_at": "2024-06-26T11:23:48Z",
    "run_id": "9678738601"
  },
  {
    "hash": "4e4c28bd75b59702a7aea3d6431b51c5aa6fc7a2",
    "type": "pull_request",
    "title": "Readme update",
    "author": "pwojcikdev",
    "body": "This removes dead badges from README file and removes inactive team members from SECURITY policy file.",
    "draft": false,
    "pull_request": 4795,
    "label": "pwojcikdev:readme-update",
    "created_at": "2024-11-26T17:27:36Z",
    "built_at": "2024-11-26T17:57:02Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4e4c28bd75b59702a7aea3d6431b51c5aa6fc7a2",
    "build_started_at": "2024-11-26T17:30:07Z",
    "run_id": "12035926975"
  },
  {
    "hash": "4e51c466137d0e21aee71c9b1b47d47d8c6ad481",
    "type": "pull_request",
    "pull_request": 4226,
    "label": "clemahieu:backlog_scan_cleanup",
    "created_at": "2023-05-09T10:13:50Z",
    "built_at": "2023-05-09T10:48:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4e51c466137d0e21aee71c9b1b47d47d8c6ad481"
  },
  {
    "hash": "4e558adb57faac4c692137956cbe6032a9575993",
    "type": "pull_request",
    "title": "Extend election lifetime when receiving new votes",
    "author": "RickiNano",
    "body": "This PR adds a dynamic Time-To-Live on elections to improve the AEC alignment and efficiency during heavy load. \r\n\r\nThe TTL has been reduced to 30 seconds for normal elections and 10 seconds for hinted and optimistic elections but is extended every time a new vote arrive.\r\n\r\nBlocks that are not getting any votes are getting evicted from AEC much earlier, while blocks with active voting have a higher chance of staying in the AEC and reach confirmation.\r\n\r\nRelated issue: #4352\r\n\r\nEdit: Rebased May 8th",
    "draft": false,
    "pull_request": 4527,
    "label": "RickiNano:Active-election-time-out",
    "created_at": "2024-03-30T09:30:57Z",
    "built_at": "2024-05-08T19:43:53Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4e558adb57faac4c692137956cbe6032a9575993",
    "build_started_at": "2024-05-08T19:15:25Z",
    "run_id": "9007303531"
  },
  {
    "hash": "4e7c8d786e6a1c52bbf72862d3cc5031895175e5",
    "type": "pull_request",
    "pull_request": 4157,
    "label": "mariomoliner:use_GTEST_SKIP_issue",
    "created_at": "2023-02-27T14:22:38Z",
    "built_at": "2023-02-27T15:24:36Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4e7c8d786e6a1c52bbf72862d3cc5031895175e5"
  },
  {
    "hash": "4eee8264f0dad17734d37a777bb87e129f2d89ce",
    "type": "commit",
    "created_at": "2023-09-18T05:05:11Z",
    "built_at": "2023-09-20T18:32:27Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4eee8264f0dad17734d37a777bb87e129f2d89ce"
  },
  {
    "hash": "4f2f66bbe2356ffc84da779106b879f28186f94e",
    "type": "pull_request",
    "pull_request": 4449,
    "label": "pwojcikdev:repcrawler-overhaul-2",
    "created_at": "2024-02-25T14:21:12Z",
    "built_at": "2024-03-07T15:46:33Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4f2f66bbe2356ffc84da779106b879f28186f94e",
    "build_started_at": "2024-03-07T15:20:15Z",
    "run_id": "8190540931"
  },
  {
    "hash": "4f450ae5119094800e58b44b109584cacf6f2f05",
    "type": "commit",
    "author": "clemahieu",
    "title": "Raise file descriptor limit at entry points rather than just within daemon code. (#4677)",
    "pull_request": "4677",
    "created_at": "2024-07-10T11:13:41Z",
    "built_at": "2024-07-10T11:46:13Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4f450ae5119094800e58b44b109584cacf6f2f05",
    "build_started_at": "2024-07-10T11:19:51Z",
    "run_id": "9873233678"
  },
  {
    "hash": "4f4ccf76498f8786ec414d03cfa39aa6d511fd7b",
    "type": "commit",
    "created_at": "2023-04-11T14:13:54Z",
    "built_at": "2023-04-11T14:54:48Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4f4ccf76498f8786ec414d03cfa39aa6d511fd7b"
  },
  {
    "hash": "4f6ee7275e8d8c64240b922f59bb3f45c5a46163",
    "type": "pull_request",
    "pull_request": 4158,
    "label": "clemahieu:bootstrap_ascending_client",
    "created_at": "2023-02-27T20:15:37Z",
    "built_at": "2023-03-11T14:54:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4f6ee7275e8d8c64240b922f59bb3f45c5a46163"
  },
  {
    "hash": "4f7d249ab997e4353d97f5d2fabc2f489c2790ec",
    "type": "pull_request",
    "pull_request": 4167,
    "label": "clemahieu:block_origin_remove",
    "created_at": "2023-03-03T03:40:11Z",
    "built_at": "2023-03-03T19:46:58Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4f7d249ab997e4353d97f5d2fabc2f489c2790ec"
  },
  {
    "hash": "4f99a456a7c03f9cd18f1977dd22e86a8b583bb9",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Cleanup #2",
    "pull_request": "N/A",
    "created_at": "2024-09-23T14:53:34Z",
    "built_at": "2024-09-25T15:44:33Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4f99a456a7c03f9cd18f1977dd22e86a8b583bb9",
    "build_started_at": "2024-09-25T13:41:38Z",
    "run_id": "11036019226"
  },
  {
    "hash": "4fbae94bb785bc9065c090b6a42dc6b5b741a1e3",
    "type": "commit",
    "created_at": "2024-01-25T12:42:20Z",
    "built_at": "2024-01-25T13:10:32Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4fbae94bb785bc9065c090b6a42dc6b5b741a1e3",
    "build_started_at": "2024-01-25T12:43:57Z",
    "run_id": "7654677940"
  },
  {
    "hash": "4fdc0ce08e4cd30ee54d2b473d3fbd7ac2cb0cfd",
    "type": "commit",
    "created_at": "2023-09-17T18:52:28Z",
    "built_at": "2023-09-20T18:54:42Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4fdc0ce08e4cd30ee54d2b473d3fbd7ac2cb0cfd"
  },
  {
    "hash": "4fe3a897de03ab82ee8ecd05f723a1dffe15c0a4",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge pull request #4728 from pwojcikdev/configs-rework\n\nRework configs for backlog, telemetry and bandwidth limiter",
    "pull_request": "4728",
    "created_at": "2024-09-17T09:34:30Z",
    "built_at": "2024-09-17T10:27:56Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4fe3a897de03ab82ee8ecd05f723a1dffe15c0a4",
    "build_started_at": "2024-09-17T09:35:37Z",
    "run_id": "10900744473"
  },
  {
    "hash": "4fe6e27ad868c7eb9298348f1c771f338a7c9a52",
    "type": "pull_request",
    "title": "Optimize cemented callbacks",
    "author": "pwojcikdev",
    "body": "This attempts to optimize the election cementing callbacks. It often takes as long or even longer to cement a confirmed election as it takes to get it confirmed in the first place. This is not a complete solution, there is still a delay, but I hope it's a step in the right direction. \r\nWe're debugging this together with @gr0vity-dev who really is doing incredible work to dig deep into this issue.\r\n\r\n![image](https://github.com/nanocurrency/nano-node/assets/3044353/006a4fc1-d499-478a-a372-7b5240b7ef01)\r\n",
    "draft": false,
    "pull_request": 4642,
    "label": "pwojcikdev:cemented-observers-optimize",
    "created_at": "2024-05-24T13:34:30Z",
    "built_at": "2024-05-25T16:04:04Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4fe6e27ad868c7eb9298348f1c771f338a7c9a52",
    "build_started_at": "2024-05-25T15:37:34Z",
    "run_id": "9236527283"
  },
  {
    "hash": "4feb0be9775ea104dc4040b417daf469a5fd1072",
    "type": "pull_request",
    "title": "Redesign the priority scheduler to maintain a 1-to-1 link with running elections",
    "author": "clemahieu",
    "body": "This change appropriately prioritises elections by bucket and then by LRU account. Overfilled buckets have the lowest priority block election cancelled and rolled back.",
    "draft": true,
    "pull_request": 4593,
    "label": "clemahieu:priority_limiter",
    "created_at": "2024-04-30T12:53:50Z",
    "built_at": "2024-05-09T13:41:10Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:4feb0be9775ea104dc4040b417daf469a5fd1072",
    "build_started_at": "2024-05-09T13:14:41Z",
    "run_id": "9017852098"
  },
  {
    "hash": "50340c54b7caef5ca782bd7ac503a2af488b0d80",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge pull request #4536 from pwojcikdev/fair-queuing/vote-processor\n\nFair queuing for vote processor",
    "pull_request": "4536",
    "created_at": "2024-04-24T05:19:56Z",
    "built_at": "2024-04-24T05:52:23Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:50340c54b7caef5ca782bd7ac503a2af488b0d80",
    "build_started_at": "2024-04-24T05:27:14Z",
    "run_id": "8811508980"
  },
  {
    "hash": "503ed1186d68f9bd74bf168f759f59c1a060c5df",
    "type": "pull_request",
    "pull_request": 4256,
    "label": "gr0vity-dev:prs/unified_artifacts_worflow",
    "created_at": "2023-07-03T18:42:25Z",
    "built_at": "2023-07-03T19:30:37Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:503ed1186d68f9bd74bf168f759f59c1a060c5df"
  },
  {
    "hash": "5047fc8ccfa4d55502793b48a478e6eb4ca7b829",
    "type": "commit",
    "created_at": "2024-01-18T13:43:55Z",
    "built_at": "2024-01-18T14:14:22Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5047fc8ccfa4d55502793b48a478e6eb4ca7b829",
    "build_started_at": "2024-01-18T13:49:19Z",
    "run_id": "7570951710"
  },
  {
    "hash": "5050df88418c2db724591a42aa75e640c83005a6",
    "type": "pull_request",
    "pull_request": 4241,
    "label": "pwojcikdev:prs/null-block-deserialize",
    "created_at": "2023-05-31T13:15:18Z",
    "built_at": "2023-05-31T13:51:56Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5050df88418c2db724591a42aa75e640c83005a6"
  },
  {
    "hash": "505c27a6dd4948d29de2ede69264bd2f21558eb0",
    "type": "pull_request",
    "pull_request": 4238,
    "label": "clemahieu:scheduling_limiter",
    "created_at": "2023-05-19T01:07:22Z",
    "built_at": "2023-08-31T13:33:00Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:505c27a6dd4948d29de2ede69264bd2f21558eb0"
  },
  {
    "hash": "50648b27ee71c4b924c27c368e070d14d8034f99",
    "type": "pull_request",
    "pull_request": 4280,
    "label": "clemahieu:bucket_class",
    "created_at": "2023-09-08T11:31:55Z",
    "built_at": "2023-09-08T12:29:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:50648b27ee71c4b924c27c368e070d14d8034f99"
  },
  {
    "hash": "50929a0c0c5f014a25d54e50efa96fcf017efa43",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Fix handling of `gap_previous` (#4696)\n\n* Only handle `gap_previous` for live traffic\r\n\r\n* Use fwd header",
    "pull_request": "4696",
    "created_at": "2024-08-08T08:37:36Z",
    "built_at": "2024-08-08T09:11:48Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:50929a0c0c5f014a25d54e50efa96fcf017efa43",
    "build_started_at": "2024-08-08T08:43:39Z",
    "run_id": "10298869275"
  },
  {
    "hash": "5107488d945667ee6343c62ba49c81ae5e2d8cea",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Filter vote cache",
    "pull_request": "4629",
    "created_at": "2024-05-18T11:56:49Z",
    "built_at": "2024-05-19T09:48:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5107488d945667ee6343c62ba49c81ae5e2d8cea",
    "build_started_at": "2024-05-19T09:03:51Z",
    "run_id": "9146594352"
  },
  {
    "hash": "51420475d0ea6359e19db09a4f8205406d54d398",
    "type": "pull_request",
    "title": "Address performance regression in vote_cache::top",
    "author": "clemahieu",
    "body": "Revert https://github.com/nanocurrency/nano-node/pull/4518/commits/c734caf4d1ad840df83983e40b86e5d2c1f56a69 which removed loop short-circuit checking for top voted-for elections.\r\nEliminate duplicate expression evaluation.\r\nUse deque rather than vector for results to reduce backing reallocation.",
    "draft": false,
    "pull_request": 4627,
    "label": "clemahieu:revert_remove_tally_tag",
    "created_at": "2024-05-17T13:23:23Z",
    "built_at": "2024-05-17T13:53:02Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:51420475d0ea6359e19db09a4f8205406d54d398",
    "build_started_at": "2024-05-17T13:26:23Z",
    "run_id": "9129011820"
  },
  {
    "hash": "51430f15e270473f205006051cd222ea8779780d",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Differentiate between node IO runners and general IO (#4643)",
    "pull_request": "4643",
    "created_at": "2024-05-25T15:22:33Z",
    "built_at": "2024-05-25T15:56:02Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:51430f15e270473f205006051cd222ea8779780d",
    "build_started_at": "2024-05-25T15:23:11Z",
    "run_id": "9236484645"
  },
  {
    "hash": "5159371b14f761d301ea684e30f6144e586e2bbb",
    "type": "pull_request",
    "title": "Fix wallet logging initialization",
    "author": "pwojcikdev",
    "body": "This fixes the crash happening when running graphical nano wallet, reported here https://github.com/nanocurrency/nano-node/pull/4679. Thanks @milahu for finding the root of the problem!\r\n\r\nThis also highlights that `nano_wallet` executable is not being run as part of our CI, which should be fixed.",
    "draft": false,
    "pull_request": 4680,
    "label": "pwojcikdev:wallet-fix",
    "created_at": "2024-07-16T08:47:03Z",
    "built_at": "2024-07-16T09:17:00Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5159371b14f761d301ea684e30f6144e586e2bbb",
    "build_started_at": "2024-07-16T08:48:54Z",
    "run_id": "9953686530"
  },
  {
    "hash": "51640961a807dd75aee5df063178abf99747fadd",
    "type": "pull_request",
    "pull_request": 4376,
    "label": "RickiNano:assert-conversions-part-2",
    "created_at": "2024-01-19T17:32:45Z",
    "built_at": "2024-01-19T18:01:31Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:51640961a807dd75aee5df063178abf99747fadd",
    "build_started_at": "2024-01-19T17:33:30Z",
    "run_id": "7587193471"
  },
  {
    "hash": "5183a3e80bd7b5aeafc75220727f6c8ad02900da",
    "type": "pull_request",
    "pull_request": 4250,
    "label": "gr0vity-dev:wip/unified_artifacts_worflow",
    "created_at": "2023-06-22T15:06:28Z",
    "built_at": "2023-07-01T14:10:59Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5183a3e80bd7b5aeafc75220727f6c8ad02900da"
  },
  {
    "hash": "5186b7ff9a4a6ad97a3fd245e75054c9ebd99b96",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Adjust peer history erase cutoff",
    "pull_request": "N/A",
    "created_at": "2024-04-29T18:05:13Z",
    "built_at": "2024-05-04T10:38:44Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5186b7ff9a4a6ad97a3fd245e75054c9ebd99b96",
    "build_started_at": "2024-05-04T09:36:39Z",
    "run_id": "8949769047"
  },
  {
    "hash": "519eca6ac457ad97cf28d2eecdf1e7751a80286e",
    "type": "pull_request",
    "pull_request": 4460,
    "label": "clemahieu:remove_frontier_table_usage",
    "created_at": "2024-03-05T16:34:33Z",
    "built_at": "2024-03-05T17:04:59Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:519eca6ac457ad97cf28d2eecdf1e7751a80286e",
    "build_started_at": "2024-03-05T16:35:57Z",
    "run_id": "8159768660"
  },
  {
    "hash": "519f57e4c7291d40c9ea57b224044846c3cdca57",
    "type": "pull_request",
    "title": "Add submodule lmdbxx which is a c++ wrapper for lmdb",
    "author": "clemahieu",
    "body": "This change adds the lmdbxx submodule which is a c++ wrapper for LMDB. https://github.com/hoytech/lmdbxx\r\n\r\nCurrently we're using an amalgamation of direct access to the LMDB C API and some custom c++ wrapping of select portions of functionality.\r\n\r\nMajor motivations for using this library:\r\n- Header-only\r\n- C++17 language support\r\n- Errors are exceptions\r\n- RAII for LMDB resources\r\n- Uses std::string_view for exchanging serialised objects which is compatible with rocksdb::Slice\r\n\r\nThe library has two implementation strategies, a near 1-to-1 wrapping of the C API with exception handling, and full RAII types. Migrating existing code to use the direct API was relatively painless and some of the RAII types can already be used.\r\n\r\nThe primary motivation for the change is to get a clear separation of the lmdb c++ wrapper from node-specific logic. Additionally, this removes the burden of wrapping the C API from the node code.\r\n\r\nThe library itself seems to make good design decisions and is reasonably maintained.\r\n\r\nThere are parts of the library which are not fully complete e.g. ::lmdb::dbi does not fully implement RAII, it is both copyable and doesn't destroy the underlying resources when it goes out of scope. To get full benefits we will likely have to upstream some patches which they will hopefully be receptive and responsive to.",
    "draft": false,
    "pull_request": 4724,
    "label": "clemahieu:lmdbxx",
    "created_at": "2024-09-09T19:26:59Z",
    "built_at": "2024-09-10T18:21:03Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:519f57e4c7291d40c9ea57b224044846c3cdca57",
    "build_started_at": "2024-09-10T17:53:08Z",
    "run_id": "10797952576"
  },
  {
    "hash": "51a1cc2462716de3725c0873715e8cfcba68f272",
    "type": "pull_request",
    "title": "Remove `node::process_confirmed (...)`",
    "author": "pwojcikdev",
    "body": "This removes the `node::process_confirmed (...)` function. Blocks queued there could briefly find themselves in a limbo state, neither part of an active election or cementing set, which was racy.",
    "draft": false,
    "pull_request": 4758,
    "label": "pwojcikdev:remove-process-confirmed",
    "created_at": "2024-10-18T16:23:32Z",
    "built_at": "2024-10-19T14:07:17Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:51a1cc2462716de3725c0873715e8cfcba68f272",
    "build_started_at": "2024-10-19T13:40:10Z",
    "run_id": "11418034185"
  },
  {
    "hash": "51c8937e019e16bf99d9533e222ddde07f4483a7",
    "type": "pull_request",
    "pull_request": 4372,
    "label": "RickiNano:use-assert-eq",
    "created_at": "2024-01-18T13:11:09Z",
    "built_at": "2024-01-18T16:05:30Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:51c8937e019e16bf99d9533e222ddde07f4483a7",
    "build_started_at": "2024-01-18T15:39:23Z",
    "run_id": "7572389755"
  },
  {
    "hash": "51d6aa4dfa4f5f5d04eaab40b8f00d26c2693e6b",
    "type": "commit",
    "created_at": "2023-10-19T15:08:46Z",
    "built_at": "2023-11-06T16:13:35Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:51d6aa4dfa4f5f5d04eaab40b8f00d26c2693e6b",
    "build_started_at": "2023-11-06T15:27:16Z",
    "run_id": "6772887815"
  },
  {
    "hash": "52033c759f79cdb7a2f7c88bf20ae5a54812e22e",
    "type": "commit",
    "author": "clemahieu",
    "title": "Revert \"Reimplement json_handler::accounts_receivable in terms of receivable iterators.\"\n\nThis reverts commit b08d6ff5228f71abed7785fdab187a6e8a5525cc.\n\n# Conflicts:\n#\tnano/node/json_handler.cpp",
    "pull_request": "4711",
    "created_at": "2024-08-21T15:54:43Z",
    "built_at": "2024-08-22T10:00:21Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:52033c759f79cdb7a2f7c88bf20ae5a54812e22e",
    "build_started_at": "2024-08-22T09:33:21Z",
    "run_id": "10505561798"
  },
  {
    "hash": "520f705d151dd8b55cffc52d698ca463531a2e23",
    "type": "pull_request",
    "pull_request": 4286,
    "label": "clemahieu:nano_store_lib",
    "created_at": "2023-09-19T13:14:01Z",
    "built_at": "2023-09-20T04:05:27Z",
    "build_status": "fail",
    "docker_tag": ""
  },
  {
    "hash": "522590651769dedde9e9a0478caea37e9cb664f5",
    "type": "pull_request",
    "pull_request": 4213,
    "label": "thsfs:bootstrap_ascending_class_files_split",
    "created_at": "2023-04-07T13:02:58Z",
    "built_at": "2023-04-10T21:22:16Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:522590651769dedde9e9a0478caea37e9cb664f5"
  },
  {
    "hash": "522f05cdf13fae567bdb0286dcd135581b85123f",
    "type": "commit",
    "created_at": "2024-02-28T12:52:25Z",
    "built_at": "2024-02-28T13:22:36Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:522f05cdf13fae567bdb0286dcd135581b85123f",
    "build_started_at": "2024-02-28T12:54:23Z",
    "run_id": "8080704863"
  },
  {
    "hash": "5279d2bce47b6cc2ace208592adb52dbdf2b8056",
    "type": "pull_request",
    "title": "migrate_database_lmdb_to_rocksdb improvements",
    "author": "RickiNano",
    "body": "The `migrate_database_lmdb_to_rocksdb` option is running for a very long time with the current ledger size (almost 200 million blocks). On my local machine it took 65 minutes to complete. Nothing is written on screen during this process and users may think the process has stalled.\r\nThis PR adds some progress feedback. One update for each of the 7 tables that are migrated.\r\nIt also adds a simple disk space check to warn users if they might not have enough space to complete the migration.\r\n~~The current converted RocksDb database is 73 GB, and the warning is given if the system has less than 75GB available.~~\r\nThe warning is given based on the size of the LMDB database that is being migrated. The final RocksDb size is approximately 65% of the LMDB space.",
    "draft": false,
    "pull_request": 4647,
    "label": "RickiNano:lmdb-to-rocksdb",
    "created_at": "2024-06-13T10:47:31Z",
    "built_at": "2024-06-13T16:23:21Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5279d2bce47b6cc2ace208592adb52dbdf2b8056",
    "build_started_at": "2024-06-13T15:57:06Z",
    "run_id": "9502874678"
  },
  {
    "hash": "5281252d55b4a38e84418e5c8bf64c7a113dc5ab",
    "type": "commit",
    "author": "clemahieu",
    "title": "Merge pull request #4486 from clemahieu/ledger_view\n\nIntroduce ledger confirmed_set/any_set classes to separate confirmed-only and confirmed/unconfirmed operations on the ledger",
    "pull_request": "4486",
    "created_at": "2024-04-30T13:33:43Z",
    "built_at": "2024-04-30T15:19:18Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5281252d55b4a38e84418e5c8bf64c7a113dc5ab",
    "build_started_at": "2024-04-30T13:34:48Z",
    "run_id": "8896945552"
  },
  {
    "hash": "529033d2e1663c07cf9d797599e7b9aa63beae44",
    "type": "pull_request",
    "pull_request": 4278,
    "label": "pwojcikdev:update-code-sanitizers-wip",
    "created_at": "2023-09-05T16:20:25Z",
    "built_at": "2023-09-05T17:09:00Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:529033d2e1663c07cf9d797599e7b9aa63beae44"
  },
  {
    "hash": "52af411d9d47a67854ad0104ab983d02695b9c66",
    "type": "commit",
    "title": "Max election age precision (#4549)\n\n* Improved syntax\r\n\r\n* Use two decimals for max_election_age\r\n\r\n* Re-write the unit test to tidy it up\r\n\r\n* Use milliseconds instead of floating point seconds\r\n\r\n---------\r\n\r\nCo-authored-by: Dimitrios Siganos <dimitris@siganos.org>",
    "pull_request": "4549",
    "created_at": "2024-04-11T08:43:27Z",
    "built_at": "2024-04-11T09:15:44Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:52af411d9d47a67854ad0104ab983d02695b9c66",
    "build_started_at": "2024-04-11T08:48:09Z",
    "run_id": "8644015360"
  },
  {
    "hash": "52b6d38a3713518ed798cb89fdff11fffd9f88c3",
    "type": "pull_request",
    "pull_request": 4342,
    "label": "RickiNano:configurable-unchecked-blocks",
    "created_at": "2023-11-12T21:33:37Z",
    "built_at": "2024-01-28T19:51:12Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:52b6d38a3713518ed798cb89fdff11fffd9f88c3",
    "build_started_at": "2024-01-28T19:25:52Z",
    "run_id": "7687923341"
  },
  {
    "hash": "52b92da07fbf8e6155b6029a3dde3c9267858617",
    "type": "pull_request",
    "pull_request": 4486,
    "label": "clemahieu:ledger_view",
    "created_at": "2024-03-12T14:33:24Z",
    "built_at": "2024-03-12T20:58:54Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-12T20:40:54Z",
    "run_id": "8255469586"
  },
  {
    "hash": "52c1d23ec69849d671193d7c6769e3b6c5d882b9",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Reprocess election winner blocks",
    "pull_request": "4787",
    "created_at": "2024-10-26T22:19:30Z",
    "built_at": "2024-11-29T16:17:40Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:52c1d23ec69849d671193d7c6769e3b6c5d882b9",
    "build_started_at": "2024-11-29T15:39:54Z",
    "run_id": "12087525935"
  },
  {
    "hash": "530d91e525ee61377529b622c393e6fc856b0696",
    "type": "pull_request",
    "pull_request": 4267,
    "label": "clemahieu:remove_signature_threads",
    "created_at": "2023-08-22T12:30:21Z",
    "built_at": "2023-08-22T13:35:50Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:530d91e525ee61377529b622c393e6fc856b0696"
  },
  {
    "hash": "53294c994fe132e9a419ceb5c410d335a57ed0b3",
    "type": "commit",
    "author": "dsiganos",
    "title": "Improve unit test telemetry.basic (#4589)\n\nReduce the chances of failure. The test could easily fail if a telemetry\r\nupdate happened at the wrong time. This change reduces the chance of\r\nthat happening.",
    "pull_request": "4589",
    "created_at": "2024-04-30T12:59:51Z",
    "built_at": "2024-04-30T13:28:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:53294c994fe132e9a419ceb5c410d335a57ed0b3",
    "build_started_at": "2024-04-30T13:02:26Z",
    "run_id": "8895257587"
  },
  {
    "hash": "5332f2c3f5240977221c9c0263450602d8b798ec",
    "type": "pull_request",
    "pull_request": 4465,
    "label": "clemahieu:block_fields",
    "created_at": "2024-03-06T17:58:47Z",
    "built_at": "2024-03-09T11:37:36Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5332f2c3f5240977221c9c0263450602d8b798ec",
    "build_started_at": "2024-03-09T11:12:06Z",
    "run_id": "8214107450"
  },
  {
    "hash": "53589b34d43ed0b291e1a9cdd9b90b4a17d7c12a",
    "type": "pull_request",
    "title": "Remove active_elections::trim",
    "author": "clemahieu",
    "body": "This change removes the active_elections::trim function which is problematic with more advanced scheduler logic.\r\n\r\nThe code is not hit during normal operation because each scheduler already checks its own internal limits before starting elections.\r\n",
    "draft": false,
    "pull_request": 4611,
    "label": "clemahieu:remove_active_elections_trim",
    "created_at": "2024-05-10T09:44:08Z",
    "built_at": "2024-05-13T08:41:39Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:53589b34d43ed0b291e1a9cdd9b90b4a17d7c12a",
    "build_started_at": "2024-05-13T08:15:38Z",
    "run_id": "9059534554"
  },
  {
    "hash": "536ae7a91f73c9a9605a350ef2f35a4ba61acf6f",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Move mutex to `rate_limiter`",
    "pull_request": "4728",
    "created_at": "2024-09-11T11:18:08Z",
    "built_at": "2024-09-17T10:47:50Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:536ae7a91f73c9a9605a350ef2f35a4ba61acf6f",
    "build_started_at": "2024-09-17T09:35:37Z",
    "run_id": "10901031747"
  },
  {
    "hash": "537b15370167aa8a04709ee337cce7ad5b6975b5",
    "type": "pull_request",
    "pull_request": 4186,
    "label": "qwahzi:patch-1",
    "created_at": "2023-03-17T22:41:02Z",
    "built_at": "2023-03-17T23:14:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:537b15370167aa8a04709ee337cce7ad5b6975b5"
  },
  {
    "hash": "538907272d46fd392a9679a2836b37f30cac953f",
    "type": "commit",
    "created_at": "2023-09-01T10:34:42Z",
    "built_at": "2023-09-01T11:24:23Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:538907272d46fd392a9679a2836b37f30cac953f"
  },
  {
    "hash": "5390459d99660a4c5da84164cabdc156d6041803",
    "type": "pull_request",
    "pull_request": 4230,
    "label": "thsfs:fix-use-after-free-issue-on-active_transactions-confirm_block",
    "created_at": "2023-05-10T17:16:23Z",
    "built_at": "2023-05-10T18:06:27Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5390459d99660a4c5da84164cabdc156d6041803"
  },
  {
    "hash": "53b04d4247910ab691c032fabbe78c4b86bf3254",
    "type": "pull_request",
    "pull_request": 4158,
    "label": "clemahieu:bootstrap_ascending_client",
    "created_at": "2023-02-27T20:15:37Z",
    "built_at": "2023-03-10T14:04:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:53b04d4247910ab691c032fabbe78c4b86bf3254"
  },
  {
    "hash": "5408a04cffa2be6f180e8288cf6736b59a5458ba",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Do not post db operations on io context from wallet",
    "pull_request": "4772",
    "created_at": "2024-11-27T12:41:02Z",
    "built_at": "2024-11-27T17:12:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5408a04cffa2be6f180e8288cf6736b59a5458ba",
    "build_started_at": "2024-11-27T16:18:37Z",
    "run_id": "12054681170"
  },
  {
    "hash": "5425c44d1178eb041eeb6cd708229b70a1bdd681",
    "type": "commit",
    "created_at": "2023-02-15T01:49:01Z",
    "built_at": "2023-02-15T02:40:49Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5425c44d1178eb041eeb6cd708229b70a1bdd681"
  },
  {
    "hash": "542d94e3dd3f4a248dccd3aec36b2416c09c05a2",
    "type": "pull_request",
    "title": "Reduce vote generator max batch size",
    "author": "pwojcikdev",
    "body": null,
    "draft": false,
    "pull_request": 4650,
    "label": "pwojcikdev:vote-generator-max-batch",
    "created_at": "2024-06-17T14:41:09Z",
    "built_at": "2024-06-17T15:10:46Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:542d94e3dd3f4a248dccd3aec36b2416c09c05a2",
    "build_started_at": "2024-06-17T14:42:53Z",
    "run_id": "9549746442"
  },
  {
    "hash": "543c601eeeca4077cda14218d7c79dd241edb772",
    "type": "pull_request",
    "title": "Bounded election buckets with dynamic reprioritization",
    "author": "pwojcikdev",
    "body": "Based on:\r\n- Elections sets (can't find PR, Colin's initial attempt at bucket limiting)\r\n- Bobs bucket vacancy branch https://github.com/nanocurrency/nano-node/compare/develop...gr0vity-dev:nano-node:wip/bucket_vacancy \r\n\r\nbut simpler, more robust and allows for dynamically dropping and scheduling higher priority elections. Also, buckets can be configured to opportunistically use more available space if AEC is underutilized.",
    "draft": false,
    "pull_request": 4626,
    "label": "pwojcikdev:election-bounding-2",
    "created_at": "2024-05-15T16:21:38Z",
    "built_at": "2024-07-10T11:53:58Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:543c601eeeca4077cda14218d7c79dd241edb772",
    "build_started_at": "2024-07-10T11:27:01Z",
    "run_id": "9873330560"
  },
  {
    "hash": "543db79d167ce9293a3a7a4552c51f2885cc8a8a",
    "type": "pull_request",
    "title": "Optimize Vote Request Behavior During Bootstrapping",
    "author": "gr0vity-dev",
    "body": "With bounded backlog there's a need to minimize the gap between checked and cemented blocks especially during bootstrapping phase. Currently, elections stay passive for 5 seconds by default, during which we don't request votes. However, during bootstrapping, we need to request votes to confirm blocks.\r\n\r\nThis PR implements a heuristic to identify if a block is actively being voted on. If there are no recent votes in the vote cache for a block, it likely indicates we're in bootstrapping phase, and we should request votes immediately rather than waiting for the default 5-second passive period.\r\n\r\nThe election will transition to active state immediately if the block's hash is not found in the vote cache. \r\n",
    "draft": false,
    "pull_request": 4798,
    "label": "gr0vity-dev:prs/transition_active_fast",
    "created_at": "2024-11-30T09:26:55Z",
    "built_at": "2024-12-12T14:59:29Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:543db79d167ce9293a3a7a4552c51f2885cc8a8a",
    "build_started_at": "2024-12-12T14:29:21Z",
    "run_id": "12298080082"
  },
  {
    "hash": "5455e3448dce5352d2c8004d8c3e3d4f167955bb",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Assert no database operations on IO threads",
    "pull_request": "4772",
    "created_at": "2024-10-27T15:43:42Z",
    "built_at": "2024-11-27T17:21:19Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5455e3448dce5352d2c8004d8c3e3d4f167955bb",
    "build_started_at": "2024-11-27T16:18:37Z",
    "run_id": "12054871296"
  },
  {
    "hash": "54593ee2a74a0a99839896574b43173c8eba64da",
    "type": "commit",
    "created_at": "2023-06-22T14:14:02Z",
    "built_at": "2023-06-22T15:05:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:54593ee2a74a0a99839896574b43173c8eba64da"
  },
  {
    "hash": "548405b83099c97734c342e938b1db254fcfabb2",
    "type": "pull_request",
    "title": "Use a dedicated thread for tcp listener",
    "author": "pwojcikdev",
    "body": "While I'm not aware of any problems with previous implementation, the async way of implementing `tcp_listener` was generally harder to understand and to evolve over time. It was especially problematic when making changes to other aspects of networking code. Given that our connections are long-lived and relatively infrequent, there is very little need for tcp acceptor code to be focused on performance and instead we should prioritize readability and maintainability. This modifies it to instead run on a single, dedicated thread and use blocking IO operations.",
    "draft": false,
    "pull_request": 4523,
    "label": "pwojcikdev:networking-fixes/tcp-listener-2",
    "created_at": "2024-03-25T16:06:32Z",
    "built_at": "2024-04-20T07:44:59Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:548405b83099c97734c342e938b1db254fcfabb2",
    "build_started_at": "2024-04-20T07:19:19Z",
    "run_id": "8763451372"
  },
  {
    "hash": "55018eade5345d52b3f108a9075bea39c7bf1eb2",
    "type": "pull_request",
    "title": "Track rep query response time",
    "author": "pwojcikdev",
    "body": null,
    "draft": false,
    "pull_request": 4658,
    "label": "pwojcikdev:rep-crawler-track-time",
    "created_at": "2024-06-26T12:11:23Z",
    "built_at": "2024-06-26T12:38:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:55018eade5345d52b3f108a9075bea39c7bf1eb2",
    "build_started_at": "2024-06-26T12:12:20Z",
    "run_id": "9679376910"
  },
  {
    "hash": "55460b23bcb5619336ca5fbad6e0a96659a0fb25",
    "type": "pull_request",
    "pull_request": 4396,
    "label": "dsiganos:fix_nano_timed_locks",
    "created_at": "2024-01-25T17:15:03Z",
    "built_at": "2024-01-25T17:53:32Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:55460b23bcb5619336ca5fbad6e0a96659a0fb25",
    "build_started_at": "2024-01-25T17:27:34Z",
    "run_id": "7658220102"
  },
  {
    "hash": "55587535c2c60e2bc44fcdc0c721ccb4254f9155",
    "type": "pull_request",
    "pull_request": 4199,
    "label": "thsfs:add_cmake_for_submodules",
    "created_at": "2023-03-22T19:51:02Z",
    "built_at": "2023-03-29T14:35:27Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:55587535c2c60e2bc44fcdc0c721ccb4254f9155"
  },
  {
    "hash": "55ac5d9c3c8ed069ae36a92f204ced3c253cdf2f",
    "type": "pull_request",
    "pull_request": 4486,
    "label": "clemahieu:ledger_view",
    "created_at": "2024-03-12T14:33:24Z",
    "built_at": "2024-03-27T11:16:17Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-27T11:00:52Z",
    "run_id": "8450606826"
  },
  {
    "hash": "55b5e5601f72bee11eab301ecb20e58193579d99",
    "type": "pull_request",
    "pull_request": 4133,
    "label": "clemahieu:election_occupancy",
    "created_at": "2023-02-15T18:23:49Z",
    "built_at": "2023-02-15T19:00:34Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:55b5e5601f72bee11eab301ecb20e58193579d99"
  },
  {
    "hash": "55d61b97389441b898fd22bd601d415a85963d52",
    "type": "pull_request",
    "pull_request": 4167,
    "label": "clemahieu:block_origin_remove",
    "created_at": "2023-03-03T03:40:11Z",
    "built_at": "2023-03-04T12:26:04Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:55d61b97389441b898fd22bd601d415a85963d52"
  },
  {
    "hash": "55e906569a2aaa7ddd6628d6f92d973e0a07c0e7",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge pull request #4756 from pwojcikdev/github-actions-update\n\nGitHub workflow updates",
    "pull_request": "4756",
    "created_at": "2024-10-17T09:02:46Z",
    "built_at": "2024-10-17T10:16:46Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:55e906569a2aaa7ddd6628d6f92d973e0a07c0e7",
    "build_started_at": "2024-10-17T09:18:10Z",
    "run_id": "11382407477"
  },
  {
    "hash": "560f3b47ebf262f9a17be4b3e060bff2b2a59a5c",
    "type": "pull_request",
    "title": "Use a dedicated thread for tcp listener",
    "body": "While I'm not aware of any problems with previous implementation, the async way of implementing `tcp_listener` was generally harder to understand and to evolve over time. It was especially problematic when making changes to other aspects of networking code. Given that our connections are long-lived and relatively infrequent, there is very little need for tcp acceptor code to be focused on performance and instead we should prioritize readability and maintainability. This modifies it to instead run on a single, dedicated thread and use blocking IO operations.",
    "draft": false,
    "pull_request": 4523,
    "label": "pwojcikdev:networking-fixes/tcp-listener-2",
    "created_at": "2024-03-25T16:06:32Z",
    "built_at": "2024-04-09T09:00:23Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:560f3b47ebf262f9a17be4b3e060bff2b2a59a5c",
    "build_started_at": "2024-04-09T08:35:57Z",
    "run_id": "8612770187"
  },
  {
    "hash": "560f5e8124274f2106573b19b68acec5341e3302",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Early return if target rollback count reached",
    "pull_request": "4787",
    "created_at": "2024-11-26T18:57:28Z",
    "built_at": "2024-11-29T16:23:44Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:560f5e8124274f2106573b19b68acec5341e3302",
    "build_started_at": "2024-11-29T15:39:54Z",
    "run_id": "12087612274"
  },
  {
    "hash": "56175171301e2d4e5031e932618acc7f3a41e29b",
    "type": "pull_request",
    "pull_request": 4510,
    "label": "pwojcikdev:aec-vote-map-result",
    "created_at": "2024-03-20T16:25:24Z",
    "built_at": "2024-03-21T11:49:53Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:56175171301e2d4e5031e932618acc7f3a41e29b",
    "build_started_at": "2024-03-21T11:25:22Z",
    "run_id": "8374142588"
  },
  {
    "hash": "563e40b19dea24c7a7df1f479b99ad337650cacc",
    "type": "pull_request",
    "pull_request": 4205,
    "label": "clemahieu:bootstrap_ascending_throttling",
    "created_at": "2023-04-04T15:28:57Z",
    "built_at": "2023-04-04T16:02:49Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:563e40b19dea24c7a7df1f479b99ad337650cacc"
  },
  {
    "hash": "5681836f37bc7482826fc7bf5274dce77a9361e4",
    "type": "pull_request",
    "pull_request": 4484,
    "label": "clemahieu:ledger_successor_simplify",
    "created_at": "2024-03-12T12:33:19Z",
    "built_at": "2024-03-15T10:21:16Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5681836f37bc7482826fc7bf5274dce77a9361e4",
    "build_started_at": "2024-03-15T09:55:58Z",
    "run_id": "8294361737"
  },
  {
    "hash": "56d1e62afe0ebaa9d87a1c5c0964118167244fc3",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Add peering info to rpc",
    "pull_request": "4595",
    "created_at": "2024-04-30T07:44:09Z",
    "built_at": "2024-05-04T10:52:13Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:56d1e62afe0ebaa9d87a1c5c0964118167244fc3",
    "build_started_at": "2024-05-04T09:36:39Z",
    "run_id": "8949852585"
  },
  {
    "hash": "56da1b2dec0febf8c989b33b827c36b0bc17eb45",
    "type": "commit",
    "author": "clemahieu",
    "title": "Move singleton memory pool class to memory.hpp and reducing headers.",
    "pull_request": "N/A",
    "created_at": "2024-10-27T19:52:58Z",
    "built_at": "2024-10-31T04:40:27Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:56da1b2dec0febf8c989b33b827c36b0bc17eb45",
    "build_started_at": "2024-10-31T03:33:18Z",
    "run_id": "11605971643"
  },
  {
    "hash": "56fb34e4a384818a57e0df76b264a11d5a40bb98",
    "type": "pull_request",
    "pull_request": 4492,
    "label": "clemahieu:flatbuffers_v24_3_7",
    "created_at": "2024-03-15T10:21:46Z",
    "built_at": null,
    "build_status": "building",
    "docker_tag": null,
    "build_started_at": "2024-03-15T11:38:06Z",
    "run_id": "8295588072"
  },
  {
    "hash": "57104053652658d3abc01611cebf3c8cf7933201",
    "type": "commit",
    "created_at": "2024-03-19T09:48:55Z",
    "built_at": "2024-03-19T10:15:47Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:57104053652658d3abc01611cebf3c8cf7933201",
    "build_started_at": "2024-03-19T09:50:39Z",
    "run_id": "8340889260"
  },
  {
    "hash": "571cde8e3c36835c57541a27365d853962b306b6",
    "type": "pull_request",
    "title": "More bootstrap fixes",
    "author": "pwojcikdev",
    "body": "This fixes another problem with legacy and ascending bootstrap interaction, where blocking set would be quickly polluted by irrelevant entries causing progress to stall.",
    "draft": false,
    "pull_request": 4699,
    "label": "pwojcikdev:bootstrap-fixes",
    "created_at": "2024-08-10T12:25:44Z",
    "built_at": "2024-08-10T13:18:21Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:571cde8e3c36835c57541a27365d853962b306b6",
    "build_started_at": "2024-08-10T12:49:04Z",
    "run_id": "10331719336"
  },
  {
    "hash": "575d035bc8940a9d72773590b75914d3801bc8f3",
    "type": "pull_request",
    "pull_request": 4126,
    "label": "pwojcikdev:prs/fix-backlog-population-lock",
    "created_at": "2023-02-14T16:38:13Z",
    "built_at": "2023-02-14T17:20:46Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:575d035bc8940a9d72773590b75914d3801bc8f3"
  },
  {
    "hash": "5791b137de294c151ede010cb17da7010c253f2d",
    "type": "pull_request",
    "title": "Telemetry database backend",
    "author": "pwojcikdev",
    "body": "Improved version of stalled #4675 that should be backwards compatible.",
    "draft": false,
    "pull_request": 4694,
    "label": "pwojcikdev:telemetry-database-backend",
    "created_at": "2024-08-06T09:24:05Z",
    "built_at": "2024-08-06T16:05:28Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5791b137de294c151ede010cb17da7010c253f2d",
    "build_started_at": "2024-08-06T15:38:13Z",
    "run_id": "10269618173"
  },
  {
    "hash": "57a75c2973e9d8d1077877d5aec657e9aead083a",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge pull request #4637 from pwojcikdev/notify-observers-optimize\n\nOptimize `active_elections::notify_observers`",
    "pull_request": "4637",
    "created_at": "2024-05-23T14:33:57Z",
    "built_at": "2024-05-23T15:02:26Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:57a75c2973e9d8d1077877d5aec657e9aead083a",
    "build_started_at": "2024-05-23T14:34:02Z",
    "run_id": "9209938699"
  },
  {
    "hash": "57bf57c5c7f17ae549b8483108c1de489bd4a070",
    "type": "pull_request",
    "pull_request": 4117,
    "label": "dsiganos:fix_nano_test_blocks_confirm",
    "created_at": "2023-02-09T13:10:18Z",
    "built_at": "2023-02-09T13:55:13Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:57bf57c5c7f17ae549b8483108c1de489bd4a070"
  },
  {
    "hash": "57c0b8e9f7736842dcd3a736608ea434c961e5d5",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Simplify main loop",
    "pull_request": "4787",
    "created_at": "2024-11-28T20:11:57Z",
    "built_at": "2024-11-29T16:37:53Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:57c0b8e9f7736842dcd3a736608ea434c961e5d5",
    "build_started_at": "2024-11-29T15:39:54Z",
    "run_id": "12087828989"
  },
  {
    "hash": "57d263df1eee6d9a396a5908d2023f36307b74ff",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Avoid reinterpret casts",
    "pull_request": "4767",
    "created_at": "2024-10-24T20:46:33Z",
    "built_at": "2024-10-25T23:42:43Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-10-25T22:56:00Z",
    "run_id": "11526769613"
  },
  {
    "hash": "581bf7098a9b7f75efb63b544b42cd99e6d7c34d",
    "type": "pull_request",
    "pull_request": 4286,
    "label": "clemahieu:nano_store_lib",
    "created_at": "2023-09-19T13:14:01Z",
    "built_at": "2023-09-19T19:53:59Z",
    "build_status": "fail",
    "docker_tag": ""
  },
  {
    "hash": "581f8f8487b1f07f14aba2c1645c5b411743d342",
    "type": "pull_request",
    "title": "Add environment variable NANO_MEMORY_INTENSIVE",
    "author": "clemahieu",
    "body": "Add environment variable NANO_MEMORY_INTENSIVE to explicitly enable/disable the memory_intensive_instrumentation check.\r\n\r\nrunning_within_valgrind doesn't always play well with arm and there may be other reasons to enable/disable this option.",
    "draft": false,
    "pull_request": 4640,
    "label": "clemahieu:memory_intensive_env",
    "created_at": "2024-05-23T12:06:08Z",
    "built_at": "2024-05-23T12:51:22Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:581f8f8487b1f07f14aba2c1645c5b411743d342",
    "build_started_at": "2024-05-23T12:23:50Z",
    "run_id": "9207899868"
  },
  {
    "hash": "585e3b66ab62be9250cbd43190c7fdd5a75c7bff",
    "type": "pull_request",
    "title": "Compile time autumn2024",
    "author": "clemahieu",
    "body": "This is a series of header cleanups aimed at improving compile time.\r\n\r\nTemplates for hashing numbers was moved to numbers_templ.hpp\r\n\r\nA forward declaration header for nano::stream was added to stream_fwd.hpp\r\n\r\nTotal compile time including submodules was reduced from 10m to 9m, about a 10% improvement overall and likely more significant for incremental recompiles. ",
    "draft": false,
    "pull_request": 4776,
    "label": "clemahieu:compile_time_autumn2024",
    "created_at": "2024-10-29T09:06:43Z",
    "built_at": "2024-10-29T09:42:03Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:585e3b66ab62be9250cbd43190c7fdd5a75c7bff",
    "build_started_at": "2024-10-29T09:10:04Z",
    "run_id": "11570648880"
  },
  {
    "hash": "586248686f94c1a0b16833e8b8bc0621a8864fec",
    "type": "pull_request",
    "pull_request": 4289,
    "label": "clemahieu:lmdb_0_9_31",
    "created_at": "2023-09-21T11:28:11Z",
    "built_at": "2023-09-22T14:20:13Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:586248686f94c1a0b16833e8b8bc0621a8864fec"
  },
  {
    "hash": "588397e52e9a4835721308303eca0f9955d1a2a5",
    "type": "pull_request",
    "title": "Limit batch size for block processor",
    "author": "pwojcikdev",
    "body": "This limits a single block processor batch size to 256 blocks. This makes batch sizes uniform across all components. Additionally, if disk is slow and database transaction is held longer than 500ms, the transaction is refreshed during batch processing.",
    "draft": false,
    "pull_request": 4655,
    "label": "pwojcikdev:blockprocessor-batch-size",
    "created_at": "2024-06-23T17:00:19Z",
    "built_at": "2024-06-23T17:37:09Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:588397e52e9a4835721308303eca0f9955d1a2a5",
    "build_started_at": "2024-06-23T17:11:22Z",
    "run_id": "9635126190"
  },
  {
    "hash": "58844ed30857b1ba07261b32987eacc486aa7079",
    "type": "pull_request",
    "pull_request": 4309,
    "label": "RickiNano:use-c++-std-filesystem",
    "created_at": "2023-10-08T18:57:37Z",
    "built_at": "2023-10-18T20:18:46Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:58844ed30857b1ba07261b32987eacc486aa7079"
  },
  {
    "hash": "58911217ab565ffa0602ac4d445e60f1fa6474b9",
    "type": "commit",
    "created_at": "2024-03-17T09:07:29Z",
    "built_at": "2024-03-17T09:39:52Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:58911217ab565ffa0602ac4d445e60f1fa6474b9",
    "build_started_at": "2024-03-17T09:13:45Z",
    "run_id": "8314365633"
  },
  {
    "hash": "5899688d28570485a9a08dea51051ec4c7ec9538",
    "type": "pull_request",
    "pull_request": 4295,
    "label": "clemahieu:block_split",
    "created_at": "2023-09-25T22:11:53Z",
    "built_at": "2023-09-26T11:05:39Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5899688d28570485a9a08dea51051ec4c7ec9538"
  },
  {
    "hash": "589f1123a67013bd634472943eab2f2ba15d9016",
    "type": "pull_request",
    "pull_request": 4345,
    "label": "clemahieu:block_checker",
    "created_at": "2023-11-14T12:02:06Z",
    "built_at": "2024-03-04T23:46:26Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:589f1123a67013bd634472943eab2f2ba15d9016",
    "build_started_at": "2024-03-04T23:02:48Z",
    "run_id": "8148229381"
  },
  {
    "hash": "58a1199737d8ab75006bcd4244f90e8d47e305b3",
    "type": "pull_request",
    "pull_request": 4492,
    "label": "clemahieu:flatbuffers_v24_3_7",
    "created_at": "2024-03-15T10:21:46Z",
    "built_at": "2024-03-15T10:46:06Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-15T10:25:20Z",
    "run_id": "8294748230"
  },
  {
    "hash": "58a52af24f09189b2edcfdd060f320cd45b4ecb3",
    "type": "pull_request",
    "pull_request": 4138,
    "label": "dsiganos:fix_node_deferred_dependent_elections",
    "created_at": "2023-02-16T16:55:08Z",
    "built_at": "2023-02-16T17:37:45Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:58a52af24f09189b2edcfdd060f320cd45b4ecb3"
  },
  {
    "hash": "58a8a6bd19b0117f9d1ea1b0b93e51b8a5dda079",
    "type": "commit",
    "created_at": "2023-11-08T14:11:10Z",
    "built_at": "2023-11-08T15:07:51Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:58a8a6bd19b0117f9d1ea1b0b93e51b8a5dda079",
    "build_started_at": "2023-11-08T14:25:03Z",
    "run_id": "6799598907"
  },
  {
    "hash": "58d66ae2754dc53936e67fcb1bd1171e362b1704",
    "type": "pull_request",
    "title": "chore: remove repetitive words",
    "author": "friendlyping",
    "body": null,
    "draft": false,
    "pull_request": 4705,
    "label": "friendlyping:develop",
    "created_at": "2024-08-16T08:35:01Z",
    "built_at": "2024-08-16T09:09:46Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:58d66ae2754dc53936e67fcb1bd1171e362b1704",
    "build_started_at": "2024-08-16T08:41:23Z",
    "run_id": "10417204190"
  },
  {
    "hash": "58dd171e57f9544d80f53dc3c5782954eeb561e8",
    "type": "pull_request",
    "pull_request": 4486,
    "label": "clemahieu:ledger_view",
    "created_at": "2024-03-12T14:33:24Z",
    "built_at": "2024-03-14T18:07:23Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-14T17:37:51Z",
    "run_id": "8285142816"
  },
  {
    "hash": "58e1daa9e9b5a0d2a014bf015c9e31aa673813b3",
    "type": "commit",
    "author": "gr0vity-dev",
    "title": "'node.aggregator' is not guaranteed to be empty() immediately (#4622)\n\nCo-authored-by: gr0vity <gr0vity.dev@gmail.com>",
    "pull_request": "4622",
    "created_at": "2024-05-14T16:01:50Z",
    "built_at": "2024-05-14T17:04:13Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:58e1daa9e9b5a0d2a014bf015c9e31aa673813b3",
    "build_started_at": "2024-05-14T16:36:27Z",
    "run_id": "9082950315"
  },
  {
    "hash": "58f7169cff239239d1863953ec93c9b628a94f99",
    "type": "pull_request",
    "title": "Remove `node::process_confirmed (...)`",
    "author": "pwojcikdev",
    "body": "This removes the `node::process_confirmed (...)` function. Blocks queued there could briefly find themselves in a limbo state, neither part of an active election or cementing set, which was racy.",
    "draft": false,
    "pull_request": 4758,
    "label": "pwojcikdev:remove-process-confirmed",
    "created_at": "2024-10-18T16:23:32Z",
    "built_at": "2024-10-20T15:03:58Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:58f7169cff239239d1863953ec93c9b628a94f99",
    "build_started_at": "2024-10-20T14:37:20Z",
    "run_id": "11427189577"
  },
  {
    "hash": "591e0cae68e8f687b312c90d17d0c2d1b44c894c",
    "type": "pull_request",
    "title": "Fix database write guard",
    "author": "pwojcikdev",
    "body": null,
    "draft": false,
    "pull_request": 4780,
    "label": "pwojcikdev:fix-write-guard",
    "created_at": "2024-11-04T16:01:59Z",
    "built_at": "2024-11-04T16:48:39Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:591e0cae68e8f687b312c90d17d0c2d1b44c894c",
    "build_started_at": "2024-11-04T16:21:11Z",
    "run_id": "11668312053"
  },
  {
    "hash": "592670689ca7693cf11b335e307996d0ffcc7126",
    "type": "pull_request",
    "pull_request": 4137,
    "label": "dsiganos:fix_election_quorum_minimum_confirm_fail",
    "created_at": "2023-02-16T16:23:15Z",
    "built_at": "2023-02-16T17:07:35Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:592670689ca7693cf11b335e307996d0ffcc7126"
  },
  {
    "hash": "5927a951dd5db02110ab6836f8179d326c0e9ecf",
    "type": "pull_request",
    "pull_request": 4424,
    "label": "pwojcikdev:blockprocessor-context",
    "created_at": "2024-02-08T18:03:48Z",
    "built_at": "2024-02-13T21:46:34Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5927a951dd5db02110ab6836f8179d326c0e9ecf",
    "build_started_at": "2024-02-13T21:17:46Z",
    "run_id": "7892860262"
  },
  {
    "hash": "59285bf8cea3571592a5b54667ae88778eee6be9",
    "type": "commit",
    "title": "Hold weak ptr to node in socket (#4542)",
    "pull_request": "4542",
    "created_at": "2024-04-08T11:02:32Z",
    "built_at": "2024-04-08T11:41:58Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:59285bf8cea3571592a5b54667ae88778eee6be9",
    "build_started_at": "2024-04-08T11:14:13Z",
    "run_id": "8599087233"
  },
  {
    "hash": "595857f00ea52c253154372736b148529eb01aac",
    "type": "pull_request",
    "pull_request": 4111,
    "label": "pwojcikdev:optimistic-elections-2-rebased",
    "created_at": "2023-02-08T18:34:22Z",
    "built_at": "2023-02-14T16:30:39Z",
    "build_status": "fail",
    "docker_tag": ""
  },
  {
    "hash": "596a5596994dbfe7c035c9e101a6bfc7e819da95",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Rename `bootstrap_ascending` namespace to simply `bootstrap`",
    "pull_request": "N/A",
    "created_at": "2024-10-29T13:24:14Z",
    "built_at": "2024-10-31T15:23:10Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:596a5596994dbfe7c035c9e101a6bfc7e819da95",
    "build_started_at": "2024-10-31T13:47:32Z",
    "run_id": "11614345802"
  },
  {
    "hash": "5983818695aa1f7808577120b6b240a8317b022f",
    "type": "commit",
    "author": "gr0vity-dev",
    "title": "Use 'enable' in configs for consistency (#4678)\n\n* Use 'enable' in configs for consistency\r\n\r\n* Adjust unit tests\r\n\r\n---------\r\n\r\nCo-authored-by: gr0vity-dev <homebot@users.noreply.github.com>",
    "pull_request": "4678",
    "created_at": "2024-07-15T14:55:24Z",
    "built_at": "2024-07-15T15:22:58Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5983818695aa1f7808577120b6b240a8317b022f",
    "build_started_at": "2024-07-15T14:56:03Z",
    "run_id": "9941710775"
  },
  {
    "hash": "59b053287db64ddda537ca2aef887536e4371f91",
    "type": "pull_request",
    "title": "Backlog scan refactoring",
    "author": "pwojcikdev",
    "body": "This modifies backlog scan process to use batch events which are more efficient compared to 1-by-1 events and also renames the component from `backlog` to `backlog_scan` to avoid confusion with bounded backlog.\r\n\r\nPart of https://github.com/nanocurrency/nano-node/pull/4787 work.",
    "draft": false,
    "pull_request": 4790,
    "label": "pwojcikdev:backlog-scan-reworks",
    "created_at": "2024-11-25T16:07:34Z",
    "built_at": "2024-11-26T19:07:31Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:59b053287db64ddda537ca2aef887536e4371f91",
    "build_started_at": "2024-11-26T18:40:21Z",
    "run_id": "12036989870"
  },
  {
    "hash": "59b9c38f1e73bca5a42853d209e33905b46dfe97",
    "type": "commit",
    "created_at": "2023-02-21T18:39:16Z",
    "built_at": "2023-02-21T19:21:49Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:59b9c38f1e73bca5a42853d209e33905b46dfe97"
  },
  {
    "hash": "59e874bf1ba45e9b15695c7caf4b4481cf7f00cc",
    "type": "pull_request",
    "title": "migrate_database_lmdb_to_rocksdb improvements",
    "author": "RickiNano",
    "body": "The `migrate_database_lmdb_to_rocksdb` option is running for a very long time with the current ledger size (almost 200 million blocks). On my local machine it took 65 minutes to complete. Nothing is written on screen during this process and users may think the process has stalled.\r\nThis PR adds some progress feedback. One update for each of the 7 tables that are migrated.\r\nIt also adds a simple disk space check to warn users if they might not have enough space to complete the migration.\r\n~~The current converted RocksDb database is 73 GB, and the warning is given if the system has less than 75GB available.~~\r\nThe warning is given based on the size of the LMDB database that is being migrated. The final RocksDb size is approximately 65% of the LMDB space.",
    "draft": false,
    "pull_request": 4647,
    "label": "RickiNano:lmdb-to-rocksdb",
    "created_at": "2024-06-13T10:47:31Z",
    "built_at": "2024-07-09T17:44:46Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-07-09T16:58:11Z",
    "run_id": "9861556158"
  },
  {
    "hash": "59f6b313b3cb91a0a5c0d3c9c0a5b1aeb45b7b52",
    "type": "commit",
    "author": "gr0vity-dev",
    "title": "Add New Bucket for Specific Amount Range (#4661)\n\n* Add additional bucket for amounts between  Ӿ0.000001 and Ӿ0.0003\r\n\r\ninclude Ӿ0.000001 into new bucket\r\n\r\n* Adjust testcases to account for the additional bucket\r\n\r\n---------\r\n\r\nCo-authored-by: gr0vity <gr0vity.dev@gmail.com>",
    "pull_request": "4661",
    "created_at": "2024-07-09T16:43:16Z",
    "built_at": "2024-07-09T18:16:36Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:59f6b313b3cb91a0a5c0d3c9c0a5b1aeb45b7b52",
    "build_started_at": "2024-07-09T16:43:44Z",
    "run_id": "9861825464"
  },
  {
    "hash": "5a01082b6c59ac2de7661c201ef9c66df3330c18",
    "type": "pull_request",
    "title": "Move network_constants to a dedicated header",
    "author": "pwojcikdev",
    "body": null,
    "draft": false,
    "pull_request": 4800,
    "label": "pwojcikdev:move-to-constants-header",
    "created_at": "2024-11-30T18:07:49Z",
    "built_at": "2024-11-30T18:49:22Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5a01082b6c59ac2de7661c201ef9c66df3330c18",
    "build_started_at": "2024-11-30T18:19:13Z",
    "run_id": "12098532777"
  },
  {
    "hash": "5a217e8b7803a4764e79ada16ae124f4a5fc7469",
    "type": "pull_request",
    "pull_request": 4308,
    "label": "RickiNano:replace-boost-filesystem",
    "created_at": "2023-10-05T10:02:02Z",
    "built_at": "2023-10-05T10:50:18Z",
    "build_status": "fail",
    "docker_tag": ""
  },
  {
    "hash": "5a490b732c9642bda976445b453941e125c57e0a",
    "type": "pull_request",
    "title": "Optimize cemented callbacks",
    "author": "pwojcikdev",
    "body": "This attempts to optimize the election cementing callbacks. It often takes as long or even longer to cement a confirmed election as it takes to get it confirmed in the first place. This is not a complete solution, there is still a delay, but I hope it's a step in the right direction. \r\nWe're debugging this together with @gr0vity-dev who really is doing incredible work to dig deep into this issue.\r\n\r\n![image](https://github.com/nanocurrency/nano-node/assets/3044353/006a4fc1-d499-478a-a372-7b5240b7ef01)\r\n",
    "draft": false,
    "pull_request": 4642,
    "label": "pwojcikdev:cemented-observers-optimize",
    "created_at": "2024-05-24T13:34:30Z",
    "built_at": "2024-05-24T14:09:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5a490b732c9642bda976445b453941e125c57e0a",
    "build_started_at": "2024-05-24T13:41:43Z",
    "run_id": "9224933971"
  },
  {
    "hash": "5a66e7ea1ef2ec6d76d56896ece9eee5d7944c5c",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Fix priority threshold",
    "pull_request": "4806",
    "created_at": "2024-11-18T18:41:20Z",
    "built_at": "2024-12-10T19:47:18Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5a66e7ea1ef2ec6d76d56896ece9eee5d7944c5c",
    "build_started_at": "2024-12-10T18:42:47Z",
    "run_id": "12263156072"
  },
  {
    "hash": "5a775d5e4bd247f3752121b65f96bf50106d5b7a",
    "type": "pull_request",
    "pull_request": 4454,
    "label": "pwojcikdev:block-broadcaster-2",
    "created_at": "2024-03-04T16:29:07Z",
    "built_at": "2024-03-05T08:43:40Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5a775d5e4bd247f3752121b65f96bf50106d5b7a",
    "build_started_at": "2024-03-05T08:15:06Z",
    "run_id": "8153026700"
  },
  {
    "hash": "5a832c967544865ad88b514e0c5dd341fb09fa09",
    "type": "pull_request",
    "pull_request": 4286,
    "label": "clemahieu:nano_store_lib",
    "created_at": "2023-09-19T13:14:01Z",
    "built_at": "2023-09-20T03:50:57Z",
    "build_status": "fail",
    "docker_tag": ""
  },
  {
    "hash": "5a97e55bc77d146a87b3ad78d9622afe142545eb",
    "type": "pull_request",
    "pull_request": 4248,
    "label": "pwojcikdev:ci-overhaul-rebased",
    "created_at": "2023-06-20T15:31:32Z",
    "built_at": "2023-06-20T16:16:42Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5a97e55bc77d146a87b3ad78d9622afe142545eb"
  },
  {
    "hash": "5abd5badf2c0801abb003b3a47069a1fc34711a2",
    "type": "commit",
    "created_at": "2024-02-08T10:02:55Z",
    "built_at": "2024-02-08T11:02:44Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5abd5badf2c0801abb003b3a47069a1fc34711a2",
    "build_started_at": "2024-02-08T10:13:37Z",
    "run_id": "7828015254"
  },
  {
    "hash": "5ac4317c5da89cf512b80551a686292afb705ab0",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Container info",
    "pull_request": "4600",
    "created_at": "2024-05-04T21:49:42Z",
    "built_at": "2024-05-07T08:17:35Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5ac4317c5da89cf512b80551a686292afb705ab0",
    "build_started_at": "2024-05-07T07:50:20Z",
    "run_id": "8981646995"
  },
  {
    "hash": "5ae867402a57068fc70e63443908e14b0b033fa8",
    "type": "commit",
    "author": "clemahieu",
    "title": "Move ledger::account_info on to ledger sets",
    "pull_request": "N/A",
    "created_at": "2024-03-12T19:31:45Z",
    "built_at": "2024-04-30T15:31:44Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5ae867402a57068fc70e63443908e14b0b033fa8",
    "build_started_at": "2024-04-30T13:34:48Z",
    "run_id": "8897121615"
  },
  {
    "hash": "5af47d20aeadceb149abe4e99d910944b32400fb",
    "type": "pull_request",
    "title": "Use channel as telemetry data key",
    "author": "pwojcikdev",
    "body": "This fixes a problem where telemetry data from a single peer would be duplicated, one under ephemeral and the other under peering port, like this: \r\n\r\n(thanks to @gr0vity-dev for noticing this problem)\r\n```\r\n{\r\n    \"metrics\": [\r\n      {\r\n        \"block_count\": \"300014\",\r\n        \"cemented_count\": \"300014\",\r\n        \"unchecked_count\": \"0\",\r\n        \"account_count\": \"100006\",\r\n        \"bandwidth_cap\": \"10485760\",\r\n        \"peer_count\": \"4\",\r\n        \"protocol_version\": \"21\",\r\n        \"uptime\": \"180\",\r\n        \"genesis_block\": \"E670DF81878460B76B3425EC399800E1219A4387B11A4841B16CE260A9F36917\",\r\n        \"major_version\": \"28\",\r\n        \"minor_version\": \"0\",\r\n        \"patch_version\": \"0\",\r\n        \"pre_release_version\": \"99\",\r\n        \"maker\": \"0\",\r\n        \"timestamp\": \"1723035548025\",\r\n        \"active_difficulty\": \"000000000000000f\",\r\n        \"node_id\": \"node_1wp7kh4cmz5adwwh8b6rujrh48kp8gaijjf1hadgsrpa3assj6uio8p66oj1\",\r\n        \"signature\": \"89EC509E21A1CC3EBF970D57D520BE0420EC4B61E0AB00E12100EA1103C92B6A498C2D8BFD1357680F8000539CFD6C2C6EFD7209614BC01B70603A6C757FD508\",\r\n        \"address\": \"::ffff:172.19.0.3\",\r\n        \"port\": \"17075\"\r\n      },\r\n...\r\n      {\r\n        \"block_count\": \"300014\",\r\n        \"cemented_count\": \"300014\",\r\n        \"unchecked_count\": \"0\",\r\n        \"account_count\": \"100006\",\r\n        \"bandwidth_cap\": \"10485760\",\r\n        \"peer_count\": \"4\",\r\n        \"protocol_version\": \"21\",\r\n        \"uptime\": \"240\",\r\n        \"genesis_block\": \"E670DF81878460B76B3425EC399800E1219A4387B11A4841B16CE260A9F36917\",\r\n        \"major_version\": \"28\",\r\n        \"minor_version\": \"0\",\r\n        \"patch_version\": \"0\",\r\n        \"pre_release_version\": \"99\",\r\n        \"maker\": \"0\",\r\n        \"timestamp\": \"1723035608284\",\r\n        \"active_difficulty\": \"000000000000000f\",\r\n        \"node_id\": \"node_1wp7kh4cmz5adwwh8b6rujrh48kp8gaijjf1hadgsrpa3assj6uio8p66oj1\",\r\n        \"signature\": \"F8F2E9337BD94C72A9F6482390D87912993E679E9D4848DE734C358134A1CB0122EE768BCFA1267F926B08354197A7A450F5AEC2FF727D8B822B5775043AEB0A\",\r\n        \"address\": \"::ffff:172.19.0.3\",\r\n        \"port\": \"35816\"\r\n      }\r\n```",
    "draft": false,
    "pull_request": 4697,
    "label": "pwojcikdev:telemetry-by-channel",
    "created_at": "2024-08-07T15:03:07Z",
    "built_at": "2024-08-07T15:46:25Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5af47d20aeadceb149abe4e99d910944b32400fb",
    "build_started_at": "2024-08-07T15:19:15Z",
    "run_id": "10287104090"
  },
  {
    "hash": "5aff36eef5290fe949b10a8c5f75cd18a0dd9623",
    "type": "commit",
    "author": "github-actions[bot]",
    "title": "Update CPACK_PACKAGE_VERSION_MAJOR to 28 (#4686)\n\nCo-authored-by: clemahieu <clemahieu@users.noreply.github.com>",
    "pull_request": "4686",
    "created_at": "2024-07-22T10:51:55Z",
    "built_at": "2024-07-22T11:25:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5aff36eef5290fe949b10a8c5f75cd18a0dd9623",
    "build_started_at": "2024-07-22T10:54:34Z",
    "run_id": "10039473488"
  },
  {
    "hash": "5b057bb8d0532250ed998f18ac587866ed68906e",
    "type": "pull_request",
    "title": "Overhaul of `online_reps` class",
    "author": "pwojcikdev",
    "body": "This is an overhaul of `online_reps` class:\r\n\r\n- Run periodic online weight sampling on a dedicated thread, which makes it more robust and easier to debug.\r\n- Eliminate use of `store.online_weight.count ()` and erasing entries based on their timestamps instead (2 weeks for live, 1 day for beta). \r\n- Add stats and logging to improve observability.\r\n- Add asserts to ensure data consistency.\r\n- Split and rewrite functions, so they are (subjectively) cleaner.\r\n- Ensure that `nano::online_reps::trended ()` can never return value lower than the limit configured via `online_weight_minimum`.",
    "draft": false,
    "pull_request": 4656,
    "label": "pwojcikdev:online-reps-overhaul",
    "created_at": "2024-06-26T08:29:08Z",
    "built_at": "2024-09-11T13:21:27Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5b057bb8d0532250ed998f18ac587866ed68906e",
    "build_started_at": "2024-09-11T12:51:08Z",
    "run_id": "10812012800"
  },
  {
    "hash": "5b443fc16b90cb4f40a168a7e26264e8b40e1eee",
    "type": "commit",
    "created_at": "2023-09-25T10:50:10Z",
    "built_at": "2023-09-25T12:58:40Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5b443fc16b90cb4f40a168a7e26264e8b40e1eee"
  },
  {
    "hash": "5b53647326c0017570d1c29b4c9614718bc0a47d",
    "type": "pull_request",
    "pull_request": 4425,
    "label": "clemahieu:remove_frontiers_table",
    "created_at": "2024-02-10T18:21:12Z",
    "built_at": "2024-03-12T02:12:49Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5b53647326c0017570d1c29b4c9614718bc0a47d",
    "build_started_at": "2024-03-12T00:59:11Z",
    "run_id": "8241927781"
  },
  {
    "hash": "5b5a861d5db5220fb56b5be84fa4c3ebe93ec9b0",
    "type": "pull_request",
    "title": "Fix unit test bootstrap_processor.lazy_pruning_missing_block",
    "author": "dsiganos",
    "body": null,
    "draft": false,
    "pull_request": 4575,
    "label": "dsiganos:fix_lazy_pruning_missing_block",
    "created_at": "2024-04-18T03:21:13Z",
    "built_at": "2024-04-18T03:47:57Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5b5a861d5db5220fb56b5be84fa4c3ebe93ec9b0",
    "build_started_at": "2024-04-18T03:22:32Z",
    "run_id": "8731937986"
  },
  {
    "hash": "5b6b9a1e1ce30f5ca8bd63f401f4d6a4c46e5745",
    "type": "pull_request",
    "pull_request": 4519,
    "label": "clemahieu:confirming_set",
    "created_at": "2024-03-23T22:40:41Z",
    "built_at": "2024-03-24T10:04:36Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5b6b9a1e1ce30f5ca8bd63f401f4d6a4c46e5745",
    "build_started_at": "2024-03-24T09:37:59Z",
    "run_id": "8408386483"
  },
  {
    "hash": "5bb885a2d1a78a2f3700098017fc947a1aa363d2",
    "type": "commit",
    "created_at": "2023-11-05T15:36:54Z",
    "built_at": "2023-11-05T16:32:42Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5bb885a2d1a78a2f3700098017fc947a1aa363d2",
    "build_started_at": "2023-11-05T15:43:27Z",
    "run_id": "6762262495"
  },
  {
    "hash": "5bc04e842fb116ec17018ed95c26905d91ab3dbd",
    "type": "pull_request",
    "title": "Optimize vote distribution between PRs and non-PRs",
    "author": "gr0vity-dev",
    "body": "Currently, PRs receive votes both from flood_vote and flood_vote_pr, leading to duplicate voting, while fewer non-PR receive votes. This is particularly noticeable in small test networks.\r\n\r\nThis change ensures votes are distributed more efficiently:\r\n- PRs receive votes only through flood_vote_pr\r\n- Non-PRs receive votes through flood_vote_non_pr\r\n- Overall outgoing vote load remains unchanged\r\n\r\nHere is the difference seen in a local test network:\r\n\r\n<img width=\"925\" alt=\"Screenshot 2024-10-24 at 20 38 12\" src=\"https://github.com/user-attachments/assets/e4e93558-25a4-4ad7-b052-dbaeb11d876c\">\r\n\r\n\r\nI included a small optimization to `nano::network::list_non_pr` since it's called often.\r\n\r\n```\r\nTest Configuration & Benchmark Results:\r\nPR Count: 100\r\nNon-PR Count: 200\r\nIterations: 10000\r\n\r\n--------------------------------------------------\r\nCurrent method   - Duration: -- 521 ms\r\nPartition method - Duration: -- 354 ms\r\n--------------------------------------------------\r\n\r\nTarget count per iteration: 29 [ceil( 2* sqrt(200))]\r\nActual Current method:      29\r\nActual Partition method:    29\r\n```",
    "draft": false,
    "pull_request": 4766,
    "label": "gr0vity-dev:prs/vote_flood_non_pr",
    "created_at": "2024-10-24T18:52:30Z",
    "built_at": "2024-10-24T19:43:42Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5bc04e842fb116ec17018ed95c26905d91ab3dbd",
    "build_started_at": "2024-10-24T19:12:47Z",
    "run_id": "11505376417"
  },
  {
    "hash": "5bc61a29a3b6934ed5e70b438d1f755c9932bcad",
    "type": "commit",
    "created_at": "2023-10-09T15:20:12Z",
    "built_at": "2023-10-09T16:07:26Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5bc61a29a3b6934ed5e70b438d1f755c9932bcad"
  },
  {
    "hash": "5bc6a64eed482834d81bdb5f9a86abf0a36acaf1",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Rename `workers.add_timed_task` to `post_timed`",
    "pull_request": "N/A",
    "created_at": "2024-10-22T13:54:35Z",
    "built_at": "2024-10-27T12:03:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5bc6a64eed482834d81bdb5f9a86abf0a36acaf1",
    "build_started_at": "2024-10-27T11:28:44Z",
    "run_id": "11540147782"
  },
  {
    "hash": "5be0924c8242d12a83a04fd02edbf5c0592b5675",
    "type": "commit",
    "created_at": "2024-03-12T13:19:30Z",
    "built_at": "2024-03-22T18:07:20Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5be0924c8242d12a83a04fd02edbf5c0592b5675",
    "build_started_at": "2024-03-22T17:19:57Z",
    "run_id": "8394068316"
  },
  {
    "hash": "5bfb6a13fe0da31966c196225b719e2d36535ebe",
    "type": "pull_request",
    "pull_request": 4292,
    "label": "clemahieu:remove_old_database_upgrades",
    "created_at": "2023-09-22T12:07:34Z",
    "built_at": "2023-09-22T13:06:50Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5bfb6a13fe0da31966c196225b719e2d36535ebe"
  },
  {
    "hash": "5c306a001507fa650fd0b978b0ab7e869d20abb5",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Improve nano test system (#4731)",
    "pull_request": "4731",
    "created_at": "2024-09-21T07:53:30Z",
    "built_at": "2024-09-21T08:24:33Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5c306a001507fa650fd0b978b0ab7e869d20abb5",
    "build_started_at": "2024-09-21T07:56:20Z",
    "run_id": "10970907912"
  },
  {
    "hash": "5c311726d10f8afbe349d9ccb1cc3c629877675c",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge pull request #4755 from pwojcikdev/remove-election-winner-details\n\nRemove `election_winner_details` container",
    "pull_request": "4755",
    "created_at": "2024-10-18T08:46:11Z",
    "built_at": "2024-10-18T10:02:17Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5c311726d10f8afbe349d9ccb1cc3c629877675c",
    "build_started_at": "2024-10-18T08:49:46Z",
    "run_id": "11401193566"
  },
  {
    "hash": "5c400d49c987c834a02f4841878962c9a2994fae",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Fix tcp_listener tests",
    "pull_request": "4595",
    "created_at": "2024-04-29T19:41:21Z",
    "built_at": "2024-05-04T11:00:16Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5c400d49c987c834a02f4841878962c9a2994fae",
    "build_started_at": "2024-05-04T09:36:39Z",
    "run_id": "8949894039"
  },
  {
    "hash": "5c7b115c15cd8eaa6eff191921e520bceb3d573d",
    "type": "commit",
    "created_at": "2024-03-09T20:38:30Z",
    "built_at": "2024-03-09T21:07:02Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5c7b115c15cd8eaa6eff191921e520bceb3d573d",
    "build_started_at": "2024-03-09T20:42:34Z",
    "run_id": "8217084107"
  },
  {
    "hash": "5c85d55836b0b3f58a25b338a7e0bbbac6ae2766",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Code optimizations",
    "pull_request": "4629",
    "created_at": "2024-05-18T08:18:21Z",
    "built_at": "2024-05-19T09:55:19Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5c85d55836b0b3f58a25b338a7e0bbbac6ae2766",
    "build_started_at": "2024-05-19T09:03:51Z",
    "run_id": "9146635972"
  },
  {
    "hash": "5c89b2aa9bcb6c062d48d6b4663359d998b2d059",
    "type": "pull_request",
    "pull_request": 4321,
    "label": "clemahieu:non_final_vote_read_tx",
    "created_at": "2023-11-01T11:38:00Z",
    "built_at": "2023-11-01T12:29:07Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5c89b2aa9bcb6c062d48d6b4663359d998b2d059",
    "build_started_at": "2023-11-01T11:39:46Z",
    "run_id": "6719186611"
  },
  {
    "hash": "5ca17def1b91752f7bf810b27154352ff01f2a8b",
    "type": "commit",
    "created_at": "2023-10-07T20:03:19Z",
    "built_at": "2023-10-17T16:01:29Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5ca17def1b91752f7bf810b27154352ff01f2a8b"
  },
  {
    "hash": "5ca4a71bb9521b99b8b1fba7c0f69faa13209685",
    "type": "commit",
    "created_at": "2023-11-07T18:24:15Z",
    "built_at": "2023-11-07T21:44:22Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5ca4a71bb9521b99b8b1fba7c0f69faa13209685",
    "build_started_at": "2023-11-07T20:59:05Z",
    "run_id": "6790225316"
  },
  {
    "hash": "5ca6ff70dcdc0ede4eb054f7e7f1dde366e0bf53",
    "type": "pull_request",
    "title": "Use unique_ptr with LMDB resources to prevent leaks",
    "author": "clemahieu",
    "body": "Fixes cursor and environment leaks.",
    "draft": false,
    "pull_request": 4770,
    "label": "clemahieu:lmdb_iterator_leak",
    "created_at": "2024-10-27T15:04:57Z",
    "built_at": "2024-10-27T16:00:20Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5ca6ff70dcdc0ede4eb054f7e7f1dde366e0bf53",
    "build_started_at": "2024-10-27T15:19:27Z",
    "run_id": "11541710035"
  },
  {
    "hash": "5cc825627582e0671156ef967092c1b52d0be14f",
    "type": "pull_request",
    "pull_request": 4449,
    "label": "pwojcikdev:repcrawler-overhaul-2",
    "created_at": "2024-02-25T14:21:12Z",
    "built_at": "2024-02-28T13:12:13Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5cc825627582e0671156ef967092c1b52d0be14f",
    "build_started_at": "2024-02-28T12:44:06Z",
    "run_id": "8080562668"
  },
  {
    "hash": "5cca995705f452b12c88ec330ef1c6645945ee86",
    "type": "pull_request",
    "pull_request": 4327,
    "label": "dsiganos:fix_compilation_of_nano_wallet_on_macosx",
    "created_at": "2023-11-05T14:25:42Z",
    "built_at": "2023-11-05T15:28:04Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5cca995705f452b12c88ec330ef1c6645945ee86",
    "build_started_at": "2023-11-05T14:29:43Z",
    "run_id": "6761926509"
  },
  {
    "hash": "5cce4b9f97ed89b1ec70aba924555b0bcb151e70",
    "type": "pull_request",
    "pull_request": 4185,
    "label": "clemahieu:node_rep_weight_fix",
    "created_at": "2023-03-17T16:42:46Z",
    "built_at": "2023-03-20T02:44:59Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5cce4b9f97ed89b1ec70aba924555b0bcb151e70"
  },
  {
    "hash": "5cd0355297a78a16868a67b3a707a889362ce872",
    "type": "commit",
    "created_at": "2023-10-17T14:43:39Z",
    "built_at": "2023-10-17T16:13:03Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5cd0355297a78a16868a67b3a707a889362ce872"
  },
  {
    "hash": "5d1061119be3422588e58141077be1fc0d2ae2d5",
    "type": "pull_request",
    "pull_request": 4404,
    "label": "clemahieu:block_processor_flush_remove",
    "created_at": "2024-01-26T18:37:48Z",
    "built_at": "2024-01-26T19:06:15Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5d1061119be3422588e58141077be1fc0d2ae2d5",
    "build_started_at": "2024-01-26T18:40:34Z",
    "run_id": "7672084487"
  },
  {
    "hash": "5d2c690fc0099720f2acee6fa30da6dbb52c92bb",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Rename config to `bootstrap_config`",
    "pull_request": "N/A",
    "created_at": "2024-10-29T16:38:42Z",
    "built_at": "2024-10-31T15:41:02Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5d2c690fc0099720f2acee6fa30da6dbb52c92bb",
    "build_started_at": "2024-10-31T13:47:32Z",
    "run_id": "11614659562"
  },
  {
    "hash": "5d3320ea89fca6cb818eabec9f0dd745f242249c",
    "type": "commit",
    "author": "RickiNano",
    "title": "Configurable cache settings",
    "pull_request": "N/A",
    "created_at": "2024-08-30T17:19:09Z",
    "built_at": "2024-09-25T10:41:48Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5d3320ea89fca6cb818eabec9f0dd745f242249c",
    "build_started_at": "2024-09-25T09:19:52Z",
    "run_id": "11030981617"
  },
  {
    "hash": "5d341f44b88425ca782b00f87a7acabe3ed2b29e",
    "type": "pull_request",
    "title": "Use spaceship comparisons",
    "author": "pwojcikdev",
    "body": "The reason for starting this work was that `nano::account` didn't provide an ordering operators, but this reworks several aspects of other nano primitive types like `nano::block_hash`, `nano::hash_or_account` etc:\r\n- Implements strong ordering of values for all types with the use of C++ `<=>` spaceship operator. Previously some types could not be ordered, like the mentioned `nano::account`\r\n- Remove the use of `reinterpret_cast` 😬\r\n- Keep definitions of commonly used functions inline in the header to hopefully enable more aggressive compiler optimizations\r\n- Ensure that all types provide hashing adapters, for both std::hash and boost::hash\r\n",
    "draft": false,
    "pull_request": 4767,
    "label": "pwojcikdev:spaceship-comparisons",
    "created_at": "2024-10-25T18:31:41Z",
    "built_at": "2024-10-25T19:02:09Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5d341f44b88425ca782b00f87a7acabe3ed2b29e",
    "build_started_at": "2024-10-25T18:34:46Z",
    "run_id": "11523587164"
  },
  {
    "hash": "5d34dfd7f85d1fb2d85f770362ca8a58b373996a",
    "type": "pull_request",
    "pull_request": 4372,
    "label": "RickiNano:use-assert-eq",
    "created_at": "2024-01-18T13:11:09Z",
    "built_at": "2024-01-18T13:39:12Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5d34dfd7f85d1fb2d85f770362ca8a58b373996a",
    "build_started_at": "2024-01-18T13:14:21Z",
    "run_id": "7570529276"
  },
  {
    "hash": "5d48dd9ce3f802c8d6080e947fb6f09b39ed243c",
    "type": "pull_request",
    "title": "Bounded backlog",
    "author": "pwojcikdev",
    "body": "This is ongoing work for bounded backlog. This limits the number of unconfirmed blocks that the node needs to store. The implementation of this mechanism is nontrivial because the node relies heavily on the fact that unconfirmed blocks are present in the ledger.\r\n\r\nDepends on PRs:\r\nhttps://github.com/nanocurrency/nano-node/pull/4758",
    "draft": true,
    "pull_request": 4787,
    "label": "pwojcikdev:bounded-backlog-pr",
    "created_at": "2024-11-18T20:36:19Z",
    "built_at": "2024-11-18T23:19:45Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5d48dd9ce3f802c8d6080e947fb6f09b39ed243c",
    "build_started_at": "2024-11-18T22:43:03Z",
    "run_id": "11902466950"
  },
  {
    "hash": "5d5fefb602d8bd56bc0cb6b0abf024e33ed0ca84",
    "type": "pull_request",
    "pull_request": 4158,
    "label": "clemahieu:bootstrap_ascending_client",
    "created_at": "2023-02-27T20:15:37Z",
    "built_at": "2023-03-05T13:17:31Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5d5fefb602d8bd56bc0cb6b0abf024e33ed0ca84"
  },
  {
    "hash": "5da7d0f1165447bd83ed96d656cc7d839e502d6d",
    "type": "pull_request",
    "pull_request": 4185,
    "label": "clemahieu:node_rep_weight_fix",
    "created_at": "2023-03-17T16:42:46Z",
    "built_at": "2023-03-21T12:05:26Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5da7d0f1165447bd83ed96d656cc7d839e502d6d"
  },
  {
    "hash": "5db5c60e6cf831653b3e6e5ca096e0c9495569b5",
    "type": "commit",
    "created_at": "2024-01-10T11:21:44Z",
    "built_at": "2024-01-10T11:53:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5db5c60e6cf831653b3e6e5ca096e0c9495569b5",
    "build_started_at": "2024-01-10T11:27:54Z",
    "run_id": "7474237280"
  },
  {
    "hash": "5df25c74a034a1bee356e241c74c9b9422381474",
    "type": "pull_request",
    "pull_request": 4381,
    "label": "gr0vity-dev:prs/refactor_tag_generation",
    "created_at": "2024-01-21T10:15:26Z",
    "built_at": "2024-01-21T10:55:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5df25c74a034a1bee356e241c74c9b9422381474",
    "build_started_at": "2024-01-21T10:29:21Z",
    "run_id": "7600624572"
  },
  {
    "hash": "5dfce4539b5132d92228af091eee68b246c048b6",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Templated `thread_pool` to support move only tasks",
    "pull_request": "N/A",
    "created_at": "2024-10-21T13:38:55Z",
    "built_at": "2024-10-27T12:14:35Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5dfce4539b5132d92228af091eee68b246c048b6",
    "build_started_at": "2024-10-27T11:28:44Z",
    "run_id": "11540185991"
  },
  {
    "hash": "5e0ee324da950e1b8186773efe1d35218b232292",
    "type": "pull_request",
    "pull_request": 4307,
    "label": "RickiNano:remove-unused-enumerations",
    "created_at": "2023-10-03T17:00:31Z",
    "built_at": "2023-10-03T19:10:22Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5e0ee324da950e1b8186773efe1d35218b232292"
  },
  {
    "hash": "5e206ec9c2f32d9d13ffa557c0780bd802dafcbb",
    "type": "pull_request",
    "title": "Offload block processor notifications",
    "author": "pwojcikdev",
    "body": "This offloads block processors notifications to be processed on a background thread, so that block processor can continue checking new blocks without waiting for other components to do their work. Checking new blocks requires a write-transaction, while handling `batch_processed` event is done with read-only transaction, both can happen in parallel.\r\n\r\nThe changes here are based on top of https://github.com/nanocurrency/nano-node/pull/4762 which is a necessary prerequisite.",
    "draft": false,
    "pull_request": 4763,
    "label": "pwojcikdev:offload-block-processor-notifications",
    "created_at": "2024-10-22T15:43:39Z",
    "built_at": "2024-10-27T10:44:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5e206ec9c2f32d9d13ffa557c0780bd802dafcbb",
    "build_started_at": "2024-10-27T10:18:08Z",
    "run_id": "11539654240"
  },
  {
    "hash": "5e5cd3703246a176e27c1571d6402c94d2679795",
    "type": "commit",
    "author": "clemahieu",
    "title": "Common subexpression elimination.",
    "pull_request": "4627",
    "created_at": "2024-05-17T13:16:01Z",
    "built_at": "2024-05-19T10:06:02Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5e5cd3703246a176e27c1571d6402c94d2679795",
    "build_started_at": "2024-05-19T09:03:51Z",
    "run_id": "9146681694"
  },
  {
    "hash": "5e669b4583b32010e0034be049d2c001e396221d",
    "type": "commit",
    "created_at": "2023-12-16T17:31:20Z",
    "built_at": "2024-01-09T00:02:36Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5e669b4583b32010e0034be049d2c001e396221d",
    "build_started_at": "2024-01-08T23:09:58Z",
    "run_id": "7454294270"
  },
  {
    "hash": "5e719cb6139fa215b6042ae914c0bae36e8726c0",
    "type": "pull_request",
    "title": "Bootstrap weights in plain text",
    "author": "RickiNano",
    "body": "Replaces the binary file with embedded bootstrap weight in plain text.\r\nThe weight values and max block counts in this PR are from 14-08-2024",
    "draft": false,
    "pull_request": 4703,
    "label": "RickiNano:bootstrap-weights",
    "created_at": "2024-08-14T16:45:07Z",
    "built_at": "2024-08-14T17:24:47Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5e719cb6139fa215b6042ae914c0bae36e8726c0",
    "build_started_at": "2024-08-14T16:45:54Z",
    "run_id": "10391614682"
  },
  {
    "hash": "5e7e7fc02ec87231ea477c1c9b565876fac2357f",
    "type": "commit",
    "created_at": "2024-03-20T09:39:17Z",
    "built_at": "2024-03-20T10:09:22Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5e7e7fc02ec87231ea477c1c9b565876fac2357f",
    "build_started_at": "2024-03-20T09:44:58Z",
    "run_id": "8356789849"
  },
  {
    "hash": "5e9ca8425c390e9327b598473d453d8c4a22db5e",
    "type": "commit",
    "author": "clemahieu",
    "title": "Merge pull request #4745 from clemahieu/factor_utility_functions\n\nFactor utility functions",
    "pull_request": "4745",
    "created_at": "2024-10-07T16:40:53Z",
    "built_at": "2024-10-07T17:15:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5e9ca8425c390e9327b598473d453d8c4a22db5e",
    "build_started_at": "2024-10-07T16:49:38Z",
    "run_id": "11220195493"
  },
  {
    "hash": "5eaa15e6ce063115e9422b8049977fa7df85027c",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Node io context",
    "pull_request": "N/A",
    "created_at": "2024-05-05T18:36:37Z",
    "built_at": "2024-05-14T13:49:24Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-05-14T11:08:37Z",
    "run_id": "9080213864"
  },
  {
    "hash": "5ecb8b4ae4f75868a817930c720edf01ccef44fe",
    "type": "pull_request",
    "pull_request": 4196,
    "label": "clemahieu:rpc_accounts_receivable",
    "created_at": "2023-03-21T23:53:58Z",
    "built_at": "2023-03-22T00:26:00Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5ecb8b4ae4f75868a817930c720edf01ccef44fe"
  },
  {
    "hash": "5ef471f2a79db0ce62f2c47c43f45e14776c6403",
    "type": "commit",
    "author": "dsiganos",
    "title": "Fix unit test bootstrap_processor.lazy_pruning_missing_block (#4575)",
    "pull_request": "4575",
    "created_at": "2024-04-26T22:32:27Z",
    "built_at": "2024-04-26T23:06:20Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5ef471f2a79db0ce62f2c47c43f45e14776c6403",
    "build_started_at": "2024-04-26T22:37:36Z",
    "run_id": "8855056441"
  },
  {
    "hash": "5f28f1a8b84c4d9c85c42428cef96407e19feb45",
    "type": "commit",
    "created_at": "2024-03-05T17:42:20Z",
    "built_at": "2024-03-05T18:15:45Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5f28f1a8b84c4d9c85c42428cef96407e19feb45",
    "build_started_at": "2024-03-05T17:49:22Z",
    "run_id": "8160726091"
  },
  {
    "hash": "5f31cb131c96a79678b29c998809a4b45cadbd36",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Rate limit ascending bootstrap requests",
    "pull_request": "4777",
    "created_at": "2024-10-29T21:11:16Z",
    "built_at": "2024-10-31T15:59:56Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5f31cb131c96a79678b29c998809a4b45cadbd36",
    "build_started_at": "2024-10-31T13:47:32Z",
    "run_id": "11614960550"
  },
  {
    "hash": "5f3278b8bf4bfecc80e817460736065ac9a8ed19",
    "type": "commit",
    "created_at": "2023-02-15T23:33:21Z",
    "built_at": "2023-02-16T00:04:27Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5f3278b8bf4bfecc80e817460736065ac9a8ed19"
  },
  {
    "hash": "5f3337b53d61e8f4860af9b9d419ba3ceb5a22e4",
    "type": "pull_request",
    "title": "Fixes for `port_mapping`",
    "author": "pwojcikdev",
    "body": "This fixes a few issues I noticed in `port_mapping` class.",
    "draft": false,
    "pull_request": 4690,
    "label": "pwojcikdev:fix-upnp",
    "created_at": "2024-08-03T11:58:36Z",
    "built_at": "2024-08-11T09:51:36Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5f3337b53d61e8f4860af9b9d419ba3ceb5a22e4",
    "build_started_at": "2024-08-11T09:24:11Z",
    "run_id": "10338659843"
  },
  {
    "hash": "5f5ae986527d77002583f7557fd71000ee723241",
    "type": "pull_request",
    "pull_request": 4267,
    "label": "clemahieu:remove_signature_threads",
    "created_at": "2023-08-22T12:30:21Z",
    "built_at": "2023-10-03T15:32:38Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5f5ae986527d77002583f7557fd71000ee723241"
  },
  {
    "hash": "5f5b2685e4e0890ce5b308be3d9ddda216e50ed5",
    "type": "pull_request",
    "title": "Fix unit test bootstrap_processor.lazy_pruning_missing_block",
    "author": "dsiganos",
    "body": null,
    "draft": false,
    "pull_request": 4575,
    "label": "dsiganos:fix_lazy_pruning_missing_block",
    "created_at": "2024-04-18T03:21:13Z",
    "built_at": "2024-04-18T04:57:20Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5f5b2685e4e0890ce5b308be3d9ddda216e50ed5",
    "build_started_at": "2024-04-18T04:28:39Z",
    "run_id": "8732405785"
  },
  {
    "hash": "5f69bed9b889bd419d222b855d1d4774f89f1395",
    "type": "commit",
    "created_at": "2024-01-20T09:13:41Z",
    "built_at": "2024-01-20T09:45:26Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5f69bed9b889bd419d222b855d1d4774f89f1395",
    "build_started_at": "2024-01-20T09:20:56Z",
    "run_id": "7593502601"
  },
  {
    "hash": "5f95f352be2a93318063cad6b5d034d460cac4c1",
    "type": "pull_request",
    "title": "Stats overhaul",
    "author": "pwojcikdev",
    "body": "# Stats overhaul\r\n\r\nThe goal of this PR is to address some of the issues that have been increasingly cropping up with the current stats system. I believe that having a more flexible and performant system will allow us to experiment and iterate faster.\r\n\r\nThe immediate problem that is fixed is the fact that we ran out of space for declaring new stat enums:\r\n```\r\nIn file included from /nano-node/nano/lib/stats.hpp:5:\r\n/nano-node/nano/lib/stats_enums.hpp:407:2: error: enumerator value 256 is not representable in the underlying type 'uint8_t' (aka 'unsigned char')\r\n```\r\n\r\nHowever, this PR contains a bit more than that. The main changes are:\r\n- Do not require `stat::detail` enum to have `uint8` underlying type. This allows for practically unlimited number of custom stats.\r\n- Offload heavy IO operations (saving stats to disk) to a dedicated thread. Previously this was done inside the call to stat update functions, which introduced latency spikes.\r\n- Rework the way histograms are handled. Previously histograms needed to be registered with the stats system beforehand, which could be cumbersome and as a result not used. Now we store samples in a ring buffer and leave histogram creation to the user (e.g. nano-prom-exporter).\r\nNote: I'm still not sure whether this approach is really better, this needs a bit more experimentation.\r\n- Use read-write locks with atomic integers for counter values. This is a bit experimental, but on my system it seems to give some performance benefits. I'll try to include microbenchmarking suite as part of a separate PR (ongoing work is here https://github.com/pwojcikdev/nano-node/tree/stats-benchmarking )\r\n- Remove special semantics of `stat::detail::all` enum. Previously we tracked a special `all` entry that was used to aggregate all stats of a given type. It was used only by unit tests and required special filters to remove from grafana dashboards, where it unnecessarily cluttered the view. Now stat aggregation is handled by a dedicated overload of `stats::count ()` function.\r\n\r\n## Heatmaps\r\n\r\nI added experimental support for histogram generation to my fork of the `nano-prom-exporter` (https://github.com/pwojcikdev/nano-prom-exporter/commits/histograms/). This allows for generating heatmaps like this one:\r\n\r\n<img width=\"2991\" alt=\"Screenshot 2024-03-06 at 10 20 51\" src=\"https://github.com/nanocurrency/nano-node/assets/3044353/ec59d9ed-6dbf-4bbe-a710-b894bb2d6106\">\r\n",
    "draft": false,
    "pull_request": 4583,
    "label": "pwojcikdev:stats-improvements-2",
    "created_at": "2024-04-24T14:26:18Z",
    "built_at": "2024-04-30T12:26:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5f95f352be2a93318063cad6b5d034d460cac4c1",
    "build_started_at": "2024-04-30T12:00:39Z",
    "run_id": "8894009580"
  },
  {
    "hash": "5fa9e491eec2c0b094424382220404b3e70bbad8",
    "type": "pull_request",
    "title": "Fair queuing for vote processor",
    "body": "Similar to the way it was done for block processing, this implements fair queue for vote processor. Votes are processed in round robin manner from all peers, with higher tier votes having slightly higher priority.",
    "draft": false,
    "pull_request": 4536,
    "label": "pwojcikdev:fair-queuing/vote-processor",
    "created_at": "2024-04-04T14:58:58Z",
    "built_at": "2024-04-07T18:01:57Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5fa9e491eec2c0b094424382220404b3e70bbad8",
    "build_started_at": "2024-04-07T17:38:00Z",
    "run_id": "8590508881"
  },
  {
    "hash": "5ffa22069cbb391d6d147dc34533f42634ed42c8",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Rename file to `bootstrap_service`",
    "pull_request": "N/A",
    "created_at": "2024-10-29T16:22:15Z",
    "built_at": "2024-10-31T16:19:32Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:5ffa22069cbb391d6d147dc34533f42634ed42c8",
    "build_started_at": "2024-10-31T13:47:32Z",
    "run_id": "11615262515"
  },
  {
    "hash": "6006d7c38ad46cb8ce3bbcb41f6e458746659341",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Limit vote generator max batch size (#4650)",
    "pull_request": "4650",
    "created_at": "2024-06-23T14:15:10Z",
    "built_at": "2024-06-23T14:55:15Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6006d7c38ad46cb8ce3bbcb41f6e458746659341",
    "build_started_at": "2024-06-23T14:26:27Z",
    "run_id": "9634193389"
  },
  {
    "hash": "6015e21fa0fefd6851313ad238d75690270d12cc",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Rework bandwidth limiter config",
    "pull_request": "4728",
    "created_at": "2024-09-09T19:53:52Z",
    "built_at": "2024-09-17T11:01:18Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6015e21fa0fefd6851313ad238d75690270d12cc",
    "build_started_at": "2024-09-17T09:35:37Z",
    "run_id": "10901305483"
  },
  {
    "hash": "602ecd43f023bac8e1c68853afe36fa728a50d34",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Signal manager logging",
    "pull_request": "N/A",
    "created_at": "2024-04-14T16:44:29Z",
    "built_at": "2024-04-17T09:39:17Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-04-17T09:14:33Z",
    "run_id": "8719512321"
  },
  {
    "hash": "60303d2bf4f43aafb0b1b29f1e17543d8d9a2988",
    "type": "commit",
    "created_at": "2023-02-18T01:48:49Z",
    "built_at": "2023-02-18T14:02:16Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:60303d2bf4f43aafb0b1b29f1e17543d8d9a2988"
  },
  {
    "hash": "6040d8b2d4a52aedd7a75aca69bd0755a6bdc0b4",
    "type": "pull_request",
    "title": "Add 'rebroadcasted' flag to `confirm_ack` message",
    "author": "pwojcikdev",
    "body": "This adds a new flag to a `confirm_ack` message that indicates whether a vote was rebroadcasted by the peer. **This is not meant to be tamperproof**, rather it's a heuristic to avoid confusing rep crawler component when nodes are rebroadcasting votes. Longer term the goal is to provide some foundations for a (potential) future larger-scale integration with vote storage.\r\n\r\nFormat for `confirm_ack` message:\r\n```\r\n/*\r\n * Binary Format:\r\n * [message_header] Common message header\r\n * [variable] Vote\r\n * - Serialized/deserialized by the `nano::vote` class.\r\n *\r\n * Header extensions:\r\n * - [0xf000] Count (for V1 protocol)\r\n * - [0x0f00] Block type\r\n *   - Not used anymore (V25.1+), but still present and set to `not_a_block = 0x1` for backwards compatibility\r\n * - [0xf000 (high), 0x00f0 (low)] Count V2 masks (for V2 protocol)\r\n * - [0x0001] Confirm V2 flag\r\n * - [0x0002] Reserved for V3+ versioning\r\n * - [0x0004] Rebroadcasted flag\r\n */\r\n```",
    "draft": false,
    "pull_request": 4621,
    "label": "pwojcikdev:confirm-message-extensions",
    "created_at": "2024-05-14T15:22:38Z",
    "built_at": "2024-05-14T15:53:37Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6040d8b2d4a52aedd7a75aca69bd0755a6bdc0b4",
    "build_started_at": "2024-05-14T15:27:49Z",
    "run_id": "9082047782"
  },
  {
    "hash": "60ea00f08d4ecc356534dc753a855cce1912fdbf",
    "type": "pull_request",
    "pull_request": 4432,
    "label": "clemahieu:link_lib_property_tree",
    "created_at": "2024-02-12T20:07:32Z",
    "built_at": "2024-02-12T20:37:25Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:60ea00f08d4ecc356534dc753a855cce1912fdbf",
    "build_started_at": "2024-02-12T20:11:41Z",
    "run_id": "7877340899"
  },
  {
    "hash": "60ffd37bd5637f758f0a72f8941afa7437ca238c",
    "type": "pull_request",
    "pull_request": 4519,
    "label": "clemahieu:confirming_set",
    "created_at": "2024-03-23T22:40:41Z",
    "built_at": "2024-03-24T00:17:57Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:60ffd37bd5637f758f0a72f8941afa7437ca238c",
    "build_started_at": "2024-03-23T23:53:58Z",
    "run_id": "8405313181"
  },
  {
    "hash": "618ca212be2eb7c2e15a40bb4a97b7caa07ffa87",
    "type": "pull_request",
    "title": "Enable reporting TSAN errors",
    "body": "This is the last important sanitizer in our ci pipeline that is currently silently ignoring errors.",
    "draft": false,
    "pull_request": 4539,
    "label": "pwojcikdev:tsan-enable",
    "created_at": "2024-04-06T09:09:42Z",
    "built_at": "2024-04-06T09:43:37Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:618ca212be2eb7c2e15a40bb4a97b7caa07ffa87",
    "build_started_at": "2024-04-06T09:19:01Z",
    "run_id": "8580175859"
  },
  {
    "hash": "619a7f7e879769b775817a62e70d5a7bb9d8bfe9",
    "type": "commit",
    "author": "clemahieu",
    "title": "Create stream_fwd.hpp header for stream forward declarations.",
    "pull_request": "N/A",
    "created_at": "2024-10-27T23:06:44Z",
    "built_at": "2024-10-31T05:00:18Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:619a7f7e879769b775817a62e70d5a7bb9d8bfe9",
    "build_started_at": "2024-10-31T03:33:18Z",
    "run_id": "11606150896"
  },
  {
    "hash": "61e0f2128e46a69edb12ce227643386088ef8245",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Rework connecting",
    "pull_request": "N/A",
    "created_at": "2024-04-20T18:10:20Z",
    "built_at": "2024-05-04T11:06:32Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:61e0f2128e46a69edb12ce227643386088ef8245",
    "build_started_at": "2024-05-04T09:36:39Z",
    "run_id": "8949926989"
  },
  {
    "hash": "61e6a6b801ca4596bbc03ea52f7d56c228a68959",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge pull request #4799 from gr0vity-dev/prs/upgrade_elections\n\nMake election behavior mutable to support dynamic behaviour transition",
    "pull_request": "4799",
    "created_at": "2024-12-04T10:18:17Z",
    "built_at": "2024-12-04T11:07:40Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:61e6a6b801ca4596bbc03ea52f7d56c228a68959",
    "build_started_at": "2024-12-04T10:33:56Z",
    "run_id": "12158018387"
  },
  {
    "hash": "620aee570befa7132795f55c84e1250585f10aef",
    "type": "pull_request",
    "pull_request": 4101,
    "label": "nanocurrency:security-police-dev-list-update",
    "created_at": "2023-02-03T13:17:08Z",
    "built_at": "2023-02-04T23:35:25Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:620aee570befa7132795f55c84e1250585f10aef"
  },
  {
    "hash": "623a1354f169ef94499d39f8de7398eee2c835a6",
    "type": "commit",
    "created_at": "2024-03-12T09:08:02Z",
    "built_at": "2024-03-12T09:36:23Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:623a1354f169ef94499d39f8de7398eee2c835a6",
    "build_started_at": "2024-03-12T09:11:29Z",
    "run_id": "8246243895"
  },
  {
    "hash": "624491812512305778b893e6f49521804b46c9b5",
    "type": "commit",
    "created_at": "2023-11-05T18:37:11Z",
    "built_at": "2023-11-05T19:31:02Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:624491812512305778b893e6f49521804b46c9b5",
    "build_started_at": "2023-11-05T18:38:15Z",
    "run_id": "6763097488"
  },
  {
    "hash": "62774e010cfbea65731d751a1bb072ac2ec6b8e5",
    "type": "pull_request",
    "pull_request": 4154,
    "label": "pwojcikdev:prs/cleanup-handshake-message",
    "created_at": "2023-02-24T22:08:39Z",
    "built_at": "2023-03-07T19:14:50Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:62774e010cfbea65731d751a1bb072ac2ec6b8e5"
  },
  {
    "hash": "628a597de524a22981f1af8d82329133f92b5cff",
    "type": "commit",
    "author": "RickiNano",
    "title": "Fixed spelling in comments (#4726)",
    "pull_request": "4726",
    "created_at": "2024-09-10T12:55:09Z",
    "built_at": "2024-09-10T13:42:35Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:628a597de524a22981f1af8d82329133f92b5cff",
    "build_started_at": "2024-09-10T13:13:59Z",
    "run_id": "10793222973"
  },
  {
    "hash": "6293edc2d2bef9782f4391699e1d7947ada8c50a",
    "type": "pull_request",
    "pull_request": 4242,
    "label": "thsfs:bump-qt-for-windows-dep",
    "created_at": "2023-05-31T20:55:28Z",
    "built_at": "2023-06-01T14:31:24Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6293edc2d2bef9782f4391699e1d7947ada8c50a"
  },
  {
    "hash": "6299819eaeaafcd302ca42170e6532de9272df6f",
    "type": "pull_request",
    "pull_request": 3727,
    "label": "clemahieu:block_pipeline",
    "created_at": "2022-02-09T15:28:27Z",
    "built_at": "2023-02-08T18:20:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6299819eaeaafcd302ca42170e6532de9272df6f"
  },
  {
    "hash": "62a5cc77351abd447e794ac40e560e14e02f900e",
    "type": "pull_request",
    "title": "Block checker",
    "body": "Rewrite of https://github.com/nanocurrency/nano-node/pull/3727 with functional style checking rather than a pipeline",
    "draft": true,
    "pull_request": 4345,
    "label": "clemahieu:block_checker",
    "created_at": "2023-11-14T12:02:06Z",
    "built_at": "2024-04-03T08:43:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:62a5cc77351abd447e794ac40e560e14e02f900e",
    "build_started_at": "2024-04-03T08:17:03Z",
    "run_id": "8535445916"
  },
  {
    "hash": "62b93b604b8888f227431d8314f88c3d1e41265b",
    "type": "pull_request",
    "pull_request": 4228,
    "label": "thsfs:rpc-errors-improvements-on-accounts-balances",
    "created_at": "2023-05-09T22:42:04Z",
    "built_at": "2023-05-09T23:17:32Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:62b93b604b8888f227431d8314f88c3d1e41265b"
  },
  {
    "hash": "62bdaba67c36b81ac6c88c6d875e9b47300dc09d",
    "type": "commit",
    "created_at": "2023-04-03T13:19:08Z",
    "built_at": "2023-04-03T14:01:29Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:62bdaba67c36b81ac6c88c6d875e9b47300dc09d"
  },
  {
    "hash": "62fb8ffbd0ce4c334dd47bc9248d60e6f1a79782",
    "type": "commit",
    "created_at": "2024-03-07T14:03:51Z",
    "built_at": "2024-03-08T20:44:09Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:62fb8ffbd0ce4c334dd47bc9248d60e6f1a79782",
    "build_started_at": "2024-03-08T20:19:22Z",
    "run_id": "8208601453"
  },
  {
    "hash": "632b73e3e38219b9a5cf12a41db44c5ace44399a",
    "type": "pull_request",
    "pull_request": 4350,
    "label": "pwojcikdev:larger-votes",
    "created_at": "2023-12-12T12:51:22Z",
    "built_at": "2023-12-12T13:29:48Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:632b73e3e38219b9a5cf12a41db44c5ace44399a",
    "build_started_at": "2023-12-12T13:01:51Z",
    "run_id": "7181829523"
  },
  {
    "hash": "6352f1aca7095fb3de9bcd82cab8d67acb926c41",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Increase filter size",
    "pull_request": "N/A",
    "created_at": "2024-09-24T12:32:27Z",
    "built_at": "2024-09-25T15:57:19Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6352f1aca7095fb3de9bcd82cab8d67acb926c41",
    "build_started_at": "2024-09-25T13:41:38Z",
    "run_id": "11036296330"
  },
  {
    "hash": "635740a512bd066c5d6db9dc51b208051e6af031",
    "type": "commit",
    "author": "clemahieu",
    "title": "Adding type aliases to store classes.",
    "pull_request": "4760",
    "created_at": "2024-10-10T12:28:29Z",
    "built_at": "2024-10-21T07:58:36Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:635740a512bd066c5d6db9dc51b208051e6af031",
    "build_started_at": "2024-10-21T07:31:42Z",
    "run_id": "11435324700"
  },
  {
    "hash": "63692b2de3d3063cb4eafbb40501e6c8b9878943",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Remove unused ascending boostrap events",
    "pull_request": "N/A",
    "created_at": "2024-10-29T09:08:25Z",
    "built_at": "2024-10-31T16:22:39Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:63692b2de3d3063cb4eafbb40501e6c8b9878943",
    "build_started_at": "2024-10-31T13:47:32Z",
    "run_id": "11615378204"
  },
  {
    "hash": "6374df7e8140df6ac7fc4e2ea49e1eeab5fbf85b",
    "type": "pull_request",
    "pull_request": 4238,
    "label": "clemahieu:scheduling_limiter",
    "created_at": "2023-05-19T01:07:22Z",
    "built_at": "2023-09-13T16:36:39Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6374df7e8140df6ac7fc4e2ea49e1eeab5fbf85b"
  },
  {
    "hash": "637d4031e11c8f376e1c103a924f01ac1784bbda",
    "type": "pull_request",
    "title": "Fix `epoch_conflict_confirm` test",
    "author": "pwojcikdev",
    "body": "Fixing this test necessitated reworking `request_aggregator::aggregate ( .. )` and the way final votes are queried - only query final votes by full qualified root.",
    "draft": false,
    "pull_request": 4779,
    "label": "pwojcikdev:fix-epoch-conflict-confirm",
    "created_at": "2024-11-03T18:57:30Z",
    "built_at": "2024-11-04T11:09:04Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:637d4031e11c8f376e1c103a924f01ac1784bbda",
    "build_started_at": "2024-11-04T10:42:01Z",
    "run_id": "11662108991"
  },
  {
    "hash": "6385718ca139006f90fbca423d033ef4f3a585bf",
    "type": "pull_request",
    "title": "Prettify ledger constants",
    "author": "pwojcikdev",
    "body": "The previous formatting of ledger constants class made it unnecessarily hard to read.",
    "draft": false,
    "pull_request": 4793,
    "label": "pwojcikdev:prettify-ledger-constants",
    "created_at": "2024-11-25T18:32:54Z",
    "built_at": "2024-11-25T20:56:39Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6385718ca139006f90fbca423d033ef4f3a585bf",
    "build_started_at": "2024-11-25T20:29:39Z",
    "run_id": "12018256098"
  },
  {
    "hash": "638b18e47f1697e509eb8dd2d7e725edcfee487b",
    "type": "pull_request",
    "pull_request": 4449,
    "label": "pwojcikdev:repcrawler-overhaul-2",
    "created_at": "2024-02-25T14:21:12Z",
    "built_at": "2024-02-25T14:51:50Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:638b18e47f1697e509eb8dd2d7e725edcfee487b",
    "build_started_at": "2024-02-25T14:24:10Z",
    "run_id": "8038646568"
  },
  {
    "hash": "63927631176a10db34ce881956bf06679964bcd1",
    "type": "pull_request",
    "title": "Bucketing component",
    "author": "pwojcikdev",
    "body": "This extracts block bucketing logic into a separate `bucketing` component and introduces `ledger::block_priority ( .. )` function. This function provides stable block priorities independent of account info timestamp, which had the problem that it changed after block rollbacks. This made the previous logic unsuitable for bounded backlog. ",
    "draft": false,
    "pull_request": 4794,
    "label": "pwojcikdev:bucketing",
    "created_at": "2024-11-25T21:01:42Z",
    "built_at": "2024-11-26T18:16:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:63927631176a10db34ce881956bf06679964bcd1",
    "build_started_at": "2024-11-26T17:48:52Z",
    "run_id": "12036217857"
  },
  {
    "hash": "63aa2dcfc5e84031bf4af02425f685647a2fb33c",
    "type": "pull_request",
    "title": "Simplify `system.add_node` checks",
    "author": "pwojcikdev",
    "body": null,
    "draft": false,
    "pull_request": 4614,
    "label": "pwojcikdev:system-add-node",
    "created_at": "2024-05-11T14:55:21Z",
    "built_at": "2024-05-14T14:03:33Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:63aa2dcfc5e84031bf4af02425f685647a2fb33c",
    "build_started_at": "2024-05-14T12:45:38Z",
    "run_id": "9080347894"
  },
  {
    "hash": "63d3c3cad61dcddf2d74b450616822b62baa82f9",
    "type": "commit",
    "created_at": "2023-09-14T19:16:49Z",
    "built_at": "2023-09-15T16:23:57Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:63d3c3cad61dcddf2d74b450616822b62baa82f9"
  },
  {
    "hash": "63db84a75ef5bbb4fc86b9318eac31078118a5cb",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Add `network_filter::check (...)`",
    "pull_request": "N/A",
    "created_at": "2024-09-23T17:28:59Z",
    "built_at": "2024-09-25T16:08:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:63db84a75ef5bbb4fc86b9318eac31078118a5cb",
    "build_started_at": "2024-09-25T13:41:38Z",
    "run_id": "11036479012"
  },
  {
    "hash": "63ee96779092f72ed3e63ca133cec7b42969be30",
    "type": "pull_request",
    "title": "Update live network bootstrap weights",
    "author": "clemahieu",
    "body": "cutoff block height is 201514829\r\nnano_37imps4zk1dfahkqweqa91xpysacb7scqxf3jqhktepeofcxqnpx531b3mnt: 14404144021126280311701744039220585714\r\nnano_1b9wguhh39at8qtm93oghd6r4f4ubk7zmqc9oi5ape6yyz4s1gamuwn3jjit: 9164262332901635278764293812310019225\r\nnano_19qo4gtzpoyqf6zzezbcuazcsxtqtdin5qbtk8jkoz4fdmq4ssagn3u1odhz: 8739841068913099957481638583625439629\r\nnano_1natrium1o3z5519ifou7xii8crpxpk8y65qmkih8e8bpsjri651oza8imdd: 6756576214245862887402186466198539679\r\nnano_3jwrszth46rk1mu7rmb4rhm54us8yg1gw3ipodftqtikf5yqdyr7471nsg1k: 5692063403709648916560759996587107079\r\nnano_3arg3asgtigae3xckabaaewkx3bzsh7nwz7jkmjos79ihyaxwphhm6qgjps4: 4944781726819912439772357748836428605\r\nnano_3oxhohaxp9ceobppkhp7wahauxd4zgyz4fhxfniyp4mb9opq4upfnaccswo7: 4201556265655356535934809611421529209\r\nnano_1ninja7rh37ehfp9utkor5ixmxyg8kme8fnzc4zty145ibch8kf5jwpnzr3r: 4033961518014504064210490814696052499\r\nnano_3pczxuorp48td8645bs3m6c3xotxd3idskrenmi65rbrga5zmkemzhwkaznh: 2888200476643436934954352655784186800\r\nnano_1x7biz69cem95oo7gxkrw6kzhfywq4x5dupw4z1bdzkb74dk9kpxwzjbdhhs: 2467380620464997302016039689380088895\r\nnano_1stofnrxuz3cai7ze75o174bpm7scwj9jn3nxsn8ntzg784jf1gzn1jjdkou: 2374971939525871556388428129179478883\r\nnano_1wcxcjbwnnsdpee3d9i365e8bcj1uuyoqg9he5zjpt3r57dnjqe3gdc184ck: 2297338583003744598747324906110845836\r\nnano_1rs5rtyeo1owjt6cz9ypdkqyydq656kai8t35haiioapts39x96br5u4mbdw: 2257139514323759810052534483561497850\r\nnano_1anrzcuwe64rwxzcco8dkhpyxpi8kd7zsjc1oeimpc3ppca4mrjtwnqposrs: 2116832205709588786928303024431562073\r\nnano_3chartsi6ja8ay1qq9xg3xegqnbg1qx76nouw6jedyb8wx3r4wu94rxap7hg: 1981758745058102816381940553338758109\r\nnano_3kqdiqmqiojr1aqqj51aq8bzz5jtwnkmhb38qwf3ppngo8uhhzkdkn7up7rp: 1922741491391508390388887043428305162\r\nnano_3rw4un6ys57hrb39sy1qx8qy5wukst1iiponztrz9qiz6qqa55kxzx4491or: 1862326818614966975461090035197524726\r\nnano_3ktybzzy14zxgb6osbhcc155pwk7osbmf5gbh5fo73bsfu9wuiz54t1uozi1: 1808898948841795535603352188022910123\r\nnano_1tk8h3yzkibbsti8upkfa69wqafz6mzfzgu8bu5edaay9k7hidqdunpr4tb6: 1496400421224525244791789992467541927\r\nnano_3msc38fyn67pgio16dj586pdrceahtn75qgnx7fy19wscixrc8dbb3abhbw6: 1378452867206002631724709800633668508\r\nnano_3pg8khw8gs94c1qeq9741n99ubrut8sj3n9kpntim1rm35h4wdzirofazmwt: 1292229864056918291674513158794716323\r\nnano_3patrick68y5btibaujyu7zokw7ctu4onikarddphra6qt688xzrszcg4yuo: 1284794481092434947302861247781328627\r\nnano_1ec5optppmndqsb3rxu1qa4hpo39957s7mfqycpbd547jga4768o6xz8gfie: 1267398698354345246800129800008090177\r\nnano_1ookerz3adg5rxc4zwwoshim5yyyihf6dpogjihwwq6ksjpq7ea4fuam5mmc: 1250963560485945180434227667013198710\r\nnano_1iuz18n4g4wfp9gf7p1s8qkygxw7wx9qfjq6a9aq68uyrdnningdcjontgar: 1235909650961442656993649868977519717\r\nnano_1zuksmn4e8tjw1ch8m8fbrwy5459bx8645o9euj699rs13qy6ysjhrewioey: 1135649350490499545214805306357397707\r\nnano_1wenanoqm7xbypou7x3nue1isaeddamjdnc3z99tekjbfezdbq8fmb659o7t: 1079707512368571613344533331901341565\r\nnano_35btiz1mgfwp95c3ckazmzbp5gepduxtijuijd9xebeau8u1gsbea41smjca: 978028394103918453763665949476848024\r\nnano_1jtx5p8141zjtukz4msp1x93st7nh475f74odj8673qqm96xczmtcnanos1o: 967474058527743176419697918383695678\r\nnano_3power3gwb43rs7u9ky3rsjp6fojftejceexfkf845sfczyue4q3r1hfpr3o: 898869445723345904194727430925450199\r\nnano_35nu7hynfzecjtauskk6yb8pgfeifscqz4hmgtani15s8eiocgsz15axursj: 894001715198160000000000000000000000\r\nnano_1xckpezrhg56nuokqh6t1stjca67h37jmrp9qnejjkfgimx1msm9ehuaieuq: 891191728810970982189857334554978931\r\nnano_1aqkrayihxzdahoxpjrg8o6mxgxfzq46hhcdm1u48w3qexsakx7pzzhjn3fc: 868065235589764534853752690417963017\r\nnano_3u7d5iohy14swyhxhgfm9iq4xa9yibhcgnyj697uwhicp14dhx4woik5e9ek: 802847259306382159219109519987726214\r\nnano_1etto78drszxhtb5jhswzzm5m98ffqxwjzwg3gr8ajt5sq4ahdj4bjhni9we: 769428838435259312178910879360696370\r\nnano_3dmtrrws3pocycmbqwawk6xs7446qxa36fcncush4s1pejk16ksbmakis78m: 732316442280154386371495117404014441\r\nnano_1q3hqecaw15cjt7thbtxu3pbzr1eihtzzpzxguoc37bj1wc5ffoh7w74gi6p: 731038251383175655141070882585038015\r\nnano_1my1snode8rwccjxkckjirj65zdxo6g5nhh16fh6sn7hwewxooyyesdsmii3: 706859347663481201416528503828324966\r\nnano_3o7uzba8b9e1wqu5ziwpruteyrs3scyqr761x7ke6w1xctohxfh5du75qgaj: 699372338166276218884655873935588053\r\nnano_1awsn43we17c1oshdru4azeqjz9wii41dy8npubm4rg11so7dx3jtqgoeahy: 691672376782492764447983107542572033\r\nnano_15nt4cis8ac184q9mj7bedww9ay9zh5jk5k7sj9ypmz44twjcpz3cn6oijir: 654596748770647310074472074368291592\r\nnano_3zapp5z141qpjipsb1jnjdmk49jwqy58i6u6wnyrh6x7woajeyme85shxewt: 645955396018241781105231617551078468\r\nnano_33ad5app7jeo6jfe9ure6zsj8yg7knt6c1zrr5yg79ktfzk5ouhmpn6p5d7p: 641128734051237772365191529586886249\r\nnano_1hza3f7wiiqa7ig3jczyxj5yo86yegcmqk3criaz838j91sxcckpfhbhhra1: 598120010906692572659748682709400471\r\nnano_3afmp9hx6pp6fdcjq96f9qnoeh1kiqpqyzp7c18byaipf48t3cpzmfnhc1b7: 586725764294658456474290761604249543\r\nnano_3strnmn7h9b7oghxa6h9ckrpf5r454fsobpicixps6xwiwc5q4hat7wjbpqz: 586302806420290690676805652419574280\r\nnano_375pi67f4i4ag5rudoziza86z715bepsmp1r6ri4domt7ct6tk67mjsxtebm: 583329702276367069909425406860241907\r\nnano_318uu1tsbios3kp4dts5b6zy1y49uyb88jajfjyxwmozht8unaxeb43keork: 578887193935150204620716257293397371\r\nnano_1kd4h9nqaxengni43xy9775gcag8ptw8ddjifnm77qes1efuoqikoqy5sjq3: 557522143661554160630119769258908520\r\nnano_3caprkc56ebsaakn4j4n7g9p8h358mycfjcyzkrfw1nai6prbyk8ihc5yjjk: 551889949433422598115782589300570036\r\nnano_38713x95zyjsqzx6nm1dsom1jmm668owkeb9913ax6nfgj15az3nu8xkx579: 542089481822616825819843431806015508\r\nnano_396sch48s3jmzq1bk31pxxpz64rn7joj38emj4ueypkb9p9mzrym34obze6c: 533072942650412112186029941942976731\r\nnano_16d3mdshcfqayyx8rd9ioimjiicrma743qpd86ohfs9kdzgejmnba1zifo8m: 504957868862999794829148497499951536\r\nnano_1oenixj4qtpfcembga9kqwggkb87wooicfy5df8nhdywrjrrqxk7or4gz15b: 492903613790258584973780058677573526\r\nnano_18shbirtzhmkf7166h39nowj9c9zrpufeg75bkbyoobqwf1iu3srfm9eo3pz: 473970656352842394494596955170427039\r\nnano_3n7ky76t4g57o9skjawm8pprooz1bminkbeegsyt694xn6d31c6s744fjzzz: 472115190993962846776629754197534784\r\nnano_18bpu81x4oyqsjjsyaeb7ek4rag1bw8gerhaiumookzc4t5prrm4d7zg56ww: 468251065758391833079515827902969476\r\nnano_1isgusmnf1xe45iyjtfxw4qiai36zxdituu7gpni1trtj5ojyujobq13bjah: 462196095702159056193228301543302939\r\nnano_37ortkby6k68z8tkk8g63ndbp8wjbmofhn56oyxb4rm6s3x51pkpiwcnpgmq: 449557419493794821302808817783903811\r\nnano_1ota8bpwwawmc8ksdz4ezzrb3afbdeipk1n7rbeguhm4muy1r649uzw5moon: 437896644178114959500474836287418262\r\nnano_34amtofxstsfyqcgphp8piij9u33widykq9wbz6ysjpxhbgmqu8btu1eexer: 429147809837678475085332947403321213\r\nnano_1center16ci77qw5w69ww8sy4i4bfmgfhr81ydzpurm91cauj11jn6y3uc5y: 425685363748964296762728544780910322\r\nnano_1f56swb9qtpy3yoxiscq9799nerek153w43yjc9atoaeg3e91cc9zfr89ehj: 422870201797228894543689070440428154\r\nnano_31xitw55kb3ko8yaz3439hqaqpibxa9shx76suaa3no786do3hjuz8dy6izw: 422820588791005912314159374317891723\r\nnano_3ekb6tp8ixtkibimyygepgkwckzhds9basxd5zfue4efjnxaan77gsnanick: 410086900872265161714103069439859920\r\nnano_3hd4ezdgsp15iemx7h81in7xz5tpxi43b6b41zn3qmwiuypankocw3awes5k: 406756164708713501944607634998099775\r\nnano_34zuxqdsucurhjrmpc4aixzbgaa4wjzz6bn5ryn56emc9tmd3pnxjoxfzyb6: 399302871303035866767504800698235837\r\nnano_3wat6ci5a55s895eec64i4ihfd9ry3bdxnpb776mj1srjedqfdf4k11rcmg4: 391112789493262688526455693811890806\r\nnano_1bj5cf9hkgkcspmn15day8cyn3hyaciufbba4rqmbnkmbdpjdmo9pwyatjoi: 371404083252453564328742107324220123\r\nnano_1fe17w13stn8rqos3nxmupoez9sne4pc4njmr1fbz9nci6obnng6jatton5q: 361226637954643144028195786014800206\r\nnano_1fnx59bqpx11s1yn7i5hba3ot5no4ypy971zbkp5wtium3yyafpwhhwkq8fc: 348092246897831144606554301721057481\r\nnano_1frogs8fqpdk17w17dpsdbgtbcdmm4egnty8oinxppkwykjzedrbt3suh4as: 344031792324733389959056165149230927\r\nnano_1o5rr464r8bgu4h3jnt5yn4a6tbd5shbbpwk6aj6sunf8dzdpmke6q4tgtkj: 329980476621416670424585898471174756\r\nnano_15zntj4a8r6bkihei788ciy1jgc5wnskan1gpgn8e8jku3r4qhr7rwifitir: 321433023397182762384873514381838441\r\nnano_3tta9pdxr4djdcm6r3c7969syoirj3dunrtynmmi8n1qtxzk9iksoz1gxdrh: 289126267780400649725765615128810995\r\nnano_3mhrc9czyfzzok7xeoeaknq6w5ok9horo7d4a99m8tbtbyogg8apz491pkzt: 287254392150908610717375877367278899\r\nnano_3uaydiszyup5zwdt93dahp7mri1cwa5ncg9t4657yyn3o4i1pe8sfjbimbas: 274841497287747465447162790553568458\r\nnano_1qgkdadcbwn65sp95gr144fuc99tm5tn6gx9y8ow9bgaam6r5ixgtx19tw93: 269197528014722028142590490676177202\r\nnano_1j78msn5omp8jrjge8txwxm4x3smusa1cojg7nuk8fdzoux41fqeeogg5aa1: 263047767490686882243125557596975209\r\nnano_3hjo1cehsxrssawmpew98u4ug8bxy4ppht5ch647zpuscdgedfy1xh4yga7z: 253507965748212626832666120325402441\r\nnano_3i3dqy5xs98ewtk9ejfpxfwbsscejc6njz9hk5ia1446gdkxpxkjeeia719n: 243374305414200629001047135207930332\r\nnano_1bananobjcrqugm87e8p3kxkhy7d1bzkty53n889iyunm83cp14rb9fin78p: 232908236868137795003558475295414156\r\nnano_3rropjiqfxpmrrkooej4qtmm1pueu36f9ghinpho4esfdor8785a455d16nf: 231752250666135086140936739355907182\r\nnano_1banexkcfuieufzxksfrxqf6xy8e57ry1zdtq9yn7jntzhpwu4pg4hajojmq: 228377838442123897548743520619260226\r\nnano_11pb5aa6uirs9hoqsg4swnzyehoiqowj94kdpthwkhwufmtd6a11xx35iron: 225345004838479032480137807278953943\r\nnano_1gemini56efw4qrfzfcc71cky1wj7a6673fu5ue5afyyz55zb1cxkj8rkr1n: 214546158173376783156225855072229376\r\nnano_3abuqtbaotp9myn6ihb6mg96hf7jnapuddydf6ytgd174t4phg86nnq4cmxj: 213067005704467836901335573650335183\r\nnano_16d45ow3tsj1y3z9n4satwzxgj6qiue1ggxbwbrj3b33qr58bzchkpsffpx4: 212088093538588310244442366713145695\r\nnano_1wqymgyw3mtmmmtdqbtipdqq93zcsa1qqq8tdxz8ronswxjnp6mnpgg7yzcf: 207068935509700000000000000000000000\r\nnano_1sw898hgeexgrsq8x16wdadwdrs3obn418z6x98parb5tymz879mu89qndju: 202782667224236059410538385283273590\r\nnano_1111111111111111111111111111111111111111111111111111hifc8npp: 194667601241456879613897146528780701\r\nnano_1fuckbtc6p55wt64eo4rz7brq3ubjfd8unhz3it5fbdpta8tww7ywk8p9su7: 194421091936754693007565685857307956\r\nnano_3pnanopr3d5g7o45zh3nmdkqpaqxhhp3mw14nzr41smjz8xsrfyhtf9xac77: 185479627008933325449912238947876699\r\nnano_16u1uufyoig8777y6r8iqjtrw8sg8maqrm36zzcm95jmbd9i9aj5i8abr8u5: 183992427543222752050703192409432781\r\nnano_1mime3jd7dbnshd6zw1gjqax5zit31h6y1x6pczfuz7au33ftacjib5cc1ez: 175987117730938016116141189473158949\r\nnano_1cafe95a81ko3mq3oin4wnubsbw9z3w3tw5a95u47897wxy96r1zj9hxu1wb: 159538729546064598080992917477201663\r\nnano_1just1zdsnke856mu5pmed1qdkzk6adh3d13iiqr3so66sr8pbcnh15bdjda: 152399243468352030545681996261039160\r\nnano_1nk9zdf1otddxhxfqimjdkmbtq17yzf3z6giz1as7x1huyug8er1ukeqpqpe: 150436333529486098230767342082053707\r\nnano_3kc9wsf9y4y9r3k9yj1d5da53ytjepcf993bcto17xh1s691wyc6im9xaodr: 149973051141067890000000102000000000\r\nnano_1n1hukyqred6yuch1xgtmdofe1bnc68eza733qmb6r19xo9us7qipbjujad1: 144548727886419830000000000000000000\r\nnano_1wxwqkagc6byutzhwqwxuaqofigbufkmqsgf9a9k5pqz3f7kr6mbgu9nror3: 140260148943145965568980211200950272\r\nnano_1ebq356ex7n5efth49o1p31r4fmuuoara5tmwduarg7b9jphyxsatr3ja6g8: 139021318705619579119746606534967146\r\nnano_14mp1ua4oi45rxosft3d8qe4g6a1u1srma59jg85ax6s8zuwhi4yzgdnqhz3: 136370177984670283994284930033678517\r\nnano_1k5fqb5q6t44tsd13ziny66w6mxbya6x397g7tkz7hnkcpppofuojzs7qmik: 134850575048708037899730669200010113\r\nnano_3g6ue89jij6bxaz3hodne1c7gzgw77xawpdz4p38siu145u3u17c46or4jeu: 130508328210708521125996197403936443\r\nnano_39jnmbpgqez7d4zdh83u44jcbf9nb5y3s8z495jf6hxb6719ybdew1ph5qk8: 130001958105000000000000000000000000\r\nnano_3kc8wwut3u8g1kwa6x4drkzu346bdbyqzsn14tmabrpeobn8igksfqkzajbb: 128215019088942430464549691479270439\r\nnano_3f1owhubic8wa8rfmj5x6w9ore9btbtju5eampghs3y9ere6q6u96jraoo5s: 122234903487799746677541673214579638\r\nnano_3fg3hi6b4ptj5y5ss4a3cwarbzahaeazzs6mjf18t1cqm3pmetgtgrtafafp: 121766786123567890000000000000000000\r\nnano_3o5dcp6kjish9xuu51akx1d8bp4pytk4diput3s8dkt7cktnmcg96aoi1cbw: 118615808597239091835392448488594815\r\nnano_3hrppx3sfxoiycjm9iaqsr3odecgarcxxxhsm41s9pbs75ykambxqhu9ys58: 107476325463030087806917544668625310\r\nnano_3bsnis6ha3m9cepuaywskn9jykdggxcu8mxsp76yc3oinrt3n7gi77xiggtm: 106619086178929315130486337270561470\r\nnano_1chbdd5pkj545neroitwc6bpsps7mohgb8kstwnhxrh3dkkqimjytmp3k3uy: 100000004736000000000000000000000000\r\nnano_1f1aman8jkw8fom6fmjgddhiym784mzsspg39xwmt6wmh9pa8awhw39qgaie: 100000000000000000000000000000000000\r\nnano_1ba7uuq9kt68jzzw51a5kt577xtzaq37cnj8otqbhhnkgjyhwu91wtsjacez: 90773615118340101111368136856240823\r\nnano_3o5oeefdnrha7x7styp1tnmefen7fnrooy4jgnfb1otws54yf7uqfuxmojoy: 86404431384504299454788600848815684\r\nnano_37331hiaumyscgh5c5woq8u4ow13bwdtwie94pdz3a6wmkny4bgsnknp3td4: 75789789428000547000000000000018711\r\nnano_1niabkx3gbxit5j5yyqcpas71dkffggbr6zpd3heui8rpoocm5xqbdwq44oh: 69747956188601830964688338806699327\r\nnano_1asau6gr8ft5ykynpkauctrq1w37sdasdymuigtxotim6kxoa3rgn3dpenis: 69358291013031760634890287427733619\r\nnano_16f43w3bzsws3joz3xtffe5jzgwcijaty9affr718ithrcy64bkgtjag394y: 64747247521135780000000000000000000\r\nnano_1ssx76ua5rtp7awrr4td5eecqq9es697i9gnujhqxd19qgzet56of8qrh7ee: 62825092568000000000000000000000000\r\nnano_1nanode8ngaakzbck8smq6ru9bethqwyehomf79sae1k7xd47dkidjqzffeg: 61107133085780339646999089988408727\r\nnano_1r98z5i14ztss597ajy3y9no5kpm1bm3uj1gam4gstjhhy3othmus1mamxyz: 60081247898330387024674929860415106\r\nnano_3cqnodxiojh34fdxsmirendtqh5qfcnyxpc5bhfu1r5ga7mnj36q335whxdt: 59301035173271560000000000000000000\r\nnano_1tuc3179gw3qroosjmc71fori1j5x8z1d6dfthubgr8tjkkgf4cc7xfpnzig: 56410000000307872461115185441013760\r\nnano_3s41zmdnmkgg6z5gcc748xwg9fkyweefwc9a6zt6gtwejerpdg9cmf3hxfgq: 54360522948290000000000000000000000\r\nnano_3ju9wdb8zpzdn3bnhz6ypm5sipccok9urqif9kdyweimj9c9zyi54ceos1qu: 53793573747989279607346668987519934\r\nnano_1hispanocq7ow8azrs3mirsccebuh5e3pfk8pkfzfafbyooezpsnwiuizjcu: 52785111800965329416421874045142062\r\nnano_1thingspmippfngcrtk1ofd3uwftffnu4qu9xkauo9zkiuep6iknzci3jxa6: 48666653901117028310153363024422435\r\nnano_1m1afmq54gum53md3dm3o9arctwn8buwqk8kynxszh468qmm3kn7sawmgihz: 48515165805389889634294506863145399\r\nnano_3hps1wndzrxtybfg77agkrmstb6yzdrr3d55ynw6hfogw8gnux94fdwi8owg: 47440302461449362224803493973773430\r\nnano_1ipx847tk8o46pwxt5qjdbncjqcbwcc1rrmqnkztrfjy5k7z4imsrata9est: 42317965344222570489914260872593408\r\nnano_1cwswatjifmjnmtu5toepkwca64m7qtuukizyjxsghujtpdr9466wjmn89d8: 41567653422928329345790131665184407\r\nwrote 133 rep weights\r\nmax supply 126549198000000000000000000000000000000",
    "draft": false,
    "pull_request": 4710,
    "label": "clemahieu:v27_bootstrap_weights",
    "created_at": "2024-08-20T15:27:19Z",
    "built_at": "2024-08-20T15:58:20Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:63ee96779092f72ed3e63ca133cec7b42969be30",
    "build_started_at": "2024-08-20T15:29:42Z",
    "run_id": "10474591220"
  },
  {
    "hash": "64000f76cd7cd5bdb6b252d3ab0ec291a83da17a",
    "type": "pull_request",
    "title": "Add block hash to websocket `new_block_arrived` ",
    "author": "gr0vity-dev",
    "body": "This avoids one extra `block_info` RPC call, when you want to know the block hash, for example to match new blocks against confirmed blocks.",
    "draft": false,
    "pull_request": 4729,
    "label": "gr0vity-dev:prs/websocket_new_block_arrived",
    "created_at": "2024-09-11T19:30:11Z",
    "built_at": "2024-09-11T20:33:32Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:64000f76cd7cd5bdb6b252d3ab0ec291a83da17a",
    "build_started_at": "2024-09-11T20:05:36Z",
    "run_id": "10818367501"
  },
  {
    "hash": "641047ecc2cb620c5d0be44f464051b875d429ab",
    "type": "commit",
    "created_at": "2024-03-10T16:08:23Z",
    "built_at": "2024-03-10T21:19:57Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:641047ecc2cb620c5d0be44f464051b875d429ab",
    "build_started_at": "2024-03-10T20:14:43Z",
    "run_id": "8224504096"
  },
  {
    "hash": "6420c0a1049e50722f8713abb448d4d3aab11c2f",
    "type": "pull_request",
    "title": "Fix database iterator-transaction lifetimes",
    "author": "pwojcikdev",
    "body": "This adds debug assertions that ensure database iterators can't be used after their corresponding transaction gets committed / released.\r\n\r\nThe `nano::node::collect_ledger_pruning_targets ()` is still triggering the assert, so I invite someone to have a look at it.",
    "draft": false,
    "pull_request": 4713,
    "label": "pwojcikdev:iterator-transaction-lifetimes",
    "created_at": "2024-08-23T09:39:19Z",
    "built_at": "2024-08-23T13:42:38Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6420c0a1049e50722f8713abb448d4d3aab11c2f",
    "build_started_at": "2024-08-23T13:10:47Z",
    "run_id": "10526333940"
  },
  {
    "hash": "6441f5ddccbfc103bdd454b2fbc6e92a5dc2ac53",
    "type": "pull_request",
    "pull_request": 3727,
    "label": "clemahieu:block_pipeline",
    "created_at": "2022-02-09T15:28:27Z",
    "built_at": "2023-02-05T21:52:53Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6441f5ddccbfc103bdd454b2fbc6e92a5dc2ac53"
  },
  {
    "hash": "6453ec92c665470a1d245bed28042b213ce413d4",
    "type": "pull_request",
    "title": "Introduce `active_transactions_config`",
    "author": "gr0vity-dev",
    "body": "Introduce `active_transactions_config` :\r\n\r\n\r\n| Old config                                | New config                                   |\r\n|-------------------------------------------|----------------------------------------------|\r\n| active_elections_size                     | active_transactions.size                     |\r\n| active_elections_hinted_limit_percentage | active_transactions.hinted_limit_percentage |\r\n| active_elections_optimistic_limit_percentage | active_transactions.optimistic_limit_percentage |\r\n| confirmation_history_size                 | active_transactions.confirmation_history_size|\r\n|  /                 | active_transactions.confirmation_cache|\r\n\r\n\r\n\r\nNewly introduced `confirmation_cache` is used in `recently_confirmed{ config.confirmation_cache },`  instead of the hardcoded value `65536`\r\n",
    "draft": false,
    "pull_request": 4604,
    "label": "gr0vity-dev:prs/active_transactions_config",
    "created_at": "2024-05-06T10:16:04Z",
    "built_at": "2024-05-06T11:05:02Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6453ec92c665470a1d245bed28042b213ce413d4",
    "build_started_at": "2024-05-06T10:38:31Z",
    "run_id": "8967668919"
  },
  {
    "hash": "647c3c4a2d750f6e03d0c3af6f768fde9c64cb64",
    "type": "commit",
    "created_at": "2024-02-01T15:34:45Z",
    "built_at": null,
    "build_status": "building",
    "docker_tag": null,
    "build_started_at": "2024-02-01T15:34:57Z",
    "run_id": "7743734697"
  },
  {
    "hash": "6496f7c506fcc6000bc0ee2ba7e0c5d14e4259ef",
    "type": "pull_request",
    "pull_request": 4308,
    "label": "RickiNano:replace-boost-filesystem",
    "created_at": "2023-10-05T10:02:02Z",
    "built_at": "2023-10-05T17:33:48Z",
    "build_status": "fail",
    "docker_tag": ""
  },
  {
    "hash": "64e753abff63f3991ddbf36f811c89e46394abb8",
    "type": "pull_request",
    "pull_request": 4465,
    "label": "clemahieu:block_fields",
    "created_at": "2024-03-06T17:58:47Z",
    "built_at": "2024-03-07T16:03:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:64e753abff63f3991ddbf36f811c89e46394abb8",
    "build_started_at": "2024-03-07T15:36:03Z",
    "run_id": "8190774894"
  },
  {
    "hash": "652c0f02d97539b313706786868cf9359fc84aa0",
    "type": "pull_request",
    "pull_request": 4428,
    "label": "dsiganos:print_stacktrace_in_unit_tests",
    "created_at": "2024-02-11T18:44:36Z",
    "built_at": "2024-02-11T19:15:58Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:652c0f02d97539b313706786868cf9359fc84aa0",
    "build_started_at": "2024-02-11T18:48:15Z",
    "run_id": "7863990578"
  },
  {
    "hash": "6542a7851f57edcbec2925d0fe812fb404f437ae",
    "type": "pull_request",
    "title": "Remove `election_winner_details` container",
    "author": "pwojcikdev",
    "body": "This removes `election_winner_details` container which proved to be difficult to keep in sync and was leaking entires when rollbacks were performed (as part of bounded backlog work). The election that triggered the cementing is now passed as part of context, ie. the flow of cementing is: `election::confirm_once (...) > confirming_set::add (...) > confirming_set::batch_cemented event > active_elections::block_cemented callback (...)` where election is passed through the pipeline.",
    "draft": false,
    "pull_request": 4755,
    "label": "pwojcikdev:remove-election-winner-details",
    "created_at": "2024-10-16T15:15:58Z",
    "built_at": "2024-10-17T18:44:51Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6542a7851f57edcbec2925d0fe812fb404f437ae",
    "build_started_at": "2024-10-17T18:13:22Z",
    "run_id": "11390634897"
  },
  {
    "hash": "65822d42a3892121273d7f14e64a301f85b95abb",
    "type": "pull_request",
    "title": "Move assert to a dedicated header",
    "author": "pwojcikdev",
    "body": null,
    "draft": false,
    "pull_request": 4773,
    "label": "pwojcikdev:assert-header",
    "created_at": "2024-10-27T18:14:57Z",
    "built_at": "2024-10-27T18:49:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:65822d42a3892121273d7f14e64a301f85b95abb",
    "build_started_at": "2024-10-27T18:20:41Z",
    "run_id": "11542797790"
  },
  {
    "hash": "65837237d87b71582fb38860dd6f069e1239cb63",
    "type": "pull_request",
    "title": "Fix Test `request_aggregator.one_update`",
    "author": "gr0vity-dev",
    "body": "I noticed that  `request_aggregator.one_update` is failing intermittently (1/100 cases) because `node.stats.count(nano::stat::type::requests, nano::stat::detail::requests_generated_votes))` is 2 instead of expected 1. However it will eventually always be 2.\r\n\r\nI changed the test-case accordingly, but maybe there is un underlying issue if `requests_generated_votes` should be 1 rather than 2.\r\n\r\nI also noticed that `node.aggregator.empty ()`is not guaranteed to be true immediately in about 1/2000 cases for me.",
    "draft": false,
    "pull_request": 4615,
    "label": "gr0vity-dev:prs/fix_request_aggregator-one_update",
    "created_at": "2024-05-12T10:01:25Z",
    "built_at": "2024-05-13T11:53:20Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:65837237d87b71582fb38860dd6f069e1239cb63",
    "build_started_at": "2024-05-13T11:24:32Z",
    "run_id": "9062020040"
  },
  {
    "hash": "658758c89261e55ccb77ce3b51fd2868219c1b23",
    "type": "pull_request",
    "pull_request": 4320,
    "label": "gr0vity-dev:exp/255votes_reduced-gossip",
    "created_at": "2023-11-01T09:57:42Z",
    "built_at": "2023-11-01T10:41:01Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:658758c89261e55ccb77ce3b51fd2868219c1b23",
    "build_started_at": "2023-11-01T10:12:54Z",
    "run_id": "6718384441"
  },
  {
    "hash": "65913505856bc3c227a242840ba29f2da90b452f",
    "type": "pull_request",
    "pull_request": 4496,
    "label": "clemahieu:receivable_iteration",
    "created_at": "2024-03-16T20:04:42Z",
    "built_at": "2024-03-18T15:37:44Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:65913505856bc3c227a242840ba29f2da90b452f",
    "build_started_at": "2024-03-18T15:10:50Z",
    "run_id": "8328994280"
  },
  {
    "hash": "65931eb285bec6afc38063067194af5ebd86c175",
    "type": "pull_request",
    "pull_request": 4430,
    "label": "pwojcikdev:analyze-coredumps",
    "created_at": "2024-02-12T13:15:02Z",
    "built_at": "2024-02-12T13:58:48Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:65931eb285bec6afc38063067194af5ebd86c175",
    "build_started_at": "2024-02-12T13:23:56Z",
    "run_id": "7872430864"
  },
  {
    "hash": "65941a063229de67aaa12f1afe0093b606a2239b",
    "type": "commit",
    "created_at": "2023-02-16T22:52:25Z",
    "built_at": "2023-02-16T23:47:38Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:65941a063229de67aaa12f1afe0093b606a2239b"
  },
  {
    "hash": "6596cefeaf9a4d9d610d3f5f0cf653b8972d0544",
    "type": "commit",
    "author": "clemahieu",
    "title": "Creating nano::secure::transaction type which is used by nano::ledger and can be expanded to include memory locking. (#4543)",
    "pull_request": "4543",
    "created_at": "2024-04-16T20:30:36Z",
    "built_at": "2024-04-16T20:56:42Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6596cefeaf9a4d9d610d3f5f0cf653b8972d0544",
    "build_started_at": "2024-04-16T20:31:15Z",
    "run_id": "8712134261"
  },
  {
    "hash": "65c82926f7c8049073ea558a7a21d5fff1cf9237",
    "type": "pull_request",
    "pull_request": 4195,
    "label": "thsfs:fix_windows_build_warnings",
    "created_at": "2023-03-21T21:08:21Z",
    "built_at": "2023-03-21T21:43:42Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:65c82926f7c8049073ea558a7a21d5fff1cf9237"
  },
  {
    "hash": "65dc236f709b4aa4c4893850e848703ed0797553",
    "type": "pull_request",
    "pull_request": 3973,
    "label": "thsfs:experimental/nano-ssl-node",
    "created_at": "2022-10-13T22:05:27Z",
    "built_at": "2023-02-04T23:22:41Z",
    "build_status": "fail",
    "docker_tag": ""
  },
  {
    "hash": "65de6fe3e5546e78b0fae482314c178fd4d940d1",
    "type": "commit",
    "created_at": "2024-03-05T12:02:17Z",
    "built_at": "2024-03-05T12:52:30Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:65de6fe3e5546e78b0fae482314c178fd4d940d1",
    "build_started_at": "2024-03-05T12:24:43Z",
    "run_id": "8156183169"
  },
  {
    "hash": "6602c7c2647ab768833b679a4d84f16d8e835059",
    "type": "pull_request",
    "pull_request": 4476,
    "label": "pwojcikdev:fair-queuing-3",
    "created_at": "2024-03-10T19:14:44Z",
    "built_at": "2024-03-10T22:19:37Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6602c7c2647ab768833b679a4d84f16d8e835059",
    "build_started_at": "2024-03-10T21:51:53Z",
    "run_id": "8224999029"
  },
  {
    "hash": "66158f6458c9541d540500ce667e3c64ab01a6d1",
    "type": "pull_request",
    "pull_request": 4247,
    "label": "gr0vity-dev:prs/fix-prerelease-docker",
    "created_at": "2023-06-16T12:05:50Z",
    "built_at": "2023-06-16T12:51:02Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:66158f6458c9541d540500ce667e3c64ab01a6d1"
  },
  {
    "hash": "661a916c0cc29a12c707e2d66d162caf1e5516e5",
    "type": "pull_request",
    "title": "Avoid creating temporary inproc channels",
    "author": "pwojcikdev",
    "body": "This avoids allocating a new inproc channel for each generated vote. Also, a bug where fair queue wouldn't clean up expired channels is fixed. ",
    "draft": false,
    "pull_request": 4625,
    "label": "pwojcikdev:vote-generator-inproc",
    "created_at": "2024-05-15T14:43:32Z",
    "built_at": "2024-05-15T15:23:11Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:661a916c0cc29a12c707e2d66d162caf1e5516e5",
    "build_started_at": "2024-05-15T14:49:46Z",
    "run_id": "9097965262"
  },
  {
    "hash": "661ab7328f63a2adb0a393f193f7f43cb1223f78",
    "type": "pull_request",
    "pull_request": 4493,
    "label": "clemahieu:store_iterator_dereference",
    "created_at": "2024-03-16T14:40:31Z",
    "built_at": "2024-03-16T15:24:02Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:661ab7328f63a2adb0a393f193f7f43cb1223f78",
    "build_started_at": "2024-03-16T14:44:36Z",
    "run_id": "8308510675"
  },
  {
    "hash": "66233613c60662e266bbe26a88792f685f8b887b",
    "type": "pull_request",
    "title": "Delete unused declarations",
    "author": "RickiNano",
    "body": null,
    "draft": false,
    "pull_request": 4781,
    "label": "RickiNano:minor-clean-up",
    "created_at": "2024-11-07T15:14:19Z",
    "built_at": "2024-11-07T15:46:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:66233613c60662e266bbe26a88792f685f8b887b",
    "build_started_at": "2024-11-07T15:18:07Z",
    "run_id": "11725916487"
  },
  {
    "hash": "662dbb96947fba352db23aef32d62ad9c45b138d",
    "type": "pull_request",
    "pull_request": 4141,
    "label": "thsfs:buffer_container_removal",
    "created_at": "2023-02-18T01:30:04Z",
    "built_at": "2023-02-18T02:57:53Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:662dbb96947fba352db23aef32d62ad9c45b138d"
  },
  {
    "hash": "6637d378b150e01617c2689ecc8932b14c2d16c9",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Use start/stop pattern in `thread_pool`",
    "pull_request": "N/A",
    "created_at": "2024-10-21T17:33:35Z",
    "built_at": "2024-10-27T12:28:19Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6637d378b150e01617c2689ecc8932b14c2d16c9",
    "build_started_at": "2024-10-27T11:28:44Z",
    "run_id": "11540256900"
  },
  {
    "hash": "663b98bab4efd70056c0bdf02828b20c0c0c52a4",
    "type": "pull_request",
    "title": "Stats overhaul",
    "author": "pwojcikdev",
    "body": "# Stats overhaul\r\n\r\nThe goal of this PR is to address some of the issues that have been increasingly cropping up with the current stats system. I believe that having a more flexible and performant system will allow us to experiment and iterate faster.\r\n\r\nThe immediate problem that is fixed is the fact that we ran out of space for declaring new stat enums:\r\n```\r\nIn file included from /nano-node/nano/lib/stats.hpp:5:\r\n/nano-node/nano/lib/stats_enums.hpp:407:2: error: enumerator value 256 is not representable in the underlying type 'uint8_t' (aka 'unsigned char')\r\n```\r\n\r\nHowever, this PR contains a bit more than that. The main changes are:\r\n- Do not require `stat::detail` enum to have `uint8` underlying type. This allows for practically unlimited number of custom stats.\r\n- Offload heavy IO operations (saving stats to disk) to a dedicated thread. Previously this was done inside the call to stat update functions, which introduced latency spikes.\r\n- Rework the way histograms are handled. Previously histograms needed to be registered with the stats system beforehand, which could be cumbersome and as a result not used. Now we store samples in a ring buffer and leave histogram creation to the user (e.g. nano-prom-exporter).\r\nNote: I'm still not sure whether this approach is really better, this needs a bit more experimentation.\r\n- Use read-write locks with atomic integers for counter values. This is a bit experimental, but on my system it seems to give some performance benefits. I'll try to include microbenchmarking suite as part of a separate PR (ongoing work is here https://github.com/pwojcikdev/nano-node/tree/stats-benchmarking )\r\n- Remove special semantics of `stat::detail::all` enum. Previously we tracked a special `all` entry that was used to aggregate all stats of a given type. It was used only by unit tests and required special filters to remove from grafana dashboards, where it unnecessarily cluttered the view. Now stat aggregation is handled by a dedicated overload of `stats::count ()` function.\r\n\r\n## Heatmaps\r\n\r\nI added experimental support for histogram generation to my fork of the `nano-prom-exporter` (https://github.com/pwojcikdev/nano-prom-exporter/commits/histograms/). This allows for generating heatmaps like this one:\r\n\r\n<img width=\"2991\" alt=\"Screenshot 2024-03-06 at 10 20 51\" src=\"https://github.com/nanocurrency/nano-node/assets/3044353/ec59d9ed-6dbf-4bbe-a710-b894bb2d6106\">\r\n",
    "draft": false,
    "pull_request": 4583,
    "label": "pwojcikdev:stats-improvements-2",
    "created_at": "2024-04-24T14:26:18Z",
    "built_at": "2024-04-24T19:36:25Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:663b98bab4efd70056c0bdf02828b20c0c0c52a4",
    "build_started_at": "2024-04-24T19:06:35Z",
    "run_id": "8821950592"
  },
  {
    "hash": "665296acfaf376fb8449fd4813a08ddc1459a668",
    "type": "commit",
    "created_at": "2024-03-05T14:02:33Z",
    "built_at": "2024-03-05T19:01:31Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:665296acfaf376fb8449fd4813a08ddc1459a668",
    "build_started_at": "2024-03-05T18:34:08Z",
    "run_id": "8161284098"
  },
  {
    "hash": "66543a32c3415938678bf3c144596c45789cfe0f",
    "type": "pull_request",
    "pull_request": 4382,
    "label": "dsiganos:fix_node_fork_publish_inactive",
    "created_at": "2024-01-21T12:42:13Z",
    "built_at": "2024-01-21T16:01:53Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:66543a32c3415938678bf3c144596c45789cfe0f",
    "build_started_at": "2024-01-21T15:37:45Z",
    "run_id": "7602211981"
  },
  {
    "hash": "66624dd45d1414c7bd40f11d92b345b014f756f6",
    "type": "pull_request",
    "title": "Fix and re-enable unit test rpc.send_epoch_2",
    "author": "dsiganos",
    "body": "fixes #3561 ",
    "draft": false,
    "pull_request": 4551,
    "label": "dsiganos:fix_rpc_send_epoch_2",
    "created_at": "2024-04-12T11:56:26Z",
    "built_at": "2024-04-12T12:26:10Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:66624dd45d1414c7bd40f11d92b345b014f756f6",
    "build_started_at": "2024-04-12T11:57:53Z",
    "run_id": "8661646658"
  },
  {
    "hash": "666e77e5b3674b32bcd35fe27a72b77c0c44cb27",
    "type": "pull_request",
    "pull_request": 4468,
    "label": "clemahieu:block_ledger_header_reduction",
    "created_at": "2024-03-07T09:52:14Z",
    "built_at": "2024-03-07T10:26:13Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:666e77e5b3674b32bcd35fe27a72b77c0c44cb27",
    "build_started_at": "2024-03-07T09:58:00Z",
    "run_id": "8186202809"
  },
  {
    "hash": "6681da376a9c2e6eede8c0352af8da5caf68f402",
    "type": "pull_request",
    "pull_request": 4144,
    "label": "pwojcikdev:ci/separate-windows-build-run",
    "created_at": "2023-02-19T18:19:10Z",
    "built_at": "2023-02-19T22:40:28Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6681da376a9c2e6eede8c0352af8da5caf68f402"
  },
  {
    "hash": "669fdceb0093c3da8f0d8a5d757e1404d32ad46b",
    "type": "pull_request",
    "title": "Prototype for batch TCP receiving",
    "author": "clemahieu",
    "body": null,
    "draft": true,
    "pull_request": 4630,
    "label": "clemahieu:batch_socket_read",
    "created_at": "2024-05-20T00:55:27Z",
    "built_at": "2024-05-20T02:10:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:669fdceb0093c3da8f0d8a5d757e1404d32ad46b",
    "build_started_at": "2024-05-20T01:43:28Z",
    "run_id": "9152253090"
  },
  {
    "hash": "66a7a469070397d2daf23481894dfdd365980b85",
    "type": "pull_request",
    "pull_request": 4133,
    "label": "clemahieu:election_occupancy",
    "created_at": "2023-02-15T18:23:49Z",
    "built_at": "2023-02-17T17:03:10Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:66a7a469070397d2daf23481894dfdd365980b85"
  },
  {
    "hash": "66bffe2e5c35f5643b611c64b6211118483dee67",
    "type": "pull_request",
    "pull_request": 4461,
    "label": "clemahieu:ledger_query_simplification",
    "created_at": "2024-03-05T21:33:36Z",
    "built_at": "2024-03-06T11:09:31Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:66bffe2e5c35f5643b611c64b6211118483dee67",
    "build_started_at": "2024-03-06T10:44:07Z",
    "run_id": "8170774144"
  },
  {
    "hash": "66d7a3acf4fd8dee415fbe6caf3f445dcdff36af",
    "type": "pull_request",
    "pull_request": 4175,
    "label": "thsfs:remove_message_parser",
    "created_at": "2023-03-07T16:01:29Z",
    "built_at": "2023-03-07T17:06:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:66d7a3acf4fd8dee415fbe6caf3f445dcdff36af"
  },
  {
    "hash": "66df593e50c89fa7a64b75facfa58316b48bade4",
    "type": "pull_request",
    "title": "Move write database queue",
    "body": "This renames write_database_queue to write_queue and moves the class into the nano::store library. It also moves the object from nano::node to nano::store::component.\r\n\r\nThis is a more natural place for this class/object to be placed and also preps for confirming_set to be moved on to the ledger class which would otherwise have a cyclic dependency secure -> store -> node -> secure",
    "draft": false,
    "pull_request": 4535,
    "label": "clemahieu:move_write_database_queue",
    "created_at": "2024-04-04T11:07:35Z",
    "built_at": "2024-04-04T13:25:46Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:66df593e50c89fa7a64b75facfa58316b48bade4",
    "build_started_at": "2024-04-04T13:00:38Z",
    "run_id": "8555103429"
  },
  {
    "hash": "66eb8f50f2b0b72f1df2bdefaacf8db180291db7",
    "type": "pull_request",
    "pull_request": 4345,
    "label": "clemahieu:block_checker",
    "created_at": "2023-11-14T12:02:06Z",
    "built_at": "2024-03-21T20:26:58Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-21T20:11:29Z",
    "run_id": "8381153885"
  },
  {
    "hash": "6704452691206e13a33d35517e9ff98e718aa63d",
    "type": "pull_request",
    "title": "Use a dedicated thread for tcp listener",
    "author": "pwojcikdev",
    "body": "While I'm not aware of any problems with previous implementation, the async way of implementing `tcp_listener` was generally harder to understand and to evolve over time. It was especially problematic when making changes to other aspects of networking code. Given that our connections are long-lived and relatively infrequent, there is very little need for tcp acceptor code to be focused on performance and instead we should prioritize readability and maintainability. This modifies it to instead run on a single, dedicated thread and use blocking IO operations.",
    "draft": false,
    "pull_request": 4523,
    "label": "pwojcikdev:networking-fixes/tcp-listener-2",
    "created_at": "2024-03-25T16:06:32Z",
    "built_at": "2024-04-20T09:06:07Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6704452691206e13a33d35517e9ff98e718aa63d",
    "build_started_at": "2024-04-20T08:40:50Z",
    "run_id": "8763858368"
  },
  {
    "hash": "674d5af863e85e729e8edf4f617f818108cd2df6",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Rename uint256 tests to numbers",
    "pull_request": "4767",
    "created_at": "2024-10-24T17:23:08Z",
    "built_at": "2024-10-26T00:05:57Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:674d5af863e85e729e8edf4f617f818108cd2df6",
    "build_started_at": "2024-10-25T22:56:00Z",
    "run_id": "11526841488"
  },
  {
    "hash": "6768e7dc6e9a30172309d4d46d555a14c5d217ea",
    "type": "pull_request",
    "pull_request": 4515,
    "label": "pwojcikdev:networking-fixes/tcp-listener-reorg",
    "created_at": "2024-03-21T20:37:47Z",
    "built_at": "2024-03-21T21:07:24Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6768e7dc6e9a30172309d4d46d555a14c5d217ea",
    "build_started_at": "2024-03-21T20:37:54Z",
    "run_id": "8381457774"
  },
  {
    "hash": "676f71525bf87b4685e10904ec29a99dd8a02faa",
    "type": "commit",
    "title": "Store origin channel as weak_ptr",
    "pull_request": "4476",
    "created_at": "2024-04-03T20:32:33Z",
    "built_at": "2024-04-12T10:37:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:676f71525bf87b4685e10904ec29a99dd8a02faa",
    "build_started_at": "2024-04-12T09:48:30Z",
    "run_id": "8660454918"
  },
  {
    "hash": "676fe111e081106a12c60da3d7b743a19d3c5b3e",
    "type": "pull_request",
    "title": "Move assert to a dedicated header",
    "author": "pwojcikdev",
    "body": null,
    "draft": false,
    "pull_request": 4773,
    "label": "pwojcikdev:assert-header",
    "created_at": "2024-10-27T18:14:57Z",
    "built_at": "2024-11-03T11:33:36Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-11-03T11:14:37Z",
    "run_id": "11650859577"
  },
  {
    "hash": "6783fd78a6e767355fcae65ae115f3ce9187106e",
    "type": "pull_request",
    "title": "Fix Test `request_aggregator.one_update`",
    "author": "gr0vity-dev",
    "body": "I noticed that  `request_aggregator.one_update` is failing intermittently (1/100 cases) because `node.stats.count(nano::stat::type::requests, nano::stat::detail::requests_generated_votes))` is 2 instead of expected 1. However it will eventually always be 2.\r\n\r\nI changed the test-case accordingly, but maybe there is un underlying issue if `requests_generated_votes` should be 1 rather than 2.\r\n\r\nI also noticed that `node.aggregator.empty ()`is not guaranteed to be true immediately in about 1/2000 cases for me.",
    "draft": false,
    "pull_request": 4615,
    "label": "gr0vity-dev:prs/fix_request_aggregator-one_update",
    "created_at": "2024-05-12T10:01:25Z",
    "built_at": "2024-05-14T08:59:57Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6783fd78a6e767355fcae65ae115f3ce9187106e",
    "build_started_at": "2024-05-14T08:32:44Z",
    "run_id": "9076089007"
  },
  {
    "hash": "67841b6a797b564a8eb36688bb220b9bfeadb596",
    "type": "commit",
    "created_at": "2024-01-26T04:09:25Z",
    "built_at": "2024-01-26T04:45:45Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:67841b6a797b564a8eb36688bb220b9bfeadb596",
    "build_started_at": "2024-01-26T04:21:05Z",
    "run_id": "7663924228"
  },
  {
    "hash": "6784a35bebdb4f1e9d71d66c186852e84b8233de",
    "type": "commit",
    "created_at": "2023-03-02T20:02:11Z",
    "built_at": "2023-03-05T03:10:50Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6784a35bebdb4f1e9d71d66c186852e84b8233de"
  },
  {
    "hash": "678e50e692282c5358f1c99c6eb1b769bd931c85",
    "type": "pull_request",
    "pull_request": 4345,
    "label": "clemahieu:block_checker",
    "created_at": "2023-11-14T12:02:06Z",
    "built_at": "2024-03-28T11:07:25Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-28T10:52:16Z",
    "run_id": "8466164570"
  },
  {
    "hash": "67a1a4181e35f68ebc897154574f3b7bab0e10bb",
    "type": "commit",
    "author": "clemahieu",
    "title": "Revert \"Rewrite json_handler::receivable in terms of receivable iterators\"\n\nThis reverts commit 9d962e6e462c3ec1a2d26b9720b9f06d718d39a4.\n\n# Conflicts:\n#\tnano/node/json_handler.cpp",
    "pull_request": "4711",
    "created_at": "2024-08-21T16:43:32Z",
    "built_at": "2024-08-22T10:11:30Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:67a1a4181e35f68ebc897154574f3b7bab0e10bb",
    "build_started_at": "2024-08-22T09:33:21Z",
    "run_id": "10505673691"
  },
  {
    "hash": "67c88aac4a4e041ccdcd1bd32f1d3ab57b5019a5",
    "type": "commit",
    "author": "clemahieu",
    "title": "Merge pull request #4707 from clemahieu/rpc_unopened_seek\n\nRevert \"Rewrite json_handler::unopened in terms of receivable iterators\"",
    "pull_request": "4707",
    "created_at": "2024-08-20T11:55:45Z",
    "built_at": "2024-08-20T13:34:43Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:67c88aac4a4e041ccdcd1bd32f1d3ab57b5019a5",
    "build_started_at": "2024-08-20T12:17:20Z",
    "run_id": "10472193045"
  },
  {
    "hash": "67eeac3115796b9eaebda6fc34d54a003dd7e1e4",
    "type": "commit",
    "created_at": "2024-03-19T06:18:28Z",
    "built_at": "2024-03-19T07:05:46Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:67eeac3115796b9eaebda6fc34d54a003dd7e1e4",
    "build_started_at": "2024-03-19T06:26:40Z",
    "run_id": "8338541495"
  },
  {
    "hash": "67f4db8f104f75ce0d43fd9a3d651a270ec61671",
    "type": "commit",
    "created_at": "2023-03-02T22:58:56Z",
    "built_at": "2023-03-05T03:47:00Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:67f4db8f104f75ce0d43fd9a3d651a270ec61671"
  },
  {
    "hash": "681d5f84e427fe538567b3fcad193e1df397d56d",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Rename class to `backlog_scan`",
    "pull_request": "N/A",
    "created_at": "2024-10-11T13:00:02Z",
    "built_at": "2024-11-27T02:53:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:681d5f84e427fe538567b3fcad193e1df397d56d",
    "build_started_at": "2024-11-27T00:59:54Z",
    "run_id": "12042584409"
  },
  {
    "hash": "6839225b1234a61dc6b1d26a911e878e7e1f8518",
    "type": "pull_request",
    "pull_request": 4114,
    "label": "pwojcikdev:prs/bootstrap-server-typo",
    "created_at": "2023-02-08T20:31:05Z",
    "built_at": "2023-02-08T21:07:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6839225b1234a61dc6b1d26a911e878e7e1f8518"
  },
  {
    "hash": "683f85ef55d4dcb051172cd1fe821af111729f27",
    "type": "pull_request",
    "title": "Traffic shaping",
    "author": "pwojcikdev",
    "body": "This is a draft PR for an ongoing work that overhauls how outgoing traffic is handled and prioritized. This will significantly improve how the node handles network congestion, which is extremely important during spam.\r\n\r\nDepends on PRs:\r\nhttps://github.com/nanocurrency/nano-node/pull/4784",
    "draft": true,
    "pull_request": 4786,
    "label": "pwojcikdev:traffic-shaping-pr",
    "created_at": "2024-11-18T19:43:02Z",
    "built_at": "2024-11-24T23:22:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:683f85ef55d4dcb051172cd1fe821af111729f27",
    "build_started_at": "2024-11-24T22:56:36Z",
    "run_id": "12000297244"
  },
  {
    "hash": "6844ec63780786e7bf0d98d85eeab7573b27f85b",
    "type": "commit",
    "author": "clemahieu",
    "title": "Fix two boost dependency issues (#4716)",
    "pull_request": "4716",
    "created_at": "2024-08-27T12:46:11Z",
    "built_at": "2024-08-27T13:23:16Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6844ec63780786e7bf0d98d85eeab7573b27f85b",
    "build_started_at": "2024-08-27T12:52:25Z",
    "run_id": "10578496333"
  },
  {
    "hash": "68496af33d706fd830d41568f5a3903b63707cd3",
    "type": "commit",
    "title": "Enable reporting TSAN errors (#4539)",
    "pull_request": "4539",
    "created_at": "2024-04-09T08:01:32Z",
    "built_at": "2024-04-09T08:41:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:68496af33d706fd830d41568f5a3903b63707cd3",
    "build_started_at": "2024-04-09T08:16:30Z",
    "run_id": "8612507848"
  },
  {
    "hash": "68502a1b4844ce05ac1442565ef181043d3f87b4",
    "type": "pull_request",
    "pull_request": 4393,
    "label": "RickiNano:convenience-functions",
    "created_at": "2024-01-24T13:48:09Z",
    "built_at": "2024-01-24T14:20:57Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:68502a1b4844ce05ac1442565ef181043d3f87b4",
    "build_started_at": "2024-01-24T13:51:00Z",
    "run_id": "7641154714"
  },
  {
    "hash": "685ce4626c544baa88495b8e011a5c66a9deb112",
    "type": "pull_request",
    "pull_request": 4199,
    "label": "thsfs:add_cmake_for_submodules",
    "created_at": "2023-03-22T19:51:02Z",
    "built_at": "2023-03-28T23:37:37Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:685ce4626c544baa88495b8e011a5c66a9deb112"
  },
  {
    "hash": "686174604c822beb16e7dddcd8918cbf34124e79",
    "type": "pull_request",
    "title": "Remove legacy bootstrap",
    "author": "pwojcikdev",
    "body": "This removes legacy bootstrap, which was replaced by the new ascending bootstrap. Legacy bootstrap implementation was unnecessarily complicated with many inefficiencies. Debugging it was a pain and slowed down development of new features. \r\n\r\nAll the `bootstrap_ascending*` classes and stats are renamed to simply `bootstrap`.\r\n\r\nTODO for the future is porting previous `bootstrap_processor` testsuite to use the new bootstrapper.",
    "draft": false,
    "pull_request": 4777,
    "label": "pwojcikdev:remove-legacy-bootstrap-2",
    "created_at": "2024-10-29T17:20:20Z",
    "built_at": "2024-10-29T17:59:38Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:686174604c822beb16e7dddcd8918cbf34124e79",
    "build_started_at": "2024-10-29T17:32:51Z",
    "run_id": "11579355530"
  },
  {
    "hash": "6877a57de84d642757e88b130a43bda8618b66a1",
    "type": "pull_request",
    "pull_request": 4256,
    "label": "gr0vity-dev:prs/unified_artifacts_worflow",
    "created_at": "2023-07-03T18:42:25Z",
    "built_at": "2023-07-11T21:32:21Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6877a57de84d642757e88b130a43bda8618b66a1"
  },
  {
    "hash": "687ae943bab872a577e269bfccc028aae6e5dad0",
    "type": "pull_request",
    "pull_request": 3355,
    "label": "SergiySW:submodules/lmdb_0_9_29",
    "created_at": "2021-06-24T12:36:33Z",
    "built_at": null,
    "build_status": "fail",
    "docker_tag": null
  },
  {
    "hash": "687e5f3e7675501635f73c6269e0c841a325a1fe",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge pull request #4600 \"Multithreaded vote processor\" from pwojcikdev/vote-processor-threads\n\nMultithreaded vote processor",
    "pull_request": "4600",
    "created_at": "2024-05-07T07:44:31Z",
    "built_at": "2024-05-07T08:23:50Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:687e5f3e7675501635f73c6269e0c841a325a1fe",
    "build_started_at": "2024-05-07T07:50:20Z",
    "run_id": "8981729264"
  },
  {
    "hash": "6883c4d9e56cc5c13d1df256f4a67d84408c2317",
    "type": "pull_request",
    "title": "Remove `election_winner_details` container",
    "author": "pwojcikdev",
    "body": "This removes `election_winner_details` container which proved to be difficult to keep in sync and was leaking entires when rollbacks were performed (as part of bounded backlog work). The election that triggered the cementing is now passed as part of context, ie. the flow of cementing is: `election::confirm_once (...) > confirming_set::add (...) > confirming_set::batch_cemented event > active_elections::block_cemented callback (...)` where election is passed through the pipeline.",
    "draft": false,
    "pull_request": 4755,
    "label": "pwojcikdev:remove-election-winner-details",
    "created_at": "2024-10-16T15:15:58Z",
    "built_at": "2024-10-17T23:55:12Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6883c4d9e56cc5c13d1df256f4a67d84408c2317",
    "build_started_at": "2024-10-17T23:28:14Z",
    "run_id": "11394613700"
  },
  {
    "hash": "68a9018aeff5723d70858b06e97a448b52c729c3",
    "type": "pull_request",
    "title": "Use RocksDB TransactionDB rather than OptimisticTransactionDB",
    "author": "clemahieu",
    "body": "The performance difference is minimal and it eliminates the possibility of misconfiguration of memtable size which could lead to out-of-memory or a crash.",
    "draft": false,
    "pull_request": 4671,
    "label": "clemahieu:rocksdb_non_optimistic_tx_db",
    "created_at": "2024-07-05T15:36:39Z",
    "built_at": "2024-07-05T16:11:47Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:68a9018aeff5723d70858b06e97a448b52c729c3",
    "build_started_at": "2024-07-05T15:41:56Z",
    "run_id": "9810697827"
  },
  {
    "hash": "68d47e308e7173c035c1d47155e04b433dec6045",
    "type": "commit",
    "author": "clemahieu",
    "title": "Removing rocksdb write lock mutexes as store::write_queue serializes write transactions.",
    "pull_request": "4737",
    "created_at": "2024-09-27T10:57:13Z",
    "built_at": "2024-09-30T07:45:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:68d47e308e7173c035c1d47155e04b433dec6045",
    "build_started_at": "2024-09-30T06:52:27Z",
    "run_id": "11101290578"
  },
  {
    "hash": "68d6c44e06c47271baf543d9edbc14a15b86777a",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Track writer request id",
    "pull_request": "4780",
    "created_at": "2024-11-04T15:32:57Z",
    "built_at": "2024-11-04T19:16:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:68d6c44e06c47271baf543d9edbc14a15b86777a",
    "build_started_at": "2024-11-04T18:31:28Z",
    "run_id": "11670605186"
  },
  {
    "hash": "68f860b1f7aed19bf29b339d0e36b41c8def3856",
    "type": "commit",
    "created_at": "2023-04-07T13:01:08Z",
    "built_at": "2023-04-13T14:14:25Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:68f860b1f7aed19bf29b339d0e36b41c8def3856"
  },
  {
    "hash": "68ff2078f55022aa0bebe1b3264cc06c321c5733",
    "type": "commit",
    "created_at": "2023-11-07T18:23:56Z",
    "built_at": "2023-11-07T22:01:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:68ff2078f55022aa0bebe1b3264cc06c321c5733",
    "build_started_at": "2023-11-07T20:59:05Z",
    "run_id": "6790225316"
  },
  {
    "hash": "6911c68be103233c3b51862cb9743a09a8861007",
    "type": "pull_request",
    "title": "Enable debug logging for core tests",
    "author": "gr0vity-dev",
    "body": "Failures on GitHub runners are sometimes hard to reproduce locally. Adding detailed logging helps analyze test failures directly from CI logs.\r\n\r\n- Enables NANO_LOG_STATS and debug level logging for core tests across all CI platforms\r\n- Helps diagnose intermittent test failures by providing more detailed execution traces",
    "draft": false,
    "pull_request": 4807,
    "label": "gr0vity-dev:prs/enable-debug-log-for-core-tests",
    "created_at": "2024-12-07T08:45:19Z",
    "built_at": "2024-12-07T14:02:22Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6911c68be103233c3b51862cb9743a09a8861007",
    "build_started_at": "2024-12-07T13:32:27Z",
    "run_id": "12212814491"
  },
  {
    "hash": "6924d54954184d619e768802e48f040a8a15c01e",
    "type": "pull_request",
    "title": "Bootstrap tuning",
    "author": "pwojcikdev",
    "body": "This fixes a few more problems with bootstrap that I noticed when working on traffic shaping.",
    "draft": false,
    "pull_request": 4806,
    "label": "pwojcikdev:bootstrap-tuning-5",
    "created_at": "2024-12-06T20:52:59Z",
    "built_at": "2024-12-10T13:30:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6924d54954184d619e768802e48f040a8a15c01e",
    "build_started_at": "2024-12-10T13:03:12Z",
    "run_id": "12256678352"
  },
  {
    "hash": "69285accf17076b2c0225d3eb80967a6eadd1755",
    "type": "pull_request",
    "title": "Constexpr check NANO_ASIO_HANDLER_TRACKING",
    "author": "pwojcikdev",
    "body": "Using constexprs instead of ifdefs should be preferred to avoid dead code.",
    "draft": false,
    "pull_request": 4562,
    "label": "pwojcikdev:constexpr-asio-handler-tracking",
    "created_at": "2024-04-14T17:27:55Z",
    "built_at": "2024-04-15T04:34:58Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:69285accf17076b2c0225d3eb80967a6eadd1755",
    "build_started_at": "2024-04-14T22:18:13Z",
    "run_id": "8683214086"
  },
  {
    "hash": "694d975fe20573103ed90e36a750d5e21777c51d",
    "type": "pull_request",
    "title": "Bootstrap tuning",
    "author": "pwojcikdev",
    "body": "This contains a few bootstrap improvements that should prevent edge case stalls. The main fix is giving accounts inserted from frontier / database scan the lowest possible priority, so that they cannot preempt existing priority accounts.",
    "draft": false,
    "pull_request": 4784,
    "label": "pwojcikdev:bootstrap-tuning-3",
    "created_at": "2024-11-11T20:51:52Z",
    "built_at": "2024-11-12T13:22:32Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:694d975fe20573103ed90e36a750d5e21777c51d",
    "build_started_at": "2024-11-12T12:54:50Z",
    "run_id": "11797694498"
  },
  {
    "hash": "697f2ce05deab5bc9cdc0b17cefddb65c5a3b3ad",
    "type": "commit",
    "title": "Removing unconfirmed_frontiers command line option. (#4530)\n\nWhen unconfirmed blocks are moved in to memory this information will not be queryable outside the node process.",
    "pull_request": "4530",
    "created_at": "2024-04-01T15:40:24Z",
    "built_at": "2024-04-01T16:11:09Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:697f2ce05deab5bc9cdc0b17cefddb65c5a3b3ad",
    "build_started_at": "2024-04-01T15:45:51Z",
    "run_id": "8510179803"
  },
  {
    "hash": "69a540d7d2b436bd789b12a9864d50dd6a93bb4b",
    "type": "commit",
    "created_at": "2023-09-17T20:37:54Z",
    "built_at": "2023-09-20T19:21:19Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:69a540d7d2b436bd789b12a9864d50dd6a93bb4b"
  },
  {
    "hash": "69a872ac61ec4a272ea1f051bc2d8f84acfdf0c9",
    "type": "commit",
    "author": "clemahieu",
    "title": "Move ledger::successor on to ledger set successor",
    "pull_request": "4593",
    "created_at": "2024-03-12T14:01:26Z",
    "built_at": "2024-04-30T15:44:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:69a872ac61ec4a272ea1f051bc2d8f84acfdf0c9",
    "build_started_at": "2024-04-30T13:34:48Z",
    "run_id": "8897333177"
  },
  {
    "hash": "69af0256b73aac399bb52054dc2b3c09420f2e29",
    "type": "pull_request",
    "pull_request": 4486,
    "label": "clemahieu:ledger_view",
    "created_at": "2024-03-12T14:33:24Z",
    "built_at": "2024-03-17T20:20:31Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-17T20:02:48Z",
    "run_id": "8317932744"
  },
  {
    "hash": "69af16b7e0f13c18b54a3960f3138bf8d148e0f0",
    "type": "commit",
    "created_at": "2023-02-16T18:19:18Z",
    "built_at": "2023-02-16T19:01:59Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:69af16b7e0f13c18b54a3960f3138bf8d148e0f0"
  },
  {
    "hash": "69bba0c10f78008418bf85478e95bea5fa236a6a",
    "type": "pull_request",
    "pull_request": 4267,
    "label": "clemahieu:remove_signature_threads",
    "created_at": "2023-08-22T12:30:21Z",
    "built_at": "2023-10-19T15:52:09Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:69bba0c10f78008418bf85478e95bea5fa236a6a",
    "build_started_at": "2023-10-19T15:09:33Z",
    "run_id": "6576618658"
  },
  {
    "hash": "69c79132b01dffca219ee7af5f7c612ea363b267",
    "type": "pull_request",
    "title": "Introduce ledger view classes to separate confirmed/unconfirmed operations on the ledger",
    "author": "clemahieu",
    "body": "The motivation for this PR is in preparation for bounded backlog changes. Currently, both confirmed and unconfirmed transactions are together on disk and the ACID properties of the ledger are encapsulated with a database transaction.\r\n\r\nWith the bounded backlog, blocks will be stored in memory so there will need to be memory synchronization in addition to database synchronization. Rather than filling the ledger class with unconfirmed/confirmed variants for each operation.\r\n\r\nThe ledger is divided in to several sets and subsets:\r\nledger::confirmed - The set of confirmed transactions\r\nledger::any - The superset of confirmed and unconfirmed transactions\r\n\r\nWhen unconfirmed blocks are held in memory the set ledger::unconfirmed will be added which holds only unconfirmed transactions.\r\n\r\nIn the future the confirming_set can be moved on to ledger which is the subset of unconfirmed blocks that are queued to be moved in to the confirmed set.",
    "draft": false,
    "pull_request": 4486,
    "label": "clemahieu:ledger_view",
    "created_at": "2024-03-12T14:33:24Z",
    "built_at": "2024-04-16T04:38:31Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:69c79132b01dffca219ee7af5f7c612ea363b267",
    "build_started_at": "2024-04-16T04:13:43Z",
    "run_id": "8699833600"
  },
  {
    "hash": "69db556656d8e024f97e03018f36dec07c631fd2",
    "type": "commit",
    "created_at": "2024-03-05T11:44:05Z",
    "built_at": "2024-03-05T12:10:37Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:69db556656d8e024f97e03018f36dec07c631fd2",
    "build_started_at": "2024-03-05T11:44:08Z",
    "run_id": "8155675161"
  },
  {
    "hash": "69f147991c7b6c336a4df93336fe8dfb650a157b",
    "type": "commit",
    "created_at": "2024-03-12T12:07:51Z",
    "built_at": "2024-03-22T18:21:09Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:69f147991c7b6c336a4df93336fe8dfb650a157b",
    "build_started_at": "2024-03-22T17:19:57Z",
    "run_id": "8394068316"
  },
  {
    "hash": "6a01a97f651018dfb9d4f5ef0cec92885cd8c2d5",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Use unique ptr for `bandwidth_limiter`",
    "pull_request": "4728",
    "created_at": "2024-09-09T20:28:35Z",
    "built_at": "2024-09-17T11:10:56Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6a01a97f651018dfb9d4f5ef0cec92885cd8c2d5",
    "build_started_at": "2024-09-17T09:35:37Z",
    "run_id": "10901446941"
  },
  {
    "hash": "6a01fc4ab7594d5c77de5c6021eae8ef767d3b7e",
    "type": "commit",
    "created_at": "2023-09-25T18:16:30Z",
    "built_at": "2023-09-25T19:08:23Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6a01fc4ab7594d5c77de5c6021eae8ef767d3b7e"
  },
  {
    "hash": "6a0d882b07e18d63ff483f6bf344022fc7c8fe51",
    "type": "pull_request",
    "title": "Benchmarking suite",
    "author": "pwojcikdev",
    "body": "This adds a benchmarking suite.",
    "draft": true,
    "pull_request": 4689,
    "label": "pwojcikdev:benchmarking",
    "created_at": "2024-08-03T11:22:46Z",
    "built_at": "2024-08-16T13:09:36Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-08-16T12:54:53Z",
    "run_id": "10420279324"
  },
  {
    "hash": "6a26366e8b72818e85b9ea8507e885db16576bd9",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Move random_pool test to a separate file",
    "pull_request": "4767",
    "created_at": "2024-10-24T17:16:21Z",
    "built_at": "2024-10-26T00:13:01Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6a26366e8b72818e85b9ea8507e885db16576bd9",
    "build_started_at": "2024-10-25T22:56:00Z",
    "run_id": "11526894405"
  },
  {
    "hash": "6a294193a84a0605846acfd09ba8534f20109a88",
    "type": "pull_request",
    "pull_request": 4202,
    "label": "pwojcikdev:traffic-queue-types-2",
    "created_at": "2023-04-02T12:03:42Z",
    "built_at": "2023-04-02T12:44:20Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6a294193a84a0605846acfd09ba8534f20109a88"
  },
  {
    "hash": "6a371fd257121e5f74db2dddab1a4e006a30de5d",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Rename to `node.backlog_scan`",
    "pull_request": "N/A",
    "created_at": "2024-10-11T12:53:54Z",
    "built_at": "2024-11-27T03:39:11Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6a371fd257121e5f74db2dddab1a4e006a30de5d",
    "build_started_at": "2024-11-27T00:59:54Z",
    "run_id": "12043022626"
  },
  {
    "hash": "6a4068ce9874127296fbe1e3b7497ffe41c1b760",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Short circuit hash zero lookup",
    "pull_request": "N/A",
    "created_at": "2024-10-25T22:15:27Z",
    "built_at": "2024-11-29T17:02:36Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6a4068ce9874127296fbe1e3b7497ffe41c1b760",
    "build_started_at": "2024-11-29T15:39:54Z",
    "run_id": "12088112252"
  },
  {
    "hash": "6a663a4a09b756e7b1179b01f615a6f2d8997606",
    "type": "commit",
    "created_at": "2024-02-19T19:17:21Z",
    "built_at": "2024-02-23T11:10:15Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6a663a4a09b756e7b1179b01f615a6f2d8997606",
    "build_started_at": "2024-02-23T10:36:25Z",
    "run_id": "8017972262"
  },
  {
    "hash": "6a66da923a559382d399262430d1adbb6adb7a4f",
    "type": "pull_request",
    "title": "Clean up priority scheduler bucket look ups",
    "author": "clemahieu",
    "body": "This combines elements of changes from https://github.com/nanocurrency/nano-node/pull/4626 and https://github.com/nanocurrency/nano-node/pull/4623.\r\n\r\nBucket setup is encapsulated in its own function which cleans up the constructor.\r\n\r\n\"minimums\" container is eliminated and each bucket object holds its minimum range value.\r\nSearching for the bucket is done as a search on a sorted vector which should give the most efficient lookups given the vector contents doesn't change.",
    "draft": false,
    "pull_request": 4632,
    "label": "clemahieu:priority_sorting_cleanup",
    "created_at": "2024-05-20T23:48:16Z",
    "built_at": "2024-05-21T00:22:51Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6a66da923a559382d399262430d1adbb6adb7a4f",
    "build_started_at": "2024-05-20T23:53:50Z",
    "run_id": "9166521470"
  },
  {
    "hash": "6a802b2359deb9e94a4b404928faace49263dc59",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Do not wait for cancellation signal (#4664)\n\n* Do not wait for cancelation signal\r\n\r\n* Test\r\n\r\n* Explicit constructor",
    "pull_request": "4664",
    "created_at": "2024-07-02T07:48:12Z",
    "built_at": "2024-07-02T08:17:28Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6a802b2359deb9e94a4b404928faace49263dc59",
    "build_started_at": "2024-07-02T07:48:37Z",
    "run_id": "9756847910"
  },
  {
    "hash": "6acfdee8e3bb62370b069c071e7bb3747d79d389",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Fix websocket tests",
    "pull_request": "4595",
    "created_at": "2024-04-29T19:40:48Z",
    "built_at": "2024-05-04T11:14:26Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6acfdee8e3bb62370b069c071e7bb3747d79d389",
    "build_started_at": "2024-05-04T09:36:39Z",
    "run_id": "8949954765"
  },
  {
    "hash": "6afdcaeef56430826e6b57798e8e6c4b62f25278",
    "type": "pull_request",
    "pull_request": 4469,
    "label": "RickiNano:threaded-aggregator",
    "created_at": "2024-03-07T16:38:08Z",
    "built_at": "2024-03-07T20:13:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6afdcaeef56430826e6b57798e8e6c4b62f25278",
    "build_started_at": "2024-03-07T19:44:46Z",
    "run_id": "8193912136"
  },
  {
    "hash": "6b6df38cd5d5b8c08a108b6ac993f742fe5d1832",
    "type": "commit",
    "created_at": "2024-01-26T16:05:30Z",
    "built_at": "2024-01-26T16:45:00Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6b6df38cd5d5b8c08a108b6ac993f742fe5d1832",
    "build_started_at": "2024-01-26T16:17:08Z",
    "run_id": "7670586505"
  },
  {
    "hash": "6b89da263a9006a436c744b7952cee2922436f16",
    "type": "commit",
    "title": "Ignore `chacha.hpp` ubsan errors (#4538)\n\nIgnore `chacha.hpp` errors",
    "pull_request": "4538",
    "created_at": "2024-04-05T22:27:40Z",
    "built_at": "2024-04-05T22:57:26Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6b89da263a9006a436c744b7952cee2922436f16",
    "build_started_at": "2024-04-05T22:33:11Z",
    "run_id": "8576469917"
  },
  {
    "hash": "6b8d80ffe533fa03dbb8e196be9deb918f728484",
    "type": "pull_request",
    "title": "Optimize `active_elections::notify_observers`",
    "author": "pwojcikdev",
    "body": "This avoids a redundant database lookup in `block_amount` call and avoids it altogether in the common case where no websocket observers are configured.",
    "draft": false,
    "pull_request": 4637,
    "label": "pwojcikdev:notify-observers-optimize",
    "created_at": "2024-05-22T20:33:59Z",
    "built_at": "2024-05-22T21:04:27Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6b8d80ffe533fa03dbb8e196be9deb918f728484",
    "build_started_at": "2024-05-22T20:34:18Z",
    "run_id": "9198040114"
  },
  {
    "hash": "6bb1191d10aa7420f7ca86c12f3f4be272b129c1",
    "type": "commit",
    "created_at": "2023-03-07T21:15:33Z",
    "built_at": "2023-03-08T02:52:13Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6bb1191d10aa7420f7ca86c12f3f4be272b129c1"
  },
  {
    "hash": "6bee60f6f988c7a677aec97427db2f98204c2059",
    "type": "pull_request",
    "title": "Bundle ledger transaction and write guard into a single object",
    "author": "pwojcikdev",
    "body": "This change ensures that ledger write transactions and corresponding write queue guards are always acquired and released together. This in turn allows implementing `.refresh_if_needed ()` function that handles both transaction and guard, which simplifies bounding of write transaction lifetimes.",
    "draft": false,
    "pull_request": 4653,
    "label": "pwojcikdev:transaction-write-queue-wrapper",
    "created_at": "2024-06-18T15:57:29Z",
    "built_at": "2024-06-19T13:01:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6bee60f6f988c7a677aec97427db2f98204c2059",
    "build_started_at": "2024-06-19T12:32:35Z",
    "run_id": "9582050639"
  },
  {
    "hash": "6c04b19357dee90980e0bca182f314628e509e38",
    "type": "pull_request",
    "pull_request": 4430,
    "label": "pwojcikdev:analyze-coredumps",
    "created_at": "2024-02-12T13:15:02Z",
    "built_at": "2024-02-12T14:14:46Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6c04b19357dee90980e0bca182f314628e509e38",
    "build_started_at": "2024-02-12T13:45:55Z",
    "run_id": "7872682258"
  },
  {
    "hash": "6c0c27a8710005ba84cfcc553d24d505a3a998e7",
    "type": "commit",
    "created_at": "2024-02-14T09:30:41Z",
    "built_at": "2024-02-14T10:03:32Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6c0c27a8710005ba84cfcc553d24d505a3a998e7",
    "build_started_at": "2024-02-14T09:38:08Z",
    "run_id": "7899207162"
  },
  {
    "hash": "6c10b9f705672e9af15e558cb19f8c19af57bc53",
    "type": "commit",
    "created_at": "2023-03-20T19:58:28Z",
    "built_at": "2023-03-20T20:42:56Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6c10b9f705672e9af15e558cb19f8c19af57bc53"
  },
  {
    "hash": "6c1bc2e1a9598690634edf3d7c21e719822440de",
    "type": "pull_request",
    "pull_request": 4201,
    "label": "clemahieu:rpc_pending_exists",
    "created_at": "2023-03-29T02:14:19Z",
    "built_at": "2023-03-29T02:58:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6c1bc2e1a9598690634edf3d7c21e719822440de"
  },
  {
    "hash": "6c69b4ad4a961a7c4ee24b9b16ac83e9ad03ffb8",
    "type": "pull_request",
    "title": "Configurable maximum votes per message",
    "author": "RickiNano",
    "body": "Makes confirm_req_hashes_max and confirm_ack_hashes_max configurable.\r\nDefaults are kept at 7 and 12.\r\nIn `confirm_ack_hash_serialization` unit test, confirm_ack_hashes_max has been hardcoded to 12 to specifically verify v1 votes serialization. There is a v2 serialization right after that tests v2 vote serialization (255 votes)",
    "draft": false,
    "pull_request": 4649,
    "label": "RickiNano:Configurable-vote-count",
    "created_at": "2024-06-16T21:07:35Z",
    "built_at": "2024-06-16T21:44:35Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6c69b4ad4a961a7c4ee24b9b16ac83e9ad03ffb8",
    "build_started_at": "2024-06-16T21:17:56Z",
    "run_id": "9538963869"
  },
  {
    "hash": "6c6d57f4cc8cd7c6828c5619f47dee1b95198743",
    "type": "pull_request",
    "pull_request": 4184,
    "label": "clemahieu:rpc_test_check_fix",
    "created_at": "2023-03-16T12:58:10Z",
    "built_at": "2023-03-16T21:12:23Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6c6d57f4cc8cd7c6828c5619f47dee1b95198743"
  },
  {
    "hash": "6c81e6b5caa6aaf955c21db5df4f689c276aaa8b",
    "type": "pull_request",
    "title": "Optimize Vote Request Behavior During Bootstrapping",
    "author": "gr0vity-dev",
    "body": "With bounded backlog there's a need to minimize the gap between checked and cemented blocks especially during bootstrapping phase. Currently, elections stay passive for 5 seconds by default, during which we don't request votes. However, during bootstrapping, we need to request votes to confirm blocks.\r\n\r\nThis PR implements a heuristic to identify if a block is actively being voted on. If there are no recent votes in the vote cache for a block, it likely indicates we're in bootstrapping phase, and we should request votes immediately rather than waiting for the default 5-second passive period.\r\n\r\nThe election will transition to active state immediately if the block's hash is not found in the vote cache. \r\n",
    "draft": false,
    "pull_request": 4798,
    "label": "gr0vity-dev:prs/transition_active_fast",
    "created_at": "2024-11-30T09:26:55Z",
    "built_at": "2024-12-13T19:47:26Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6c81e6b5caa6aaf955c21db5df4f689c276aaa8b",
    "build_started_at": "2024-12-13T19:19:33Z",
    "run_id": "12321337625"
  },
  {
    "hash": "6c9aefe330ac334a1e146306c8873298f47df2d4",
    "type": "pull_request",
    "pull_request": 3981,
    "label": "clemahieu:new-bootstrap-priority",
    "created_at": "2022-11-03T16:26:55Z",
    "built_at": "2023-02-04T23:56:43Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6c9aefe330ac334a1e146306c8873298f47df2d4"
  },
  {
    "hash": "6c9f9d680e32e22764419fed306dbd4756f8748b",
    "type": "pull_request",
    "pull_request": 4211,
    "label": "clemahieu:bootstrap_channel_scoring",
    "created_at": "2023-04-05T17:07:44Z",
    "built_at": "2023-04-13T17:26:45Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6c9f9d680e32e22764419fed306dbd4756f8748b"
  },
  {
    "hash": "6ca1f1de3d5a1701308efe0f72bdb8a052ecabb5",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Explicitly cache votes",
    "pull_request": "4735",
    "created_at": "2024-09-24T15:02:14Z",
    "built_at": "2024-09-25T16:18:19Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6ca1f1de3d5a1701308efe0f72bdb8a052ecabb5",
    "build_started_at": "2024-09-25T13:41:38Z",
    "run_id": "11036597901"
  },
  {
    "hash": "6ca22bd773ff05d0bea7ef0fd22ce3a1124214ce",
    "type": "pull_request",
    "title": "Bounded cementing",
    "author": "pwojcikdev",
    "body": "This limits number of blocks that can be cemented in a single batch. This prevents excessive memory consumption.",
    "draft": false,
    "pull_request": 4665,
    "label": "pwojcikdev:bounded-cementing",
    "created_at": "2024-07-01T16:25:45Z",
    "built_at": "2024-07-09T13:13:31Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6ca22bd773ff05d0bea7ef0fd22ce3a1124214ce",
    "build_started_at": "2024-07-09T12:47:03Z",
    "run_id": "9857325198"
  },
  {
    "hash": "6cbb97fac4cf60906ddf15badb9e503b798df23c",
    "type": "commit",
    "author": "clemahieu",
    "title": "Replace manual testing loop with ASSERT_TIMELY.",
    "pull_request": "4619",
    "created_at": "2024-05-13T16:56:04Z",
    "built_at": "2024-05-14T14:10:00Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6cbb97fac4cf60906ddf15badb9e503b798df23c",
    "build_started_at": "2024-05-14T11:41:17Z",
    "run_id": "9080450627"
  },
  {
    "hash": "6ceacc14ae3cc115939028f75cf53c90d5e057a4",
    "type": "pull_request",
    "pull_request": 4334,
    "label": "pwojcikdev:hinted-fixes",
    "created_at": "2023-11-07T17:55:27Z",
    "built_at": "2023-11-07T23:57:42Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6ceacc14ae3cc115939028f75cf53c90d5e057a4",
    "build_started_at": "2023-11-07T23:20:34Z",
    "run_id": "6791504167"
  },
  {
    "hash": "6cf0f6b2707562a03719bec76ad268e9f7eba009",
    "type": "pull_request",
    "title": "Async task",
    "author": "pwojcikdev",
    "body": ">Wrapper with convenience functions and safety checks for asynchronous tasks. \r\n>Aims to provide interface similar to std::thread. \r\n\r\nIt will be useful for ongoing work of moving networking code to coroutines.",
    "draft": false,
    "pull_request": 4590,
    "label": "pwojcikdev:async-task",
    "created_at": "2024-04-27T20:54:47Z",
    "built_at": "2024-04-27T21:25:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6cf0f6b2707562a03719bec76ad268e9f7eba009",
    "build_started_at": "2024-04-27T21:00:03Z",
    "run_id": "8862538015"
  },
  {
    "hash": "6cfadd15b9b1d41ccc2e1734d01150e560d393b5",
    "type": "pull_request",
    "pull_request": 4158,
    "label": "clemahieu:bootstrap_ascending_client",
    "created_at": "2023-02-27T20:15:37Z",
    "built_at": "2023-02-27T22:14:07Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6cfadd15b9b1d41ccc2e1734d01150e560d393b5"
  },
  {
    "hash": "6d28a3ea291cd6efdde50a2741f7e74473fa1374",
    "type": "pull_request",
    "title": "Optimize Vote Request Behavior During Bootstrapping",
    "author": "gr0vity-dev",
    "body": "With bounded backlog there's a need to minimize the gap between checked and cemented blocks especially during bootstrapping phase. Currently, elections stay passive for 5 seconds by default, during which we don't request votes. However, during bootstrapping, we need to request votes to confirm blocks.\r\n\r\nThis PR implements a heuristic to identify if a block is actively being voted on. If there are no recent votes in the vote cache for a block, it likely indicates we're in bootstrapping phase, and we should request votes immediately rather than waiting for the default 5-second passive period.\r\n\r\nThe election will transition to active state immediately if the block's hash is not found in the vote cache. \r\n",
    "draft": false,
    "pull_request": 4798,
    "label": "gr0vity-dev:prs/transition_active_fast",
    "created_at": "2024-11-30T09:26:55Z",
    "built_at": "2024-11-30T10:02:50Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6d28a3ea291cd6efdde50a2741f7e74473fa1374",
    "build_started_at": "2024-11-30T09:32:51Z",
    "run_id": "12095173426"
  },
  {
    "hash": "6d2a358ff30edfce44bcacc0899b84f397728f06",
    "type": "commit",
    "created_at": "2024-01-19T11:38:21Z",
    "built_at": "2024-01-19T12:16:50Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6d2a358ff30edfce44bcacc0899b84f397728f06",
    "build_started_at": "2024-01-19T11:44:02Z",
    "run_id": "7583312125"
  },
  {
    "hash": "6d34835f473e1f4378b3aa089558c99795938dab",
    "type": "pull_request",
    "pull_request": 4345,
    "label": "clemahieu:block_checker",
    "created_at": "2023-11-14T12:02:06Z",
    "built_at": "2023-11-14T12:53:21Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2023-11-14T12:32:12Z",
    "run_id": "6863631092"
  },
  {
    "hash": "6d3c3f52cf64755bdb03406eb28d1f96d4c9af79",
    "type": "pull_request",
    "title": "Scheduler test cleanup",
    "author": "clemahieu",
    "body": "This is a number of unit test cleanups to eliminate directly calling the election scheduler when unrelated to the purpose of the test.",
    "draft": false,
    "pull_request": 4619,
    "label": "clemahieu:scheduler_test_cleanup",
    "created_at": "2024-05-13T19:00:45Z",
    "built_at": "2024-05-13T19:36:29Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6d3c3f52cf64755bdb03406eb28d1f96d4c9af79",
    "build_started_at": "2024-05-13T19:07:44Z",
    "run_id": "9068438083"
  },
  {
    "hash": "6d47d24f73ec0b68a500176a0271ba5999dcb5e2",
    "type": "commit",
    "created_at": "2023-09-08T09:41:14Z",
    "built_at": "2023-09-08T23:50:20Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6d47d24f73ec0b68a500176a0271ba5999dcb5e2"
  },
  {
    "hash": "6de90ff196c7aaaaf05c804067e3cb249a87801b",
    "type": "pull_request",
    "pull_request": 4296,
    "label": "clemahieu:sucessor_table",
    "created_at": "2023-09-26T13:49:26Z",
    "built_at": "2023-09-26T14:38:03Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6de90ff196c7aaaaf05c804067e3cb249a87801b"
  },
  {
    "hash": "6df32b073cb9559d0f12e27bcf0325508aa37fec",
    "type": "pull_request",
    "pull_request": 4174,
    "label": "clemahieu:election_insertion_result",
    "created_at": "2023-03-07T01:30:59Z",
    "built_at": "2023-03-07T02:08:39Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6df32b073cb9559d0f12e27bcf0325508aa37fec"
  },
  {
    "hash": "6e09c5f24fc94756868b381b3f759fae72c81453",
    "type": "pull_request",
    "pull_request": 4368,
    "label": "clemahieu:bootstrap_test_add_node",
    "created_at": "2024-01-18T01:32:57Z",
    "built_at": "2024-01-19T06:03:28Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6e09c5f24fc94756868b381b3f759fae72c81453",
    "build_started_at": "2024-01-19T05:35:50Z",
    "run_id": "7579922730"
  },
  {
    "hash": "6e0a542069b2290c74b15b6fe06e4882c58e133a",
    "type": "pull_request",
    "title": "disable rpm builds",
    "author": "gr0vity-dev",
    "body": "Currently our linux rpm build fails because a different set of scripts is used. \r\nHere is a [recent example](https://github.com/nanocurrency/nano-node/actions/runs/8669382623) of a failed rpm build.\r\nCurrently there is no maintainer for these scripts.\r\n\r\nThis PR simply removes the rpm build from the github workflow to make the builds green again.\r\nTODO: Remove all the unused scripts related to the rpm builds.\r\n\r\n",
    "draft": true,
    "pull_request": 4554,
    "label": "gr0vity-dev:prs/disable_rpm_builds",
    "created_at": "2024-04-13T16:02:54Z",
    "built_at": "2024-04-13T16:56:56Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6e0a542069b2290c74b15b6fe06e4882c58e133a",
    "build_started_at": "2024-04-13T16:25:51Z",
    "run_id": "8674834723"
  },
  {
    "hash": "6e3068f51a834971cc16301edaa96aaedf374241",
    "type": "pull_request",
    "title": "Activate cemented blocks",
    "author": "pwojcikdev",
    "body": "This makes a few adjustments to the way active elections are handled that I believe should be changed. \r\n\r\nFirst, it activates accounts whenever a block is cemented, either directly via election or indirectly via confirmation height. Previously activations were performed only for blocks that were part of an active election, which I believe can lead to some accounts not being prioritized properly (missed activation = long confirmation time for legit blocks). \r\n\r\nSecond, it adjusts how cemented blocks are handled in active election container. The handling is modified, so that it all happens under exclusive lock, which is a step towards making interaction of `cementing_set` <-> `active_elections` components simpler to reason about.",
    "draft": false,
    "pull_request": 4757,
    "label": "pwojcikdev:activate-cemented-blocks",
    "created_at": "2024-10-18T12:26:01Z",
    "built_at": "2024-10-18T13:01:56Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6e3068f51a834971cc16301edaa96aaedf374241",
    "build_started_at": "2024-10-18T12:26:22Z",
    "run_id": "11403663141"
  },
  {
    "hash": "6e3ef433f7d79f24d07bbcd8bd3ede03ea986aa2",
    "type": "commit",
    "created_at": "2023-03-16T22:26:57Z",
    "built_at": "2023-03-16T22:58:11Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6e3ef433f7d79f24d07bbcd8bd3ede03ea986aa2"
  },
  {
    "hash": "6e67324c07daba2e6e974dccc549b62a849e3068",
    "type": "pull_request",
    "pull_request": 4158,
    "label": "clemahieu:bootstrap_ascending_client",
    "created_at": "2023-02-27T20:15:37Z",
    "built_at": "2023-03-03T23:03:24Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6e67324c07daba2e6e974dccc549b62a849e3068"
  },
  {
    "hash": "6e68af5b2e00029511e4b934aa6067887b4c977e",
    "type": "pull_request",
    "title": "Frontier scan client",
    "author": "pwojcikdev",
    "body": "This implements frontier scan client for the new bootstrapper. It should be the last missing piece blocking removal of legacy bootstrap code.\r\n\r\nBuilds on top of https://github.com/nanocurrency/nano-node/pull/4734\r\n\r\nHere are some initial test results from @gr0vity-dev showing that there are no obvious problems.\r\n\r\n![image](https://github.com/user-attachments/assets/50ebf35e-aedc-4cdf-a1ea-eea0c699e332)\r\n",
    "draft": false,
    "pull_request": 4739,
    "label": "pwojcikdev:frontier-scan-5",
    "created_at": "2024-09-28T13:10:19Z",
    "built_at": "2024-10-28T12:20:45Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6e68af5b2e00029511e4b934aa6067887b4c977e",
    "build_started_at": "2024-10-28T11:44:12Z",
    "run_id": "11553218706"
  },
  {
    "hash": "6ea25eb9c23c2a5e033dab27951b66af0c8635f2",
    "type": "pull_request",
    "pull_request": 4351,
    "label": "gr0vity-dev:prs/fix_artifact_network_settings",
    "created_at": "2023-12-15T22:12:13Z",
    "built_at": "2023-12-15T22:41:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6ea25eb9c23c2a5e033dab27951b66af0c8635f2",
    "build_started_at": "2023-12-15T22:13:31Z",
    "run_id": "7227555787"
  },
  {
    "hash": "6eb64df604a4a12c9f9fbff35a9ff167e484e382",
    "type": "pull_request",
    "title": "Frontier scan client",
    "author": "pwojcikdev",
    "body": "This implements frontier scan client for the new bootstrapper. It should be the last missing piece blocking removal of legacy bootstrap code.\r\n\r\nBuilds on top of https://github.com/nanocurrency/nano-node/pull/4734\r\n\r\nHere are some initial test results from @gr0vity-dev showing that there are no obvious problems.\r\n\r\n![image](https://github.com/user-attachments/assets/50ebf35e-aedc-4cdf-a1ea-eea0c699e332)\r\n",
    "draft": false,
    "pull_request": 4739,
    "label": "pwojcikdev:frontier-scan-5",
    "created_at": "2024-09-28T13:10:19Z",
    "built_at": "2024-10-13T16:23:29Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6eb64df604a4a12c9f9fbff35a9ff167e484e382",
    "build_started_at": "2024-10-13T15:55:26Z",
    "run_id": "11315743319"
  },
  {
    "hash": "6eca8c5da016da04a4bd703a6c95c729812d6d23",
    "type": "commit",
    "created_at": "2023-03-20T23:08:04Z",
    "built_at": "2023-03-20T23:56:49Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6eca8c5da016da04a4bd703a6c95c729812d6d23"
  },
  {
    "hash": "6edf5a5991c0f7857bdaf6a2597f38361f810e04",
    "type": "pull_request",
    "pull_request": 4289,
    "label": "clemahieu:lmdb_0_9_31",
    "created_at": "2023-09-21T11:28:11Z",
    "built_at": "2023-09-21T17:51:42Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6edf5a5991c0f7857bdaf6a2597f38361f810e04"
  },
  {
    "hash": "6eeaf217ee4795ffdc67d6d54e5bcaf85d20fa44",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge pull request #4609 from pwojcikdev/fair-queuing/message-processor-3\n\nReplace `tcp_message_manager`",
    "pull_request": "4609",
    "created_at": "2024-05-10T13:15:15Z",
    "built_at": "2024-05-10T14:00:00Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6eeaf217ee4795ffdc67d6d54e5bcaf85d20fa44",
    "build_started_at": "2024-05-10T13:16:28Z",
    "run_id": "9033039707"
  },
  {
    "hash": "6ef44cdac5cc280a4f4a711e5c5660856b476f43",
    "type": "pull_request",
    "title": "Do not wait for cancellation signal",
    "author": "pwojcikdev",
    "body": "Waiting for cancellation signal is unnecessary and was causing a deadlock in `tcp_listener` class.\r\n\r\n```\r\nThread 37 (LWP 25214):\r\n#0  0x00007fa2b77c388d in syscall () from target:/lib/x86_64-linux-gnu/libc.so.6\r\n#1  0x000055dc7f386491 in std::__atomic_futex_unsigned_base::_M_futex_wait_until(unsigned int*, unsigned int, bool, std::chrono::duration<long, std::ratio<1l, 1l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> >) ()\r\n#2  0x000055dc7e9d1175 in std::__atomic_futex_unsigned<2147483648u>::_M_load_and_test_until (__ns=..., __s=..., __has_timeout=<optimized out>, __mo=<optimized out>, __equal=<optimized out>, __operand=<optimized out>, __assumed=<optimized out>, this=<optimized out>) at /tmp/src/submodules/boost/libs/asio/include/boost/asio/scheduler.hpp:646\r\n#3  std::__atomic_futex_unsigned<2147483648u>::_M_load_and_test (__mo=<optimized out>, __equal=<optimized out>, __operand=<optimized out>, __assumed=<optimized out>, this=<optimized out>) at /usr/include/x86_64-linux-gnu/bits/gthr-default.h:159\r\n#4  std::__atomic_futex_unsigned<2147483648u>::_M_load_when_equal (__mo=<error reading variable: dwarf2_find_location_expression: Corrupted DWARF expression.>, __val=<error reading variable: dwarf2_find_location_expression: Corrupted DWARF expression.>, this=<error reading variable: dwarf2_find_location_expression: Corrupted DWARF expression.>) at /usr/include/x86_64-linux-gnu/bits/gthr-default.h:213\r\n#5  std::__future_base::_State_baseV2::wait (this=<error reading variable: dwarf2_find_location_expression: Corrupted DWARF expression.>) at /tmp/src/submodules/boost/libs/asio/include/boost/asio/execution/impl/bad_address_cast.hpp:336\r\n#6  std::__basic_future<void>::wait (this=0x7fa23cff73b0, this@entry=<error reading variable: dwarf2_find_location_expression: Corrupted DWARF expression.>) at /tmp/src/submodules/boost/libs/asio/include/boost/asio/execution/impl/bad_address_cast.hpp:694\r\n#7  nano::async::cancellation::emit (type=boost::asio::cancellation_type::all, type@entry=<error reading variable: dwarf2_find_location_expression: Corrupted DWARF expression.>, this=0x7fa1e0074838, this@entry=<error reading variable: dwarf2_find_location_expression: Corrupted DWARF expression.>) at /tmp/src/submodules/boost/libs/asio/include/boost/asio/detail/atomic_futex.h:57\r\n#8  nano::async::task::cancel (this=0x7fa1e0074820, this@entry=<error reading variable: dwarf2_find_location_expression: Corrupted DWARF expression.>) at /tmp/src/submodules/boost/libs/asio/include/boost/asio/detail/atomic_futex.h:143\r\n#9  nano::transport::tcp_listener::timeout() () at /tmp/src/submodules/boost/libs/asio/include/boost/asio/ip/string_view:212\r\n#10 0x000055dc7e9d1369 in nano::transport::tcp_listener::run_cleanup() () at /tmp/src/submodules/boost/libs/asio/include/boost/asio/ip/string_view:171\r\n#11 0x000055dc7f3b89f4 in execute_native_thread_routine ()\r\n#12 0x00007fa2b7739ac3 in ?? () from target:/lib/x86_64-linux-gnu/libc.so.6\r\n#13 0x00007fa2b77caa04 in clone () from target:/lib/x86_64-linux-gnu/libc.so.6\r\n\r\nThread 35 (LWP 25212):\r\n#0  0x00007fa2b77362c0 in ?? () from target:/lib/x86_64-linux-gnu/libc.so.6\r\n#1  0x00007fa2b773d002 in pthread_mutex_lock () from target:/lib/x86_64-linux-gnu/libc.so.6\r\n#2  0x000055dc7e9d00d0 in __gthread_mutex_lock (__mutex=0x55dc847a67e8) at /tmp/src/submodules/boost/libs/asio/include/boost/asio/socket_holder.hpp:749\r\n#3  std::mutex::lock (this=0x55dc847a67e8) at /tmp/src/build/nano/node/tcp_listener.cpp:100\r\n#4  nano::mutex::lock (this=0x55dc847a67e8) at /tmp/src/submodules/boost/libs/asio/include/boost/asio/detail/std_mutex.h:77\r\n#5  std::unique_lock<nano::mutex>::lock (this=0x7fa23dff8be0) at /tmp/src/submodules/boost/libs/system/include/boost/system/detail/use_awaitable.hpp:139\r\n#6  std::unique_lock<nano::mutex>::unique_lock (__m=..., this=0x7fa23dff8be0) at /tmp/src/submodules/boost/libs/system/include/boost/system/detail/use_awaitable.hpp:69\r\n#7  nano::transport::tcp_listener::connect(boost::asio::ip::address, unsigned short) () at /tmp/src/submodules/boost/libs/asio/include/boost/asio/ip/string_view:223\r\n#8  0x000055dc7e9badc2 in nano::transport::tcp_channels::start_tcp (this=<optimized out>, endpoint=...) at /usr/include/x86_64-linux-gnu/bits/socket_ops.ipp:60\r\n#9  0x000055dc7e919cda in nano::network::merge_peer (peer_a=..., this=<optimized out>) at /tmp/src/submodules/boost/libs/asio/include/boost/asio/detail/unordered_map.h:334\r\n#10 nano::network::merge_peer (this=<optimized out>, peer_a=...) at /tmp/src/submodules/boost/libs/asio/include/boost/asio/detail/unordered_map.h:328\r\n#11 0x000055dc7eaf6d65 in (anonymous namespace)::process_visitor::keepalive (this=0x7fa23dff8e20, message=...) at /tmp/src/build/nano/node/messages.hpp:177\r\n#12 0x000055dc7eaf72c5 in nano::message_processor::process(nano::message const&, std::shared_ptr<nano::transport::channel> const&) () at /tmp/src/build/nano/node/messages.hpp:287\r\n#13 0x000055dc7eaf8d45 in nano::message_processor::run_batch(std::unique_lock<nano::mutex>&) () at /tmp/src/build/nano/node/messages.hpp:146\r\n#14 0x000055dc7eaf91c2 in nano::message_processor::run() () at /tmp/src/build/nano/node/messages.hpp:115\r\n#15 0x000055dc7eaf92bd in operator() (__closure=0x55dc8036a388) at /tmp/src/build/nano/node/messages.hpp:35\r\n#16 std::__invoke_impl<void, nano::message_processor::start()::<lambda()> > (__f=...) at /tmp/src/nano/lib/std_function.h:61\r\n#17 std::__invoke<nano::message_processor::start()::<lambda()> > (__fn=...) at /tmp/src/nano/lib/std_function.h:96\r\n#18 std::thread::_Invoker<std::tuple<nano::message_processor::start()::<lambda()> > >::_M_invoke<0> (this=0x55dc8036a388) at /usr/include/c++/11/exception_implementation.hpp:259\r\n#19 std::thread::_Invoker<std::tuple<nano::message_processor::start()::<lambda()> > >::operator() (this=0x55dc8036a388) at /usr/include/c++/11/exception_implementation.hpp:266\r\n#20 std::thread::_State_impl<std::thread::_Invoker<std::tuple<nano::message_processor::start()::{lambda()#1}> > >::_M_run() () at /usr/include/c++/11/exception_implementation.hpp:211\r\n#21 0x000055dc7f3b89f4 in execute_native_thread_routine ()\r\n#22 0x00007fa2b7739ac3 in ?? () from target:/lib/x86_64-linux-gnu/libc.so.6\r\n#23 0x00007fa2b77caa04 in clone () from target:/lib/x86_64-linux-gnu/libc.so.6\r\n\r\n// More IO threads with the same stacktrace\r\n// ....\r\n```",
    "draft": false,
    "pull_request": 4664,
    "label": "pwojcikdev:aysnc-cancelation-do-not-wait",
    "created_at": "2024-07-01T08:22:35Z",
    "built_at": "2024-07-01T08:52:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6ef44cdac5cc280a4f4a711e5c5660856b476f43",
    "build_started_at": "2024-07-01T08:23:20Z",
    "run_id": "9740752892"
  },
  {
    "hash": "6f0fa88f92c11db1275f305860ca64cdab52a320",
    "type": "pull_request",
    "pull_request": 4187,
    "label": "clemahieu:rep_crawler_weight",
    "created_at": "2023-03-20T12:09:49Z",
    "built_at": "2023-03-20T13:01:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6f0fa88f92c11db1275f305860ca64cdab52a320"
  },
  {
    "hash": "6f31fa59c4fa5bd2cd1062828534f4e001e10d80",
    "type": "pull_request",
    "pull_request": 4238,
    "label": "clemahieu:scheduling_limiter",
    "created_at": "2023-05-19T01:07:22Z",
    "built_at": "2023-09-12T13:21:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6f31fa59c4fa5bd2cd1062828534f4e001e10d80"
  },
  {
    "hash": "6f36c9790b185f684dc7e916ce9e85360acd3bba",
    "type": "commit",
    "created_at": "2024-03-07T02:16:01Z",
    "built_at": "2024-03-07T14:05:00Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6f36c9790b185f684dc7e916ce9e85360acd3bba",
    "build_started_at": "2024-03-07T13:21:35Z",
    "run_id": "8188836572"
  },
  {
    "hash": "6f8828c928e8f6acbb7c7535c1bc049cdcd9fed1",
    "type": "commit",
    "created_at": "2024-03-24T08:58:46Z",
    "built_at": "2024-03-24T09:23:51Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6f8828c928e8f6acbb7c7535c1bc049cdcd9fed1",
    "build_started_at": "2024-03-24T08:59:04Z",
    "run_id": "8408170868"
  },
  {
    "hash": "6f8e1d3be2ea051222480c6fadbd21865e934b93",
    "type": "commit",
    "title": "Move node::receive_confirmed to wallets::receive_confirmed (#4557)\n\nThis is inherently a wallet operation so it's more appropriate to be on the wallets class.\r\nThis also breaks a direct dependency/cycle from block processing to the wallet operations.\r\nThis also breaks a lock order inversion where a ledger transaction mutex is held while acquiring the wallet mutexes while most operations do it in the reverse order.",
    "pull_request": "4557",
    "created_at": "2024-04-14T10:35:38Z",
    "built_at": "2024-04-14T11:38:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6f8e1d3be2ea051222480c6fadbd21865e934b93",
    "build_started_at": "2024-04-14T11:13:16Z",
    "run_id": "8679532477"
  },
  {
    "hash": "6f916f09d88b5b2aa5024b705148c9373a58a44d",
    "type": "commit",
    "created_at": "2023-09-06T09:47:46Z",
    "built_at": "2023-09-06T10:29:49Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6f916f09d88b5b2aa5024b705148c9373a58a44d"
  },
  {
    "hash": "6f9807778e9bfa611c39960c4e0588d73ec2492f",
    "type": "commit",
    "created_at": "2023-04-07T02:36:22Z",
    "built_at": "2023-04-13T14:21:26Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6f9807778e9bfa611c39960c4e0588d73ec2492f"
  },
  {
    "hash": "6f996b23fe317fa851d18d901b76b504754cfaa4",
    "type": "commit",
    "created_at": "2024-01-25T11:45:39Z",
    "built_at": "2024-01-25T12:13:35Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6f996b23fe317fa851d18d901b76b504754cfaa4",
    "build_started_at": "2024-01-25T11:47:09Z",
    "run_id": "7654029887"
  },
  {
    "hash": "6fa57aa8f43e279c19fbdb7f234da1e86d03f7f9",
    "type": "commit",
    "title": "Merge pull request #4559 from clemahieu/recursive_transaction_cleanup\n\nClean up and remove recursive transaction usage",
    "pull_request": "4559",
    "created_at": "2024-04-14T20:17:58Z",
    "built_at": "2024-04-15T05:02:53Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6fa57aa8f43e279c19fbdb7f234da1e86d03f7f9",
    "build_started_at": "2024-04-14T22:18:13Z",
    "run_id": "8683448785"
  },
  {
    "hash": "6fad597b32c9ec5ec8e1e1b832193870c3894be0",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge pull request #4703 from RickiNano/bootstrap-weights\n\nBootstrap weights in plain text",
    "pull_request": "4703",
    "created_at": "2024-10-29T13:02:53Z",
    "built_at": "2024-10-29T14:45:56Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6fad597b32c9ec5ec8e1e1b832193870c3894be0",
    "build_started_at": "2024-10-29T13:30:07Z",
    "run_id": "11575705791"
  },
  {
    "hash": "6fb101d6ec33e88a5bfee60f347689c867e3178e",
    "type": "commit",
    "created_at": "2023-09-14T17:31:08Z",
    "built_at": "2023-09-15T16:21:28Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6fb101d6ec33e88a5bfee60f347689c867e3178e"
  },
  {
    "hash": "6fd6e7dc92ee2270204fb2eff4c94474176d168c",
    "type": "pull_request",
    "pull_request": 4160,
    "label": "thsfs:inproc_channel_with_message_desserializer",
    "created_at": "2023-02-27T20:25:02Z",
    "built_at": "2023-03-01T03:12:24Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6fd6e7dc92ee2270204fb2eff4c94474176d168c"
  },
  {
    "hash": "6fe00123d693f14633468d6637c5f98b2f89614c",
    "type": "pull_request",
    "pull_request": 4104,
    "label": "RickiNano:opencl-documentation",
    "created_at": "2023-02-06T18:06:45Z",
    "built_at": "2023-02-06T18:49:59Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6fe00123d693f14633468d6637c5f98b2f89614c"
  },
  {
    "hash": "6fe60dea3cd11830400f4f840797289c5d8ae7c0",
    "type": "commit",
    "created_at": "2023-05-17T20:03:54Z",
    "built_at": "2023-05-31T13:31:27Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6fe60dea3cd11830400f4f840797289c5d8ae7c0"
  },
  {
    "hash": "6fedf7114e79059232c6f43578c407d07570d1d2",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Ignore rebroadcasted votes in rep crawler",
    "pull_request": "4621",
    "created_at": "2024-05-13T18:32:29Z",
    "built_at": "2024-05-17T07:53:26Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6fedf7114e79059232c6f43578c407d07570d1d2",
    "build_started_at": "2024-05-17T07:17:57Z",
    "run_id": "9124544300"
  },
  {
    "hash": "6ff7a3055c7f734e6633f5e0c9ce25118f7ceb6a",
    "type": "pull_request",
    "title": "Bootstrap weights in plain text",
    "author": "RickiNano",
    "body": "Replaces the binary file with embedded bootstrap weight in plain text.\r\nThe weight values and max block counts in this PR are from 14-08-2024",
    "draft": false,
    "pull_request": 4703,
    "label": "RickiNano:bootstrap-weights",
    "created_at": "2024-08-14T16:45:07Z",
    "built_at": "2024-10-25T21:11:00Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:6ff7a3055c7f734e6633f5e0c9ce25118f7ceb6a",
    "build_started_at": "2024-10-25T20:40:53Z",
    "run_id": "11525124379"
  },
  {
    "hash": "70148f28a3031192bd4234a1024c20e06b846e42",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge pull request #4642 from pwojcikdev/cemented-observers-optimize\n\nOptimize cemented callbacks",
    "pull_request": "4642",
    "created_at": "2024-06-18T14:34:17Z",
    "built_at": "2024-06-18T15:24:52Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:70148f28a3031192bd4234a1024c20e06b846e42",
    "build_started_at": "2024-06-18T14:35:34Z",
    "run_id": "9567392705"
  },
  {
    "hash": "701dbfd73f06a0a63d033ae24420602e010b4901",
    "type": "commit",
    "created_at": "2024-01-26T17:38:13Z",
    "built_at": "2024-01-31T17:47:45Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:701dbfd73f06a0a63d033ae24420602e010b4901",
    "build_started_at": "2024-01-31T16:56:18Z",
    "run_id": "7729573301"
  },
  {
    "hash": "702ee3ecab410578bb8a65d8ac6ed9c87fd93418",
    "type": "pull_request",
    "pull_request": 4272,
    "label": "clemahieu:scheduler_buckets_rename",
    "created_at": "2023-09-01T08:42:24Z",
    "built_at": "2023-09-01T10:28:19Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:702ee3ecab410578bb8a65d8ac6ed9c87fd93418"
  },
  {
    "hash": "7066cea478cc7398f1929cea9ddd08f8d00e78a5",
    "type": "pull_request",
    "pull_request": 4206,
    "label": "thsfs:slow_test_promotion",
    "created_at": "2023-04-04T20:03:14Z",
    "built_at": "2023-04-04T20:52:56Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7066cea478cc7398f1929cea9ddd08f8d00e78a5"
  },
  {
    "hash": "7077f59575b766db127f71bcdad3757148e324ce",
    "type": "pull_request",
    "pull_request": 4251,
    "label": "brandon-bb:develop",
    "created_at": "2023-06-23T20:57:59Z",
    "built_at": "2023-06-23T21:47:36Z",
    "build_status": "fail",
    "docker_tag": ""
  },
  {
    "hash": "7079ea42dad5f2df9bdd113e588e8b8a8076070e",
    "type": "commit",
    "author": "clemahieu",
    "title": "Revert \"Reimplement json_handler::wallet_receivable in terms of receivable iterators\"\n\nThis reverts commit 873760f345bfb15b4b991fc1de4bd604ed0c5ee4.\n\n# Conflicts:\n#\tnano/node/json_handler.cpp",
    "pull_request": "4711",
    "created_at": "2024-08-21T17:04:35Z",
    "built_at": "2024-08-22T10:14:29Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7079ea42dad5f2df9bdd113e588e8b8a8076070e",
    "build_started_at": "2024-08-22T09:33:21Z",
    "run_id": "10505776346"
  },
  {
    "hash": "70a5592f963e5e2a0f5d5b2440f53f10be013ef8",
    "type": "pull_request",
    "title": "Introduce `active_transactions_config`",
    "author": "gr0vity-dev",
    "body": "Introduce `active_transactions_config` :\r\n\r\n\r\n| Old config                                | New config                                   |\r\n|-------------------------------------------|----------------------------------------------|\r\n| active_elections_size                     | active_transactions.size                     |\r\n| active_elections_hinted_limit_percentage | active_transactions.hinted_limit_percentage |\r\n| active_elections_optimistic_limit_percentage | active_transactions.optimistic_limit_percentage |\r\n| confirmation_history_size                 | active_transactions.confirmation_history_size|\r\n|  /                 | active_transactions.confirmation_cache|\r\n\r\n\r\n\r\nNewly introduced `confirmation_cache` is used in `recently_confirmed{ config.confirmation_cache },`  instead of the hardcoded value `65536`\r\n",
    "draft": false,
    "pull_request": 4604,
    "label": "gr0vity-dev:prs/active_transactions_config",
    "created_at": "2024-05-06T10:16:04Z",
    "built_at": "2024-05-06T12:12:07Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:70a5592f963e5e2a0f5d5b2440f53f10be013ef8",
    "build_started_at": "2024-05-06T11:46:25Z",
    "run_id": "8968494374"
  },
  {
    "hash": "70a9b0e10e59902216226b4a07485a6602c42585",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Multithreaded vote processor",
    "pull_request": "4600",
    "created_at": "2024-05-03T11:26:21Z",
    "built_at": "2024-05-07T08:42:49Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:70a9b0e10e59902216226b4a07485a6602c42585",
    "build_started_at": "2024-05-07T07:50:20Z",
    "run_id": "8981995132"
  },
  {
    "hash": "70afe41fd39fc173480ef8c1ec188f5e6b4f6fdb",
    "type": "commit",
    "author": "clemahieu",
    "title": "Include missing optional header.",
    "pull_request": "4776",
    "created_at": "2024-10-29T04:40:21Z",
    "built_at": "2024-10-31T05:15:40Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:70afe41fd39fc173480ef8c1ec188f5e6b4f6fdb",
    "build_started_at": "2024-10-31T03:33:18Z",
    "run_id": "11606252888"
  },
  {
    "hash": "71314b4bdd14935bf2ca6f86325d7440f744c591",
    "type": "pull_request",
    "pull_request": 4492,
    "label": "clemahieu:flatbuffers_v24_3_7",
    "created_at": "2024-03-15T10:21:46Z",
    "built_at": "2024-03-18T17:32:02Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:71314b4bdd14935bf2ca6f86325d7440f744c591",
    "build_started_at": "2024-03-18T16:32:27Z",
    "run_id": "8330205506"
  },
  {
    "hash": "71359b2fb71858b029c12a965b642829a3adb895",
    "type": "pull_request",
    "pull_request": 4289,
    "label": "clemahieu:lmdb_0_9_31",
    "created_at": "2023-09-21T11:28:11Z",
    "built_at": "2023-09-22T15:33:20Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:71359b2fb71858b029c12a965b642829a3adb895"
  },
  {
    "hash": "7156cf3ab2d52f7717dc6d0f60723f54ef7108b5",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Fix `fill_keepalive_self`",
    "pull_request": "N/A",
    "created_at": "2024-04-08T15:04:16Z",
    "built_at": "2024-05-04T11:21:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7156cf3ab2d52f7717dc6d0f60723f54ef7108b5",
    "build_started_at": "2024-05-04T09:36:39Z",
    "run_id": "8949983672"
  },
  {
    "hash": "7173b75170709f9478b03af6bc5a38ac55c737d1",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Add `is_rebroadcasted` flag",
    "pull_request": "4621",
    "created_at": "2024-05-11T21:29:42Z",
    "built_at": "2024-05-17T07:59:20Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7173b75170709f9478b03af6bc5a38ac55c737d1",
    "build_started_at": "2024-05-17T07:17:57Z",
    "run_id": "9124626255"
  },
  {
    "hash": "718a273db33ac5cacf8058bd82c4173ac5ffb030",
    "type": "pull_request",
    "pull_request": 4201,
    "label": "clemahieu:rpc_pending_exists",
    "created_at": "2023-03-29T02:14:19Z",
    "built_at": "2023-04-04T22:47:19Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:718a273db33ac5cacf8058bd82c4173ac5ffb030"
  },
  {
    "hash": "719271d5123ead34a02a9603adf0c8c9d11510ba",
    "type": "pull_request",
    "pull_request": 4289,
    "label": "clemahieu:lmdb_0_9_31",
    "created_at": "2023-09-21T11:28:11Z",
    "built_at": "2023-09-21T15:43:25Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:719271d5123ead34a02a9603adf0c8c9d11510ba"
  },
  {
    "hash": "719588e9ee69afe16f8403ff9325f6cd6b5431fc",
    "type": "pull_request",
    "title": "Use a dedicated thread for tcp listener",
    "author": "pwojcikdev",
    "body": "While I'm not aware of any problems with previous implementation, the async way of implementing `tcp_listener` was generally harder to understand and to evolve over time. It was especially problematic when making changes to other aspects of networking code. Given that our connections are long-lived and relatively infrequent, there is very little need for tcp acceptor code to be focused on performance and instead we should prioritize readability and maintainability. This modifies it to instead run on a single, dedicated thread and use blocking IO operations.",
    "draft": false,
    "pull_request": 4523,
    "label": "pwojcikdev:networking-fixes/tcp-listener-2",
    "created_at": "2024-03-25T16:06:32Z",
    "built_at": "2024-04-20T18:41:27Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:719588e9ee69afe16f8403ff9325f6cd6b5431fc",
    "build_started_at": "2024-04-20T18:15:43Z",
    "run_id": "8766895528"
  },
  {
    "hash": "71a265f50e373c0216ab455d460ab35ca04e81fd",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Signal handlers cleanup",
    "pull_request": "N/A",
    "created_at": "2024-04-13T18:51:32Z",
    "built_at": "2024-04-17T09:59:42Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:71a265f50e373c0216ab455d460ab35ca04e81fd",
    "build_started_at": "2024-04-17T09:14:33Z",
    "run_id": "8719607976"
  },
  {
    "hash": "71e2567e047ff29d133c5e5257313a5269267e07",
    "type": "pull_request",
    "title": "Prototype for batch TCP receiving",
    "author": "clemahieu",
    "body": null,
    "draft": true,
    "pull_request": 4630,
    "label": "clemahieu:batch_socket_read",
    "created_at": "2024-05-20T00:55:27Z",
    "built_at": "2024-05-20T15:53:53Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:71e2567e047ff29d133c5e5257313a5269267e07",
    "build_started_at": "2024-05-20T15:25:40Z",
    "run_id": "9161070257"
  },
  {
    "hash": "71ed4ddbf906d79ac6e2f49502ad3035d923079b",
    "type": "pull_request",
    "title": "Enable debug logging for core tests",
    "author": "gr0vity-dev",
    "body": "Failures on GitHub runners are sometimes hard to reproduce locally. Adding detailed logging helps analyze test failures directly from CI logs.\r\n\r\n- Enables NANO_LOG_STATS and debug level logging for core tests across all CI platforms\r\n- Helps diagnose intermittent test failures by providing more detailed execution traces",
    "draft": false,
    "pull_request": 4807,
    "label": "gr0vity-dev:prs/enable-debug-log-for-core-tests",
    "created_at": "2024-12-07T08:45:19Z",
    "built_at": "2024-12-09T08:29:51Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:71ed4ddbf906d79ac6e2f49502ad3035d923079b",
    "build_started_at": "2024-12-09T08:02:39Z",
    "run_id": "12230961226"
  },
  {
    "hash": "71f958a5ad93fdc60acfedc59505b34a3e3ab738",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Use unordered_map",
    "pull_request": "4787",
    "created_at": "2024-11-26T18:59:49Z",
    "built_at": "2024-11-29T17:16:34Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:71f958a5ad93fdc60acfedc59505b34a3e3ab738",
    "build_started_at": "2024-11-29T15:39:54Z",
    "run_id": "12088264124"
  },
  {
    "hash": "72265d172ccd4d5832d53a527941c3a725045918",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Peer history fixes",
    "pull_request": "4595",
    "created_at": "2024-04-29T18:48:55Z",
    "built_at": "2024-05-04T11:32:17Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:72265d172ccd4d5832d53a527941c3a725045918",
    "build_started_at": "2024-05-04T09:36:39Z",
    "run_id": "8950045615"
  },
  {
    "hash": "7248c816541d83ad33528dd650513c2a0a44e95c",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Revert \"Fix bootstrap <-> blockprocessor notifications (#4663)\"\n\nThis reverts commit 0615aca556b8abeb3d485073c94a24e30d934e33.",
    "pull_request": "4663",
    "created_at": "2024-07-06T18:39:39Z",
    "built_at": "2024-07-07T10:35:29Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7248c816541d83ad33528dd650513c2a0a44e95c",
    "build_started_at": "2024-07-07T09:53:58Z",
    "run_id": "9826444553"
  },
  {
    "hash": "725c8b3ca11d986849db1625657b0d7f3ea793ef",
    "type": "commit",
    "created_at": "2023-03-03T01:50:01Z",
    "built_at": "2023-03-05T04:07:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:725c8b3ca11d986849db1625657b0d7f3ea793ef"
  },
  {
    "hash": "7267ab02f5b3d2cf5765a8eeafeb3f913592bdbc",
    "type": "pull_request",
    "pull_request": 4433,
    "label": "clemahieu:socket_heap_boost_socket",
    "created_at": "2024-02-12T23:08:04Z",
    "built_at": "2024-02-12T23:46:19Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7267ab02f5b3d2cf5765a8eeafeb3f913592bdbc",
    "build_started_at": "2024-02-12T23:18:31Z",
    "run_id": "7879231422"
  },
  {
    "hash": "7291347ef54e8819203572be95b3eef8dc6579df",
    "type": "pull_request",
    "pull_request": 3923,
    "label": "nanocurrency:remove-upd-support-from-peer-container-tests",
    "created_at": "2022-08-26T21:20:38Z",
    "built_at": "2023-02-08T14:53:31Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7291347ef54e8819203572be95b3eef8dc6579df"
  },
  {
    "hash": "72999c32fa185684376a0b00fc727d9bf51d25b1",
    "type": "pull_request",
    "pull_request": 4250,
    "label": "gr0vity-dev:wip/unified_artifacts_worflow",
    "created_at": "2023-06-22T15:06:28Z",
    "built_at": "2023-06-29T20:58:33Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:72999c32fa185684376a0b00fc727d9bf51d25b1"
  },
  {
    "hash": "72ab3b278e9c9b6c58580e027348a7c239d25472",
    "type": "pull_request",
    "pull_request": 4517,
    "label": "clemahieu:message_tautology",
    "created_at": "2024-03-22T17:33:56Z",
    "built_at": "2024-03-22T18:37:57Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:72ab3b278e9c9b6c58580e027348a7c239d25472",
    "build_started_at": "2024-03-22T17:34:49Z",
    "run_id": "8394248934"
  },
  {
    "hash": "72dc379dea886c43d7e3ead59cf1f72e914c4d86",
    "type": "pull_request",
    "pull_request": 4308,
    "label": "RickiNano:replace-boost-filesystem",
    "created_at": "2023-10-05T10:02:02Z",
    "built_at": "2023-10-05T17:49:21Z",
    "build_status": "fail",
    "docker_tag": ""
  },
  {
    "hash": "72e6c5ec0be9b1793bbe4ac2d4fadb469d55f072",
    "type": "pull_request",
    "title": "Open state blocks now return \"receive\" instead of \"unknown\" in the \"type\" field via RPC",
    "author": "Exxenoz",
    "body": null,
    "draft": false,
    "pull_request": 4708,
    "label": "Exxenoz:rpc_fix_state_block_type",
    "created_at": "2024-08-20T05:41:21Z",
    "built_at": "2024-08-20T06:12:07Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:72e6c5ec0be9b1793bbe4ac2d4fadb469d55f072",
    "build_started_at": "2024-08-20T05:44:49Z",
    "run_id": "10465984753"
  },
  {
    "hash": "73206e4f0dd2996df7b143ec2dc46b45f2101e8d",
    "type": "pull_request",
    "pull_request": 4129,
    "label": "dsiganos:remove_wrong_and_needless_code",
    "created_at": "2023-02-14T22:55:32Z",
    "built_at": "2023-02-14T23:37:50Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:73206e4f0dd2996df7b143ec2dc46b45f2101e8d"
  },
  {
    "hash": "733ec4f161e4b1a6b85490d4756684d7f92030eb",
    "type": "pull_request",
    "title": "Redesign the priority scheduler to maintain a 1-to-1 link with running elections",
    "author": "clemahieu",
    "body": "This change appropriately prioritises elections by bucket and then by LRU account. Overfilled buckets have the lowest priority block election cancelled and rolled back.",
    "draft": true,
    "pull_request": 4593,
    "label": "clemahieu:priority_limiter",
    "created_at": "2024-04-30T12:53:50Z",
    "built_at": "2024-04-30T22:51:48Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:733ec4f161e4b1a6b85490d4756684d7f92030eb",
    "build_started_at": "2024-04-30T22:23:02Z",
    "run_id": "8902375364"
  },
  {
    "hash": "734780f1958ec3ef6ec0ef8d4285f9fcdadcba26",
    "type": "pull_request",
    "pull_request": 4318,
    "label": "clemahieu:election_state_mutex",
    "created_at": "2023-10-26T14:21:12Z",
    "built_at": "2023-10-31T13:45:46Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:734780f1958ec3ef6ec0ef8d4285f9fcdadcba26",
    "build_started_at": "2023-10-31T12:59:04Z",
    "run_id": "6706839487"
  },
  {
    "hash": "739ad4c242f512cc0a47bd9719394a400cd55e2b",
    "type": "pull_request",
    "pull_request": 4458,
    "label": "clemahieu:ledger_block_abstraction",
    "created_at": "2024-03-05T15:26:59Z",
    "built_at": "2024-03-05T15:52:46Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:739ad4c242f512cc0a47bd9719394a400cd55e2b",
    "build_started_at": "2024-03-05T15:27:20Z",
    "run_id": "8158802544"
  },
  {
    "hash": "73a3be8ad72ebca63a4ea513a6eaf78ecdc8bbd8",
    "type": "pull_request",
    "pull_request": 4133,
    "label": "clemahieu:election_occupancy",
    "created_at": "2023-02-15T18:23:49Z",
    "built_at": "2023-02-20T16:44:30Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:73a3be8ad72ebca63a4ea513a6eaf78ecdc8bbd8"
  },
  {
    "hash": "73ab165ebb9227a7010195532c83e3d92f4eb466",
    "type": "pull_request",
    "pull_request": 4479,
    "label": "clemahieu:pending_get_optional",
    "created_at": "2024-03-11T21:04:10Z",
    "built_at": "2024-03-11T21:23:03Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-11T21:06:45Z",
    "run_id": "8239721541"
  },
  {
    "hash": "73bbdfd8253dc7b9757d9b67244ad981688d5fb7",
    "type": "commit",
    "author": "gr0vity-dev",
    "title": "Fix timing issue in active_elections.fork_replacement_tally (#4802)\n\n* fix timing issue in active_elections.fork_replacement_tally\r\n\r\nWait for election insertion before processing forks\r\n\r\n* Assert election exists and is the same for each iteration\r\n\r\n---------\r\n\r\nCo-authored-by: gr0vity <gr0vity.dev@gmail.com>",
    "pull_request": "4802",
    "created_at": "2024-12-05T16:31:32Z",
    "built_at": "2024-12-05T17:13:20Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:73bbdfd8253dc7b9757d9b67244ad981688d5fb7",
    "build_started_at": "2024-12-05T16:43:51Z",
    "run_id": "12184182411"
  },
  {
    "hash": "73d08dcb50bf72137975aa291d59cc425659b627",
    "type": "commit",
    "created_at": "2023-02-08T21:46:26Z",
    "built_at": "2023-02-08T22:21:25Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:73d08dcb50bf72137975aa291d59cc425659b627"
  },
  {
    "hash": "74068b7d802984f01415aff03ca7168e84cc3a28",
    "type": "pull_request",
    "pull_request": 4238,
    "label": "clemahieu:scheduling_limiter",
    "created_at": "2023-05-19T01:07:22Z",
    "built_at": "2023-08-31T11:48:28Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:74068b7d802984f01415aff03ca7168e84cc3a28"
  },
  {
    "hash": "7425c06a4388e96253028e8ba23f558d628e7f23",
    "type": "pull_request",
    "pull_request": 4139,
    "label": "dsiganos:use_make_final_vote",
    "created_at": "2023-02-16T18:10:49Z",
    "built_at": null,
    "build_status": "building",
    "docker_tag": null
  },
  {
    "hash": "7438c95fbdd33245f05179c7df9078a92fe3bde8",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Rename file to `ledger_context`",
    "pull_request": "4665",
    "created_at": "2024-06-26T14:16:49Z",
    "built_at": "2024-07-09T18:27:02Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7438c95fbdd33245f05179c7df9078a92fe3bde8",
    "build_started_at": "2024-07-09T16:43:44Z",
    "run_id": "9861902902"
  },
  {
    "hash": "7452def2e78d104812012e6ed6e293dbb27427e2",
    "type": "commit",
    "created_at": "2024-01-26T17:55:48Z",
    "built_at": "2024-02-08T11:07:29Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7452def2e78d104812012e6ed6e293dbb27427e2",
    "build_started_at": "2024-02-08T10:13:37Z",
    "run_id": "7828015254"
  },
  {
    "hash": "745763d297ceed906c0a47c50b91acf5927add5c",
    "type": "pull_request",
    "pull_request": 4413,
    "label": "RickiNano:blacklist-nodes",
    "created_at": "2024-01-30T19:45:38Z",
    "built_at": "2024-01-30T20:12:37Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:745763d297ceed906c0a47c50b91acf5927add5c",
    "build_started_at": "2024-01-30T19:47:10Z",
    "run_id": "7716628165"
  },
  {
    "hash": "74628b47d772f83585e863bf7d9a7add61b1d6ad",
    "type": "pull_request",
    "pull_request": 4317,
    "label": "RickiNano:round-lru",
    "created_at": "2023-10-25T15:49:28Z",
    "built_at": "2023-10-25T16:34:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:74628b47d772f83585e863bf7d9a7add61b1d6ad",
    "build_started_at": "2023-10-25T15:53:51Z",
    "run_id": "6642948037"
  },
  {
    "hash": "74a9fba6f7d4c21241c111003a6e4ecfcc993413",
    "type": "commit",
    "created_at": "2023-06-16T12:35:03Z",
    "built_at": "2023-06-16T13:16:21Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:74a9fba6f7d4c21241c111003a6e4ecfcc993413"
  },
  {
    "hash": "750b6ba65be9e676731ad5cafb370e60b900f768",
    "type": "commit",
    "author": "clemahieu",
    "title": "Revert \"Implement ledger::account_receivable in terms of receivable iterators\"\n\nThis reverts commit a5e150068088e3a36bd3128542cdf71518d2119d.\n\n# Conflicts:\n#\tnano/secure/ledger.cpp",
    "pull_request": "4711",
    "created_at": "2024-08-21T15:06:29Z",
    "built_at": "2024-08-22T10:25:44Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:750b6ba65be9e676731ad5cafb370e60b900f768",
    "build_started_at": "2024-08-22T09:33:21Z",
    "run_id": "10505882408"
  },
  {
    "hash": "751553710b364843f021b26420f422daff0c676d",
    "type": "commit",
    "created_at": "2024-03-12T09:08:31Z",
    "built_at": "2024-03-12T09:41:48Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-12T09:11:29Z",
    "run_id": "8246243895"
  },
  {
    "hash": "752317263499aca6ec54119c308267df33173f73",
    "type": "commit",
    "created_at": "2024-03-14T15:00:18Z",
    "built_at": "2024-03-14T15:38:11Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:752317263499aca6ec54119c308267df33173f73",
    "build_started_at": "2024-03-14T15:09:50Z",
    "run_id": "8283066076"
  },
  {
    "hash": "753360f23ebd2e4fbf0317be72cd40ff45e22ae2",
    "type": "pull_request",
    "pull_request": 4368,
    "label": "clemahieu:bootstrap_test_add_node",
    "created_at": "2024-01-18T01:32:57Z",
    "built_at": "2024-01-19T10:20:15Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:753360f23ebd2e4fbf0317be72cd40ff45e22ae2",
    "build_started_at": "2024-01-19T09:54:59Z",
    "run_id": "7582172165"
  },
  {
    "hash": "7549ef9d978b025fb0b389dacd34c30af8eeb3d9",
    "type": "pull_request",
    "pull_request": 4131,
    "label": "simpago:clear-unchecked-table",
    "created_at": "2023-02-15T13:24:53Z",
    "built_at": "2023-04-25T20:20:24Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7549ef9d978b025fb0b389dacd34c30af8eeb3d9"
  },
  {
    "hash": "7561a796c40ccbc704704db3ea964db85f904624",
    "type": "commit",
    "created_at": "2024-03-09T12:10:04Z",
    "built_at": "2024-03-09T13:14:02Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7561a796c40ccbc704704db3ea964db85f904624",
    "build_started_at": "2024-03-09T12:18:32Z",
    "run_id": "8214449124"
  },
  {
    "hash": "756f592d229c44e255393fe29faa4dd4999418b7",
    "type": "pull_request",
    "pull_request": 4316,
    "label": "RickiNano:remove-includes",
    "created_at": "2023-10-19T15:38:21Z",
    "built_at": "2023-11-12T14:22:38Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:756f592d229c44e255393fe29faa4dd4999418b7",
    "build_started_at": "2023-11-12T13:43:48Z",
    "run_id": "6841085382"
  },
  {
    "hash": "756ff3ac70ec219a67b6e00ed1a9e74d2fd40b06",
    "type": "pull_request",
    "title": "Fix correctness, sanity check, and resolve shutdown issue.",
    "author": "clemahieu",
    "body": "There was a missing mutex lock entries_mutex in unchecked_map::collect_container_info.\r\n\r\nSanity check the equality of the iterator qualified root to the item searched for.\r\n\r\nConsider stopped flag when wait-looping. Use condition_variable::wait rather than this_thread::sleep_for",
    "draft": false,
    "pull_request": 4719,
    "label": "clemahieu:tsan_fixes",
    "created_at": "2024-09-03T02:23:56Z",
    "built_at": "2024-09-04T03:18:23Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:756ff3ac70ec219a67b6e00ed1a9e74d2fd40b06",
    "build_started_at": "2024-09-04T02:48:41Z",
    "run_id": "10694214161"
  },
  {
    "hash": "75700dbb9feeeefd99d75afad9ba8fd1cf9ee1dd",
    "type": "pull_request",
    "title": "Frontier scan client",
    "author": "pwojcikdev",
    "body": "This implements frontier scan client for the new bootstrapper. It should be the last missing piece blocking removal of legacy bootstrap code.\r\n\r\nBuilds on top of https://github.com/nanocurrency/nano-node/pull/4734\r\n\r\nHere are some initial test results from @gr0vity-dev showing that there are no obvious problems.\r\n\r\n![image](https://github.com/user-attachments/assets/50ebf35e-aedc-4cdf-a1ea-eea0c699e332)\r\n",
    "draft": false,
    "pull_request": 4739,
    "label": "pwojcikdev:frontier-scan-5",
    "created_at": "2024-09-28T13:10:19Z",
    "built_at": "2024-10-27T13:00:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:75700dbb9feeeefd99d75afad9ba8fd1cf9ee1dd",
    "build_started_at": "2024-10-27T12:32:04Z",
    "run_id": "11540499869"
  },
  {
    "hash": "757a9fa6195e5ffed1d18acf430ff252933a7ef4",
    "type": "commit",
    "author": "RickiNano",
    "title": "Removed redundant cf option functions",
    "pull_request": "N/A",
    "created_at": "2024-08-30T16:36:07Z",
    "built_at": "2024-09-25T11:03:45Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:757a9fa6195e5ffed1d18acf430ff252933a7ef4",
    "build_started_at": "2024-09-25T09:19:52Z",
    "run_id": "11031296939"
  },
  {
    "hash": "758ada4b4fda8aa5b34a1dd126e729ac55eaa716",
    "type": "pull_request",
    "pull_request": 4433,
    "label": "clemahieu:socket_heap_boost_socket",
    "created_at": "2024-02-12T23:08:04Z",
    "built_at": "2024-02-13T12:25:00Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:758ada4b4fda8aa5b34a1dd126e729ac55eaa716",
    "build_started_at": "2024-02-13T11:42:31Z",
    "run_id": "7885945627"
  },
  {
    "hash": "75b18fdb5d6658dfbb9bda5bf26825a72086947d",
    "type": "pull_request",
    "pull_request": 4155,
    "label": "pwojcikdev:prs/move-channel-file",
    "created_at": "2023-02-24T23:54:31Z",
    "built_at": "2023-02-25T00:27:23Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:75b18fdb5d6658dfbb9bda5bf26825a72086947d"
  },
  {
    "hash": "75bee9463db9fc3782562f6f1e45310de0cca5cd",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Log test system exceptions (#4746)",
    "pull_request": "4746",
    "created_at": "2024-10-07T20:18:11Z",
    "built_at": "2024-10-07T20:55:23Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:75bee9463db9fc3782562f6f1e45310de0cca5cd",
    "build_started_at": "2024-10-07T20:29:52Z",
    "run_id": "11223443900"
  },
  {
    "hash": "75c6ef6f7906e27f51447f9b7de415092b6ccf90",
    "type": "commit",
    "created_at": "2023-03-07T00:17:11Z",
    "built_at": "2023-03-07T03:20:43Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:75c6ef6f7906e27f51447f9b7de415092b6ccf90"
  },
  {
    "hash": "75e6a6eb893115061bcc0312b0bdc54612ea3be9",
    "type": "pull_request",
    "pull_request": 4446,
    "label": "dsiganos:opencl_refactor_2",
    "created_at": "2024-02-23T14:40:45Z",
    "built_at": "2024-02-23T15:53:01Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-02-23T15:32:21Z",
    "run_id": "8021462760"
  },
  {
    "hash": "75f60daeba2858bacbce8e1fa4178ccfd5467b44",
    "type": "pull_request",
    "title": "Add database information to telemetry data",
    "author": "RickiNano",
    "body": "Adds telemetry information about the type of database backend the node is using.\r\nThe telemetry RPC function reports both individual database backend information or consolidated (average). The reported database backend for each node will be either 'RocksDb' , 'LMDB' or \"Unknown\". \r\n'Unknown' is for nodes running v26.1 or earlier that does not send any database information in telemetry data.",
    "draft": true,
    "pull_request": 4675,
    "label": "RickiNano:Telemetry-db-backend",
    "created_at": "2024-07-08T18:09:12Z",
    "built_at": "2024-07-15T19:07:45Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:75f60daeba2858bacbce8e1fa4178ccfd5467b44",
    "build_started_at": "2024-07-15T18:33:37Z",
    "run_id": "9944736597"
  },
  {
    "hash": "75fce7e39947f6a5a4fce505fa1c6c1d2e7797d8",
    "type": "pull_request",
    "title": "Use a dedicated thread for tcp listener",
    "body": "While I'm not aware of any problems with previous implementation, the async way of implementing `tcp_listener` was generally harder to understand and to evolve over time. It was especially problematic when making changes to other aspects of networking code. Given that our connections are long-lived and relatively infrequent, there is very little need for tcp acceptor code to be focused on performance and instead we should prioritize readability and maintainability. This modifies it to instead run on a single, dedicated thread and use blocking IO operations.",
    "draft": false,
    "pull_request": 4523,
    "label": "pwojcikdev:networking-fixes/tcp-listener-2",
    "created_at": "2024-03-25T16:06:32Z",
    "built_at": "2024-04-01T10:55:01Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:75fce7e39947f6a5a4fce505fa1c6c1d2e7797d8",
    "build_started_at": "2024-04-01T10:30:17Z",
    "run_id": "8506986194"
  },
  {
    "hash": "75ff27d45700bc41fe369ab222a8e3571ab05bfc",
    "type": "pull_request",
    "pull_request": 2899,
    "label": "wezrule:state_block_v2",
    "created_at": "2020-08-28T17:26:23Z",
    "built_at": null,
    "build_status": "fail",
    "docker_tag": null
  },
  {
    "hash": "7613c13046c305c1d8f953fd3f491fd34a781826",
    "type": "pull_request",
    "pull_request": 4158,
    "label": "clemahieu:bootstrap_ascending_client",
    "created_at": "2023-02-27T20:15:37Z",
    "built_at": "2023-02-27T22:20:53Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7613c13046c305c1d8f953fd3f491fd34a781826"
  },
  {
    "hash": "76145d89dec9eca9671f9a8ca619c1a0aa067980",
    "type": "commit",
    "created_at": "2023-02-16T18:17:50Z",
    "built_at": "2023-02-16T19:32:40Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:76145d89dec9eca9671f9a8ca619c1a0aa067980"
  },
  {
    "hash": "761db2517c79bc8f4ff3e85052e04f1bd1ed68e2",
    "type": "commit",
    "created_at": "2023-12-01T10:05:00Z",
    "built_at": "2023-12-01T11:12:49Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:761db2517c79bc8f4ff3e85052e04f1bd1ed68e2",
    "build_started_at": "2023-12-01T10:08:26Z",
    "run_id": "7058588921"
  },
  {
    "hash": "7662e4518a8212bd05f2c4fbe8fc269dd3e6d2ad",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge pull request #4621 from pwojcikdev/confirm-message-extensions\n\nAdd 'rebroadcasted' flag to `confirm_ack` message",
    "pull_request": "4621",
    "created_at": "2024-05-17T07:12:41Z",
    "built_at": "2024-05-17T08:09:18Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7662e4518a8212bd05f2c4fbe8fc269dd3e6d2ad",
    "build_started_at": "2024-05-17T07:17:57Z",
    "run_id": "9124703498"
  },
  {
    "hash": "7684a30045116f767828a3a0d6c6e240ad488b4f",
    "type": "pull_request",
    "title": "Fix `epoch_conflict_confirm` test",
    "author": "pwojcikdev",
    "body": "Fixing this test necessitated reworking `request_aggregator::aggregate ( .. )` and the way final votes are queried - only query final votes by full qualified root.",
    "draft": false,
    "pull_request": 4779,
    "label": "pwojcikdev:fix-epoch-conflict-confirm",
    "created_at": "2024-11-03T18:57:30Z",
    "built_at": "2024-11-04T17:08:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7684a30045116f767828a3a0d6c6e240ad488b4f",
    "build_started_at": "2024-11-04T16:41:44Z",
    "run_id": "11668642102"
  },
  {
    "hash": "76a5211adfa0d0400441de4a7d48ffc204b9ff1c",
    "type": "pull_request",
    "title": "Use coroutines in tcp listener",
    "author": "pwojcikdev",
    "body": "To fix remaining TSAN issues this PR changes tcp listener implementation to use coroutines with a strand. The resulting code is structurally almost identical to the threaded version.\r\n\r\nContinuation of https://github.com/nanocurrency/nano-node/pull/4523",
    "draft": false,
    "pull_request": 4581,
    "label": "pwojcikdev:networking-fixes/tcp-listener-2-coroutines",
    "created_at": "2024-04-22T14:35:41Z",
    "built_at": "2024-04-24T06:03:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:76a5211adfa0d0400441de4a7d48ffc204b9ff1c",
    "build_started_at": "2024-04-24T05:34:32Z",
    "run_id": "8811578566"
  },
  {
    "hash": "76a5503669a60cf9039fcd7b89be8efb51ae864d",
    "type": "commit",
    "created_at": "2023-05-15T16:48:41Z",
    "built_at": "2023-05-15T17:34:44Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:76a5503669a60cf9039fcd7b89be8efb51ae864d"
  },
  {
    "hash": "76a6b2894999dd1707f2679a85480b63cbf69ca4",
    "type": "pull_request",
    "pull_request": 4377,
    "label": "clemahieu:wallet_enter_password_fix",
    "created_at": "2024-01-20T00:02:26Z",
    "built_at": "2024-01-20T01:31:43Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:76a6b2894999dd1707f2679a85480b63cbf69ca4",
    "build_started_at": "2024-01-20T01:06:55Z",
    "run_id": "7591061863"
  },
  {
    "hash": "76ac34f4a6b8f422d6cf36a92c57f17f07e78699",
    "type": "commit",
    "created_at": "2023-03-08T10:57:11Z",
    "built_at": "2023-03-08T11:28:04Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:76ac34f4a6b8f422d6cf36a92c57f17f07e78699"
  },
  {
    "hash": "76b07b719ed6c626dfde208acb8151e465ccc6ac",
    "type": "commit",
    "author": "clemahieu",
    "title": "Use TransactionDB rather than OptimisticTransactionDB for rocksdb.\n\nOptimisticTransactionDB can fail to commit if the memtable is too large.",
    "pull_request": "4671",
    "created_at": "2024-07-05T11:39:27Z",
    "built_at": "2024-07-07T12:50:16Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:76b07b719ed6c626dfde208acb8151e465ccc6ac",
    "build_started_at": "2024-07-07T12:23:30Z",
    "run_id": "9827233252"
  },
  {
    "hash": "76b4861fe0d476fe1971fb78649f334abb77ea89",
    "type": "commit",
    "created_at": "2023-09-17T19:46:02Z",
    "built_at": "2023-09-20T19:35:56Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:76b4861fe0d476fe1971fb78649f334abb77ea89"
  },
  {
    "hash": "76c550cfc6d79886019b60407741748df6b01911",
    "type": "pull_request",
    "title": "Extend election lifetime when receiving new votes",
    "author": "RickiNano",
    "body": "This PR adds a dynamic Time-To-Live on elections to improve the AEC alignment and efficiency during heavy load. \r\n\r\nThe TTL has been reduced to 30 seconds for normal elections and 10 seconds for hinted and optimistic elections but is extended every time a new vote arrive.\r\n\r\nBlocks that are not getting any votes are getting evicted from AEC much earlier, while blocks with active voting have a higher chance of staying in the AEC and reach confirmation.\r\n\r\nRelated issue: #4352\r\n\r\nEdit: Rebased May 8th",
    "draft": false,
    "pull_request": 4527,
    "label": "RickiNano:Active-election-time-out",
    "created_at": "2024-03-30T09:30:57Z",
    "built_at": "2024-05-09T09:55:34Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:76c550cfc6d79886019b60407741748df6b01911",
    "build_started_at": "2024-05-09T09:29:34Z",
    "run_id": "9015278876"
  },
  {
    "hash": "76c5a85639a8088e15d82785a6a823e3a7abf89e",
    "type": "pull_request",
    "title": "Add New Bucket for Specific Amount Range",
    "author": "gr0vity-dev",
    "body": "Related Issue: #4472\r\n\r\n**Description:**\r\n\r\nThis PR adds an additional bucket for amounts between Ӿ0.000001 and Ӿ0.0003. The implementation details are as follows:\r\n\r\n    - Amounts of Ӿ0.000001 will be included in the new bucket\r\n    - More precisely amounts above Ӿ0.00000060 and below Ӿ0.000309 will fall in this new bucket.\r\n    - All existing buckets remain unchanged to minimize the impact of bucket reallocation.\r\n\r\nThe reasoning behind adding an additional bucket is to ensure that all existing buckets retain their current allocation criteria.\r\n",
    "draft": false,
    "pull_request": 4661,
    "label": "gr0vity-dev:prs/additional_bucket",
    "created_at": "2024-06-28T11:23:05Z",
    "built_at": "2024-07-09T10:28:00Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:76c5a85639a8088e15d82785a6a823e3a7abf89e",
    "build_started_at": "2024-07-09T10:00:34Z",
    "run_id": "9854588946"
  },
  {
    "hash": "76cbceb1c6cec931070e61816bc9fa5472a15a57",
    "type": "pull_request",
    "pull_request": 4279,
    "label": "brandon-bb:clear",
    "created_at": "2023-09-06T15:41:29Z",
    "built_at": "2023-09-06T16:26:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:76cbceb1c6cec931070e61816bc9fa5472a15a57"
  },
  {
    "hash": "76dcdaccab8869de0fed8f04c1202522dd4334bd",
    "type": "commit",
    "created_at": "2023-03-07T21:15:26Z",
    "built_at": "2023-03-08T17:08:03Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:76dcdaccab8869de0fed8f04c1202522dd4334bd"
  },
  {
    "hash": "76e062e171473a3d0a5f00790be48c5aeab6a2ac",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Use wallet workers",
    "pull_request": "N/A",
    "created_at": "2024-05-24T09:55:32Z",
    "built_at": "2024-06-18T15:39:46Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:76e062e171473a3d0a5f00790be48c5aeab6a2ac",
    "build_started_at": "2024-06-18T14:35:34Z",
    "run_id": "9567665631"
  },
  {
    "hash": "76fe3bf5ef0846892ce8a23edba5749918859a6e",
    "type": "commit",
    "created_at": "2023-03-08T15:45:17Z",
    "built_at": "2023-03-08T17:22:58Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:76fe3bf5ef0846892ce8a23edba5749918859a6e"
  },
  {
    "hash": "7730d9adf1838a31d384467e107482f8d9be00bb",
    "type": "pull_request",
    "title": "Fix mismatched channel owners",
    "author": "pwojcikdev",
    "body": "There were a few testcases where messages were passed with channels belonging to other nodes, which was causing strange lifetime issues. This adds asserts to ensure this won't happen.",
    "draft": false,
    "pull_request": 4750,
    "label": "pwojcikdev:channel-owner-asserts",
    "created_at": "2024-10-08T15:53:22Z",
    "built_at": "2024-10-08T16:23:07Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7730d9adf1838a31d384467e107482f8d9be00bb",
    "build_started_at": "2024-10-08T15:57:56Z",
    "run_id": "11239227831"
  },
  {
    "hash": "773cd91f1bff8da6f097203c38881924d29d7000",
    "type": "commit",
    "created_at": "2024-03-16T19:13:51Z",
    "built_at": "2024-03-18T18:01:18Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:773cd91f1bff8da6f097203c38881924d29d7000",
    "build_started_at": "2024-03-18T16:48:08Z",
    "run_id": "8330437043"
  },
  {
    "hash": "7740db8f708635dc960526e420fe2d7fc423514a",
    "type": "pull_request",
    "title": "Offload vote cache lookup to a separate thread",
    "author": "pwojcikdev",
    "body": "This moves processing of cached votes away from congested election schedulers threads.",
    "draft": false,
    "pull_request": 4631,
    "label": "pwojcikdev:vote-cache-processor",
    "created_at": "2024-05-20T10:55:51Z",
    "built_at": "2024-05-20T16:17:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7740db8f708635dc960526e420fe2d7fc423514a",
    "build_started_at": "2024-05-20T15:48:33Z",
    "run_id": "9161364156"
  },
  {
    "hash": "77440e6409f6b9330a1f1d26be2daf5eb3e10d09",
    "type": "pull_request",
    "pull_request": 4482,
    "label": "simpago:rep-weight-table",
    "created_at": "2024-03-12T10:20:34Z",
    "built_at": "2024-03-16T06:56:43Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:77440e6409f6b9330a1f1d26be2daf5eb3e10d09",
    "build_started_at": "2024-03-16T06:32:17Z",
    "run_id": "8305963129"
  },
  {
    "hash": "7760cf8f357794d26522548662d7b03fde522863",
    "type": "pull_request",
    "title": "Traffic shaping",
    "author": "pwojcikdev",
    "body": "This is a draft PR for an ongoing work that overhauls how outgoing traffic is handled and prioritized. This will significantly improve how the node handles network congestion, which is extremely important during spam.",
    "draft": true,
    "pull_request": 4786,
    "label": "pwojcikdev:traffic-shaping-pr",
    "created_at": "2024-11-18T19:43:02Z",
    "built_at": "2024-11-18T20:15:01Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7760cf8f357794d26522548662d7b03fde522863",
    "build_started_at": "2024-11-18T19:47:24Z",
    "run_id": "11899922626"
  },
  {
    "hash": "776870f93e69430bb1bf1edb8b8d2b00b899026a",
    "type": "pull_request",
    "pull_request": 4287,
    "label": "clemahieu:nano_store_cleanup",
    "created_at": "2023-09-20T13:53:09Z",
    "built_at": "2023-09-20T14:34:16Z",
    "build_status": "fail",
    "docker_tag": ""
  },
  {
    "hash": "7772cd784cea911d14a884baf33446161aa13517",
    "type": "commit",
    "created_at": "2023-05-15T16:56:47Z",
    "built_at": "2023-05-15T17:37:51Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7772cd784cea911d14a884baf33446161aa13517"
  },
  {
    "hash": "77a314222a45a78d7232edd432c384eced21a7c3",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Move queue class out of socket",
    "pull_request": "4651",
    "created_at": "2024-05-03T07:43:10Z",
    "built_at": "2024-06-18T13:53:42Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:77a314222a45a78d7232edd432c384eced21a7c3",
    "build_started_at": "2024-06-18T12:54:53Z",
    "run_id": "9565938838"
  },
  {
    "hash": "77a3512d18b5b303f0a4063f1bb569149db3bf2c",
    "type": "commit",
    "created_at": "2024-03-15T10:39:25Z",
    "built_at": "2024-03-15T11:05:22Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:77a3512d18b5b303f0a4063f1bb569149db3bf2c",
    "build_started_at": "2024-03-15T10:39:45Z",
    "run_id": "8294923410"
  },
  {
    "hash": "77c30b79ace41e89ede82dc6ab8d67bbc1b69169",
    "type": "commit",
    "created_at": "2023-09-21T23:36:48Z",
    "built_at": "2023-10-17T16:18:10Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:77c30b79ace41e89ede82dc6ab8d67bbc1b69169"
  },
  {
    "hash": "780a2d9b05517516fd29bba039f0dd81f22a9125",
    "type": "pull_request",
    "title": "Use a dedicated thread for tcp listener",
    "author": "pwojcikdev",
    "body": "While I'm not aware of any problems with previous implementation, the async way of implementing `tcp_listener` was generally harder to understand and to evolve over time. It was especially problematic when making changes to other aspects of networking code. Given that our connections are long-lived and relatively infrequent, there is very little need for tcp acceptor code to be focused on performance and instead we should prioritize readability and maintainability. This modifies it to instead run on a single, dedicated thread and use blocking IO operations.",
    "draft": false,
    "pull_request": 4523,
    "label": "pwojcikdev:networking-fixes/tcp-listener-2",
    "created_at": "2024-03-25T16:06:32Z",
    "built_at": "2024-04-21T15:37:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:780a2d9b05517516fd29bba039f0dd81f22a9125",
    "build_started_at": "2024-04-21T15:12:19Z",
    "run_id": "8773620106"
  },
  {
    "hash": "7838664d03222591ea17af2f56aee123348f580f",
    "type": "pull_request",
    "pull_request": 4111,
    "label": "pwojcikdev:optimistic-elections-2-rebased",
    "created_at": "2023-02-08T18:34:22Z",
    "built_at": "2023-02-22T15:00:43Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7838664d03222591ea17af2f56aee123348f580f"
  },
  {
    "hash": "784ef2b41863bd44d5a9d21b1ff958bc1e051cff",
    "type": "pull_request",
    "title": "Add submodule lmdbxx which is a c++ wrapper for lmdb",
    "author": "clemahieu",
    "body": "This change adds the lmdbxx submodule which is a c++ wrapper for LMDB. https://github.com/hoytech/lmdbxx\r\n\r\nCurrently we're using an amalgamation of direct access to the LMDB C API and some custom c++ wrapping of select portions of functionality.\r\n\r\nMajor motivations for using this library:\r\n- Header-only\r\n- C++17 language support\r\n- Errors are exceptions\r\n- RAII for LMDB resources\r\n- Uses std::string_view for exchanging serialised objects which is compatible with rocksdb::Slice\r\n\r\nThe library has two implementation strategies, a near 1-to-1 wrapping of the C API with exception handling, and full RAII types. Migrating existing code to use the direct API was relatively painless and some of the RAII types can already be used.\r\n\r\nThe primary motivation for the change is to get a clear separation of the lmdb c++ wrapper from node-specific logic. Additionally, this removes the burden of wrapping the C API from the node code.\r\n\r\nThe library itself seems to make good design decisions and is reasonably maintained.\r\n\r\nThere are parts of the library which are not fully complete e.g. ::lmdb::dbi does not fully implement RAII, it is both copyable and doesn't destroy the underlying resources when it goes out of scope. To get full benefits will likely have to upstream some patches which they will hopefully be receptive and responsive to.",
    "draft": false,
    "pull_request": 4724,
    "label": "clemahieu:lmdbxx",
    "created_at": "2024-09-09T19:26:59Z",
    "built_at": "2024-09-09T19:46:28Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-09-09T19:28:56Z",
    "run_id": "10779935022"
  },
  {
    "hash": "7855c82da7d8d80db92829d377d2d0723d26cbe9",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge pull request #4794 from pwojcikdev/bucketing\n\nBucketing component",
    "pull_request": "4794",
    "created_at": "2024-11-27T07:17:19Z",
    "built_at": "2024-11-27T08:20:10Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7855c82da7d8d80db92829d377d2d0723d26cbe9",
    "build_started_at": "2024-11-27T07:27:46Z",
    "run_id": "12045963867"
  },
  {
    "hash": "7856e8f4dec370577e3b993684943e0663dc7680",
    "type": "pull_request",
    "pull_request": 4345,
    "label": "clemahieu:block_checker",
    "created_at": "2023-11-14T12:02:06Z",
    "built_at": "2024-03-18T11:30:03Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-18T11:12:06Z",
    "run_id": "8325564623"
  },
  {
    "hash": "7862ae29a59164b82aa58c06e93f09dfde84e25e",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Cache tally",
    "pull_request": "4629",
    "created_at": "2024-05-18T08:57:14Z",
    "built_at": "2024-05-19T10:09:30Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7862ae29a59164b82aa58c06e93f09dfde84e25e",
    "build_started_at": "2024-05-19T09:03:51Z",
    "run_id": "9146714873"
  },
  {
    "hash": "788a53f296fe8a407fd5902cb80c7aa136a8777a",
    "type": "pull_request",
    "pull_request": 4245,
    "label": "thsfs:remove-windows-bundle-signing",
    "created_at": "2023-06-01T19:13:41Z",
    "built_at": "2023-06-01T19:43:45Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:788a53f296fe8a407fd5902cb80c7aa136a8777a"
  },
  {
    "hash": "78975aa6c9445be60761dddf5258a7da10f935aa",
    "type": "pull_request",
    "title": "Replace legacy XRB ratios",
    "author": "RickiNano",
    "body": "This PR cleans up the old xrb ratios and replaces them with nano_ratio.\r\n\r\n| Existing name  | ratio | Value | New name |\r\n| ------------- | ------------- |------------- |------------- |\r\n| Gxrb_ratio  | 10^33|  1000 nano | Knano_ratio |\r\n| Mxrb_ratio | 10^30|  1 nano | nano_ratio |\r\n| kxrb_ratio | 10^27|  0.001 nano | _*removed*_ |\r\n| xrb_ratio |  10^24|  0.000001 | _*removed*_ |\r\n\r\nIdeally we would want to have only Nano and Raw ratios, but Gxrb_ratio (1000 nano) was referenced so many places in code that I kept it but renamed it to Knano_ratio. \r\n\r\nThe following deprecated RPC endpoints for conversion has been removed:\r\n- krai_from_raw\r\n- krai_to_raw\r\n- mrai_from_raw\r\n- mrai_to_raw\r\n- rai_from_raw\r\n- rai_to_raw",
    "draft": false,
    "pull_request": 4733,
    "label": "RickiNano:xrb-ratios",
    "created_at": "2024-09-23T06:46:58Z",
    "built_at": "2024-09-24T15:19:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:78975aa6c9445be60761dddf5258a7da10f935aa",
    "build_started_at": "2024-09-24T14:53:17Z",
    "run_id": "11016375900"
  },
  {
    "hash": "789a029ba949f7b3106314575375c2da3d766e34",
    "type": "pull_request",
    "pull_request": 3928,
    "label": "pwojcikdev:prs/bootstrap-server-2",
    "created_at": "2022-08-30T18:00:30Z",
    "built_at": "2023-02-05T00:18:58Z",
    "build_status": "fail",
    "docker_tag": ""
  },
  {
    "hash": "78a49257c6d0870962e0dcd2260677dc4a7d4153",
    "type": "pull_request",
    "title": "Move assert to a dedicated header",
    "author": "pwojcikdev",
    "body": null,
    "draft": false,
    "pull_request": 4773,
    "label": "pwojcikdev:assert-header",
    "created_at": "2024-10-27T18:14:57Z",
    "built_at": "2024-11-02T19:14:12Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-11-02T18:59:00Z",
    "run_id": "11645087840"
  },
  {
    "hash": "78cfbc30973d0cae6ac464edbac0f884b75f3027",
    "type": "pull_request",
    "title": "Incremental backoff for `local_block_broadcaster`",
    "author": "pwojcikdev",
    "body": "This implements incremental backoff for block rebroadcasting. Previously block rebroadcasts happened every 60 seconds. This changes it, so that early on rebroadcasts happen more frequently, with 3 second interval increase. Ie. first rebroadcast happens after 3 seconds, second after 9, third after 18 etc.\r\n\r\nAdditionally there are improvements that were necessary to implement the above: avoiding unnecessary locking and config cleanup.",
    "draft": false,
    "pull_request": 4662,
    "label": "pwojcikdev:aggressive-block-broadcasts",
    "created_at": "2024-06-29T16:22:17Z",
    "built_at": "2024-06-29T18:00:33Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:78cfbc30973d0cae6ac464edbac0f884b75f3027",
    "build_started_at": "2024-06-29T17:31:40Z",
    "run_id": "9725817170"
  },
  {
    "hash": "78dabf8385fb796d29a134b74ddf387c3547a3f3",
    "type": "pull_request",
    "title": "Fair queuing for request aggregator",
    "author": "pwojcikdev",
    "body": "This implements fair queuing for request aggregator. The benefit is that it removes a small delay that was there due to buffering of requests. This is unnecessary, because client side (`confirmation_solicitor` class) already bundles requests.\r\nI believe that the principle of client->server communication should be that the server does the least processing possible. If client requests data inefficiently, then it will just receive less data and fewer resources will be spent servicing them.",
    "draft": false,
    "pull_request": 4598,
    "label": "pwojcikdev:fair-queuing/request-aggregator-3",
    "created_at": "2024-05-03T07:15:46Z",
    "built_at": "2024-05-07T08:57:44Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:78dabf8385fb796d29a134b74ddf387c3547a3f3",
    "build_started_at": "2024-05-07T07:57:36Z",
    "run_id": "8982177569"
  },
  {
    "hash": "78e7a521ccd4333455abfae690bac2638ab3fe7f",
    "type": "pull_request",
    "title": "Use strand for socket operations",
    "author": "pwojcikdev",
    "body": "This should fix remaining TSAN warnings.",
    "draft": false,
    "pull_request": 4576,
    "label": "pwojcikdev:socket-tsan-fix",
    "created_at": "2024-04-18T07:44:36Z",
    "built_at": "2024-04-18T08:14:16Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:78e7a521ccd4333455abfae690bac2638ab3fe7f",
    "build_started_at": "2024-04-18T07:49:12Z",
    "run_id": "8734279105"
  },
  {
    "hash": "78f8eeac6986db5dc4abc2e2b0bb7f493d6bd4e3",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Fix `tcp_socket::type()` race (#4775)",
    "pull_request": "4775",
    "created_at": "2024-10-28T16:00:56Z",
    "built_at": "2024-10-28T17:11:20Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:78f8eeac6986db5dc4abc2e2b0bb7f493d6bd4e3",
    "build_started_at": "2024-10-28T16:20:51Z",
    "run_id": "11558599607"
  },
  {
    "hash": "7934881705d8f7958835942a1317918f94c44b98",
    "type": "commit",
    "created_at": "2024-01-27T12:49:52Z",
    "built_at": "2024-01-27T13:15:17Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7934881705d8f7958835942a1317918f94c44b98",
    "build_started_at": "2024-01-27T12:50:43Z",
    "run_id": "7678744189"
  },
  {
    "hash": "795dd27df02d783155c3ed425b9f1cf546cd9cab",
    "type": "pull_request",
    "title": "A system test to exercise the rpc stop command",
    "author": "dsiganos",
    "body": null,
    "draft": false,
    "pull_request": 4573,
    "label": "dsiganos:rpc_stop_test_case",
    "created_at": "2024-04-17T10:40:12Z",
    "built_at": "2024-04-17T11:12:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:795dd27df02d783155c3ed425b9f1cf546cd9cab",
    "build_started_at": "2024-04-17T10:46:38Z",
    "run_id": "8720561015"
  },
  {
    "hash": "7976d310ebcb53bd113821bd41caec5fa055374f",
    "type": "commit",
    "title": "Bugfix add_outer_node, it should be added to disconnected set of nodes\n\nBy adding it to the standard set of nodes, any sebsequent node additions\nwill connect to it and it is will remain unconnected.\n\nadd_outer_node should be merged with make_disconnected_node.",
    "pull_request": "4548",
    "created_at": "2024-04-10T03:59:15Z",
    "built_at": "2024-04-12T10:54:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7976d310ebcb53bd113821bd41caec5fa055374f",
    "build_started_at": "2024-04-12T09:48:30Z",
    "run_id": "8660674142"
  },
  {
    "hash": "79a0460927fb492a85da68c25cae3106c209eec7",
    "type": "pull_request",
    "pull_request": 4286,
    "label": "clemahieu:nano_store_lib",
    "created_at": "2023-09-19T13:14:01Z",
    "built_at": "2023-09-20T02:56:35Z",
    "build_status": "fail",
    "docker_tag": ""
  },
  {
    "hash": "79cd445979e2ab9d8c300d0c58dead5885aa75b4",
    "type": "commit",
    "created_at": "2024-02-19T01:34:19Z",
    "built_at": "2024-02-19T02:18:42Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:79cd445979e2ab9d8c300d0c58dead5885aa75b4",
    "build_started_at": "2024-02-19T01:53:19Z",
    "run_id": "7953488311"
  },
  {
    "hash": "79e22e9894f2b7b0f59b84767e3027d7130ffe4e",
    "type": "pull_request",
    "title": "Fair queuing for bootstrap server",
    "author": "pwojcikdev",
    "body": "This implements fair request processing for bootstrap server component.",
    "draft": false,
    "pull_request": 4584,
    "label": "pwojcikdev:fair-queuing/bootstrap-server",
    "created_at": "2024-04-25T18:13:31Z",
    "built_at": "2024-04-25T18:44:53Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:79e22e9894f2b7b0f59b84767e3027d7130ffe4e",
    "build_started_at": "2024-04-25T18:16:01Z",
    "run_id": "8837433744"
  },
  {
    "hash": "7a1ce77ca43602c8a2915fd4753d30b14b904db4",
    "type": "pull_request",
    "title": "Use a dedicated thread for tcp listener",
    "author": "pwojcikdev",
    "body": "While I'm not aware of any problems with previous implementation, the async way of implementing `tcp_listener` was generally harder to understand and to evolve over time. It was especially problematic when making changes to other aspects of networking code. Given that our connections are long-lived and relatively infrequent, there is very little need for tcp acceptor code to be focused on performance and instead we should prioritize readability and maintainability. This modifies it to instead run on a single, dedicated thread and use blocking IO operations.",
    "draft": false,
    "pull_request": 4523,
    "label": "pwojcikdev:networking-fixes/tcp-listener-2",
    "created_at": "2024-03-25T16:06:32Z",
    "built_at": "2024-04-20T17:52:52Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7a1ce77ca43602c8a2915fd4753d30b14b904db4",
    "build_started_at": "2024-04-20T17:28:15Z",
    "run_id": "8766662487"
  },
  {
    "hash": "7a2ff651e86743b42d8017aae8eaba8f71e2b145",
    "type": "commit",
    "created_at": "2023-09-25T12:11:30Z",
    "built_at": "2023-09-25T13:24:19Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7a2ff651e86743b42d8017aae8eaba8f71e2b145"
  },
  {
    "hash": "7a322ee92b25d4ea6a4a86b7124f847089e0cc41",
    "type": "commit",
    "created_at": "2024-03-18T19:56:12Z",
    "built_at": "2024-03-18T22:17:51Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7a322ee92b25d4ea6a4a86b7124f847089e0cc41",
    "build_started_at": "2024-03-18T21:48:54Z",
    "run_id": "8334077948"
  },
  {
    "hash": "7a43a352fcc225af7d5f61cdfc420d958c511aff",
    "type": "pull_request",
    "title": "migrate_database_lmdb_to_rocksdb improvements",
    "author": "RickiNano",
    "body": "The `migrate_database_lmdb_to_rocksdb` option is running for a very long time with the current ledger size (almost 200 million blocks). On my local machine it took 65 minutes to complete. Nothing is written on screen during this process and users may think the process has stalled.\r\nThis PR adds some progress feedback. One update for each of the 7 tables that are migrated.\r\nIt also adds a simple disk space check to warn users if they might not have enough space to complete the migration.\r\nThe current converted RocksDb database is 73 GB, and the warning is given if the system has less than 75GB available.",
    "draft": false,
    "pull_request": 4647,
    "label": "RickiNano:lmdb-to-rocksdb",
    "created_at": "2024-06-13T10:47:31Z",
    "built_at": "2024-06-13T11:21:16Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7a43a352fcc225af7d5f61cdfc420d958c511aff",
    "build_started_at": "2024-06-13T10:52:09Z",
    "run_id": "9498331374"
  },
  {
    "hash": "7a97eb06030506fdbca3a3b4f43daaed45aa05c1",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Track bootstrap timeout type",
    "pull_request": "4786",
    "created_at": "2024-11-11T19:00:16Z",
    "built_at": "2024-11-23T02:39:19Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7a97eb06030506fdbca3a3b4f43daaed45aa05c1",
    "build_started_at": "2024-11-22T23:40:48Z",
    "run_id": "11983147618"
  },
  {
    "hash": "7a9c8d70e2063e78389b6e4f824f8b2daeb36cba",
    "type": "pull_request",
    "pull_request": 4239,
    "label": "thsfs:bump-rhel-compatible-linux",
    "created_at": "2023-05-29T22:22:09Z",
    "built_at": "2023-05-29T23:19:46Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7a9c8d70e2063e78389b6e4f824f8b2daeb36cba"
  },
  {
    "hash": "7aabf44677da02f43094e70aa1148e9d25812117",
    "type": "pull_request",
    "pull_request": 4295,
    "label": "clemahieu:block_split",
    "created_at": "2023-09-25T22:11:53Z",
    "built_at": "2023-09-25T22:59:16Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7aabf44677da02f43094e70aa1148e9d25812117"
  },
  {
    "hash": "7abb90b37353930a809642796d28f797592f1c0f",
    "type": "pull_request",
    "pull_request": 4281,
    "label": "clemahieu:manual_scheduler",
    "created_at": "2023-09-12T17:49:20Z",
    "built_at": "2023-09-13T00:12:22Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7abb90b37353930a809642796d28f797592f1c0f"
  },
  {
    "hash": "7ae02c91c5c1792c2683c7f1f2c46810efd9bc73",
    "type": "pull_request",
    "pull_request": 4401,
    "label": "dsiganos:fix_active_transactions_vote_replays",
    "created_at": "2024-01-26T16:44:09Z",
    "built_at": "2024-01-26T17:41:19Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7ae02c91c5c1792c2683c7f1f2c46810efd9bc73",
    "build_started_at": "2024-01-26T17:16:23Z",
    "run_id": "7671237234"
  },
  {
    "hash": "7ae7c8a4201ff0cca6399413eedc31b21bb96771",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Backlog scan scanned event",
    "pull_request": "N/A",
    "created_at": "2024-10-13T14:56:29Z",
    "built_at": "2024-11-27T04:10:11Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7ae7c8a4201ff0cca6399413eedc31b21bb96771",
    "build_started_at": "2024-11-27T00:59:54Z",
    "run_id": "12043340145"
  },
  {
    "hash": "7af305466a5cfb447e147806376ccae0726d725f",
    "type": "pull_request",
    "title": "Removing lines in build scripts because bash.",
    "author": "clemahieu",
    "body": null,
    "draft": false,
    "pull_request": 4765,
    "label": "clemahieu:broken-build-script",
    "created_at": "2024-10-22T23:35:34Z",
    "built_at": "2024-10-23T00:06:43Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7af305466a5cfb447e147806376ccae0726d725f",
    "build_started_at": "2024-10-22T23:37:05Z",
    "run_id": "11470226955"
  },
  {
    "hash": "7b007c50976bd08c0af46239d56cb60f4dcae147",
    "type": "pull_request",
    "title": "Fair queuing for request aggregator",
    "author": "pwojcikdev",
    "body": "This implements fair queuing for request aggregator. The benefit is that it removes a small delay that was there due to buffering of requests. This is unnecessary, because client side (`confirmation_solicitor` class) already bundles requests.\r\nI believe that the principle of client->server communication should be that the server does the least processing possible. If client requests data inefficiently, then it will just receive less data and fewer resources will be spent servicing them.",
    "draft": false,
    "pull_request": 4598,
    "label": "pwojcikdev:fair-queuing/request-aggregator-3",
    "created_at": "2024-05-03T07:15:46Z",
    "built_at": "2024-05-07T09:28:38Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7b007c50976bd08c0af46239d56cb60f4dcae147",
    "build_started_at": "2024-05-07T08:58:48Z",
    "run_id": "8982568449"
  },
  {
    "hash": "7b2e5ae1d50ddcdc0bc7818236239570683f03cc",
    "type": "pull_request",
    "title": "Introduce ledger view classes to separate confirmed/unconfirmed operations on the ledger",
    "body": "The motivation for this PR is in preparation for bounded backlog changes. Currently, both confirmed and unconfirmed transactions are together on disk and the ACID properties of the ledger are encapsulated with a database transaction.\r\n\r\nWith the bounded backlog, blocks will be stored in memory so there will need to be memory synchronization in addition to database synchronization. Rather than filling the ledger class with unconfirmed/confirmed variants for each operation.\r\n\r\nThe ledger is divided in to several sets and subsets:\r\nledger::confirmed - The set of confirmed transactions\r\nledger::any - The superset of confirmed and unconfirmed transactions\r\n\r\nWhen unconfirmed blocks are held in memory the set ledger::unconfirmed will be added which holds only unconfirmed transactions.\r\n\r\nIn the future the confirming_set can be moved on to ledger which is the subset of unconfirmed blocks that are queued to be moved in to the confirmed set.",
    "draft": false,
    "pull_request": 4486,
    "label": "clemahieu:ledger_view",
    "created_at": "2024-03-12T14:33:24Z",
    "built_at": "2024-04-05T10:57:55Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-04-05T10:42:44Z",
    "run_id": "8568577498"
  },
  {
    "hash": "7b3e7698b351ce571976299c0b05cc526063e44c",
    "type": "pull_request",
    "pull_request": 4115,
    "label": "dsiganos:increase_core_test_timeout",
    "created_at": "2023-02-09T08:55:04Z",
    "built_at": "2023-02-09T09:32:00Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7b3e7698b351ce571976299c0b05cc526063e44c"
  },
  {
    "hash": "7b454df15df3ceb46a54ec2a6f716c350deb0a9b",
    "type": "pull_request",
    "title": "Bounded election buckets with dynamic reprioritization",
    "author": "pwojcikdev",
    "body": "Based on:\r\n- Elections sets (can't find PR, Colin's initial attempt at bucket limiting)\r\n- Bobs bucket vacancy branch https://github.com/nanocurrency/nano-node/compare/develop...gr0vity-dev:nano-node:wip/bucket_vacancy \r\n\r\nbut simpler, more robust and allows for dynamically dropping and scheduling higher priority elections. Also, buckets can be configured to opportunistically use more available space if AEC is underutilized.",
    "draft": false,
    "pull_request": 4626,
    "label": "pwojcikdev:election-bounding-2",
    "created_at": "2024-05-15T16:21:38Z",
    "built_at": "2024-07-10T12:04:33Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7b454df15df3ceb46a54ec2a6f716c350deb0a9b",
    "build_started_at": "2024-07-10T11:19:51Z",
    "run_id": "9873450377"
  },
  {
    "hash": "7b540db780ce3452516067e1ed534987d0ba65e3",
    "type": "commit",
    "created_at": "2023-08-31T19:01:56Z",
    "built_at": "2023-08-31T20:02:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7b540db780ce3452516067e1ed534987d0ba65e3"
  },
  {
    "hash": "7b885b7104a5b2ac69277bded0c1804f78c64770",
    "type": "pull_request",
    "pull_request": 4157,
    "label": "mariomoliner:use_GTEST_SKIP_issue",
    "created_at": "2023-02-27T14:22:38Z",
    "built_at": "2023-02-27T15:03:26Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7b885b7104a5b2ac69277bded0c1804f78c64770"
  },
  {
    "hash": "7bda338a8542341320f40912e98cdaaa96df19b0",
    "type": "commit",
    "created_at": "2023-03-21T00:11:42Z",
    "built_at": "2023-03-21T11:58:24Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7bda338a8542341320f40912e98cdaaa96df19b0"
  },
  {
    "hash": "7bf9790f7ce5af071960198680ec6afbd6fbaff8",
    "type": "commit",
    "created_at": "2023-11-05T18:37:24Z",
    "built_at": "2023-11-05T19:23:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7bf9790f7ce5af071960198680ec6afbd6fbaff8",
    "build_started_at": "2023-11-05T18:38:15Z",
    "run_id": "6763097488"
  },
  {
    "hash": "7c106bc74aeb6e82f4ac11937c46f7a977869226",
    "type": "commit",
    "title": "Introduce nano::test::print_all_receivable_entries()\n\nThis prints all entries in the pending table.\nIntended to be used for learning and unit test debugging.\n\nAlso intoduce ostream operator << for pending_key and pending_info.",
    "pull_request": "4553",
    "created_at": "2024-04-12T14:45:57Z",
    "built_at": "2024-04-14T04:09:45Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7c106bc74aeb6e82f4ac11937c46f7a977869226",
    "build_started_at": "2024-04-14T02:26:53Z",
    "run_id": "8678131739"
  },
  {
    "hash": "7c277783d44d2224c59aacedf495c230a165a320",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Config",
    "pull_request": "4584",
    "created_at": "2024-04-25T18:04:35Z",
    "built_at": "2024-04-26T22:58:58Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7c277783d44d2224c59aacedf495c230a165a320",
    "build_started_at": "2024-04-26T22:30:20Z",
    "run_id": "8854995875"
  },
  {
    "hash": "7c2875877b8a6a4d9c45ca982a636649ceaf777e",
    "type": "commit",
    "created_at": "2023-11-06T19:50:49Z",
    "built_at": "2023-12-01T11:18:40Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7c2875877b8a6a4d9c45ca982a636649ceaf777e",
    "build_started_at": "2023-12-01T10:08:26Z",
    "run_id": "7058588921"
  },
  {
    "hash": "7c45401d798112dd4858361f93ae6964cfd16254",
    "type": "commit",
    "author": "homebot",
    "title": "feat: introduce active_transactions_config",
    "pull_request": "4604",
    "created_at": "2024-05-06T10:02:17Z",
    "built_at": "2024-05-07T15:50:58Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-05-07T15:20:15Z",
    "run_id": "8988100637"
  },
  {
    "hash": "7c7e93166f1307c6cff889e4309f5a01b845a8d4",
    "type": "commit",
    "created_at": "2024-01-18T00:26:26Z",
    "built_at": "2024-01-18T01:03:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7c7e93166f1307c6cff889e4309f5a01b845a8d4",
    "build_started_at": "2024-01-18T00:35:47Z",
    "run_id": "7563609321"
  },
  {
    "hash": "7cd86ccf62d67842d083cd0b8932362d9e4868da",
    "type": "commit",
    "title": "Eliminate recursive opening of transactions in unit tests.\n\nRecursive transactions are unnecessary and will deadlock when memory protection is needed/added to ledger transactions.",
    "pull_request": "4559",
    "created_at": "2024-04-13T10:45:24Z",
    "built_at": "2024-04-15T05:07:36Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7cd86ccf62d67842d083cd0b8932362d9e4868da",
    "build_started_at": "2024-04-14T22:18:13Z",
    "run_id": "8683523223"
  },
  {
    "hash": "7ce38c8ea4bbfd140ea98fd8dfe7486b3ce00522",
    "type": "commit",
    "created_at": "2024-01-26T12:20:35Z",
    "built_at": "2024-01-26T13:10:16Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7ce38c8ea4bbfd140ea98fd8dfe7486b3ce00522",
    "build_started_at": "2024-01-26T12:42:15Z",
    "run_id": "7668184498"
  },
  {
    "hash": "7d172cfc3a9b72282eb96769df0c47a99ff46065",
    "type": "pull_request",
    "title": "Multithreaded vote processor",
    "author": "pwojcikdev",
    "body": "Changes vote processor to use multiple threads. While processing of votes inside the election container is still done under exclusive lock, this should help amortize time spent checking vote signatures.",
    "draft": false,
    "pull_request": 4600,
    "label": "pwojcikdev:vote-processor-threads",
    "created_at": "2024-05-03T11:36:29Z",
    "built_at": "2024-05-05T09:33:40Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7d172cfc3a9b72282eb96769df0c47a99ff46065",
    "build_started_at": "2024-05-05T09:08:08Z",
    "run_id": "8957122238"
  },
  {
    "hash": "7d2fbd80268be15ef323eed82bd29838503cf50d",
    "type": "commit",
    "created_at": "2024-03-21T10:49:25Z",
    "built_at": "2024-03-24T13:29:35Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7d2fbd80268be15ef323eed82bd29838503cf50d",
    "build_started_at": "2024-03-24T12:11:57Z",
    "run_id": "8409177637"
  },
  {
    "hash": "7d34852cc75a937e94f31c33e22aa70add8ac751",
    "type": "commit",
    "created_at": "2023-05-26T13:42:15Z",
    "built_at": "2023-06-21T18:02:04Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7d34852cc75a937e94f31c33e22aa70add8ac751"
  },
  {
    "hash": "7d55ced8e8a9d351f64b9af60159fe68827d2fcc",
    "type": "pull_request",
    "pull_request": 4158,
    "label": "clemahieu:bootstrap_ascending_client",
    "created_at": "2023-02-27T20:15:37Z",
    "built_at": "2023-03-14T16:09:28Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7d55ced8e8a9d351f64b9af60159fe68827d2fcc"
  },
  {
    "hash": "7d57781c5674339329ee1ea410a936df1c5b7227",
    "type": "pull_request",
    "title": "Start/stop pattern for `unchecked_map`",
    "author": "pwojcikdev",
    "body": null,
    "draft": false,
    "pull_request": 4577,
    "label": "pwojcikdev:unchecked-start-stop",
    "created_at": "2024-04-18T10:59:10Z",
    "built_at": "2024-04-18T11:36:00Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7d57781c5674339329ee1ea410a936df1c5b7227",
    "build_started_at": "2024-04-18T11:11:01Z",
    "run_id": "8736883422"
  },
  {
    "hash": "7dbf64f11c2b7d7c193a27d6cbfee6c474a11d9e",
    "type": "commit",
    "created_at": "2024-03-13T09:20:16Z",
    "built_at": "2024-03-13T09:47:33Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7dbf64f11c2b7d7c193a27d6cbfee6c474a11d9e",
    "build_started_at": "2024-03-13T09:22:26Z",
    "run_id": "8262266299"
  },
  {
    "hash": "7dbf75e2e9ff158c50dc3054f02b29b008c8f20c",
    "type": "commit",
    "title": "Fix pruning tests that did not confirm blocks before pruning. Strongly ensure blocks are confirmed while pruning. (#4532)\n\nnode::collect_ledger_pruning_targets already ensures blocks are confirmed before pruning however this was not the case in tests. Removed one test that only tested erroneous behavior.",
    "pull_request": "4532",
    "created_at": "2024-04-03T16:58:17Z",
    "built_at": "2024-04-03T17:34:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7dbf75e2e9ff158c50dc3054f02b29b008c8f20c",
    "build_started_at": "2024-04-03T17:07:41Z",
    "run_id": "8542717589"
  },
  {
    "hash": "7dc04161daec3ce10aafd7c32fb4b9acf196f15a",
    "type": "pull_request",
    "title": "Automatic database backend",
    "author": "RickiNano",
    "body": "Switching database backend between LMDB and RocksDb is currently done by setting `RocksDb.enabled` to true or false in the config.\r\n\r\nThis PR removes that setting and adds a new `Database_backend` config setting.\r\n`Database_backend` can be set to one of the following:\r\n* lmdb\r\n* rocksdb\r\n* auto\r\n\r\nThe first two are self explanitory. \r\nWhen using auto mode the node will look for an existing ledger and use this. If no ledger is found it will initialize a new RocksDb ledger. If multiple ledgers are found it will display a warning message and use the RocksDb ledger.\r\nThe main purpose is to make new node operators use RocksDb but without forcing existing LMDB users to make changes.\r\nIn future node versions (V29?) we can show messages to LMDB users that encourage them to update to RocksDb and instructions on how to do this.\r\nEven later versions (V30?) could halt the node initialization if LMDB is used and display instructions on updating. If they insist on using LMDB they can set `Database_backend` to lmdb ",
    "draft": false,
    "pull_request": 4754,
    "label": "RickiNano:Automatic-database-backend",
    "created_at": "2024-10-15T08:37:17Z",
    "built_at": "2024-10-15T09:14:59Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7dc04161daec3ce10aafd7c32fb4b9acf196f15a",
    "build_started_at": "2024-10-15T08:47:52Z",
    "run_id": "11342539212"
  },
  {
    "hash": "7dce2d73f42df4f794b5bf70f443fd02e50fbbe4",
    "type": "commit",
    "author": "clemahieu",
    "title": "Forward declare block_uniquer",
    "pull_request": "N/A",
    "created_at": "2024-10-28T08:02:36Z",
    "built_at": "2024-10-31T05:08:35Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-10-31T03:33:18Z",
    "run_id": "11606316447"
  },
  {
    "hash": "7e23de0ae23b8be163bcb62cef9e79f57f0a8234",
    "type": "commit",
    "author": "clemahieu",
    "title": "Move confirmation processing on to worker threads rather than io threads. (#4634)",
    "pull_request": "4634",
    "created_at": "2024-05-21T20:55:06Z",
    "built_at": "2024-05-21T21:33:13Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7e23de0ae23b8be163bcb62cef9e79f57f0a8234",
    "build_started_at": "2024-05-21T21:06:27Z",
    "run_id": "9181481736"
  },
  {
    "hash": "7e32c33ad11c1723333b59301a789e4dd607489a",
    "type": "pull_request",
    "pull_request": 4407,
    "label": "RickiNano:Use-testutil-function",
    "created_at": "2024-01-26T20:15:54Z",
    "built_at": "2024-01-26T20:47:52Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7e32c33ad11c1723333b59301a789e4dd607489a",
    "build_started_at": "2024-01-26T20:22:47Z",
    "run_id": "7673022624"
  },
  {
    "hash": "7e58c50140921031ebb1f59a7fc8a3594ec6022b",
    "type": "commit",
    "created_at": "2024-01-23T02:47:43Z",
    "built_at": "2024-01-23T03:18:27Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7e58c50140921031ebb1f59a7fc8a3594ec6022b",
    "build_started_at": "2024-01-23T02:53:35Z",
    "run_id": "7620392850"
  },
  {
    "hash": "7e59606daf115f4d3622a3ce7a2d9d3dab8c8452",
    "type": "pull_request",
    "pull_request": 4238,
    "label": "clemahieu:scheduling_limiter",
    "created_at": "2023-05-19T01:07:22Z",
    "built_at": "2023-09-03T17:20:52Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7e59606daf115f4d3622a3ce7a2d9d3dab8c8452"
  },
  {
    "hash": "7e6a3107ff6517fa1ae6e83f32c6448ee7eea474",
    "type": "commit",
    "created_at": "2023-03-18T00:31:11Z",
    "built_at": "2023-03-18T01:11:43Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7e6a3107ff6517fa1ae6e83f32c6448ee7eea474"
  },
  {
    "hash": "7e6c41a95def28681654db18acdd1cf2223371ea",
    "type": "commit",
    "author": "clemahieu",
    "title": "Forward declaring block_uniquer.",
    "pull_request": "N/A",
    "created_at": "2024-10-28T20:49:02Z",
    "built_at": "2024-10-31T05:15:30Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-10-31T03:33:18Z",
    "run_id": "11606368587"
  },
  {
    "hash": "7e7da210a76e7d1474ce0a2c6df6b76a23ca438e",
    "type": "pull_request",
    "pull_request": 4488,
    "label": "pwojcikdev:object-streamed-range",
    "created_at": "2024-03-12T17:24:22Z",
    "built_at": "2024-03-12T17:45:25Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-12T17:24:44Z",
    "run_id": "8253168073"
  },
  {
    "hash": "7e7f91ba06939cdd512c779fc1bff06bd063381b",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Update boost to 1.86 (#4743)",
    "pull_request": "4743",
    "created_at": "2024-10-22T19:12:53Z",
    "built_at": "2024-10-22T19:48:15Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-10-22T19:22:04Z",
    "run_id": "11467065223"
  },
  {
    "hash": "7ea2a1b7ce7d63f0e3d6e8799e8ef72726c73405",
    "type": "pull_request",
    "pull_request": 4250,
    "label": "gr0vity-dev:wip/unified_artifacts_worflow",
    "created_at": "2023-06-22T15:06:28Z",
    "built_at": "2023-06-22T15:36:26Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7ea2a1b7ce7d63f0e3d6e8799e8ef72726c73405"
  },
  {
    "hash": "7eb72ccd463a3d07f7912bf87e380ff04397afb8",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Rename to `bandwidth_limiter`",
    "pull_request": "4728",
    "created_at": "2024-09-09T18:48:23Z",
    "built_at": "2024-09-17T11:22:38Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7eb72ccd463a3d07f7912bf87e380ff04397afb8",
    "build_started_at": "2024-09-17T09:35:37Z",
    "run_id": "10901549221"
  },
  {
    "hash": "7ec87fa6636c9a82250a8907404eba4c2ba058b3",
    "type": "pull_request",
    "pull_request": 4150,
    "label": "pwojcikdev:ci/build-cache",
    "created_at": "2023-02-22T18:52:31Z",
    "built_at": "2023-02-22T19:39:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7ec87fa6636c9a82250a8907404eba4c2ba058b3"
  },
  {
    "hash": "7f33efdd38a6683f3b1bc09877ecaef68a94ab4d",
    "type": "commit",
    "author": "clemahieu",
    "title": "Move recently_cemented_cache and recently_confirmed_cache to their own files. (#4606)",
    "pull_request": "4606",
    "created_at": "2024-05-07T16:40:45Z",
    "built_at": "2024-05-07T17:12:02Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7f33efdd38a6683f3b1bc09877ecaef68a94ab4d",
    "build_started_at": "2024-05-07T16:45:50Z",
    "run_id": "8989179457"
  },
  {
    "hash": "7f3b07d7d4010032d65ce28e590123f928a8840b",
    "type": "pull_request",
    "pull_request": 4448,
    "label": "gr0vity-dev:prs/log_ipc_session_id",
    "created_at": "2024-02-24T17:04:37Z",
    "built_at": "2024-02-24T18:00:46Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7f3b07d7d4010032d65ce28e590123f928a8840b",
    "build_started_at": "2024-02-24T17:36:03Z",
    "run_id": "8032024673"
  },
  {
    "hash": "7f4b7d668b33bf48ac643720f64b366caab61c22",
    "type": "pull_request",
    "title": "QT wallet: proper display of state open block in GUI history",
    "author": "SergiySW",
    "body": "State open block should be marked as \"Receive\".\r\nFor open blocks `previous` == 0 and function `nano::ledger_set_any::block_balance ()` will return `std::nullopt` resulting in displaying \"Unknown\" block type.",
    "draft": false,
    "pull_request": 4744,
    "label": "SergiySW:qt_state_open",
    "created_at": "2024-10-06T20:20:47Z",
    "built_at": null,
    "build_status": "building",
    "docker_tag": null,
    "build_started_at": "2024-10-27T21:29:41Z",
    "run_id": null
  },
  {
    "hash": "7f5c394ca54f82a57d10ae29263e561b9f9288f3",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Complete missing testcase",
    "pull_request": "4767",
    "created_at": "2024-10-24T17:31:05Z",
    "built_at": "2024-10-26T00:18:47Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7f5c394ca54f82a57d10ae29263e561b9f9288f3",
    "build_started_at": "2024-10-25T22:56:00Z",
    "run_id": "11526943660"
  },
  {
    "hash": "7f9a518b025710425b25edb6e014d4d0c5736b24",
    "type": "commit",
    "created_at": "2023-03-15T00:51:37Z",
    "built_at": "2023-04-01T17:50:31Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7f9a518b025710425b25edb6e014d4d0c5736b24"
  },
  {
    "hash": "7fa2e47088aaa2fe4eba9e5e1f168ca4f00809b4",
    "type": "pull_request",
    "pull_request": 4338,
    "label": "pwojcikdev:move-vote-class",
    "created_at": "2023-11-09T20:32:01Z",
    "built_at": "2023-11-09T21:03:00Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7fa2e47088aaa2fe4eba9e5e1f168ca4f00809b4",
    "build_started_at": "2023-11-09T20:37:54Z",
    "run_id": "6817173542"
  },
  {
    "hash": "7fd6580d5e5db320bdca0be97e97f73a4a198a3e",
    "type": "pull_request",
    "title": "Fix inactive votes cache election start",
    "author": "dsiganos",
    "body": null,
    "draft": false,
    "pull_request": 4587,
    "label": "dsiganos:fix_inactive_votes_cache_election_start",
    "created_at": "2024-04-26T20:05:17Z",
    "built_at": "2024-04-26T20:46:59Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7fd6580d5e5db320bdca0be97e97f73a4a198a3e",
    "build_started_at": "2024-04-26T20:09:20Z",
    "run_id": "8853868714"
  },
  {
    "hash": "7fdf3120f85e53cb7cd5d02b8ee8888dee53265c",
    "type": "pull_request",
    "pull_request": 4465,
    "label": "clemahieu:block_fields",
    "created_at": "2024-03-06T17:58:47Z",
    "built_at": "2024-03-07T16:39:23Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7fdf3120f85e53cb7cd5d02b8ee8888dee53265c",
    "build_started_at": "2024-03-07T16:14:31Z",
    "run_id": "8191327842"
  },
  {
    "hash": "7fec95988da2e6e5410744ace8478ff536722dee",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Adjust bootstrap request timeout",
    "pull_request": "4786",
    "created_at": "2024-11-11T20:43:00Z",
    "built_at": "2024-11-23T03:29:53Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:7fec95988da2e6e5410744ace8478ff536722dee",
    "build_started_at": "2024-11-22T23:40:48Z",
    "run_id": "11983505415"
  },
  {
    "hash": "80205a09731d8bc93b8d96dd42f15cdf268ca590",
    "type": "pull_request",
    "pull_request": 3727,
    "label": "clemahieu:block_pipeline",
    "created_at": "2022-02-09T15:28:27Z",
    "built_at": "2023-02-05T23:42:11Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:80205a09731d8bc93b8d96dd42f15cdf268ca590"
  },
  {
    "hash": "80212f460e638090fa9de9a9f0c2ace9165f4c3e",
    "type": "pull_request",
    "title": "Enable debug logging for core tests",
    "author": "gr0vity-dev",
    "body": "Failures on GitHub runners are sometimes hard to reproduce locally. Adding detailed logging helps analyze test failures directly from CI logs.\r\n\r\n- Enables NANO_LOG_STATS and debug level logging for core tests across all CI platforms\r\n- Helps diagnose intermittent test failures by providing more detailed execution traces",
    "draft": false,
    "pull_request": 4807,
    "label": "gr0vity-dev:prs/enable-debug-log-for-core-tests",
    "created_at": "2024-12-07T08:45:19Z",
    "built_at": "2024-12-07T21:14:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:80212f460e638090fa9de9a9f0c2ace9165f4c3e",
    "build_started_at": "2024-12-07T20:47:33Z",
    "run_id": "12215834362"
  },
  {
    "hash": "8041e77f7cef6c26ad57d6b41bdfc8e908a3e1fe",
    "type": "commit",
    "created_at": "2024-03-21T15:58:35Z",
    "built_at": "2024-03-24T13:54:37Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8041e77f7cef6c26ad57d6b41bdfc8e908a3e1fe",
    "build_started_at": "2024-03-24T12:11:57Z",
    "run_id": "8409177637"
  },
  {
    "hash": "804dcaceb1ecc558894f09a7092f798c8594a05a",
    "type": "commit",
    "title": "Merge pull request #4553 from dsiganos/pending_key_info_improvements\n\nDocumentation for pending key and info classes and some other improvements whilst investigating",
    "pull_request": "4553",
    "created_at": "2024-04-14T02:11:32Z",
    "built_at": "2024-04-14T04:26:33Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:804dcaceb1ecc558894f09a7092f798c8594a05a",
    "build_started_at": "2024-04-14T02:26:53Z",
    "run_id": "8678230534"
  },
  {
    "hash": "80654621c9f351148ced09a71af429b3328e3793",
    "type": "pull_request",
    "pull_request": 4516,
    "label": "clemahieu:websocket_vote_code",
    "created_at": "2024-03-22T17:33:30Z",
    "built_at": "2024-03-22T18:51:27Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:80654621c9f351148ced09a71af429b3328e3793",
    "build_started_at": "2024-03-22T17:34:49Z",
    "run_id": "8394248934"
  },
  {
    "hash": "807e9f4bd2d9bb9602a26f2ac8e57ba7ef92e839",
    "type": "pull_request",
    "title": "Fix two boost dependency issues",
    "author": "clemahieu",
    "body": null,
    "draft": false,
    "pull_request": 4716,
    "label": "clemahieu:boost_process_deps",
    "created_at": "2024-08-27T10:57:46Z",
    "built_at": "2024-08-27T11:50:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:807e9f4bd2d9bb9602a26f2ac8e57ba7ef92e839",
    "build_started_at": "2024-08-27T11:03:13Z",
    "run_id": "10577073739"
  },
  {
    "hash": "8087454387d510ee112d0e13e3367c6ba91295b1",
    "type": "commit",
    "created_at": "2024-03-15T23:41:21Z",
    "built_at": "2024-03-18T18:09:26Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8087454387d510ee112d0e13e3367c6ba91295b1",
    "build_started_at": "2024-03-18T16:48:08Z",
    "run_id": "8330437043"
  },
  {
    "hash": "809becfba0d2596d85de58a8ede9faa24fc62c66",
    "type": "commit",
    "author": "RickiNano",
    "title": "migrate_database_lmdb_to_rocksdb improvements (#4647)\n\n* Rocksdb migration: disk space check and progress output\r\n\r\n* Estimate the required free disk space\r\n\r\n* More granular progress feedback\r\n\r\n* Use Nano Logger\r\n\r\n* Clang format fix\r\n\r\n* Fixed double count\r\n\r\n* Use atomics for multithreaded counters are accurate\r\n\r\n* Use a single periodically refreshed transaction per thread.\r\n\r\n* Output the number of entries for each table\r\n\r\n* Use TransactionDB rather than OptimisticTransactionDB.\r\n\r\n* Use default refresh interval.\r\n\r\n* Fixed error and aligned log output format\r\n\r\n---------\r\n\r\nCo-authored-by: Colin LeMahieu <clemahieu@gmail.com>",
    "pull_request": "4647",
    "created_at": "2024-07-10T19:48:00Z",
    "built_at": "2024-07-10T20:20:56Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:809becfba0d2596d85de58a8ede9faa24fc62c66",
    "build_started_at": "2024-07-10T19:54:08Z",
    "run_id": "9880565003"
  },
  {
    "hash": "80af9a06158d49350aa864ce1a645f5816ee344b",
    "type": "pull_request",
    "pull_request": 4286,
    "label": "clemahieu:nano_store_lib",
    "created_at": "2023-09-19T13:14:01Z",
    "built_at": "2023-09-20T13:50:00Z",
    "build_status": "fail",
    "docker_tag": ""
  },
  {
    "hash": "80c61e8780fce04962b55002b0c491b1f570cb06",
    "type": "pull_request",
    "title": "Removing unconfirmed_frontiers command line option.",
    "body": "When unconfirmed blocks are moved in to memory this information will not be queryable outside the node process.",
    "draft": false,
    "pull_request": 4530,
    "label": "clemahieu:remove_unconfirmed_frontiers",
    "created_at": "2024-04-01T12:20:06Z",
    "built_at": "2024-04-01T13:12:40Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:80c61e8780fce04962b55002b0c491b1f570cb06",
    "build_started_at": "2024-04-01T12:26:43Z",
    "run_id": "8508232143"
  },
  {
    "hash": "80cfe5cd18a70565d914ae565b0893dd9299443b",
    "type": "pull_request",
    "pull_request": 4152,
    "label": "clemahieu:active_transaction_behaviors",
    "created_at": "2023-02-22T23:07:14Z",
    "built_at": "2023-02-22T23:39:11Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:80cfe5cd18a70565d914ae565b0893dd9299443b"
  },
  {
    "hash": "810fbf33780e1606b84037d75b3e49b46d1778ba",
    "type": "pull_request",
    "pull_request": 4285,
    "label": "clemahieu:errors_remove_boost",
    "created_at": "2023-09-17T16:58:09Z",
    "built_at": "2023-09-17T17:35:02Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:810fbf33780e1606b84037d75b3e49b46d1778ba"
  },
  {
    "hash": "81178d0c3b499da107753fa8886f38bbc66414a9",
    "type": "commit",
    "created_at": "2023-10-18T22:37:21Z",
    "built_at": "2023-10-18T23:36:07Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:81178d0c3b499da107753fa8886f38bbc66414a9",
    "build_started_at": "2023-10-18T22:38:58Z",
    "run_id": "6567389571"
  },
  {
    "hash": "812b53bda71ebd2365c09e41cba05bdbc311e3d2",
    "type": "commit",
    "author": "clemahieu",
    "title": "Add flamegraph generation in CI build (#4638)\n\nFlamegraphs are attached to the build as artifacts.\r\n\r\nNew tests can be added by creating a new gtest in slow_test.\r\nTests like TEST (flamegraph, testname_x) will be executed if testname_x is added to the flamegraph.yaml file test matrix.",
    "pull_request": "4638",
    "created_at": "2024-05-23T15:32:11Z",
    "built_at": "2024-05-23T15:59:31Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:812b53bda71ebd2365c09e41cba05bdbc311e3d2",
    "build_started_at": "2024-05-23T15:33:02Z",
    "run_id": "9210846601"
  },
  {
    "hash": "815ac36ae2c0184b7bd364c8cec7426d89a7896e",
    "type": "commit",
    "created_at": "2024-01-22T09:07:36Z",
    "built_at": "2024-01-22T09:39:17Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:815ac36ae2c0184b7bd364c8cec7426d89a7896e",
    "build_started_at": "2024-01-22T09:11:27Z",
    "run_id": "7608842918"
  },
  {
    "hash": "8173da5eeaef54fc935f62ddc3574d075f8d2516",
    "type": "pull_request",
    "pull_request": 4380,
    "label": "gr0vity-dev:prs/respect_protected_branch",
    "created_at": "2024-01-21T09:12:31Z",
    "built_at": "2024-01-21T09:47:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8173da5eeaef54fc935f62ddc3574d075f8d2516",
    "build_started_at": "2024-01-21T09:21:59Z",
    "run_id": "7600297765"
  },
  {
    "hash": "8179f044817b5d57fc446df24fc7815d20b3a11d",
    "type": "pull_request",
    "pull_request": 4486,
    "label": "clemahieu:ledger_view",
    "created_at": "2024-03-12T14:33:24Z",
    "built_at": "2024-03-20T14:57:46Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-20T14:38:54Z",
    "run_id": "8360807213"
  },
  {
    "hash": "817f346eb3d0dc09c7d050581935cdf1f4d07238",
    "type": "commit",
    "created_at": "2024-02-13T13:37:43Z",
    "built_at": "2024-02-13T14:19:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:817f346eb3d0dc09c7d050581935cdf1f4d07238",
    "build_started_at": "2024-02-13T13:43:04Z",
    "run_id": "7887429112"
  },
  {
    "hash": "8191ce7f09fec62a4b474cd82320403e6456697c",
    "type": "pull_request",
    "title": "migrate_database_lmdb_to_rocksdb improvements",
    "author": "RickiNano",
    "body": "The `migrate_database_lmdb_to_rocksdb` option is running for a very long time with the current ledger size (almost 200 million blocks). On my local machine it took 65 minutes to complete. Nothing is written on screen during this process and users may think the process has stalled.\r\nThis PR adds some progress feedback. One update for each of the 7 tables that are migrated.\r\nIt also adds a simple disk space check to warn users if they might not have enough space to complete the migration.\r\n~~The current converted RocksDb database is 73 GB, and the warning is given if the system has less than 75GB available.~~\r\nThe warning is given based on the size of the LMDB database that is being migrated. The final RocksDb size is approximately 65% of the LMDB space.",
    "draft": false,
    "pull_request": 4647,
    "label": "RickiNano:lmdb-to-rocksdb",
    "created_at": "2024-06-13T10:47:31Z",
    "built_at": "2024-07-05T15:43:36Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8191ce7f09fec62a4b474cd82320403e6456697c",
    "build_started_at": "2024-07-05T15:14:47Z",
    "run_id": "9810391639"
  },
  {
    "hash": "81967f7945198933c8084f1153854b9c138ac992",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Move `block_deserializer` to `transport` namespace",
    "pull_request": "N/A",
    "created_at": "2024-10-29T13:12:41Z",
    "built_at": "2024-10-31T16:41:03Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:81967f7945198933c8084f1153854b9c138ac992",
    "build_started_at": "2024-10-31T13:47:32Z",
    "run_id": "11615689751"
  },
  {
    "hash": "81a2ab4f267066333cbd20e35d76d044031def03",
    "type": "commit",
    "created_at": "2023-02-28T23:17:52Z",
    "built_at": "2023-02-28T23:56:40Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:81a2ab4f267066333cbd20e35d76d044031def03"
  },
  {
    "hash": "81c598b00186bc85e961756943cb43b47e7eecf3",
    "type": "commit",
    "created_at": "2024-01-20T14:16:38Z",
    "built_at": "2024-01-24T12:01:18Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-01-24T11:46:33Z",
    "run_id": "7639686867"
  },
  {
    "hash": "81cd7aa6c592da8075b710837ad24efb3a435ad1",
    "type": "pull_request",
    "title": "Bucketing component",
    "author": "pwojcikdev",
    "body": "This extracts block bucketing logic into a separate `bucketing` component and introduces `ledger::block_priority ( .. )` function. This function provides stable block priorities independent of account info timestamp, which had the problem that it changed after block rollbacks. This made the previous logic unsuitable for bounded backlog. ",
    "draft": false,
    "pull_request": 4794,
    "label": "pwojcikdev:bucketing",
    "created_at": "2024-11-25T21:01:42Z",
    "built_at": "2024-11-25T22:16:33Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:81cd7aa6c592da8075b710837ad24efb3a435ad1",
    "build_started_at": "2024-11-25T21:46:09Z",
    "run_id": "12018859830"
  },
  {
    "hash": "81e6b5747cb398439be5049757e4b63d09d3d006",
    "type": "pull_request",
    "pull_request": 4375,
    "label": "pwojcikdev:logging-overhaul-10-develop",
    "created_at": "2024-01-19T14:05:43Z",
    "built_at": "2024-01-23T18:15:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:81e6b5747cb398439be5049757e4b63d09d3d006",
    "build_started_at": "2024-01-23T17:49:55Z",
    "run_id": "7629775306"
  },
  {
    "hash": "81f15551b78ffa67b9e39325fb82375467ae8a6c",
    "type": "pull_request",
    "pull_request": 4163,
    "label": "clemahieu:block_processor_timeout",
    "created_at": "2023-03-01T11:28:50Z",
    "built_at": "2023-03-01T11:59:10Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:81f15551b78ffa67b9e39325fb82375467ae8a6c"
  },
  {
    "hash": "8221c05b09887d759c1657541f4575771fb08fab",
    "type": "pull_request",
    "title": "Remove `node::process_confirmed (...)`",
    "author": "pwojcikdev",
    "body": "This removes the `node::process_confirmed (...)` function. Blocks queued there could briefly find themselves in a limbo state, neither part of an active election or cementing set, which was racy.",
    "draft": false,
    "pull_request": 4758,
    "label": "pwojcikdev:remove-process-confirmed",
    "created_at": "2024-10-18T16:23:32Z",
    "built_at": "2024-11-23T17:32:23Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8221c05b09887d759c1657541f4575771fb08fab",
    "build_started_at": "2024-11-23T17:05:44Z",
    "run_id": "11988916634"
  },
  {
    "hash": "822e90a9da13b8e29f847c927c0fad4e0777b6ed",
    "type": "pull_request",
    "pull_request": 4158,
    "label": "clemahieu:bootstrap_ascending_client",
    "created_at": "2023-02-27T20:15:37Z",
    "built_at": "2023-03-08T03:31:45Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:822e90a9da13b8e29f847c927c0fad4e0777b6ed"
  },
  {
    "hash": "824922e233d665c64d7ecff8eb6ad5d0993a5dc8",
    "type": "pull_request",
    "title": "Automatic database backend",
    "author": "RickiNano",
    "body": "Switching database backend between LMDB and RocksDb is currently done by setting `RocksDb.enabled` to true or false in the config.\r\n\r\nThis PR removes that setting and adds a new `Database_backend` config setting.\r\n`Database_backend` can be set to one of the following:\r\n* lmdb\r\n* rocksdb\r\n* auto\r\n\r\nThe first two are self explanitory. \r\nWhen using auto mode the node will look for an existing ledger and use this. If no ledger is found it will initialize a new RocksDb ledger. If multiple ledgers are found it will display a warning message and use the RocksDb ledger.\r\nThe main purpose is to make new node operators use RocksDb but without forcing existing LMDB users to make changes.\r\nIn future node versions (V29?) we can show messages to LMDB users that encourage them to update to RocksDb and instructions on how to do this.\r\nEven later versions (V30?) could halt the node initialization if LMDB is used and display instructions on updating. If they insist on using LMDB they can set `Database_backend` to lmdb ",
    "draft": false,
    "pull_request": 4754,
    "label": "RickiNano:Automatic-database-backend",
    "created_at": "2024-10-15T08:37:17Z",
    "built_at": "2024-10-17T17:44:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:824922e233d665c64d7ecff8eb6ad5d0993a5dc8",
    "build_started_at": "2024-10-17T17:16:47Z",
    "run_id": "11389814074"
  },
  {
    "hash": "824d156e6afe6bd49d90820b116aef3df84c3697",
    "type": "commit",
    "title": "Fix and re-enable unit test rpc.send_epoch_2 (#4551)",
    "pull_request": "4551",
    "created_at": "2024-04-12T15:04:58Z",
    "built_at": "2024-04-12T15:37:16Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:824d156e6afe6bd49d90820b116aef3df84c3697",
    "build_started_at": "2024-04-12T15:07:14Z",
    "run_id": "8664153160"
  },
  {
    "hash": "82527f41352b2452855fb490040ea01a7e66ade0",
    "type": "commit",
    "author": "clemahieu",
    "title": "Move ledger::receivable_any on to ledger set receivable_exists",
    "pull_request": "4593",
    "created_at": "2024-03-18T18:04:22Z",
    "built_at": "2024-04-30T15:50:04Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:82527f41352b2452855fb490040ea01a7e66ade0",
    "build_started_at": "2024-04-30T13:34:48Z",
    "run_id": "8897438697"
  },
  {
    "hash": "8255d97d131880b8328041e462c2c890bf986259",
    "type": "commit",
    "author": "gr0vity-dev",
    "title": "Add  cli support for `disable_max_peers...` node flags (#4620)\n\n* Add node flags 'disable_max_peers_per_ip', 'disable_max_peers_per_subnetwork' to cli\r\n\r\n* add cli support for more node flags\r\n\r\n---------\r\n\r\nCo-authored-by: gr0vity-dev <homebot@users.noreply.github.com>",
    "pull_request": "4620",
    "created_at": "2024-05-19T12:32:41Z",
    "built_at": "2024-05-19T13:09:30Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8255d97d131880b8328041e462c2c890bf986259",
    "build_started_at": "2024-05-19T12:43:10Z",
    "run_id": "9147728960"
  },
  {
    "hash": "826030d586af13139535c30e2c8ae8120bf3840d",
    "type": "commit",
    "created_at": "2024-03-21T15:53:55Z",
    "built_at": "2024-03-24T14:00:38Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:826030d586af13139535c30e2c8ae8120bf3840d",
    "build_started_at": "2024-03-24T12:11:57Z",
    "run_id": "8409177637"
  },
  {
    "hash": "8281cdbbaa5a5d3089d8c8e35bced4364bdf5888",
    "type": "commit",
    "created_at": "2024-03-22T08:42:55Z",
    "built_at": "2024-03-22T09:16:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8281cdbbaa5a5d3089d8c8e35bced4364bdf5888",
    "build_started_at": "2024-03-22T08:48:02Z",
    "run_id": "8387719129"
  },
  {
    "hash": "828ab4646756c6e97a8808181b5e8a191c6cb5ae",
    "type": "pull_request",
    "title": "Test daemon interrupt handling",
    "author": "pwojcikdev",
    "body": "This adds a system test that ensures correct behavior of daemon interrupt handling. Additionally this cleans up and improves output of the whole systest suite.",
    "draft": false,
    "pull_request": 4563,
    "label": "pwojcikdev:daemon-systests-rebased",
    "created_at": "2024-04-14T20:07:22Z",
    "built_at": "2024-04-15T08:47:48Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:828ab4646756c6e97a8808181b5e8a191c6cb5ae",
    "build_started_at": "2024-04-15T08:20:18Z",
    "run_id": "8685792566"
  },
  {
    "hash": "82baec7b07e1b8971eb3698be35c599e20c6a233",
    "type": "pull_request",
    "pull_request": 4318,
    "label": "clemahieu:election_state_mutex",
    "created_at": "2023-10-26T14:21:12Z",
    "built_at": "2023-10-31T17:10:53Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:82baec7b07e1b8971eb3698be35c599e20c6a233",
    "build_started_at": "2023-10-31T16:16:58Z",
    "run_id": "6709398625"
  },
  {
    "hash": "82d14238ae84cdec0b5b26884b016d7c283537e3",
    "type": "pull_request",
    "title": "Bound the growth of `election_winner_details` set",
    "author": "pwojcikdev",
    "body": null,
    "draft": false,
    "pull_request": 4720,
    "label": "pwojcikdev:aec-bound-election-winners",
    "created_at": "2024-09-04T19:29:31Z",
    "built_at": "2024-09-05T09:57:02Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:82d14238ae84cdec0b5b26884b016d7c283537e3",
    "build_started_at": "2024-09-05T09:29:47Z",
    "run_id": "10717709526"
  },
  {
    "hash": "82d480c3e9919b78617ce0fe57e9f5c2add9359f",
    "type": "pull_request",
    "title": "Introduce ledger view classes to separate confirmed/unconfirmed operations on the ledger",
    "author": "clemahieu",
    "body": "The motivation for this PR is in preparation for bounded backlog changes. Currently, both confirmed and unconfirmed transactions are together on disk and the ACID properties of the ledger are encapsulated with a database transaction.\r\n\r\nWith the bounded backlog, blocks will be stored in memory so there will need to be memory synchronization in addition to database synchronization. Rather than filling the ledger class with unconfirmed/confirmed variants for each operation.\r\n\r\nThe ledger is divided in to several sets and subsets:\r\nledger::confirmed - The set of confirmed transactions\r\nledger::any - The superset of confirmed and unconfirmed transactions\r\n\r\nWhen unconfirmed blocks are held in memory the set ledger::unconfirmed will be added which holds only unconfirmed transactions.\r\n\r\nIn the future the confirming_set can be moved on to ledger which is the subset of unconfirmed blocks that are queued to be moved in to the confirmed set.",
    "draft": false,
    "pull_request": 4486,
    "label": "clemahieu:ledger_view",
    "created_at": "2024-03-12T14:33:24Z",
    "built_at": "2024-04-16T04:23:28Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:82d480c3e9919b78617ce0fe57e9f5c2add9359f",
    "build_started_at": "2024-04-16T03:56:54Z",
    "run_id": "8699699711"
  },
  {
    "hash": "82d9d2d323abf2821032b7d88d21b3369957b814",
    "type": "pull_request",
    "title": "Activate cemented blocks",
    "author": "pwojcikdev",
    "body": "This makes a few adjustments to the way active elections are handled that I believe should be changed. \r\n\r\nFirst, it activates accounts whenever a block is cemented, either directly via election or indirectly via confirmation height. Previously activations were performed only for blocks that were part of an active election, which I believe can lead to some accounts not being prioritized properly (missed activation = long confirmation time for legit blocks). \r\n\r\nSecond, it adjusts how cemented blocks are handled in active election container. The handling is modified, so that it all happens under exclusive lock (prevents new election insertions while cemented blocks are processed), which is a step towards making interaction of `cementing_set` <-> `active_elections` components simpler to reason about.",
    "draft": false,
    "pull_request": 4757,
    "label": "pwojcikdev:activate-cemented-blocks",
    "created_at": "2024-10-18T12:26:01Z",
    "built_at": "2024-10-18T13:26:38Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:82d9d2d323abf2821032b7d88d21b3369957b814",
    "build_started_at": "2024-10-18T12:57:38Z",
    "run_id": "11404148029"
  },
  {
    "hash": "82db34ca040a4a49e44be0855ff5772eb63d1834",
    "type": "pull_request",
    "pull_request": 4341,
    "label": "pwojcikdev:confirm-req-remove-block",
    "created_at": "2023-11-10T23:32:07Z",
    "built_at": "2023-11-11T13:07:58Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:82db34ca040a4a49e44be0855ff5772eb63d1834",
    "build_started_at": "2023-11-11T12:29:10Z",
    "run_id": "6834210554"
  },
  {
    "hash": "83352c717af4eeb8330dcae605760e2a4b0ce89e",
    "type": "commit",
    "created_at": "2023-09-25T13:30:05Z",
    "built_at": "2023-09-25T14:21:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:83352c717af4eeb8330dcae605760e2a4b0ce89e"
  },
  {
    "hash": "83563b3fbe2824df653f8a08c4b3e4e98037a144",
    "type": "pull_request",
    "title": "Do not add processed live traffic into priorities",
    "author": "gr0vity-dev",
    "body": "I noticed that processed live traffic is inserted into priorities.\r\nMy understanding is that processed blocks from live traffic don't need further bootstrapping and they should not be a bootstrap priority.",
    "draft": false,
    "pull_request": 4801,
    "label": "gr0vity-dev:prs/no-bootstrap-for-live-blocks",
    "created_at": "2024-12-03T13:09:31Z",
    "built_at": "2024-12-03T14:08:15Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:83563b3fbe2824df653f8a08c4b3e4e98037a144",
    "build_started_at": "2024-12-03T13:37:20Z",
    "run_id": "12140797259"
  },
  {
    "hash": "8375c6f050e5719f2c26675680123d6ff71dc946",
    "type": "pull_request",
    "pull_request": 4397,
    "label": "pwojcikdev:enum-conversion-improvements",
    "created_at": "2024-01-25T17:55:37Z",
    "built_at": "2024-01-26T01:35:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8375c6f050e5719f2c26675680123d6ff71dc946",
    "build_started_at": "2024-01-26T01:10:13Z",
    "run_id": "7662595228"
  },
  {
    "hash": "83853d832bd777e6e118778f4bd8bebdff0e3bc0",
    "type": "commit",
    "created_at": "2024-03-13T13:19:25Z",
    "built_at": "2024-03-15T13:17:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:83853d832bd777e6e118778f4bd8bebdff0e3bc0",
    "build_started_at": "2024-03-15T11:52:51Z",
    "run_id": "8295661667"
  },
  {
    "hash": "8388347bd67b2e10aac39c9e86de403ddb61f1be",
    "type": "pull_request",
    "title": "Use 'enable' in configs for consistency",
    "author": "gr0vity-dev",
    "body": "Changed 3 config options from 'enabled' to 'enable' for consistency with the rest of the codebase. ",
    "draft": false,
    "pull_request": 4678,
    "label": "gr0vity-dev:prs/rename_to_enable",
    "created_at": "2024-07-15T13:42:32Z",
    "built_at": "2024-07-15T14:38:40Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8388347bd67b2e10aac39c9e86de403ddb61f1be",
    "build_started_at": "2024-07-15T14:12:02Z",
    "run_id": "9940744684"
  },
  {
    "hash": "83954e40ec9817fbca6dade1783e01e5335d7aeb",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Rename config to `backlog_scan`",
    "pull_request": "N/A",
    "created_at": "2024-10-11T13:08:36Z",
    "built_at": "2024-11-27T04:25:30Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:83954e40ec9817fbca6dade1783e01e5335d7aeb",
    "build_started_at": "2024-11-27T00:59:54Z",
    "run_id": "12043447446"
  },
  {
    "hash": "839978f578b28296293678b9fc66715fa2055a41",
    "type": "pull_request",
    "pull_request": 4486,
    "label": "clemahieu:ledger_view",
    "created_at": "2024-03-12T14:33:24Z",
    "built_at": "2024-03-12T14:53:54Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-12T14:35:08Z",
    "run_id": "8250697695"
  },
  {
    "hash": "83a00bef1cf35525934fef0cf5d0a6e8533745ff",
    "type": "pull_request",
    "pull_request": 4299,
    "label": "pwojcikdev:fix-duplicate-linking",
    "created_at": "2023-09-26T23:26:50Z",
    "built_at": "2023-09-27T15:05:25Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:83a00bef1cf35525934fef0cf5d0a6e8533745ff"
  },
  {
    "hash": "83dfd275383ea62bf8576dd4aef582dabc7e6086",
    "type": "pull_request",
    "pull_request": 4471,
    "label": "pwojcikdev:vote-processor-tiers",
    "created_at": "2024-03-08T11:10:27Z",
    "built_at": "2024-03-10T18:35:10Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:83dfd275383ea62bf8576dd4aef582dabc7e6086",
    "build_started_at": "2024-03-10T18:10:15Z",
    "run_id": "8223868389"
  },
  {
    "hash": "83e0997497b6411b5062345bc90aad8ec543db2b",
    "type": "commit",
    "created_at": "2024-02-01T15:34:03Z",
    "built_at": "2024-02-01T16:14:39Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:83e0997497b6411b5062345bc90aad8ec543db2b",
    "build_started_at": "2024-02-01T15:34:57Z",
    "run_id": "7743734697"
  },
  {
    "hash": "8430080657bc9cabaff8e27815729f5a06d31b47",
    "type": "pull_request",
    "title": "Bounded backlog",
    "author": "pwojcikdev",
    "body": "This is ongoing work for bounded backlog. This limits the number of unconfirmed blocks that the node needs to store. The implementation of this mechanism is nontrivial because the node relies heavily on the fact that unconfirmed blocks are present in the ledger.\r\n\r\nDepends on PRs:\r\nhttps://github.com/nanocurrency/nano-node/pull/4758",
    "draft": true,
    "pull_request": 4787,
    "label": "pwojcikdev:bounded-backlog-pr",
    "created_at": "2024-11-18T20:36:19Z",
    "built_at": "2024-11-28T21:26:49Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8430080657bc9cabaff8e27815729f5a06d31b47",
    "build_started_at": "2024-11-28T20:58:04Z",
    "run_id": "12075355241"
  },
  {
    "hash": "8478d12c3f13c568bb00aae58e22e477b4363ab8",
    "type": "pull_request",
    "title": "Enable large votes",
    "author": "clemahieu",
    "body": "This bumps the protocol version and also adds the \"--disable_large_votes\" command line option to disable large votes.",
    "draft": false,
    "pull_request": 4683,
    "label": "clemahieu:large_votes",
    "created_at": "2024-07-17T14:28:21Z",
    "built_at": "2024-07-17T19:48:32Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8478d12c3f13c568bb00aae58e22e477b4363ab8",
    "build_started_at": "2024-07-17T19:17:59Z",
    "run_id": "9980181627"
  },
  {
    "hash": "84a7125812847696a1de1a0ac0c02a780b0c3684",
    "type": "pull_request",
    "pull_request": 4407,
    "label": "RickiNano:Use-testutil-function",
    "created_at": "2024-01-26T20:15:54Z",
    "built_at": "2024-01-27T08:37:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:84a7125812847696a1de1a0ac0c02a780b0c3684",
    "build_started_at": "2024-01-27T08:13:39Z",
    "run_id": "7677390855"
  },
  {
    "hash": "84aeff43b61d30396e8e57e2ef82893d7bbf1ad4",
    "type": "pull_request",
    "pull_request": 4158,
    "label": "clemahieu:bootstrap_ascending_client",
    "created_at": "2023-02-27T20:15:37Z",
    "built_at": "2023-03-05T17:34:51Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:84aeff43b61d30396e8e57e2ef82893d7bbf1ad4"
  },
  {
    "hash": "84e08f039b1d3f3d8837ef7e2e30f97cdb5ab5dc",
    "type": "pull_request",
    "title": "Traffic shaping",
    "author": "pwojcikdev",
    "body": "This is a draft PR for an ongoing work that overhauls how outgoing traffic is handled and prioritized. This will significantly improve how the node handles network congestion, which is extremely important during spam.\r\n\r\nDepends on PRs:\r\nhttps://github.com/nanocurrency/nano-node/pull/4784",
    "draft": true,
    "pull_request": 4786,
    "label": "pwojcikdev:traffic-shaping-pr",
    "created_at": "2024-11-18T19:43:02Z",
    "built_at": "2024-12-06T21:55:20Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:84e08f039b1d3f3d8837ef7e2e30f97cdb5ab5dc",
    "build_started_at": "2024-12-06T21:27:37Z",
    "run_id": "12206398165"
  },
  {
    "hash": "84e4555dfc93d0a9112ec3091e888e697e140886",
    "type": "pull_request",
    "title": "Bootstrap tuning",
    "author": "pwojcikdev",
    "body": "This contains a few bootstrap improvements that should prevent edge case stalls. The main fix is giving accounts inserted from frontier / database scan the lowest possible priority, so that they cannot preempt existing priority accounts.",
    "draft": false,
    "pull_request": 4784,
    "label": "pwojcikdev:bootstrap-tuning-3",
    "created_at": "2024-11-11T20:51:52Z",
    "built_at": "2024-11-11T21:19:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:84e4555dfc93d0a9112ec3091e888e697e140886",
    "build_started_at": "2024-11-11T20:52:12Z",
    "run_id": "11785997399"
  },
  {
    "hash": "8513ba89bc9cc031f3ac602e4aaa2cb58ee7550e",
    "type": "pull_request",
    "pull_request": 4476,
    "label": "pwojcikdev:fair-queuing-3",
    "created_at": "2024-03-10T19:14:44Z",
    "built_at": "2024-03-11T21:05:56Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8513ba89bc9cc031f3ac602e4aaa2cb58ee7550e",
    "build_started_at": "2024-03-11T20:39:35Z",
    "run_id": "8239431790"
  },
  {
    "hash": "852347e723c15988bf8d3b473677e9661306089e",
    "type": "pull_request",
    "title": "Fair queuing for block processor",
    "body": "The current design of block processor queue is problematic. We have a single, large queue that is shared by all peers and node components (bootstrapping, local blocks, unchecked table). This means that in periods of high activity this queue can quickly become overwhelmed, with excessively active peers consuming its capacity.\r\n\r\nI propose we use a new design: a fair queue where each peer and each component gets its own smaller queue with a configurable size and priority. Block processor will then use this queue to process incoming blocks in a (weighted) round robin manner. This should ensure that even when network is under stress, data coming from well-behaved peers is ingested quickly.\r\n\r\nCurrently all peers are treated with equal priority, but it is possible to modify this implementation to give more resources to representatives - once we implement a reliable way to authenticate channels.\r\n\r\nThe default size of queue per peer is 128 blocks. This should be enough for live network, but probably should be adjusted for beta in order to be able to saturate the network.",
    "draft": false,
    "pull_request": 4476,
    "label": "pwojcikdev:fair-queuing-3",
    "created_at": "2024-03-10T19:14:44Z",
    "built_at": "2024-04-03T21:08:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:852347e723c15988bf8d3b473677e9661306089e",
    "build_started_at": "2024-04-03T20:40:14Z",
    "run_id": "8545236562"
  },
  {
    "hash": "8546cba8d606d7e1e11d1fa8024a571064014088",
    "type": "pull_request",
    "pull_request": 4333,
    "label": "RickiNano:rocksdb_block_exists",
    "created_at": "2023-11-06T19:22:45Z",
    "built_at": "2023-11-06T19:50:03Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8546cba8d606d7e1e11d1fa8024a571064014088",
    "build_started_at": "2023-11-06T19:24:14Z",
    "run_id": "6775550114"
  },
  {
    "hash": "854d41c5e99b020b3d2ffe2dbbf13482d401a82c",
    "type": "pull_request",
    "pull_request": 4184,
    "label": "clemahieu:rpc_test_check_fix",
    "created_at": "2023-03-16T12:58:10Z",
    "built_at": "2023-03-16T19:06:24Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:854d41c5e99b020b3d2ffe2dbbf13482d401a82c"
  },
  {
    "hash": "85737c36660c05b2423b1742bc6a794945e9f4f0",
    "type": "pull_request",
    "pull_request": 4103,
    "label": "clemahieu:token_bucket",
    "created_at": "2023-02-06T16:35:20Z",
    "built_at": "2023-02-06T18:59:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:85737c36660c05b2423b1742bc6a794945e9f4f0"
  },
  {
    "hash": "85862d8f980044c59aed4673ad79e245119bdd99",
    "type": "pull_request",
    "title": "Use a dedicated thread for tcp listener",
    "author": "pwojcikdev",
    "body": "While I'm not aware of any problems with previous implementation, the async way of implementing `tcp_listener` was generally harder to understand and to evolve over time. It was especially problematic when making changes to other aspects of networking code. Given that our connections are long-lived and relatively infrequent, there is very little need for tcp acceptor code to be focused on performance and instead we should prioritize readability and maintainability. This modifies it to instead run on a single, dedicated thread and use blocking IO operations.",
    "draft": false,
    "pull_request": 4523,
    "label": "pwojcikdev:networking-fixes/tcp-listener-2",
    "created_at": "2024-03-25T16:06:32Z",
    "built_at": "2024-04-20T09:13:04Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:85862d8f980044c59aed4673ad79e245119bdd99",
    "build_started_at": "2024-04-20T08:48:21Z",
    "run_id": "8763889505"
  },
  {
    "hash": "858844684f105f8a6d5aa161ec110d5320d23943",
    "type": "pull_request",
    "pull_request": 4127,
    "label": "pwojcikdev:prs/ci/remove-boost-from-ci-build",
    "created_at": "2023-02-14T18:08:19Z",
    "built_at": "2023-02-14T18:48:01Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:858844684f105f8a6d5aa161ec110d5320d23943"
  },
  {
    "hash": "85977854a5cc0bd3357eca2a584fb3051f7b1d90",
    "type": "pull_request",
    "pull_request": 4368,
    "label": "clemahieu:bootstrap_test_add_node",
    "created_at": "2024-01-18T01:32:57Z",
    "built_at": "2024-01-18T07:35:13Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:85977854a5cc0bd3357eca2a584fb3051f7b1d90",
    "build_started_at": "2024-01-18T07:09:50Z",
    "run_id": "7566529352"
  },
  {
    "hash": "85a7c3a21b9639da48ff5335155d0d5b1968e46c",
    "type": "pull_request",
    "pull_request": 4445,
    "label": "dsiganos:work_pool_unit_test_improvements",
    "created_at": "2024-02-22T13:59:36Z",
    "built_at": "2024-02-22T14:38:43Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:85a7c3a21b9639da48ff5335155d0d5b1968e46c",
    "build_started_at": "2024-02-22T14:10:25Z",
    "run_id": "8005822747"
  },
  {
    "hash": "85bcaaedf18d7d3ddabe7e828840842842c3fc14",
    "type": "pull_request",
    "pull_request": 4310,
    "label": "gr0vity-dev:prs/encapsulate_election_mutex",
    "created_at": "2023-10-09T09:47:51Z",
    "built_at": "2023-10-09T10:30:49Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:85bcaaedf18d7d3ddabe7e828840842842c3fc14"
  },
  {
    "hash": "85c323804de6b33290d849825de7ffb9b6be77ad",
    "type": "commit",
    "title": "Merge pull request #4535 from clemahieu/move_write_database_queue\n\nMove write database queue",
    "pull_request": "4535",
    "created_at": "2024-04-04T15:43:52Z",
    "built_at": "2024-04-12T11:03:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:85c323804de6b33290d849825de7ffb9b6be77ad",
    "build_started_at": "2024-04-12T09:48:30Z",
    "run_id": "8660769117"
  },
  {
    "hash": "85d1b8da8a5bdcd142888a2bcdf0e2798b773852",
    "type": "pull_request",
    "title": "Bugfix add_outer_node(), it should be added to disconnected set of nodes",
    "body": "By adding it to the standard set of nodes, any sebsequent node additions will connect to it and it is will remain unconnected.\r\n\r\nadd_outer_node should be merged with make_disconnected_node.",
    "draft": false,
    "pull_request": 4548,
    "label": "dsiganos:fix_add_outer_node",
    "created_at": "2024-04-10T04:07:06Z",
    "built_at": "2024-04-10T04:33:31Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:85d1b8da8a5bdcd142888a2bcdf0e2798b773852",
    "build_started_at": "2024-04-10T04:08:50Z",
    "run_id": "8625821832"
  },
  {
    "hash": "86015438898bdc8107dff233ac488779751a7a87",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Rename to core_test_main to entry for consistency (#4572)\n\n* Delete stub `core_test/entry.cpp`\r\n\r\n* Rename to `core_test_main` to `entry` for consistency\r\n\r\n* Fix includes",
    "pull_request": "4572",
    "created_at": "2024-04-17T11:35:40Z",
    "built_at": "2024-04-17T12:08:38Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:86015438898bdc8107dff233ac488779751a7a87",
    "build_started_at": "2024-04-17T11:40:01Z",
    "run_id": "8721222773"
  },
  {
    "hash": "8607a66d74e7b3682226d741f575fe76ceedbaad",
    "type": "commit",
    "created_at": "2023-09-20T01:41:13Z",
    "built_at": "2023-09-20T20:08:09Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8607a66d74e7b3682226d741f575fe76ceedbaad"
  },
  {
    "hash": "862bd461b9569f8bb995c64371bd5cb44fcd4b5e",
    "type": "pull_request",
    "pull_request": 4133,
    "label": "clemahieu:election_occupancy",
    "created_at": "2023-02-15T18:23:49Z",
    "built_at": "2023-02-20T15:16:51Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:862bd461b9569f8bb995c64371bd5cb44fcd4b5e"
  },
  {
    "hash": "862e39c9792bd8724c7f113ed97806fa464e47ff",
    "type": "pull_request",
    "pull_request": 4383,
    "label": "dsiganos:fix_bootstrap_unit_tests",
    "created_at": "2024-01-21T13:11:59Z",
    "built_at": "2024-01-26T04:59:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:862e39c9792bd8724c7f113ed97806fa464e47ff",
    "build_started_at": "2024-01-26T04:21:05Z",
    "run_id": "7663924228"
  },
  {
    "hash": "86406acb7d87b349d409e31d2cf0707ffd9e9974",
    "type": "pull_request",
    "title": "Redesign the priority scheduler to maintain a 1-to-1 link with running elections",
    "author": "clemahieu",
    "body": "This change appropriately prioritises elections by bucket and then by LRU account. Overfilled buckets have the lowest priority block election cancelled and rolled back.",
    "draft": true,
    "pull_request": 4593,
    "label": "clemahieu:priority_limiter",
    "created_at": "2024-04-30T12:53:50Z",
    "built_at": "2024-05-01T12:13:02Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:86406acb7d87b349d409e31d2cf0707ffd9e9974",
    "build_started_at": "2024-05-01T11:45:05Z",
    "run_id": "8908905981"
  },
  {
    "hash": "864177f08ad806df3278810055be92c0976fa223",
    "type": "pull_request",
    "title": "Add ability for channels to pause/resume processing of incoming messages",
    "author": "clemahieu",
    "body": "This is a follow on to PR https://github.com/nanocurrency/nano-node/pull/4609 and responds to the fair queue for a channel being full by pausing incoming message processing for the channel.\r\n\r\nPausing incoming message handling will cause TCP flow control to back up to the sender and limit incoming data.",
    "draft": false,
    "pull_request": 4612,
    "label": "clemahieu:pause_channel",
    "created_at": "2024-05-10T11:32:25Z",
    "built_at": "2024-05-11T15:05:53Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:864177f08ad806df3278810055be92c0976fa223",
    "build_started_at": "2024-05-11T14:39:03Z",
    "run_id": "9044431836"
  },
  {
    "hash": "86438ddb125036cb7fd6cf025d597f26b23fe201",
    "type": "commit",
    "title": "Fix and re-enable unit test rpc.wallet_history (#4552)\n\nIt appears that the problem was that a timestamp was checked for exactness\r\ninstead of checking for a time range.",
    "pull_request": "4552",
    "created_at": "2024-04-12T15:26:00Z",
    "built_at": "2024-04-12T15:54:34Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:86438ddb125036cb7fd6cf025d597f26b23fe201",
    "build_started_at": "2024-04-12T15:29:09Z",
    "run_id": "8664428577"
  },
  {
    "hash": "864dbf17ca0067caea564a273a42f218047bba35",
    "type": "pull_request",
    "title": "Cementing fixes",
    "author": "pwojcikdev",
    "body": "Builds on https://github.com/nanocurrency/nano-node/pull/4720",
    "draft": false,
    "pull_request": 4722,
    "label": "pwojcikdev:fix-cementing",
    "created_at": "2024-09-05T15:25:12Z",
    "built_at": "2024-09-05T18:14:26Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:864dbf17ca0067caea564a273a42f218047bba35",
    "build_started_at": "2024-09-05T17:44:33Z",
    "run_id": "10725484071"
  },
  {
    "hash": "865c79fc4546c65023980eb7f9615b8a8723e76a",
    "type": "pull_request",
    "pull_request": 4131,
    "label": "simpago:clear-unchecked-table",
    "created_at": "2023-02-15T13:24:53Z",
    "built_at": "2023-04-25T21:24:22Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:865c79fc4546c65023980eb7f9615b8a8723e76a"
  },
  {
    "hash": "8666d9b6246f7fb20d3260a205cbce4633f43d36",
    "type": "pull_request",
    "title": "Limit legacy bootstrap serving threads",
    "author": "pwojcikdev",
    "body": null,
    "draft": false,
    "pull_request": 4668,
    "label": "pwojcikdev:reduce-legacy-bootstrap-serving",
    "created_at": "2024-07-04T13:48:21Z",
    "built_at": "2024-07-04T14:29:17Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8666d9b6246f7fb20d3260a205cbce4633f43d36",
    "build_started_at": "2024-07-04T14:00:34Z",
    "run_id": "9795305588"
  },
  {
    "hash": "86a2d7d8452b94948076df7ee0b90f0da732b720",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge socket connected & accepted events",
    "pull_request": "N/A",
    "created_at": "2024-04-29T17:16:57Z",
    "built_at": "2024-05-04T11:42:48Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:86a2d7d8452b94948076df7ee0b90f0da732b720",
    "build_started_at": "2024-05-04T09:36:39Z",
    "run_id": "8950103273"
  },
  {
    "hash": "86c0cdfb433f86068ba23ef07f2733212dfd83d4",
    "type": "commit",
    "created_at": "2024-01-07T23:58:53Z",
    "built_at": "2024-01-10T12:00:24Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:86c0cdfb433f86068ba23ef07f2733212dfd83d4",
    "build_started_at": "2024-01-10T11:27:54Z",
    "run_id": "7474237280"
  },
  {
    "hash": "86cabc5b36d517fb2a9223779a140fb5da06b9ee",
    "type": "pull_request",
    "pull_request": 2416,
    "label": "guilhermelawless:network/vote-flooding-disable-until-bootstrap-cemented",
    "created_at": "2019-11-25T11:03:53Z",
    "built_at": "2023-02-05T01:22:46Z",
    "build_status": "fail",
    "docker_tag": ""
  },
  {
    "hash": "86e311a32986420ed8bc70f9ccf3a8040f8b7ad2",
    "type": "pull_request",
    "pull_request": 4309,
    "label": "RickiNano:use-c++-std-filesystem",
    "created_at": "2023-10-08T18:57:37Z",
    "built_at": "2023-10-08T19:50:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:86e311a32986420ed8bc70f9ccf3a8040f8b7ad2"
  },
  {
    "hash": "86e51987107ed952a567ec290207f8bade2c9c19",
    "type": "pull_request",
    "title": "Move write database queue",
    "body": "This renames write_database_queue to write_queue and moves the class into the nano::store library. It also moves the object from nano::node to nano::store::component.\r\n\r\nThis is a more natural place for this class/object to be placed and also preps for confirming_set to be moved on to the ledger class which would otherwise have a cyclic dependency secure -> store -> node -> secure",
    "draft": false,
    "pull_request": 4535,
    "label": "clemahieu:move_write_database_queue",
    "created_at": "2024-04-04T11:07:35Z",
    "built_at": "2024-04-04T11:29:39Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-04-04T11:07:55Z",
    "run_id": "8553618594"
  },
  {
    "hash": "87235d757f6fa345c9f4a046856bc87d90cfce6f",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Stats logging (#4596)\n\n* Environment variable helpers\r\n\r\n* Stats & counters logging",
    "pull_request": "4596",
    "created_at": "2024-05-03T10:21:16Z",
    "built_at": "2024-05-03T11:00:10Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:87235d757f6fa345c9f4a046856bc87d90cfce6f",
    "build_started_at": "2024-05-03T10:21:24Z",
    "run_id": "8937672361"
  },
  {
    "hash": "873db29711336f3b712703651b93b457bb9a045d",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Incremental backoff for `local_block_broadcaster` (#4662)\n\n* Backoff for block broadcasting interval\r\n\r\n* Listen for cemented event\r\n\r\n* Cleanup rework\r\n\r\n* Unique pointer\r\n\r\n* Config\r\n\r\n* Logging\r\n\r\n* Tests\r\n\r\n* Fix modification of multi-index iterators",
    "pull_request": "4662",
    "created_at": "2024-07-03T09:36:38Z",
    "built_at": "2024-07-03T10:05:27Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:873db29711336f3b712703651b93b457bb9a045d",
    "build_started_at": "2024-07-03T09:38:40Z",
    "run_id": "9775497485"
  },
  {
    "hash": "876c91b3eadbc8bac02129ae809ceead8c4fe345",
    "type": "commit",
    "created_at": "2023-11-27T14:37:53Z",
    "built_at": "2023-12-03T17:14:36Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:876c91b3eadbc8bac02129ae809ceead8c4fe345",
    "build_started_at": "2023-12-03T16:39:43Z",
    "run_id": "7078113612"
  },
  {
    "hash": "87aeef274d9bfa3c464d5240b493b75e72d7c572",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Move to `rate_limiting.hpp`",
    "pull_request": "N/A",
    "created_at": "2024-09-09T18:42:15Z",
    "built_at": "2024-09-17T11:25:47Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:87aeef274d9bfa3c464d5240b493b75e72d7c572",
    "build_started_at": "2024-09-17T09:35:37Z",
    "run_id": "10901646279"
  },
  {
    "hash": "87b616cb60fbe147e14330a65fb781a715766c71",
    "type": "pull_request",
    "pull_request": 4427,
    "label": "dsiganos:fix_beta_genesis_check",
    "created_at": "2024-02-11T15:16:34Z",
    "built_at": "2024-02-11T15:52:04Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:87b616cb60fbe147e14330a65fb781a715766c71",
    "build_started_at": "2024-02-11T15:24:38Z",
    "run_id": "7862932128"
  },
  {
    "hash": "87e7d4d7849799e2d05865910c9e13fb6c40d13d",
    "type": "commit",
    "created_at": "2024-01-19T17:54:33Z",
    "built_at": "2024-01-19T18:20:32Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:87e7d4d7849799e2d05865910c9e13fb6c40d13d",
    "build_started_at": "2024-01-19T17:55:24Z",
    "run_id": "7587393795"
  },
  {
    "hash": "87f61d83821f324eddcde1ea906a6fc287991a1b",
    "type": "commit",
    "created_at": "2023-03-05T15:19:47Z",
    "built_at": "2023-03-15T03:54:40Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:87f61d83821f324eddcde1ea906a6fc287991a1b"
  },
  {
    "hash": "881adfdd53a748f87481cd622cf28c00b569278c",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Enum utils (#4601)\n\n* Move to `enum_utils` header\r\n\r\n* Add `enum_cast` helper\r\n\r\n* Rename to `enum_parse`\r\n\r\n* Add `ignore_reserved` flag\r\n\r\n* Enum name helper\r\n\r\n* Namespace\r\n\r\n* Convert usages\r\n\r\n* Simplify `enum_util::values ()`\r\n\r\n* Parsing\r\n\r\n* Enum casting\r\n\r\n* Tests\r\n\r\n* Naming consistency\r\n\r\n* Fix",
    "pull_request": "4601",
    "created_at": "2024-05-07T07:56:26Z",
    "built_at": "2024-05-07T09:03:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:881adfdd53a748f87481cd622cf28c00b569278c",
    "build_started_at": "2024-05-07T07:57:36Z",
    "run_id": "8982292665"
  },
  {
    "hash": "88465ac96934ab6ed3d94710851d97e19b3f4fe6",
    "type": "pull_request",
    "title": "Bounded backlog",
    "author": "pwojcikdev",
    "body": "This is ongoing work for bounded backlog. This limits the number of unconfirmed blocks that the node needs to store. The implementation of this mechanism is nontrivial because the node relies heavily on the fact that unconfirmed blocks are present in the ledger.\r\n\r\nDepends on PRs:\r\nhttps://github.com/nanocurrency/nano-node/pull/4758",
    "draft": false,
    "pull_request": 4787,
    "label": "pwojcikdev:bounded-backlog-pr",
    "created_at": "2024-11-18T20:36:19Z",
    "built_at": "2024-11-28T21:46:00Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:88465ac96934ab6ed3d94710851d97e19b3f4fe6",
    "build_started_at": "2024-11-28T21:15:56Z",
    "run_id": "12075519258"
  },
  {
    "hash": "885447fedb8f08e1a4d2d7175aa1b0b4c7290e8c",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Use channel as telemetry data key (#4697)\n\n* Use channel as telemetry data key\r\n\r\n* Erase dead channels",
    "pull_request": "4697",
    "created_at": "2024-10-15T11:03:38Z",
    "built_at": "2024-10-15T11:48:31Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:885447fedb8f08e1a4d2d7175aa1b0b4c7290e8c",
    "build_started_at": "2024-10-15T11:17:19Z",
    "run_id": "11344936486"
  },
  {
    "hash": "88659b513832d647fa18aa64ab40e31209565850",
    "type": "pull_request",
    "title": "QT wallet: proper display of state open block in GUI history",
    "author": "SergiySW",
    "body": "State open block should be marked as \"Receive\".\r\nFor open blocks `previous` == 0 and function `nano::ledger_set_any::block_balance ()` will return `std::nullopt` resulting in displaying \"Unknown\" block type.",
    "draft": false,
    "pull_request": 4744,
    "label": "SergiySW:qt_state_open",
    "created_at": "2024-10-06T20:20:47Z",
    "built_at": null,
    "build_status": "building",
    "docker_tag": null,
    "build_started_at": "2024-10-27T16:26:12Z",
    "run_id": null
  },
  {
    "hash": "889c4cd1975404fc3ceb724aa312985ba409249d",
    "type": "pull_request",
    "pull_request": 4110,
    "label": "dsiganos:fix_udp_max_connection_counting",
    "created_at": "2023-02-08T17:18:24Z",
    "built_at": "2023-02-08T17:58:13Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:889c4cd1975404fc3ceb724aa312985ba409249d"
  },
  {
    "hash": "88b28480541736938d62f33a34b619d3150cfd07",
    "type": "pull_request",
    "pull_request": 4145,
    "label": "JerzyStanislawski:preconfigured_peers_with_port",
    "created_at": "2023-02-21T14:59:50Z",
    "built_at": "2023-02-21T15:46:10Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:88b28480541736938d62f33a34b619d3150cfd07"
  },
  {
    "hash": "88d27d8ef89dede48d0b0ae1e926aaa390b45f1f",
    "type": "commit",
    "created_at": "2024-03-18T19:18:05Z",
    "built_at": "2024-03-18T19:53:13Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:88d27d8ef89dede48d0b0ae1e926aaa390b45f1f",
    "build_started_at": "2024-03-18T19:20:13Z",
    "run_id": "8332424212"
  },
  {
    "hash": "8913d6645fa57fd4d8af78d9f7c479314237af92",
    "type": "pull_request",
    "pull_request": 4471,
    "label": "pwojcikdev:vote-processor-tiers",
    "created_at": "2024-03-08T11:10:27Z",
    "built_at": "2024-03-09T11:19:15Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-09T10:57:57Z",
    "run_id": "8214034144"
  },
  {
    "hash": "89317dc542a10fc1cb3f0f2fa0f826be91578c7f",
    "type": "commit",
    "created_at": "2024-03-16T15:44:24Z",
    "built_at": "2024-03-16T16:17:57Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:89317dc542a10fc1cb3f0f2fa0f826be91578c7f",
    "build_started_at": "2024-03-16T15:50:37Z",
    "run_id": "8308846648"
  },
  {
    "hash": "894d0bbee536fa2f0ca2300bae92578f1a0b7b62",
    "type": "pull_request",
    "title": "Stop using boost::asio::ip::udp::endpoint",
    "author": "dsiganos",
    "body": null,
    "draft": false,
    "pull_request": 4585,
    "label": "dsiganos:remove_udp_endpoint_2",
    "created_at": "2024-04-26T16:06:51Z",
    "built_at": "2024-04-26T16:46:27Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:894d0bbee536fa2f0ca2300bae92578f1a0b7b62",
    "build_started_at": "2024-04-26T16:20:43Z",
    "run_id": "8851264948"
  },
  {
    "hash": "896b76f75c1d15136d643d7fceea1d40553757b0",
    "type": "pull_request",
    "pull_request": 4462,
    "label": "pwojcikdev:block-processor-start-stop",
    "created_at": "2024-03-06T11:51:37Z",
    "built_at": "2024-03-06T21:25:38Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:896b76f75c1d15136d643d7fceea1d40553757b0",
    "build_started_at": "2024-03-06T21:00:01Z",
    "run_id": "8178674422"
  },
  {
    "hash": "899fb12e743663aec46d2fd2ee7251797891313b",
    "type": "pull_request",
    "title": "Add flamegraph generation in CI build",
    "author": "clemahieu",
    "body": "Flamegraphs are attached to the workflow build as artifacts.\r\n\r\nNew tests can be added by creating a new gtest in slow_test.\r\nTests like TEST (flamegraph, testname_x) will be executed if testname_x is added to the flamegraph.yml file test matrix.",
    "draft": false,
    "pull_request": 4638,
    "label": "clemahieu:flamegraph_test",
    "created_at": "2024-05-23T01:21:53Z",
    "built_at": "2024-05-23T13:28:04Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:899fb12e743663aec46d2fd2ee7251797891313b",
    "build_started_at": "2024-05-23T12:59:16Z",
    "run_id": "9208443812"
  },
  {
    "hash": "89aa09daab4b686483c027c38aa365deb30e641a",
    "type": "pull_request",
    "pull_request": 4158,
    "label": "clemahieu:bootstrap_ascending_client",
    "created_at": "2023-02-27T20:15:37Z",
    "built_at": "2023-02-28T17:06:10Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:89aa09daab4b686483c027c38aa365deb30e641a"
  },
  {
    "hash": "89baf79cb1bbb65d3b5fea1595d9f1aebef1a2f1",
    "type": "commit",
    "created_at": "2023-03-07T21:15:33Z",
    "built_at": "2023-03-08T17:29:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:89baf79cb1bbb65d3b5fea1595d9f1aebef1a2f1"
  },
  {
    "hash": "89c461c6b955b41f96eea681e8f1bf7870434f4b",
    "type": "pull_request",
    "pull_request": 4133,
    "label": "clemahieu:election_occupancy",
    "created_at": "2023-02-15T18:23:49Z",
    "built_at": "2023-02-16T11:48:50Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:89c461c6b955b41f96eea681e8f1bf7870434f4b"
  },
  {
    "hash": "89f1022430491b51863fc12695a501da03caa918",
    "type": "commit",
    "created_at": "2023-02-01T12:06:26Z",
    "built_at": "2023-02-06T21:12:57Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:89f1022430491b51863fc12695a501da03caa918"
  },
  {
    "hash": "8a3c7ce4954b395342f52356cbcb25111edb7e2f",
    "type": "pull_request",
    "title": "Prettify ledger constants",
    "author": "pwojcikdev",
    "body": "The previous formatting of ledger constants class made it unnecessarily hard to read.",
    "draft": false,
    "pull_request": 4793,
    "label": "pwojcikdev:prettify-ledger-constants",
    "created_at": "2024-11-25T18:32:54Z",
    "built_at": "2024-11-25T19:08:40Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-11-25T18:39:46Z",
    "run_id": "12016626748"
  },
  {
    "hash": "8a70ba77bd705a2e1582822bf441532e06bdf74c",
    "type": "pull_request",
    "title": "Bundle ledger transaction and write guard into a single object",
    "author": "pwojcikdev",
    "body": "This change ensures that ledger write transactions and corresponding write queue guards are always acquired and released together. This in turn allows implementing `.refresh_if_needed ()` function that handles both transaction and guard, which simplifies bounding of write transaction lifetimes.",
    "draft": false,
    "pull_request": 4653,
    "label": "pwojcikdev:transaction-write-queue-wrapper",
    "created_at": "2024-06-18T15:57:29Z",
    "built_at": "2024-06-18T16:40:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8a70ba77bd705a2e1582822bf441532e06bdf74c",
    "build_started_at": "2024-06-18T16:14:35Z",
    "run_id": "9568550624"
  },
  {
    "hash": "8a76a9571ff8050e7ed687a271520e7b11d3cb63",
    "type": "pull_request",
    "pull_request": 4322,
    "label": "clemahieu:vote_generator_locking",
    "created_at": "2023-11-01T12:29:34Z",
    "built_at": "2023-11-01T13:32:13Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8a76a9571ff8050e7ed687a271520e7b11d3cb63",
    "build_started_at": "2023-11-01T12:41:42Z",
    "run_id": "6719776352"
  },
  {
    "hash": "8a968e9d0540eaafaace2d8e7917c4b77d25c26c",
    "type": "pull_request",
    "pull_request": 4424,
    "label": "pwojcikdev:blockprocessor-context",
    "created_at": "2024-02-08T18:03:48Z",
    "built_at": "2024-02-09T17:40:36Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8a968e9d0540eaafaace2d8e7917c4b77d25c26c",
    "build_started_at": "2024-02-09T17:11:24Z",
    "run_id": "7847310010"
  },
  {
    "hash": "8aa33e0f3da34f5f309f9fe997f216566c14b87f",
    "type": "pull_request",
    "pull_request": 3023,
    "label": "cryptocode:payment-notification",
    "created_at": "2020-10-26T18:33:39Z",
    "built_at": null,
    "build_status": "fail",
    "docker_tag": null
  },
  {
    "hash": "8aad833b44337123adf2118928c1b3f3af49c783",
    "type": "pull_request",
    "title": "Wrap tags generated on custom branches in underscores",
    "author": "pwojcikdev",
    "body": null,
    "draft": false,
    "pull_request": 4659,
    "label": "pwojcikdev:generate-next-git-tag-underscores",
    "created_at": "2024-06-26T13:47:12Z",
    "built_at": "2024-06-26T14:17:40Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8aad833b44337123adf2118928c1b3f3af49c783",
    "build_started_at": "2024-06-26T13:51:20Z",
    "run_id": "9680942880"
  },
  {
    "hash": "8ab2228173dda71a1dd5fc4bc19325560fd10b56",
    "type": "pull_request",
    "title": "Drop existing rep_weights table before migrating",
    "author": "RickiNano",
    "body": "Drops the existing rep_weights table before running the migrations to avoid faulty rep weights if migration is aborted and run again",
    "draft": false,
    "pull_request": 4712,
    "label": "RickiNano:drop-existing-rep-weight",
    "created_at": "2024-08-22T09:16:05Z",
    "built_at": "2024-08-22T09:53:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8ab2228173dda71a1dd5fc4bc19325560fd10b56",
    "build_started_at": "2024-08-22T09:25:27Z",
    "run_id": "10505436052"
  },
  {
    "hash": "8abad9b259c1d253e5ef44904eaea7112017f96d",
    "type": "pull_request",
    "pull_request": 4318,
    "label": "clemahieu:election_state_mutex",
    "created_at": "2023-10-26T14:21:12Z",
    "built_at": "2023-10-31T19:03:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8abad9b259c1d253e5ef44904eaea7112017f96d",
    "build_started_at": "2023-10-31T18:21:08Z",
    "run_id": "6710853168"
  },
  {
    "hash": "8ae15f305e081df337059c485c548906947fe4e0",
    "type": "pull_request",
    "pull_request": 4404,
    "label": "clemahieu:block_processor_flush_remove",
    "created_at": "2024-01-26T18:37:48Z",
    "built_at": "2024-01-29T16:10:03Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8ae15f305e081df337059c485c548906947fe4e0",
    "build_started_at": "2024-01-29T15:44:19Z",
    "run_id": "7698667810"
  },
  {
    "hash": "8ae67c09a8ee1049e6c63df3ef31b48b969c40db",
    "type": "pull_request",
    "pull_request": 4454,
    "label": "pwojcikdev:block-broadcaster-2",
    "created_at": "2024-03-04T16:29:07Z",
    "built_at": "2024-03-04T16:56:03Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8ae67c09a8ee1049e6c63df3ef31b48b969c40db",
    "build_started_at": "2024-03-04T16:29:33Z",
    "run_id": "8143628547"
  },
  {
    "hash": "8b045017cb8b6d4d4c10ad9e7f8b77b71f3da615",
    "type": "pull_request",
    "title": "Fix build errors converting and comparing to int.",
    "author": "clemahieu",
    "body": null,
    "draft": false,
    "pull_request": 4633,
    "label": "clemahieu:test_build_fix",
    "created_at": "2024-05-21T13:18:08Z",
    "built_at": "2024-05-21T13:50:24Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8b045017cb8b6d4d4c10ad9e7f8b77b71f3da615",
    "build_started_at": "2024-05-21T13:23:42Z",
    "run_id": "9175472916"
  },
  {
    "hash": "8b097a3eff55f8f5a10768f9249a58d64203c245",
    "type": "pull_request",
    "title": "Convert store iterators to variants rather than using polymorphism.",
    "author": "clemahieu",
    "body": "This converts the store iterators from version that use polymorphism to using std::variant.\r\n\r\nThe primary drivers for this change is to simplify and allow more complex iterators to be created where this was previously fairly difficult to do.\r\n\r\nThe iterators are separated in the 3 parts:\r\n- The base database iterators LMDB/RocksDB that use the library's native data type, MDB_val/Slice.\r\n- A variant database iterator that can hold any of the raw database iterators and adapts the native database type to std::span<uint8_t>\r\n- A strong-typed database iterator that mirrors existing iterator behavior with strong typing for key/value pairs.\r\n\r\nThe iterators are bi-directional with a sentinel value to signify end of iteration. The iterators are also circular so after reaching the end-sentinel value, further incrementing will wrap around to the beginning, or decrementing will position the iterator at the last key/value.\r\n\r\nUsing std::variant also eliminates heap allocations when constructing iterators which can improve performance in some circumstances.",
    "draft": false,
    "pull_request": 4759,
    "label": "clemahieu:store_iterator_cleanup",
    "created_at": "2024-10-20T19:24:20Z",
    "built_at": "2024-10-27T00:27:34Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8b097a3eff55f8f5a10768f9249a58d64203c245",
    "build_started_at": "2024-10-26T23:55:23Z",
    "run_id": "11535877220"
  },
  {
    "hash": "8b6821625dd19c952e5487d5a96e1de80c791efb",
    "type": "commit",
    "created_at": "2023-02-09T11:05:17Z",
    "built_at": "2023-02-09T11:47:38Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8b6821625dd19c952e5487d5a96e1de80c791efb"
  },
  {
    "hash": "8b71a84ab3d467e270811b237013cb41aee63962",
    "type": "pull_request",
    "pull_request": 4386,
    "label": "dsiganos:fix_confirm_frontier",
    "created_at": "2024-01-22T14:52:09Z",
    "built_at": "2024-01-22T15:28:27Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8b71a84ab3d467e270811b237013cb41aee63962",
    "build_started_at": "2024-01-22T15:02:26Z",
    "run_id": "7613125908"
  },
  {
    "hash": "8b8ee075e2cff195a2305228b432ed6f58b6a0ae",
    "type": "pull_request",
    "pull_request": 4468,
    "label": "clemahieu:block_ledger_header_reduction",
    "created_at": "2024-03-07T09:52:14Z",
    "built_at": "2024-03-07T12:11:16Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-07T11:52:34Z",
    "run_id": "8187641967"
  },
  {
    "hash": "8b924a9045e430cb613afccc7ece451f9e0baead",
    "type": "pull_request",
    "pull_request": 4322,
    "label": "clemahieu:vote_generator_locking",
    "created_at": "2023-11-01T12:29:34Z",
    "built_at": "2023-11-05T17:32:24Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8b924a9045e430cb613afccc7ece451f9e0baead",
    "build_started_at": "2023-11-05T16:38:26Z",
    "run_id": "6762529028"
  },
  {
    "hash": "8b9c36a46f18c71acf43ad4577505b27ba25f17d",
    "type": "pull_request",
    "pull_request": 4523,
    "label": "pwojcikdev:networking-fixes/tcp-listener-2",
    "created_at": "2024-03-25T16:06:32Z",
    "built_at": "2024-03-25T16:46:37Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8b9c36a46f18c71acf43ad4577505b27ba25f17d",
    "build_started_at": "2024-03-25T16:18:30Z",
    "run_id": "8423384223"
  },
  {
    "hash": "8ba2ba9f392bc8e6baa680234271164970d9d9e1",
    "type": "pull_request",
    "pull_request": 4469,
    "label": "RickiNano:threaded-aggregator",
    "created_at": "2024-03-07T16:38:08Z",
    "built_at": "2024-03-08T20:35:07Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8ba2ba9f392bc8e6baa680234271164970d9d9e1",
    "build_started_at": "2024-03-08T20:07:37Z",
    "run_id": "8208472248"
  },
  {
    "hash": "8bcd91352c045905bfca612faa48897158147edf",
    "type": "pull_request",
    "title": "Election age statistics",
    "body": "This PR adds information to the `election_statistics` RPC call about the maximum and average age of elections in AEC .\r\nThis will help identify long running elections.\r\nI have also updated the unit test to create an election\r\n\r\nRequest:\r\n```\r\n{\r\n  \"action\": \"election_statistics\"\r\n}\r\n```\r\nResponse example:\r\n```\r\n{\r\n    \"normal\": \"200\",\r\n    \"hinted\": \"22\",\r\n    \"optimistic\": \"425\",\r\n    \"total\": \"647\",\r\n    \"aec_utilization_percentage\": \"8.09\",\r\n    \"max_election_age\": \"6\",\r\n    \"average_election_age\": \"2.46\"\r\n}\r\n```",
    "draft": false,
    "pull_request": 4537,
    "label": "RickiNano:election-age-statistics",
    "created_at": "2024-04-04T19:09:27Z",
    "built_at": "2024-04-04T19:37:31Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8bcd91352c045905bfca612faa48897158147edf",
    "build_started_at": "2024-04-04T19:11:42Z",
    "run_id": "8560042655"
  },
  {
    "hash": "8bd901b5a758ed0bb6591c8d1ca07b9246ca99b4",
    "type": "pull_request",
    "title": "QT wallet: proper display of state open block in GUI history",
    "author": "SergiySW",
    "body": "State open block should be marked as \"Receive\".\r\nFor open blocks `previous` == 0 and function `nano::ledger_set_any::block_balance ()` will return `std::nullopt` resulting in displaying \"Unknown\" block type.",
    "draft": false,
    "pull_request": 4744,
    "label": "SergiySW:qt_state_open",
    "created_at": "2024-10-06T20:20:47Z",
    "built_at": null,
    "build_status": "building",
    "docker_tag": null,
    "build_started_at": "2024-10-27T20:11:14Z",
    "run_id": null
  },
  {
    "hash": "8bfb8af34b2c6c02fdeb9761d286edf2d794ffe4",
    "type": "pull_request",
    "pull_request": 4495,
    "label": "pwojcikdev:networking-fixes-tcp-channels",
    "created_at": "2024-03-16T17:12:37Z",
    "built_at": "2024-03-16T17:51:29Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8bfb8af34b2c6c02fdeb9761d286edf2d794ffe4",
    "build_started_at": "2024-03-16T17:24:19Z",
    "run_id": "8309354419"
  },
  {
    "hash": "8c1493240e667b329e0a9238e5aeaeb7f61df693",
    "type": "pull_request",
    "title": "Add database information to telemetry data",
    "author": "RickiNano",
    "body": "Adds telemetry information about the type of database backend the node is using.\r\nThe telemetry RPC function reports both individual database backend information or consolidated (average). The reported database backend for each node will be either 'RocksDb' , 'LMDB' or \"Unknown\". \r\n'Unknown' is for nodes running v26.1 or earlier that does not send any database information in telemetry data.",
    "draft": true,
    "pull_request": 4675,
    "label": "RickiNano:Telemetry-db-backend",
    "created_at": "2024-07-08T18:09:12Z",
    "built_at": "2024-07-15T19:55:47Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8c1493240e667b329e0a9238e5aeaeb7f61df693",
    "build_started_at": "2024-07-15T19:29:00Z",
    "run_id": "9945447878"
  },
  {
    "hash": "8c1d36bcc387ae6920fa52deca181abcbf910369",
    "type": "pull_request",
    "pull_request": 4348,
    "label": "clemahieu:background_worker",
    "created_at": "2023-12-04T17:01:34Z",
    "built_at": "2023-12-04T17:36:50Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8c1d36bcc387ae6920fa52deca181abcbf910369",
    "build_started_at": "2023-12-04T17:10:37Z",
    "run_id": "7090065105"
  },
  {
    "hash": "8c2e46bc499b215a2481a3ffb1cc9d9257afcbd3",
    "type": "commit",
    "created_at": "2023-02-15T16:03:29Z",
    "built_at": "2023-02-15T16:55:27Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8c2e46bc499b215a2481a3ffb1cc9d9257afcbd3"
  },
  {
    "hash": "8c3cf408603dc85e72cc3b598daaaf8b9922f2c6",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Revert changes to `nano::scheduler::priority::activate`",
    "pull_request": "4636",
    "created_at": "2024-05-21T08:15:48Z",
    "built_at": "2024-05-23T07:48:39Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8c3cf408603dc85e72cc3b598daaaf8b9922f2c6",
    "build_started_at": "2024-05-23T07:11:40Z",
    "run_id": "9203890044"
  },
  {
    "hash": "8c62686e7dda81ea793b8f26f518c0fe1598e230",
    "type": "pull_request",
    "pull_request": 4361,
    "label": "nanocurrency:fix_conflicts_add_two",
    "created_at": "2024-01-15T20:17:00Z",
    "built_at": "2024-01-15T20:46:25Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8c62686e7dda81ea793b8f26f518c0fe1598e230",
    "build_started_at": "2024-01-15T20:21:51Z",
    "run_id": "7533681683"
  },
  {
    "hash": "8c62ca4abe7ea27dc6c0c33ac787d198535f23e7",
    "type": "commit",
    "created_at": "2023-05-17T20:01:02Z",
    "built_at": "2023-05-31T14:10:18Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8c62ca4abe7ea27dc6c0c33ac787d198535f23e7"
  },
  {
    "hash": "8c8a69bf4a109a14ee04f800c4006d1d03505c52",
    "type": "pull_request",
    "title": "Fix correctness, sanity check, and resolve shutdown issue.",
    "author": "clemahieu",
    "body": "There was a missing mutex lock entries_mutex in unchecked_map::collect_container_info.\r\n\r\nSanity check the equality of the iterator qualified root to the item searched for.\r\n\r\nConsider stopped flag when wait-looping. Use condition_variable::wait rather than this_thread::sleep_for",
    "draft": false,
    "pull_request": 4719,
    "label": "clemahieu:tsan_fixes",
    "created_at": "2024-09-03T02:23:56Z",
    "built_at": "2024-09-03T11:14:49Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8c8a69bf4a109a14ee04f800c4006d1d03505c52",
    "build_started_at": "2024-09-03T10:47:28Z",
    "run_id": "10681451014"
  },
  {
    "hash": "8c9e97f41a9d3aa93293facb08cd24a175c44da9",
    "type": "commit",
    "created_at": "2024-03-07T13:10:29Z",
    "built_at": "2024-03-07T14:11:30Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8c9e97f41a9d3aa93293facb08cd24a175c44da9",
    "build_started_at": "2024-03-07T13:21:35Z",
    "run_id": "8188836572"
  },
  {
    "hash": "8cb8fbfbb0b36b0c700205a3c1f91b824fbe2790",
    "type": "pull_request",
    "pull_request": 4381,
    "label": "gr0vity-dev:prs/refactor_tag_generation",
    "created_at": "2024-01-21T10:15:26Z",
    "built_at": "2024-03-14T16:57:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8cb8fbfbb0b36b0c700205a3c1f91b824fbe2790",
    "build_started_at": "2024-03-14T16:29:57Z",
    "run_id": "8284072067"
  },
  {
    "hash": "8cc171c94fcf1675ef7b0cdf9cba2747b9099a4d",
    "type": "pull_request",
    "pull_request": 4332,
    "label": "clemahieu:ledger_reopen",
    "created_at": "2023-11-06T18:00:54Z",
    "built_at": "2023-11-06T18:52:13Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8cc171c94fcf1675ef7b0cdf9cba2747b9099a4d",
    "build_started_at": "2023-11-06T18:10:07Z",
    "run_id": "6774783098"
  },
  {
    "hash": "8cc306dd85df43ae0c7845786496c405f9be5f8d",
    "type": "pull_request",
    "pull_request": 3400,
    "label": "nanocurrency:use-ledger-walker-in-confirmation-height-processor",
    "created_at": "2021-07-26T17:13:46Z",
    "built_at": "2023-02-05T03:57:16Z",
    "build_status": "fail",
    "docker_tag": ""
  },
  {
    "hash": "8cc79bf5e4160d2fc15036c7a83209f7ec4a3f90",
    "type": "pull_request",
    "title": "Update miniupnp to 2.3.6",
    "author": "clemahieu",
    "body": "Version 2.3.7 has a slight API change and 2.3.6 is very recent. Previous version 2.2.3 was from 2021.",
    "draft": false,
    "pull_request": 4700,
    "label": "clemahieu:miniupnp_2_3_6",
    "created_at": "2024-08-11T17:31:41Z",
    "built_at": "2024-08-11T18:02:20Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8cc79bf5e4160d2fc15036c7a83209f7ec4a3f90",
    "build_started_at": "2024-08-11T17:35:53Z",
    "run_id": "10341595190"
  },
  {
    "hash": "8cdaad74b0aea1d65b8dc1fdb11c84cb7ceff09a",
    "type": "pull_request",
    "pull_request": 4167,
    "label": "clemahieu:block_origin_remove",
    "created_at": "2023-03-03T03:40:11Z",
    "built_at": "2023-03-03T18:17:13Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8cdaad74b0aea1d65b8dc1fdb11c84cb7ceff09a"
  },
  {
    "hash": "8cdedc2a4a45b1226a66497b9cd12cb7ac158414",
    "type": "pull_request",
    "title": "Add submodule lmdbxx which is a c++ wrapper for lmdb",
    "author": "clemahieu",
    "body": "This change adds the lmdbxx submodule which is a c++ wrapper for LMDB. https://github.com/hoytech/lmdbxx\r\n\r\nCurrently we're using an amalgamation of direct access to the LMDB C API and some custom c++ wrapping of select portions of functionality.\r\n\r\nMajor motivations for using this library:\r\n- Header-only\r\n- C++17 language support\r\n- Errors are exceptions\r\n- RAII for LMDB resources\r\n- Uses std::string_view for exchanging serialised objects which is compatible with rocksdb::Slice\r\n\r\nThe library has two implementation strategies, a near 1-to-1 wrapping of the C API with exception handling, and full RAII types. Migrating existing code to use the direct API was relatively painless and some of the RAII types can already be used.\r\n\r\nThe primary motivation for the change is to get a clear separation of the lmdb c++ wrapper from node-specific logic. Additionally, this removes the burden of wrapping the C API from the node code.\r\n\r\nThe library itself seems to make good design decisions and is reasonably maintained.\r\n\r\nThere are parts of the library which are not fully complete e.g. ::lmdb::dbi does not fully implement RAII, it is both copyable and doesn't destroy the underlying resources when it goes out of scope. To get full benefits will likely have to upstream some patches which they will hopefully be receptive and responsive to.",
    "draft": false,
    "pull_request": 4724,
    "label": "clemahieu:lmdbxx",
    "created_at": "2024-09-09T19:26:59Z",
    "built_at": "2024-09-09T20:45:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8cdedc2a4a45b1226a66497b9cd12cb7ac158414",
    "build_started_at": "2024-09-09T20:17:16Z",
    "run_id": "10780592325"
  },
  {
    "hash": "8ce6e4a15481bef0b55ed48bad02afc16d883a7d",
    "type": "commit",
    "author": "clemahieu",
    "title": "Move ledger::height on to ledger sets.",
    "pull_request": "4593",
    "created_at": "2024-03-11T22:01:56Z",
    "built_at": "2024-04-30T16:08:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8ce6e4a15481bef0b55ed48bad02afc16d883a7d",
    "build_started_at": "2024-04-30T13:34:48Z",
    "run_id": "8897655667"
  },
  {
    "hash": "8ce9865f3f44ada47f089f3595c989d004d328f5",
    "type": "pull_request",
    "pull_request": 4356,
    "label": "clemahieu:v26_rc1",
    "created_at": "2024-01-09T16:27:04Z",
    "built_at": "2024-01-09T17:11:34Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8ce9865f3f44ada47f089f3595c989d004d328f5",
    "build_started_at": "2024-01-09T16:31:36Z",
    "run_id": "7463983901"
  },
  {
    "hash": "8d08259cbb656db4a538d4076178151381df7b30",
    "type": "pull_request",
    "pull_request": 4443,
    "label": "clemahieu:ledger_process_ptr",
    "created_at": "2024-02-20T18:52:05Z",
    "built_at": "2024-02-22T17:33:16Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8d08259cbb656db4a538d4076178151381df7b30",
    "build_started_at": "2024-02-22T17:04:44Z",
    "run_id": "8008248118"
  },
  {
    "hash": "8d2d4354a046413c17ce30fb2a5055e5690ffc90",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Fix `rep_self_vote` test (#4797)",
    "pull_request": "4797",
    "created_at": "2024-11-30T01:22:45Z",
    "built_at": "2024-11-30T02:12:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8d2d4354a046413c17ce30fb2a5055e5690ffc90",
    "build_started_at": "2024-11-30T01:45:05Z",
    "run_id": "12092532444"
  },
  {
    "hash": "8d6001d73f3a86a9211e10a754ef964ec85e68d1",
    "type": "pull_request",
    "title": "Multithreaded vote processor",
    "author": "pwojcikdev",
    "body": "Changes vote processor to use multiple threads. While processing of votes inside the election container is still done under exclusive lock, this should help amortize time spent checking vote signatures.",
    "draft": false,
    "pull_request": 4600,
    "label": "pwojcikdev:vote-processor-threads",
    "created_at": "2024-05-03T11:36:29Z",
    "built_at": "2024-05-04T22:37:39Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8d6001d73f3a86a9211e10a754ef964ec85e68d1",
    "build_started_at": "2024-05-04T22:11:23Z",
    "run_id": "8953572293"
  },
  {
    "hash": "8d825bc19f911657d0fcef6032e53c0f414a788a",
    "type": "commit",
    "created_at": "2023-02-16T15:15:58Z",
    "built_at": "2023-02-16T16:04:59Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8d825bc19f911657d0fcef6032e53c0f414a788a"
  },
  {
    "hash": "8dad87f9c068ff318dc6f78b6713841bcc5ba2c3",
    "type": "commit",
    "author": "clemahieu",
    "title": "Move block_details and block_sideband implementations to its own file.",
    "pull_request": "N/A",
    "created_at": "2024-10-27T21:01:23Z",
    "built_at": "2024-10-31T05:47:19Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8dad87f9c068ff318dc6f78b6713841bcc5ba2c3",
    "build_started_at": "2024-10-31T03:33:18Z",
    "run_id": "11606560008"
  },
  {
    "hash": "8dcc9c691acfa8e0a6dec6494bcf91ddc2041f89",
    "type": "pull_request",
    "pull_request": 4296,
    "label": "clemahieu:sucessor_table",
    "created_at": "2023-09-26T13:49:26Z",
    "built_at": "2024-02-21T11:00:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8dcc9c691acfa8e0a6dec6494bcf91ddc2041f89",
    "build_started_at": "2024-02-21T10:34:52Z",
    "run_id": "7987665441"
  },
  {
    "hash": "8dd0bf9603103b36edbbdf092d3f9ef517ec5e44",
    "type": "commit",
    "created_at": "2024-03-10T21:01:32Z",
    "built_at": "2024-03-10T21:29:57Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8dd0bf9603103b36edbbdf092d3f9ef517ec5e44",
    "build_started_at": "2024-03-10T21:04:31Z",
    "run_id": "8224756150"
  },
  {
    "hash": "8df88cd904ab408f60399516823cd07c818a027b",
    "type": "pull_request",
    "pull_request": 4211,
    "label": "clemahieu:bootstrap_channel_scoring",
    "created_at": "2023-04-05T17:07:44Z",
    "built_at": "2023-04-14T18:16:30Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8df88cd904ab408f60399516823cd07c818a027b"
  },
  {
    "hash": "8e04eb3ef765b0c5e686682c8d3875b83c085118",
    "type": "pull_request",
    "pull_request": 4417,
    "label": "pwojcikdev:test-node-expire",
    "created_at": "2024-01-31T22:43:57Z",
    "built_at": "2024-01-31T23:13:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8e04eb3ef765b0c5e686682c8d3875b83c085118",
    "build_started_at": "2024-01-31T22:47:59Z",
    "run_id": "7733397762"
  },
  {
    "hash": "8e0ea455adf6c172f821881ea4e99ad9761ce84a",
    "type": "pull_request",
    "pull_request": 4437,
    "label": "dsiganos:cleanup_stop_of_components",
    "created_at": "2024-02-17T15:58:57Z",
    "built_at": "2024-02-17T16:35:31Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8e0ea455adf6c172f821881ea4e99ad9761ce84a",
    "build_started_at": "2024-02-17T16:10:07Z",
    "run_id": "7942823689"
  },
  {
    "hash": "8e402852b42b0c95889cf14118da1fe00a4271c4",
    "type": "commit",
    "created_at": "2023-04-21T01:38:06Z",
    "built_at": "2023-06-21T18:22:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8e402852b42b0c95889cf14118da1fe00a4271c4"
  },
  {
    "hash": "8e78f5d5ff4dcdf4d2e5b2bb90b29ec19cb33a4d",
    "type": "pull_request",
    "title": "Documentation for pending key and info classes and some other improvements whilst investigating",
    "author": "dsiganos",
    "body": "The motivation for this PR was a desire to document pending_key and pending_info classes.\r\nHowever, before I could document them, I needed to understand them.\r\nI created a test case for pending table to help me understand it.\r\nI created a function to print the pending table for learning and debugging purposes.\r\nAnd whilst creating that test case, I noticed that they were refactoring improvements that could be made.",
    "draft": false,
    "pull_request": 4553,
    "label": "dsiganos:pending_key_info_improvements",
    "created_at": "2024-04-12T17:24:23Z",
    "built_at": "2024-04-12T17:53:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8e78f5d5ff4dcdf4d2e5b2bb90b29ec19cb33a4d",
    "build_started_at": "2024-04-12T17:27:05Z",
    "run_id": "8665765611"
  },
  {
    "hash": "8eb54ba01a8623d546dbd446d3a864e769c34d5d",
    "type": "pull_request",
    "title": "Keep io context running when stopping test system",
    "body": "Ideally, asio io context would be running through the test lifetime with each component being responsible for properly canceling and joining its async operations. Getting to this point is going to take a bit more work, but this PR is a step towards this goal. It keeps io loop running when stopping nodes, which in turn allows async handlers to complete. Getting it to work required fixing a few lifetime issues and that's also a part of this PR.\r\n\r\nGetting this merged will unblock https://github.com/nanocurrency/nano-node/pull/4523",
    "draft": false,
    "pull_request": 4525,
    "label": "pwojcikdev:networking-fixes/io-context-stopping",
    "created_at": "2024-03-27T18:00:21Z",
    "built_at": "2024-03-29T10:41:29Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8eb54ba01a8623d546dbd446d3a864e769c34d5d",
    "build_started_at": "2024-03-29T10:16:12Z",
    "run_id": "8479852622"
  },
  {
    "hash": "8ebea1176ec95967a1727de45423cfd825406ea8",
    "type": "commit",
    "created_at": "2023-08-31T09:04:50Z",
    "built_at": "2023-08-31T10:02:02Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8ebea1176ec95967a1727de45423cfd825406ea8"
  },
  {
    "hash": "8f0b2c5fc2445696a5e5476b067b43bd6ce4ea14",
    "type": "commit",
    "author": "clemahieu",
    "title": "Forward declare jsonconfig in messages.hpp",
    "pull_request": "N/A",
    "created_at": "2024-10-27T20:23:51Z",
    "built_at": "2024-10-31T06:13:25Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8f0b2c5fc2445696a5e5476b067b43bd6ce4ea14",
    "build_started_at": "2024-10-31T03:33:18Z",
    "run_id": "11606774781"
  },
  {
    "hash": "8f0c1023fc9b88a5ca629966803147f70b6da2bf",
    "type": "commit",
    "created_at": "2023-04-20T20:37:30Z",
    "built_at": "2023-04-20T21:14:29Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8f0c1023fc9b88a5ca629966803147f70b6da2bf"
  },
  {
    "hash": "8f6860b6dc853c841b0a973fd6362a81b1c7daa8",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Rename stat to `backlog_scan`",
    "pull_request": "N/A",
    "created_at": "2024-10-11T16:46:34Z",
    "built_at": "2024-11-27T04:40:03Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8f6860b6dc853c841b0a973fd6362a81b1c7daa8",
    "build_started_at": "2024-11-27T00:59:54Z",
    "run_id": "12043624875"
  },
  {
    "hash": "8f9536b915f781740347c7cf5afcda18be2698d9",
    "type": "pull_request",
    "pull_request": 4167,
    "label": "clemahieu:block_origin_remove",
    "created_at": "2023-03-03T03:40:11Z",
    "built_at": "2023-03-04T15:46:10Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8f9536b915f781740347c7cf5afcda18be2698d9"
  },
  {
    "hash": "8f97f8782864cbcbf7e59fb5168780a3f0eb671f",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Add `block::clone ()` function",
    "pull_request": "4779",
    "created_at": "2024-11-03T20:14:04Z",
    "built_at": "2024-11-04T22:25:34Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8f97f8782864cbcbf7e59fb5168780a3f0eb671f",
    "build_started_at": "2024-11-04T21:44:22Z",
    "run_id": "11673377713"
  },
  {
    "hash": "8fb8dc2b8faecc06fc1fcd3161aec549a0e2a10d",
    "type": "pull_request",
    "title": "Offload block processor notifications",
    "author": "pwojcikdev",
    "body": "This offloads block processors notifications to be processed on a background thread, so that block processor can continue checking new blocks without waiting for other components to do their work. Checking new blocks requires a write-transaction, while handling `batch_processed` event is done with read-only transaction, both can happen in parallel.\r\n\r\nThe changes here are based on top of https://github.com/nanocurrency/nano-node/pull/4762 which is a necessary prerequisite.",
    "draft": false,
    "pull_request": 4763,
    "label": "pwojcikdev:offload-block-processor-notifications",
    "created_at": "2024-10-22T15:43:39Z",
    "built_at": "2024-10-23T11:12:30Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8fb8dc2b8faecc06fc1fcd3161aec549a0e2a10d",
    "build_started_at": "2024-10-23T10:42:30Z",
    "run_id": "11478231892"
  },
  {
    "hash": "8fc802b7a4d53c8bebed52e5498f3885196aa9f5",
    "type": "pull_request",
    "pull_request": 4446,
    "label": "dsiganos:opencl_refactor_2",
    "created_at": "2024-02-23T14:40:45Z",
    "built_at": "2024-02-23T16:49:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:8fc802b7a4d53c8bebed52e5498f3885196aa9f5",
    "build_started_at": "2024-02-23T16:24:57Z",
    "run_id": "8022093265"
  },
  {
    "hash": "900dda838616af214be00cac37d54e16c732af27",
    "type": "commit",
    "created_at": "2023-02-28T16:16:36Z",
    "built_at": "2023-02-28T17:34:29Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:900dda838616af214be00cac37d54e16c732af27"
  },
  {
    "hash": "902bc4b01ddcdb531cf314888a3b8f63eb605d83",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge pull request #4749 from pwojcikdev/channel-cleanup\n\nChannel class cleanup",
    "pull_request": "4749",
    "created_at": "2024-10-21T13:19:53Z",
    "built_at": "2024-10-21T14:07:48Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:902bc4b01ddcdb531cf314888a3b8f63eb605d83",
    "build_started_at": "2024-10-21T13:38:33Z",
    "run_id": "11441382668"
  },
  {
    "hash": "904a240f6fcf37aca2067d24ca853621291c233f",
    "type": "pull_request",
    "pull_request": 4460,
    "label": "clemahieu:remove_frontier_table_usage",
    "created_at": "2024-03-05T16:34:33Z",
    "built_at": "2024-03-05T17:51:51Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:904a240f6fcf37aca2067d24ca853621291c233f",
    "build_started_at": "2024-03-05T17:27:14Z",
    "run_id": "8160452329"
  },
  {
    "hash": "906cbbf54169ecc2265f7722c106510fa62f2604",
    "type": "pull_request",
    "pull_request": 4267,
    "label": "clemahieu:remove_signature_threads",
    "created_at": "2023-08-22T12:30:21Z",
    "built_at": "2023-11-06T15:09:03Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:906cbbf54169ecc2265f7722c106510fa62f2604",
    "build_started_at": "2023-11-06T14:14:07Z",
    "run_id": "6771961656"
  },
  {
    "hash": "906e99e281ec6668896603b2fa4f78539fdbd5ef",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Fix `epoch_conflict_confirm` test",
    "pull_request": "N/A",
    "created_at": "2024-11-03T17:53:19Z",
    "built_at": "2024-11-04T22:43:27Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:906e99e281ec6668896603b2fa4f78539fdbd5ef",
    "build_started_at": "2024-11-04T21:44:22Z",
    "run_id": "11673622767"
  },
  {
    "hash": "90745c54c5edd6475c90f21331e19f42e46487f2",
    "type": "pull_request",
    "pull_request": 4434,
    "label": "clemahieu:block_processor_container_info",
    "created_at": "2024-02-14T10:03:37Z",
    "built_at": "2024-02-14T10:43:15Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:90745c54c5edd6475c90f21331e19f42e46487f2",
    "build_started_at": "2024-02-14T10:17:22Z",
    "run_id": "7899668504"
  },
  {
    "hash": "909cdfcf3e98df51e8526d8d93164d95fd8b391b",
    "type": "commit",
    "author": "clemahieu",
    "title": "Suppress iterator warning on windows.",
    "pull_request": "4776",
    "created_at": "2024-10-29T04:40:08Z",
    "built_at": "2024-10-31T06:06:12Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-10-31T03:33:18Z",
    "run_id": "11606830434"
  },
  {
    "hash": "90cdfa30f07632f748d82c4b9f30165d47a94e7b",
    "type": "pull_request",
    "pull_request": 4158,
    "label": "clemahieu:bootstrap_ascending_client",
    "created_at": "2023-02-27T20:15:37Z",
    "built_at": "2023-03-01T03:56:04Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:90cdfa30f07632f748d82c4b9f30165d47a94e7b"
  },
  {
    "hash": "90ced1a60cd05abe645440b89ed71eab21551598",
    "type": "pull_request",
    "pull_request": 4287,
    "label": "clemahieu:nano_store_cleanup",
    "created_at": "2023-09-20T13:53:09Z",
    "built_at": "2023-09-20T16:58:10Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:90ced1a60cd05abe645440b89ed71eab21551598"
  },
  {
    "hash": "90d2efb3f191f64f42ef8903fcb8fc14b8025d5e",
    "author": "pwojcikdev",
    "type": "commit",
    "title": "Log capitalization (#4561)",
    "pull_request": "4561",
    "created_at": "2024-04-14T20:07:39Z",
    "built_at": "2024-04-15T05:14:13Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:90d2efb3f191f64f42ef8903fcb8fc14b8025d5e",
    "build_started_at": "2024-04-14T22:18:13Z",
    "run_id": "8683572633"
  },
  {
    "hash": "910ceed162b5d9d2ee05e9b6a23b38005e311772",
    "type": "pull_request",
    "pull_request": 3734,
    "label": "MajorChump:final-votes-json-rpc-new",
    "created_at": "2022-02-11T18:14:54Z",
    "built_at": "2023-02-05T03:58:57Z",
    "build_status": "fail",
    "docker_tag": ""
  },
  {
    "hash": "913beab145701894e65473109fbe6ab5e8c43f9b",
    "type": "pull_request",
    "pull_request": 4204,
    "label": "pwojcikdev:threading-file-split",
    "created_at": "2023-04-03T15:29:55Z",
    "built_at": "2023-04-03T16:06:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:913beab145701894e65473109fbe6ab5e8c43f9b"
  },
  {
    "hash": "914b5721d91177c29e862879cc63ae8cdb2cb4fd",
    "type": "pull_request",
    "pull_request": 4418,
    "label": "pwojcikdev:app-path-override",
    "created_at": "2024-01-31T23:18:05Z",
    "built_at": "2024-01-31T23:55:56Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:914b5721d91177c29e862879cc63ae8cdb2cb4fd",
    "build_started_at": "2024-01-31T23:27:41Z",
    "run_id": "7733757582"
  },
  {
    "hash": "914dc1287186cf5706f7c527e590131f258a8518",
    "type": "pull_request",
    "pull_request": 4367,
    "label": "clemahieu:ipc_server_signals",
    "created_at": "2024-01-18T01:27:55Z",
    "built_at": "2024-01-18T02:47:53Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:914dc1287186cf5706f7c527e590131f258a8518",
    "build_started_at": "2024-01-18T02:18:48Z",
    "run_id": "7564443267"
  },
  {
    "hash": "91815b400f16281cfc841e18ffb0ebb516bd766f",
    "type": "pull_request",
    "pull_request": 4199,
    "label": "thsfs:add_cmake_for_submodules",
    "created_at": "2023-03-22T19:51:02Z",
    "built_at": "2023-03-22T21:19:03Z",
    "build_status": "fail",
    "docker_tag": ""
  },
  {
    "hash": "919cec4ea248cddbc1fbb697a4580db0ab15c0a1",
    "type": "pull_request",
    "title": "Multithreaded vote processor",
    "author": "pwojcikdev",
    "body": "Changes vote processor to use multiple threads. While processing of votes inside the election container is still done under exclusive lock, this should help amortize time spent checking vote signatures.",
    "draft": false,
    "pull_request": 4600,
    "label": "pwojcikdev:vote-processor-threads",
    "created_at": "2024-05-03T11:36:29Z",
    "built_at": "2024-05-04T09:48:24Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:919cec4ea248cddbc1fbb697a4580db0ab15c0a1",
    "build_started_at": "2024-05-04T09:21:56Z",
    "run_id": "8949517908"
  },
  {
    "hash": "91cb94d462a4cede0ddb3103d3ab8a02a648c468",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Further optimize `fair_queue::size ()` calculation",
    "pull_request": "4600",
    "created_at": "2024-05-05T08:50:10Z",
    "built_at": "2024-05-07T09:12:30Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:91cb94d462a4cede0ddb3103d3ab8a02a648c468",
    "build_started_at": "2024-05-07T07:50:20Z",
    "run_id": "8982383052"
  },
  {
    "hash": "91dba8dcf3a537231bc743bac40332213bf1a6ab",
    "type": "commit",
    "created_at": "2023-09-25T13:35:53Z",
    "built_at": "2023-10-09T16:08:57Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:91dba8dcf3a537231bc743bac40332213bf1a6ab"
  },
  {
    "hash": "91dfe35e63ef7663c20d410af1a17129c905430b",
    "type": "pull_request",
    "pull_request": 4383,
    "label": "dsiganos:fix_bootstrap_unit_tests",
    "created_at": "2024-01-21T13:11:59Z",
    "built_at": "2024-01-26T07:22:46Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:91dfe35e63ef7663c20d410af1a17129c905430b",
    "build_started_at": "2024-01-26T06:57:56Z",
    "run_id": "7664940215"
  },
  {
    "hash": "91e3c8e310d69459d65d6208926bbd4c289ab1b4",
    "type": "pull_request",
    "title": "Fair queuing for vote processor",
    "body": "Similar to the way it was done for block processing, this implements fair queue for vote processor. Votes are processed in round robin manner from all peers, with higher tier votes having slightly higher priority.",
    "draft": false,
    "pull_request": 4536,
    "label": "pwojcikdev:fair-queuing/vote-processor",
    "created_at": "2024-04-04T14:58:58Z",
    "built_at": "2024-04-04T16:25:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:91e3c8e310d69459d65d6208926bbd4c289ab1b4",
    "build_started_at": "2024-04-04T15:59:16Z",
    "run_id": "8557675043"
  },
  {
    "hash": "91fc89fdf46b5918cbd490a804736445e83177d7",
    "type": "commit",
    "created_at": "2023-03-20T16:11:08Z",
    "built_at": "2023-03-21T12:12:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:91fc89fdf46b5918cbd490a804736445e83177d7"
  },
  {
    "hash": "91ffaf2d698e31eb70babe7259f10802e71175f3",
    "type": "pull_request",
    "pull_request": 4312,
    "label": "pwojcikdev:hinted-fixing-2-develop",
    "created_at": "2023-10-09T15:17:09Z",
    "built_at": "2023-10-10T00:13:31Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:91ffaf2d698e31eb70babe7259f10802e71175f3"
  },
  {
    "hash": "920f92f70e1c445b415ccba3f060042f1302c06a",
    "type": "pull_request",
    "pull_request": 4442,
    "label": "clemahieu:process_result_enum_rename",
    "created_at": "2024-02-19T22:00:52Z",
    "built_at": "2024-02-19T22:37:00Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:920f92f70e1c445b415ccba3f060042f1302c06a",
    "build_started_at": "2024-02-19T22:11:22Z",
    "run_id": "7965656823"
  },
  {
    "hash": "923377c15b2eb100a38d6c7097f86b5dd5268e16",
    "type": "commit",
    "title": "map::iterator is a dependent typename and needs the typename keyword. (#4545)",
    "pull_request": "4545",
    "created_at": "2024-04-09T17:01:22Z",
    "built_at": "2024-04-09T17:33:38Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:923377c15b2eb100a38d6c7097f86b5dd5268e16",
    "build_started_at": "2024-04-09T17:07:28Z",
    "run_id": "8619600783"
  },
  {
    "hash": "92442c97e19dd8bf7827cc2908f81f90249ba102",
    "type": "pull_request",
    "title": "Update RocksDb to V8.9.2",
    "author": "RickiNano",
    "body": "Updates RocksDb from V8.6.7 to V8.9.2\r\nThis is the last version before a major update (V9.0.0)",
    "draft": false,
    "pull_request": 4652,
    "label": "RickiNano:Update-RocksDb",
    "created_at": "2024-06-18T10:06:51Z",
    "built_at": "2024-06-18T10:37:13Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:92442c97e19dd8bf7827cc2908f81f90249ba102",
    "build_started_at": "2024-06-18T10:09:12Z",
    "run_id": "9563132308"
  },
  {
    "hash": "92504e04f8fb0d813aa777eb88889ac26673594d",
    "type": "commit",
    "title": "Move inactive_node and node_wrapper into their own files",
    "pull_request": "4541",
    "created_at": "2024-04-08T08:53:18Z",
    "built_at": "2024-04-12T11:08:58Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:92504e04f8fb0d813aa777eb88889ac26673594d",
    "build_started_at": "2024-04-12T09:48:30Z",
    "run_id": "8660847175"
  },
  {
    "hash": "926931b7db7c916a4a2fb41615d0d8e83e4f8cf2",
    "type": "pull_request",
    "pull_request": 4182,
    "label": "thsfs:add_bootstrap_ascending_config",
    "created_at": "2023-03-15T01:47:36Z",
    "built_at": "2023-03-31T20:27:32Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:926931b7db7c916a4a2fb41615d0d8e83e4f8cf2"
  },
  {
    "hash": "926be0fd59ae816428c2680dc68f89542f2c116b",
    "type": "pull_request",
    "pull_request": 4128,
    "label": "pwojcikdev:ci/cleanup-unit-test-workflow",
    "created_at": "2023-02-14T21:42:31Z",
    "built_at": "2023-02-14T22:26:10Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:926be0fd59ae816428c2680dc68f89542f2c116b"
  },
  {
    "hash": "92733c21b23baad746c1bfc4fd556d1f565a0f2d",
    "type": "commit",
    "created_at": "2023-03-20T23:08:51Z",
    "built_at": "2023-03-21T00:03:43Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:92733c21b23baad746c1bfc4fd556d1f565a0f2d"
  },
  {
    "hash": "92764ee8a47f39e7d5f4f783f244b90fd7235c8f",
    "type": "commit",
    "author": "clemahieu",
    "title": "During setup, use direct ledger confirmation rather than starting / forcing an election.\n\nTests wanting to test election behaviour directly can start their own elections.\nThough this doesn't fix any specific test problem, this change should be friendly to reducing intermittent test failure due to object interaction effects of running actual network elections.",
    "pull_request": "4605",
    "created_at": "2024-05-06T19:45:16Z",
    "built_at": "2024-05-09T13:55:45Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:92764ee8a47f39e7d5f4f783f244b90fd7235c8f",
    "build_started_at": "2024-05-09T12:44:20Z",
    "run_id": "9018009064"
  },
  {
    "hash": "927e50d43963624845d745aedb1d963425464d68",
    "type": "pull_request",
    "pull_request": 4181,
    "label": "thsfs:add_process_live_dipatcher_class",
    "created_at": "2023-03-10T02:28:40Z",
    "built_at": "2023-03-10T03:23:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:927e50d43963624845d745aedb1d963425464d68"
  },
  {
    "hash": "928044a2f3de1d4cf93a1b81b2b5b6e4a7531d31",
    "type": "pull_request",
    "title": "Fix handling of `gap_previous`",
    "author": "pwojcikdev",
    "body": "It seems that the legacy bootstrap interferes with ascending bootstrap when handling `gap_previous` block result. This modifies the check, so that it's only triggered for live traffic (where it indicates that the account has some recent activity but we're still missing dependencies).",
    "draft": false,
    "pull_request": 4696,
    "label": "pwojcikdev:bootstrap-gap-previous-fix",
    "created_at": "2024-08-07T14:49:04Z",
    "built_at": "2024-08-07T15:15:05Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-08-07T14:52:44Z",
    "run_id": "10286659883"
  },
  {
    "hash": "928f9fa10ba228aa814146b0f9f3ba6e4fe637ba",
    "type": "pull_request",
    "pull_request": 4238,
    "label": "clemahieu:scheduling_limiter",
    "created_at": "2023-05-19T01:07:22Z",
    "built_at": "2023-09-05T12:07:04Z",
    "build_status": "fail",
    "docker_tag": ""
  },
  {
    "hash": "929581855a11ad26c6c4382d4bfc1a2bb26e17cb",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Optimize `block_amount` lookup",
    "pull_request": "4637",
    "created_at": "2024-05-22T20:23:02Z",
    "built_at": "2024-05-23T15:09:48Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:929581855a11ad26c6c4382d4bfc1a2bb26e17cb",
    "build_started_at": "2024-05-23T14:34:02Z",
    "run_id": "9210047091"
  },
  {
    "hash": "929ff5248470f98cdfcea207444dc1bdcdcca3e4",
    "type": "commit",
    "created_at": "2023-05-10T21:19:40Z",
    "built_at": "2023-05-10T21:55:10Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:929ff5248470f98cdfcea207444dc1bdcdcca3e4"
  },
  {
    "hash": "92a84c24a8f04e957e48ce94189ed1ce5de8c086",
    "type": "commit",
    "created_at": "2023-05-04T23:51:21Z",
    "built_at": "2023-05-15T13:53:35Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:92a84c24a8f04e957e48ce94189ed1ce5de8c086"
  },
  {
    "hash": "92ad46ab77b3395c4f4087eca75570554ec9c88a",
    "type": "pull_request",
    "pull_request": 4308,
    "label": "RickiNano:replace-boost-filesystem",
    "created_at": "2023-10-05T10:02:02Z",
    "built_at": "2023-10-05T15:40:11Z",
    "build_status": "fail",
    "docker_tag": ""
  },
  {
    "hash": "92b2f1284330dc1f17e2f583f45766ab5fa4232e",
    "type": "pull_request",
    "title": "CLI option to merge new node config changes into current config",
    "author": "RickiNano",
    "body": "The node config options are constantly changing with each new version of the node. New ones are added and old ones are removed. As a node operator it's not easy to keep your config file up to date because it currently needs to be done manually.\r\nThis PR adds a new CLI option called \"update_config\" that will read the current configuration file and find all non-default values. It will then insert them into a fresh default node configuration, and output it to the console.",
    "draft": false,
    "pull_request": 4521,
    "label": "RickiNano:update-config",
    "created_at": "2024-03-24T14:43:23Z",
    "built_at": "2024-04-17T06:57:34Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:92b2f1284330dc1f17e2f583f45766ab5fa4232e",
    "build_started_at": "2024-04-17T06:31:26Z",
    "run_id": "8717363291"
  },
  {
    "hash": "92b4455c588fb722887e8fdbefde269d6e6e7cb0",
    "type": "commit",
    "title": "Test case for pending table query at different epochs",
    "pull_request": "4553",
    "created_at": "2024-04-12T17:09:27Z",
    "built_at": "2024-04-14T05:18:38Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:92b4455c588fb722887e8fdbefde269d6e6e7cb0",
    "build_started_at": "2024-04-14T02:26:53Z",
    "run_id": "8678404153"
  },
  {
    "hash": "92d3cc462df299bdb081ccc10a2715420e304a16",
    "type": "pull_request",
    "title": "More vote cache optimizations",
    "author": "pwojcikdev",
    "body": "This builds on top of https://github.com/nanocurrency/nano-node/pull/4627 and optimizes insertion of votes into the vote cache and fixes a significant performance regression in `trigger_vote_cache` function.",
    "draft": false,
    "pull_request": 4629,
    "label": "pwojcikdev:vote-cache-fixing-2",
    "created_at": "2024-05-18T20:52:02Z",
    "built_at": "2024-05-18T23:01:36Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:92d3cc462df299bdb081ccc10a2715420e304a16",
    "build_started_at": "2024-05-18T22:33:00Z",
    "run_id": "9143082284"
  },
  {
    "hash": "92df37bc053ade591d24c41de1dd00b2abd8a162",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Avoid long held transactions during backlog population",
    "pull_request": "4713",
    "created_at": "2024-08-23T08:12:40Z",
    "built_at": "2024-08-27T16:19:31Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:92df37bc053ade591d24c41de1dd00b2abd8a162",
    "build_started_at": "2024-08-27T15:42:11Z",
    "run_id": "10581522500"
  },
  {
    "hash": "92e0b64c62755cf1e554d173125937adb14c7120",
    "type": "commit",
    "created_at": "2023-02-14T19:59:00Z",
    "built_at": "2023-02-14T20:45:15Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:92e0b64c62755cf1e554d173125937adb14c7120"
  },
  {
    "hash": "92ef79ed54e50a4db8594649ff0afc308401da95",
    "type": "commit",
    "created_at": "2024-01-24T15:12:25Z",
    "built_at": "2024-01-24T15:43:25Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:92ef79ed54e50a4db8594649ff0afc308401da95",
    "build_started_at": "2024-01-24T15:16:23Z",
    "run_id": "7642283276"
  },
  {
    "hash": "9320e81fb569d74fc36d91548f6747ddc0f89c6f",
    "type": "pull_request",
    "title": "Rocksdb tx cleanup",
    "author": "clemahieu",
    "body": "This cleans up a number of things related to rocksdb transaction handling.\r\n\r\nRemoves write_queue::use_noops. This flag was apparently only used in testing to disable the write queue functionality though no tests seemed impacted by its removal.\r\n\r\nRemoves individual table lock mutexes as the write_queue enforces write transaction serialisation.\r\n\r\nRemoves table locking arguments from write transaction functions since all write transactions are serialised.",
    "draft": false,
    "pull_request": 4737,
    "label": "clemahieu:rocksdb_tx_cleanup",
    "created_at": "2024-09-27T19:04:04Z",
    "built_at": "2024-09-28T13:47:01Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9320e81fb569d74fc36d91548f6747ddc0f89c6f",
    "build_started_at": "2024-09-28T13:18:24Z",
    "run_id": "11084240871"
  },
  {
    "hash": "932372af66b1c0f6846bea6a964e22e4004b640c",
    "type": "commit",
    "author": "gr0vity-dev",
    "title": "Fix inactive_votes_cache.election_start (#4803)\n\nCo-authored-by: gr0vity <gr0vity.dev@gmail.com>",
    "pull_request": "4803",
    "created_at": "2024-12-05T19:15:29Z",
    "built_at": "2024-12-05T19:52:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:932372af66b1c0f6846bea6a964e22e4004b640c",
    "build_started_at": "2024-12-05T19:25:29Z",
    "run_id": "12186660263"
  },
  {
    "hash": "9332812c69d642b163fa32d5a2b6766df405de01",
    "type": "commit",
    "created_at": "2024-02-08T14:00:09Z",
    "built_at": "2024-02-08T14:40:57Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9332812c69d642b163fa32d5a2b6766df405de01",
    "build_started_at": "2024-02-08T14:12:57Z",
    "run_id": "7830928243"
  },
  {
    "hash": "93385bb58676d941cf4a635e23af8e59dc59a523",
    "type": "pull_request",
    "title": "Remove legacy bootstrap",
    "author": "pwojcikdev",
    "body": "This removes legacy bootstrap, which was replaced by the new ascending bootstrap. Legacy bootstrap implementation was unnecessarily complicated with many inefficiencies. Debugging it was a pain and slowed down development of new features. \r\n\r\nAll the `bootstrap_ascending*` classes and stats are renamed to simply `bootstrap`.\r\n\r\nTODO for the future is porting previous `bootstrap_processor` test suite to use the new bootstrapper.",
    "draft": false,
    "pull_request": 4777,
    "label": "pwojcikdev:remove-legacy-bootstrap-2",
    "created_at": "2024-10-29T17:20:20Z",
    "built_at": "2024-10-31T12:57:48Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:93385bb58676d941cf4a635e23af8e59dc59a523",
    "build_started_at": "2024-10-31T12:31:30Z",
    "run_id": "11611951689"
  },
  {
    "hash": "933efd2805a51baf146c64af98c7a4e6c9c368e2",
    "type": "pull_request",
    "pull_request": 4510,
    "label": "pwojcikdev:aec-vote-map-result",
    "created_at": "2024-03-20T16:25:24Z",
    "built_at": "2024-03-20T17:01:01Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:933efd2805a51baf146c64af98c7a4e6c9c368e2",
    "build_started_at": "2024-03-20T16:30:57Z",
    "run_id": "8362493631"
  },
  {
    "hash": "934cd6eba57e2a66457d96fdfd1dab5e412fca3e",
    "type": "pull_request",
    "title": "Channel class cleanup",
    "author": "pwojcikdev",
    "body": "This is part of the cleanup I did for https://github.com/nanocurrency/nano-node/pull/4747 but without the lifetime changes which were causing sanitizers to report false positives.",
    "draft": false,
    "pull_request": 4749,
    "label": "pwojcikdev:channel-cleanup",
    "created_at": "2024-10-08T13:53:58Z",
    "built_at": "2024-10-08T14:24:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:934cd6eba57e2a66457d96fdfd1dab5e412fca3e",
    "build_started_at": "2024-10-08T13:58:41Z",
    "run_id": "11237056234"
  },
  {
    "hash": "9369e4e66b88922e2d0367f20b7c8c30c9ad1043",
    "type": "commit",
    "created_at": "2023-03-21T11:14:28Z",
    "built_at": "2023-03-21T12:21:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9369e4e66b88922e2d0367f20b7c8c30c9ad1043"
  },
  {
    "hash": "9371bfd3fa5d125deac8e83d9c4d3fc5874f4cb5",
    "type": "pull_request",
    "title": "Move recently_cemented_cache and recently_confirmed_cache to their own files.",
    "author": "clemahieu",
    "body": null,
    "draft": false,
    "pull_request": 4606,
    "label": "clemahieu:separate_recently_cemented_confirmed",
    "created_at": "2024-05-07T13:44:16Z",
    "built_at": "2024-05-07T14:11:35Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9371bfd3fa5d125deac8e83d9c4d3fc5874f4cb5",
    "build_started_at": "2024-05-07T13:44:22Z",
    "run_id": "8986504853"
  },
  {
    "hash": "93830da7bbd37693f6611c893f8cfdd6a713bb54",
    "type": "pull_request",
    "pull_request": 4433,
    "label": "clemahieu:socket_heap_boost_socket",
    "created_at": "2024-02-12T23:08:04Z",
    "built_at": "2024-02-13T11:44:47Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:93830da7bbd37693f6611c893f8cfdd6a713bb54",
    "build_started_at": "2024-02-13T11:10:24Z",
    "run_id": "7885590504"
  },
  {
    "hash": "93b74b76fd606250625bfe5372cf2d2a58ffe456",
    "type": "pull_request",
    "title": "Cementing fixes",
    "author": "pwojcikdev",
    "body": "Builds on https://github.com/nanocurrency/nano-node/pull/4720",
    "draft": false,
    "pull_request": 4722,
    "label": "pwojcikdev:fix-cementing",
    "created_at": "2024-09-05T15:25:12Z",
    "built_at": "2024-09-06T11:38:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:93b74b76fd606250625bfe5372cf2d2a58ffe456",
    "build_started_at": "2024-09-06T11:10:47Z",
    "run_id": "10737329285"
  },
  {
    "hash": "94150730b54962b9adc2ac5c0907ba34da9c52ef",
    "type": "pull_request",
    "title": "Fix Test `request_aggregator.one_update`",
    "author": "gr0vity-dev",
    "body": "I noticed that  `request_aggregator.one_update` is failing intermittently (1/100 cases) because `node.stats.count(nano::stat::type::requests, nano::stat::detail::requests_generated_votes))` is 2 instead of expected 1. However it will eventually always be 2.\r\n\r\nI changed the test-case accordingly, but maybe there is un underlying issue if `requests_generated_votes` should be 1 rather than 2.\r\n\r\nI also noticed that `node.aggregator.empty ()`is not guaranteed to be true immediately in about 1/2000 cases for me.",
    "draft": false,
    "pull_request": 4615,
    "label": "gr0vity-dev:prs/fix_request_aggregator-one_update",
    "created_at": "2024-05-12T10:01:25Z",
    "built_at": "2024-05-12T10:45:19Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:94150730b54962b9adc2ac5c0907ba34da9c52ef",
    "build_started_at": "2024-05-12T10:18:44Z",
    "run_id": "9050537621"
  },
  {
    "hash": "941cd584cd3b280e3cf5142512244f3351af7ff2",
    "type": "pull_request",
    "pull_request": 4337,
    "label": "pwojcikdev:stateless-frontier-server",
    "created_at": "2023-11-08T17:22:02Z",
    "built_at": "2023-11-08T17:52:53Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:941cd584cd3b280e3cf5142512244f3351af7ff2",
    "build_started_at": "2023-11-08T17:24:25Z",
    "run_id": "6801813269"
  },
  {
    "hash": "943f27d74f43c186d754d1395ec2a449be8fc868",
    "type": "commit",
    "author": "clemahieu",
    "title": "Merge pull request #4776 from clemahieu/compile_time_autumn2024\n\nCompile time autumn2024",
    "pull_request": "4776",
    "created_at": "2024-10-31T03:29:10Z",
    "built_at": "2024-10-31T06:25:21Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:943f27d74f43c186d754d1395ec2a449be8fc868",
    "build_started_at": "2024-10-31T03:33:18Z",
    "run_id": "11606881194"
  },
  {
    "hash": "9446617cb2a11cf26b1d387fb8d3b6c48b9e6e25",
    "type": "pull_request",
    "pull_request": 4504,
    "label": "pwojcikdev:networking-fixes/handshake-refactor",
    "created_at": "2024-03-19T09:24:42Z",
    "built_at": "2024-03-19T09:52:31Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9446617cb2a11cf26b1d387fb8d3b6c48b9e6e25",
    "build_started_at": "2024-03-19T09:27:46Z",
    "run_id": "8340591727"
  },
  {
    "hash": "9498b443cba3b5b68aa12ce5c996cdac035ee1d6",
    "type": "pull_request",
    "title": "Enable large votes",
    "author": "clemahieu",
    "body": "This bumps the protocol version and also adds the \"--disable_large_votes\" command line option to disable large votes.",
    "draft": false,
    "pull_request": 4683,
    "label": "clemahieu:large_votes",
    "created_at": "2024-07-17T14:28:21Z",
    "built_at": "2024-07-17T15:05:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9498b443cba3b5b68aa12ce5c996cdac035ee1d6",
    "build_started_at": "2024-07-17T14:36:32Z",
    "run_id": "9976260712"
  },
  {
    "hash": "94a45268e9358959c7a3e789b506d4e6fb2f2b88",
    "type": "pull_request",
    "pull_request": 4490,
    "label": "pwojcikdev:networking-fixes-thread",
    "created_at": "2024-03-14T16:53:00Z",
    "built_at": "2024-03-14T19:03:11Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:94a45268e9358959c7a3e789b506d4e6fb2f2b88",
    "build_started_at": "2024-03-14T18:34:12Z",
    "run_id": "8285901098"
  },
  {
    "hash": "94b12c61cf90867b54c69eddd907cc6fc7380327",
    "type": "commit",
    "created_at": "2023-04-05T11:40:30Z",
    "built_at": "2023-04-05T12:11:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:94b12c61cf90867b54c69eddd907cc6fc7380327"
  },
  {
    "hash": "94d44c10f5807fe98e109503e0038862fd7cf546",
    "type": "commit",
    "created_at": "2023-11-06T18:26:14Z",
    "built_at": "2023-11-06T18:57:58Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:94d44c10f5807fe98e109503e0038862fd7cf546",
    "build_started_at": "2023-11-06T18:27:21Z",
    "run_id": "6774971832"
  },
  {
    "hash": "94e24fa7e812ae37db03a922eb789d3c92674407",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Move ascending bootstrap classes to `node/bootstrap/`",
    "pull_request": "N/A",
    "created_at": "2024-10-29T13:18:37Z",
    "built_at": "2024-10-31T17:05:58Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:94e24fa7e812ae37db03a922eb789d3c92674407",
    "build_started_at": "2024-10-31T13:47:32Z",
    "run_id": "11616039396"
  },
  {
    "hash": "94ef4613c616cad59e3fb3e0a7b6c82c61da5ba0",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Config",
    "pull_request": "4787",
    "created_at": "2024-11-28T20:52:03Z",
    "built_at": "2024-11-29T17:23:29Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:94ef4613c616cad59e3fb3e0a7b6c82c61da5ba0",
    "build_started_at": "2024-11-29T15:39:54Z",
    "run_id": "12088343718"
  },
  {
    "hash": "94fc8bde215f1f67c52d78dd072788201780d7ef",
    "type": "commit",
    "created_at": "2023-02-18T00:03:48Z",
    "built_at": "2023-02-18T14:13:49Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:94fc8bde215f1f67c52d78dd072788201780d7ef"
  },
  {
    "hash": "950c1848f3ccc03088eed83bf957234c7e3ab306",
    "type": "commit",
    "created_at": "2024-03-07T12:35:07Z",
    "built_at": "2024-03-07T13:11:40Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:950c1848f3ccc03088eed83bf957234c7e3ab306",
    "build_started_at": "2024-03-07T12:46:25Z",
    "run_id": "8188334408"
  },
  {
    "hash": "95121403a21fde71cc21728b237c54e8500a0105",
    "type": "commit",
    "author": "clemahieu",
    "title": "Rewrite optimistic scheduler in terms of ledger sets and add ledger set height(account) overload.",
    "pull_request": "4593",
    "created_at": "2024-03-21T14:36:37Z",
    "built_at": "2024-04-30T16:13:07Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:95121403a21fde71cc21728b237c54e8500a0105",
    "build_started_at": "2024-04-30T13:34:48Z",
    "run_id": "8897753446"
  },
  {
    "hash": "95141130ee058f90b360a2f4627d46bdb7506e57",
    "type": "commit",
    "created_at": "2024-03-22T18:52:32Z",
    "built_at": "2024-03-22T19:32:18Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:95141130ee058f90b360a2f4627d46bdb7506e57",
    "build_started_at": "2024-03-22T18:54:56Z",
    "run_id": "8395125876"
  },
  {
    "hash": "95493f4dc05debe8c06b70c367be0f84088a9a64",
    "type": "commit",
    "created_at": "2023-02-03T18:39:46Z",
    "built_at": "2023-02-15T15:11:21Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:95493f4dc05debe8c06b70c367be0f84088a9a64"
  },
  {
    "hash": "9553d9b7d6f20eb4aafa1ec0f0f0ee8b5d6a4f51",
    "type": "commit",
    "author": "dsiganos",
    "title": "Fix race condition in unit test active_transactions.activate_inactive\n\nThe stats counters are updated in a callback called after the block\nhas been confirmed.",
    "pull_request": "4564",
    "created_at": "2024-04-14T20:34:56Z",
    "built_at": "2024-04-16T09:48:32Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9553d9b7d6f20eb4aafa1ec0f0f0ee8b5d6a4f51",
    "build_started_at": "2024-04-16T09:20:56Z",
    "run_id": "8703147174"
  },
  {
    "hash": "955c79e664df1129708180c0df9a9d7547c35c51",
    "type": "commit",
    "created_at": "2023-03-07T15:48:57Z",
    "built_at": "2023-03-07T16:31:01Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:955c79e664df1129708180c0df9a9d7547c35c51"
  },
  {
    "hash": "95838fa7af5d246cdf8b2abdf355d8dfcd72f6b9",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Network class config",
    "pull_request": "N/A",
    "created_at": "2024-05-12T10:29:08Z",
    "built_at": "2024-05-14T14:16:18Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:95838fa7af5d246cdf8b2abdf355d8dfcd72f6b9",
    "build_started_at": "2024-05-14T11:08:37Z",
    "run_id": "9080552606"
  },
  {
    "hash": "958c6ea08eb9bf7933dd0ac11a9a2000f0310510",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge pull request #4595 from pwojcikdev/networking-fixes/connecting-4 \"Remove temporary channels\"\n\nRemove temporary channels",
    "pull_request": "4595",
    "created_at": "2024-05-04T09:33:26Z",
    "built_at": "2024-05-04T11:50:22Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:958c6ea08eb9bf7933dd0ac11a9a2000f0310510",
    "build_started_at": "2024-05-04T09:36:39Z",
    "run_id": "8950137763"
  },
  {
    "hash": "95af5ee5977b6ae6b53f394e33bb8b12143f0abc",
    "type": "pull_request",
    "pull_request": 4103,
    "label": "clemahieu:token_bucket",
    "created_at": "2023-02-06T16:35:20Z",
    "built_at": "2023-02-06T17:13:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:95af5ee5977b6ae6b53f394e33bb8b12143f0abc"
  },
  {
    "hash": "95b62fe8b81acfdf8deb41dcaca11e2dbdac2318",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge pull request #4523 from pwojcikdev/networking-fixes/tcp-listener-2\n\nUse a dedicated thread for tcp listener",
    "pull_request": "4523",
    "created_at": "2024-04-22T10:03:23Z",
    "built_at": "2024-04-22T11:00:20Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:95b62fe8b81acfdf8deb41dcaca11e2dbdac2318",
    "build_started_at": "2024-04-22T10:18:03Z",
    "run_id": "8782567172"
  },
  {
    "hash": "95df470f318a4bdc1b1cfe66e3f8f644a0084a22",
    "type": "commit",
    "created_at": "2024-03-10T16:39:03Z",
    "built_at": "2024-03-10T21:47:17Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:95df470f318a4bdc1b1cfe66e3f8f644a0084a22",
    "build_started_at": "2024-03-10T20:14:43Z",
    "run_id": "8224504096"
  },
  {
    "hash": "9604018ee813a53b6ff5471da1366c2d06d38a5c",
    "type": "pull_request",
    "title": "Revert ledger account iterator",
    "author": "pwojcikdev",
    "body": "The account iterator introduced a significant regression when iterating accounts sequentially. For completeness pending iterator should be reverted in the same way, but this is still TODO.",
    "draft": false,
    "pull_request": 4706,
    "label": "pwojcikdev:revert-account-iterator",
    "created_at": "2024-08-16T20:48:42Z",
    "built_at": "2024-08-16T21:20:46Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9604018ee813a53b6ff5471da1366c2d06d38a5c",
    "build_started_at": "2024-08-16T20:52:25Z",
    "run_id": "10426111769"
  },
  {
    "hash": "961cae3cf7c90dc2137da744e30f743a4b42c54d",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Run UPNP port mapping on a dedicated thread (#4591)\n\n* Run port mapping on a dedicated thread\r\n\r\n* Rework checks\r\n\r\n* Test",
    "pull_request": "4591",
    "created_at": "2024-04-29T16:15:43Z",
    "built_at": "2024-04-29T16:43:40Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:961cae3cf7c90dc2137da744e30f743a4b42c54d",
    "build_started_at": "2024-04-29T16:18:22Z",
    "run_id": "8881933540"
  },
  {
    "hash": "96374dc64212ce8966118ad8b67bfccaa1028709",
    "type": "pull_request",
    "title": "Style fix, pass transaction as first argument.",
    "author": "clemahieu",
    "body": null,
    "draft": false,
    "pull_request": 4592,
    "label": "clemahieu:priority_activate_signature",
    "created_at": "2024-04-30T12:41:36Z",
    "built_at": "2024-04-30T16:20:37Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:96374dc64212ce8966118ad8b67bfccaa1028709",
    "build_started_at": "2024-04-30T13:49:17Z",
    "run_id": "8897849179"
  },
  {
    "hash": "968092351d95ea25550cd84fa484db2026176604",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Modify `observer_set` to only accept and pass const ref arguments",
    "pull_request": "4768",
    "created_at": "2024-10-27T10:20:58Z",
    "built_at": "2024-10-27T22:46:23Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:968092351d95ea25550cd84fa484db2026176604",
    "build_started_at": "2024-10-27T21:59:13Z",
    "run_id": "11544248471"
  },
  {
    "hash": "968d2d008c8917ed28d4983ce9dd6957be15f059",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Revert backlog population transaction refresh",
    "pull_request": "4713",
    "created_at": "2024-08-22T21:16:52Z",
    "built_at": "2024-08-27T16:25:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:968d2d008c8917ed28d4983ce9dd6957be15f059",
    "build_started_at": "2024-08-27T15:42:11Z",
    "run_id": "10581625220"
  },
  {
    "hash": "968de02bea86b3a8fd3b5710df4d7cde317f858d",
    "type": "pull_request",
    "title": "Use chrono timestamps in ascending bootstrap code",
    "author": "pwojcikdev",
    "body": "This changes timestamp handling to use chrono library. Using steady clock avoids errors that come from time adjustments.",
    "draft": false,
    "pull_request": 4687,
    "label": "pwojcikdev:bootstrap-chrono",
    "created_at": "2024-07-29T15:22:25Z",
    "built_at": "2024-07-29T16:00:22Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:968de02bea86b3a8fd3b5710df4d7cde317f858d",
    "build_started_at": "2024-07-29T15:29:38Z",
    "run_id": "10147261258"
  },
  {
    "hash": "969e4c9bba104df629f558425d891dc57cca74fd",
    "type": "pull_request",
    "pull_request": 4295,
    "label": "clemahieu:block_split",
    "created_at": "2023-09-25T22:11:53Z",
    "built_at": "2023-09-25T23:59:53Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:969e4c9bba104df629f558425d891dc57cca74fd"
  },
  {
    "hash": "96a69d8b5fe67878e5d1a57e9ac9bb60ae25a0dc",
    "type": "pull_request",
    "pull_request": 4436,
    "label": "clemahieu:remove_ledger_amount_account",
    "created_at": "2024-02-14T17:55:48Z",
    "built_at": "2024-02-14T18:33:03Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:96a69d8b5fe67878e5d1a57e9ac9bb60ae25a0dc",
    "build_started_at": "2024-02-14T18:08:05Z",
    "run_id": "7905488764"
  },
  {
    "hash": "96a82dafd148ab5a41deba0c92a3272c32b18e87",
    "type": "commit",
    "created_at": "2023-02-03T19:25:45Z",
    "built_at": "2023-02-15T15:22:30Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:96a82dafd148ab5a41deba0c92a3272c32b18e87"
  },
  {
    "hash": "96aa93882704bf0f61523c8b3c36e721328d8b2d",
    "type": "commit",
    "created_at": "2023-02-14T17:52:34Z",
    "built_at": "2023-02-14T18:26:46Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:96aa93882704bf0f61523c8b3c36e721328d8b2d"
  },
  {
    "hash": "96f8a30846eeff719004a97a06815fe7820632d8",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Uniform indentation",
    "pull_request": "N/A",
    "created_at": "2024-09-09T18:22:01Z",
    "built_at": "2024-09-17T11:40:04Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:96f8a30846eeff719004a97a06815fe7820632d8",
    "build_started_at": "2024-09-17T09:35:37Z",
    "run_id": "10901872405"
  },
  {
    "hash": "9702ecd9362bd6f2ed831f9c52670a4ed2b09109",
    "type": "pull_request",
    "title": "Optimize election scheduler activate function",
    "author": "pwojcikdev",
    "body": "This reverts some of the changes made during refactoring to block sets. The new versions were doing many redundant database lookups, which started to become a bottleneck.",
    "draft": false,
    "pull_request": 4636,
    "label": "pwojcikdev:revert-activate-develop",
    "created_at": "2024-05-22T12:48:37Z",
    "built_at": "2024-05-22T13:25:42Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9702ecd9362bd6f2ed831f9c52670a4ed2b09109",
    "build_started_at": "2024-05-22T12:58:29Z",
    "run_id": "9191743220"
  },
  {
    "hash": "970b048052c2cc0470bace686e881aa6b9ccf514",
    "type": "commit",
    "created_at": "2024-03-19T10:00:11Z",
    "built_at": "2024-03-22T09:20:25Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:970b048052c2cc0470bace686e881aa6b9ccf514",
    "build_started_at": "2024-03-22T08:48:02Z",
    "run_id": "8387719129"
  },
  {
    "hash": "971fc27cd79667bcfc9786761aeb372da50927f2",
    "type": "commit",
    "created_at": "2023-03-20T16:02:19Z",
    "built_at": "2023-03-21T12:28:45Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:971fc27cd79667bcfc9786761aeb372da50927f2"
  },
  {
    "hash": "97595c86158e4e8fe8092e5764a49cb614a14a21",
    "type": "pull_request",
    "pull_request": 4318,
    "label": "clemahieu:election_state_mutex",
    "created_at": "2023-10-26T14:21:12Z",
    "built_at": "2024-01-12T12:12:32Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:97595c86158e4e8fe8092e5764a49cb614a14a21",
    "build_started_at": "2024-01-12T11:46:23Z",
    "run_id": "7501730435"
  },
  {
    "hash": "9762eeb3e0e9d6b4b5684e03da50f74977b88497",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Asserts",
    "pull_request": "4714",
    "created_at": "2024-08-26T18:04:49Z",
    "built_at": "2024-08-27T16:45:35Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9762eeb3e0e9d6b4b5684e03da50f74977b88497",
    "build_started_at": "2024-08-27T15:42:11Z",
    "run_id": "10581915029"
  },
  {
    "hash": "978020e0f8498cc8fab2be3bea8d31c59b1b31a4",
    "type": "commit",
    "created_at": "2024-01-16T17:35:28Z",
    "built_at": "2024-01-16T18:07:48Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:978020e0f8498cc8fab2be3bea8d31c59b1b31a4",
    "build_started_at": "2024-01-16T17:42:27Z",
    "run_id": "7545455424"
  },
  {
    "hash": "97822348a45e0861da74ef9940313a2e3ef32e48",
    "type": "pull_request",
    "pull_request": 4476,
    "label": "pwojcikdev:fair-queuing-3",
    "created_at": "2024-03-10T19:14:44Z",
    "built_at": "2024-03-11T15:06:44Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:97822348a45e0861da74ef9940313a2e3ef32e48",
    "build_started_at": "2024-03-11T14:41:30Z",
    "run_id": "8234733865"
  },
  {
    "hash": "978683534b850ca4974ac39e5de6983faf98d64d",
    "type": "pull_request",
    "title": "Configuration and environment variable improvements",
    "author": "pwojcikdev",
    "body": "This cleans up code related to overriding node configuration:\r\n- Extracts environment variable reading, which is now done in a more generic, C++ way.\r\n- Always prints info when an environment variable overrides config.\r\n- Ensures that configured thread counts are in reasonable ranges. (And slightly tweaks default for `request_aggregator`)\r\n- Converts `is_<sanitizer>` calls to constevals\r\n- Adds ability to configure number of IO threads by environment variable",
    "draft": false,
    "pull_request": 4613,
    "label": "pwojcikdev:env-utils",
    "created_at": "2024-05-11T08:40:34Z",
    "built_at": "2024-05-13T09:20:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:978683534b850ca4974ac39e5de6983faf98d64d",
    "build_started_at": "2024-05-13T08:53:55Z",
    "run_id": "9060049910"
  },
  {
    "hash": "97868ed2ae7d541b17ad231964683d117260f349",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Rep crawler special handling of unit tests",
    "pull_request": "4792",
    "created_at": "2024-11-15T17:59:32Z",
    "built_at": "2024-11-26T15:42:02Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:97868ed2ae7d541b17ad231964683d117260f349",
    "build_started_at": "2024-11-26T15:12:14Z",
    "run_id": "12033533037"
  },
  {
    "hash": "978f0784648d859552fc98382f9f7ba8301858a6",
    "type": "pull_request",
    "title": "Add submodule lmdbxx which is a c++ wrapper for lmdb",
    "author": "clemahieu",
    "body": "This change adds the lmdbxx submodule which is a c++ wrapper for LMDB. https://github.com/hoytech/lmdbxx\r\n\r\nCurrently we're using an amalgamation of direct access to the LMDB C API and some custom c++ wrapping of select portions of functionality.\r\n\r\nMajor motivations for using this library:\r\n- Header-only\r\n- C++17 language support\r\n- Errors are exceptions\r\n- RAII for LMDB resources\r\n- Uses std::string_view for exchanging serialised objects which is compatible with rocksdb::Slice\r\n\r\nThe library has two implementation strategies, a near 1-to-1 wrapping of the C API with exception handling, and full RAII types. Migrating existing code to use the direct API was relatively painless and some of the RAII types can already be used.\r\n\r\nThe primary motivation for the change is to get a clear separation of the lmdb c++ wrapper from node-specific logic. Additionally, this removes the burden of wrapping the C API from the node code.\r\n\r\nThe library itself seems to make good design decisions and is reasonably maintained.\r\n\r\nThere are parts of the library which are not fully complete e.g. ::lmdb::dbi does not fully implement RAII, it is both copyable and doesn't destroy the underlying resources when it goes out of scope. To get full benefits we will likely have to upstream some patches which they will hopefully be receptive and responsive to.",
    "draft": false,
    "pull_request": 4724,
    "label": "clemahieu:lmdbxx",
    "created_at": "2024-09-09T19:26:59Z",
    "built_at": "2024-09-10T03:21:21Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:978f0784648d859552fc98382f9f7ba8301858a6",
    "build_started_at": "2024-09-10T02:54:08Z",
    "run_id": "10784916987"
  },
  {
    "hash": "97abf643c8393a9a372e7c17b4158ffdfe6085c5",
    "type": "commit",
    "created_at": "2023-03-02T11:33:28Z",
    "built_at": "2023-03-02T12:06:29Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:97abf643c8393a9a372e7c17b4158ffdfe6085c5"
  },
  {
    "hash": "97cc02ce29325790f3ed4a7465744c5620fefff2",
    "type": "commit",
    "created_at": "2024-03-13T08:56:35Z",
    "built_at": "2024-03-13T09:27:22Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-13T08:56:40Z",
    "run_id": "8261924035"
  },
  {
    "hash": "97d49058218d0bf0b5bc2840abe26b581f6fe9ac",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Use stand for all socket operations (#4576)",
    "pull_request": "4576",
    "created_at": "2024-04-18T09:56:23Z",
    "built_at": "2024-04-18T10:34:44Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:97d49058218d0bf0b5bc2840abe26b581f6fe9ac",
    "build_started_at": "2024-04-18T10:06:43Z",
    "run_id": "8736084561"
  },
  {
    "hash": "97e9b32ee56f9a7a35cd191494550f538f5a87f0",
    "type": "commit",
    "created_at": "2024-01-31T15:47:16Z",
    "built_at": "2024-01-31T16:16:23Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:97e9b32ee56f9a7a35cd191494550f538f5a87f0",
    "build_started_at": "2024-01-31T15:49:57Z",
    "run_id": "7728696105"
  },
  {
    "hash": "9807e86b639635e5d2572332048d0bc2e78c3e09",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Track election confirm stats",
    "pull_request": "N/A",
    "created_at": "2024-10-15T11:22:21Z",
    "built_at": "2024-10-18T10:04:03Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-10-18T08:49:46Z",
    "run_id": "11401342805"
  },
  {
    "hash": "980fdf5d3dbedfc05749670f1a47b2f6ea6c0dd6",
    "type": "pull_request",
    "title": "Generate indented toml config files for improved legibility",
    "author": "RickiNano",
    "body": "The current config layout is quite hard to navigate.\r\nThis PR adds indentation to clearly show what is a child object of a node. Indentations are allowed for the TOML format according to the official documentation.\r\n`--generate_config` cli command has been tested with both node, rpc and log configs. It also supports the `--use_defaults` command with correct output.\r\nHere is a small sample of the new config file for illustration:\r\n```\r\n[node.httpcallback]\r\n\r\n        # Callback address.\r\n        # type:string,ip\r\n        # address = \"\"\r\n\r\n        # Callback port number.\r\n        # type:uint16\r\n        # port = 0\r\n\r\n        # Callback target path.\r\n        # type:string,uri\r\n        # target = \"\"\r\n\r\n[node.ipc.flatbuffers]\r\n\r\n        # Allow client to send unknown fields in json messages. These will be ignored.\r\n        # type:bool\r\n        # skip_unexpected_fields_in_json = true\r\n\r\n        # Verify that the buffer is valid before parsing. This is recommended when receiving data from untrusted sources.\r\n        # type:bool\r\n        # verify_buffers = true\r\n\r\n[node.ipc.local]\r\n\r\n        # If enabled, certain unsafe RPCs can be used. Not recommended for production systems.\r\n        # type:bool\r\n        # allow_unsafe = false\r\n\r\n        # Enable or disable IPC via local domain socket.\r\n        # type:bool\r\n        # enable = false\r\n\r\n        # Timeout for requests.\r\n        # type:seconds\r\n        # io_timeout = 15\r\n\r\n        # Path to the local domain socket.\r\n        # type:string\r\n        # path = \"/tmp/nano\"\r\n\r\n[node.ipc.tcp]\r\n\r\n        # Enable or disable IPC via TCP server.\r\n        # type:bool\r\n        # enable = false\r\n\r\n        # Timeout for requests.\r\n        # type:seconds\r\n        # io_timeout = 15\r\n\r\n        # Server listening port.\r\n        # type:uint16\r\n        # port = 7077\r\n```\r\n",
    "draft": false,
    "pull_request": 4558,
    "label": "RickiNano:Config-legibility",
    "created_at": "2024-04-13T22:19:57Z",
    "built_at": "2024-04-13T22:48:11Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:980fdf5d3dbedfc05749670f1a47b2f6ea6c0dd6",
    "build_started_at": "2024-04-13T22:23:07Z",
    "run_id": "8676645897"
  },
  {
    "hash": "9827a3c3c8aa9dd571269523bd392065bc55b6cc",
    "type": "pull_request",
    "title": "Fix TSAN issue with test receivable_processor.send_with_receive",
    "author": "dsiganos",
    "body": null,
    "draft": false,
    "pull_request": 4588,
    "label": "dsiganos:fix_tsan_receivable_processor_send_with_receive",
    "created_at": "2024-04-26T21:26:02Z",
    "built_at": "2024-04-26T21:56:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9827a3c3c8aa9dd571269523bd392065bc55b6cc",
    "build_started_at": "2024-04-26T21:31:03Z",
    "run_id": "8854505859"
  },
  {
    "hash": "9836ef29dc847e0d1a7aa99e5168af44b885096b",
    "type": "commit",
    "created_at": "2023-04-27T22:57:08Z",
    "built_at": "2023-05-02T18:06:45Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9836ef29dc847e0d1a7aa99e5168af44b885096b"
  },
  {
    "hash": "9844e79f2b0055aac66bf953ec16d64cc0d6e3e1",
    "type": "pull_request",
    "title": "Enum utils",
    "author": "pwojcikdev",
    "body": "This organizes enum conversion functions and adds additional checks. This avoids unnecessary boilerplate code.",
    "draft": false,
    "pull_request": 4601,
    "label": "pwojcikdev:enum-utils",
    "created_at": "2024-05-05T11:55:45Z",
    "built_at": "2024-05-05T12:39:34Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9844e79f2b0055aac66bf953ec16d64cc0d6e3e1",
    "build_started_at": "2024-05-05T12:14:06Z",
    "run_id": "8958122921"
  },
  {
    "hash": "9858c733c641f97b9905f073788b31edc98f8b70",
    "type": "pull_request",
    "title": "Exit migration if existing rocksdb ledger found",
    "author": "RickiNano",
    "body": "Halt migration if rocksdb folder already exists instead of deleting it.",
    "draft": false,
    "pull_request": 4778,
    "label": "RickiNano:migration-fix",
    "created_at": "2024-11-02T18:50:07Z",
    "built_at": "2024-11-02T19:18:07Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9858c733c641f97b9905f073788b31edc98f8b70",
    "build_started_at": "2024-11-02T18:51:53Z",
    "run_id": "11645054967"
  },
  {
    "hash": "9890be1feb50e958fe7fe64eecef50d807053f14",
    "type": "pull_request",
    "title": "Multithreaded vote processor",
    "author": "pwojcikdev",
    "body": "Changes vote processor to use multiple threads. While processing of votes inside the election container is still done under exclusive lock, this should help amortize time spent checking vote signatures.",
    "draft": false,
    "pull_request": 4600,
    "label": "pwojcikdev:vote-processor-threads",
    "created_at": "2024-05-03T11:36:29Z",
    "built_at": "2024-05-03T12:03:28Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9890be1feb50e958fe7fe64eecef50d807053f14",
    "build_started_at": "2024-05-03T11:37:20Z",
    "run_id": "8938371626"
  },
  {
    "hash": "98aaa57d9a47035fff52539970279358d4ecd0da",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Allow disabling vote processor",
    "pull_request": "4735",
    "created_at": "2024-09-24T17:31:13Z",
    "built_at": "2024-09-25T16:26:26Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:98aaa57d9a47035fff52539970279358d4ecd0da",
    "build_started_at": "2024-09-25T13:41:38Z",
    "run_id": "11036713223"
  },
  {
    "hash": "98b3de81422f84cd8eb6eb270bfaacd3c43d94e0",
    "type": "commit",
    "created_at": "2024-03-13T19:11:20Z",
    "built_at": "2024-03-15T16:12:32Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:98b3de81422f84cd8eb6eb270bfaacd3c43d94e0",
    "build_started_at": "2024-03-15T15:29:42Z",
    "run_id": "8298619683"
  },
  {
    "hash": "98be6626a13c16d4468b2017fcbd2a9a64b1c10c",
    "type": "pull_request",
    "title": "Stats overhaul",
    "author": "pwojcikdev",
    "body": "# Stats overhaul\r\n\r\nThe goal of this PR is to address some of the issues that have been increasingly cropping up with the current stats system. I believe that having a more flexible and performant system will allow us to experiment and iterate faster.\r\n\r\nThe immediate problem that is fixed is the fact that we ran out of space for declaring new stat enums:\r\n```\r\nIn file included from /nano-node/nano/lib/stats.hpp:5:\r\n/nano-node/nano/lib/stats_enums.hpp:407:2: error: enumerator value 256 is not representable in the underlying type 'uint8_t' (aka 'unsigned char')\r\n```\r\n\r\nHowever, this PR contains a bit more than that. The main changes are:\r\n- Do not require `stat::detail` enum to have `uint8` underlying type. This allows for practically unlimited number of custom stats.\r\n- Offload heavy IO operations (saving stats to disk) to a dedicated thread. Previously this was done inside the call to stat update functions, which introduced latency spikes.\r\n- Rework the way histograms are handled. Previously histograms needed to be registered with the stats system beforehand, which was cumbersome and as a result not used. Now we store samples in a ring buffer and leave histogram creation to the user (e.g. nano-prom-exporter).\r\n- Use read-write locks. This is a bit experimental, but on my system it seems to give some performance benefits. I'll try to include microbenchmarking suite as part of a separate PR (ongoing work is here https://github.com/pwojcikdev/nano-node/tree/stats-benchmarking )\r\n\r\n## Heatmaps\r\n\r\nI added experimental support for histogram generation to my fork of the `nano-prom-exporter` (https://github.com/pwojcikdev/nano-prom-exporter/commits/histograms/). This allows for generating heatmaps like this one:\r\n\r\n<img width=\"2991\" alt=\"Screenshot 2024-03-06 at 10 20 51\" src=\"https://github.com/nanocurrency/nano-node/assets/3044353/ec59d9ed-6dbf-4bbe-a710-b894bb2d6106\">\r\n",
    "draft": false,
    "pull_request": 4583,
    "label": "pwojcikdev:stats-improvements-2",
    "created_at": "2024-04-24T14:26:18Z",
    "built_at": "2024-04-24T14:48:54Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-04-24T14:30:29Z",
    "run_id": "8818303604"
  },
  {
    "hash": "98d3a2c6d98b8c27a2f015fc56517e817eb67394",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Rework `broadcast_block_on_arrival` (#4723)",
    "pull_request": "4723",
    "created_at": "2024-09-06T07:44:41Z",
    "built_at": "2024-09-06T08:14:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:98d3a2c6d98b8c27a2f015fc56517e817eb67394",
    "build_started_at": "2024-09-06T07:44:54Z",
    "run_id": "10734506975"
  },
  {
    "hash": "98e0da36b7bd35cb9b2049e8d18ffa61e416f9e6",
    "type": "pull_request",
    "pull_request": 4492,
    "label": "clemahieu:flatbuffers_v24_3_7",
    "created_at": "2024-03-15T10:21:46Z",
    "built_at": "2024-03-18T17:23:53Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:98e0da36b7bd35cb9b2049e8d18ffa61e416f9e6",
    "build_started_at": "2024-03-18T16:18:40Z",
    "run_id": "8330000170"
  },
  {
    "hash": "98f231f159d7f2b898d677bc787bbc7c20963762",
    "type": "pull_request",
    "title": "Fix inactive votes cache election start",
    "author": "dsiganos",
    "body": null,
    "draft": false,
    "pull_request": 4587,
    "label": "dsiganos:fix_inactive_votes_cache_election_start",
    "created_at": "2024-04-26T20:05:17Z",
    "built_at": "2024-04-26T21:48:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:98f231f159d7f2b898d677bc787bbc7c20963762",
    "build_started_at": "2024-04-26T21:23:36Z",
    "run_id": "8854447582"
  },
  {
    "hash": "98f9a9279c3896c0826ef8f049b2d3564cf95eac",
    "type": "pull_request",
    "pull_request": 4158,
    "label": "clemahieu:bootstrap_ascending_client",
    "created_at": "2023-02-27T20:15:37Z",
    "built_at": "2023-03-01T13:03:22Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:98f9a9279c3896c0826ef8f049b2d3564cf95eac"
  },
  {
    "hash": "98fe1f3df19277787d27a0b5f43e31ad0415e1e6",
    "type": "commit",
    "created_at": "2023-04-03T15:22:15Z",
    "built_at": "2023-04-05T17:23:38Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:98fe1f3df19277787d27a0b5f43e31ad0415e1e6"
  },
  {
    "hash": "990116d322ce8af632edd734484ed85f5ebed97a",
    "type": "commit",
    "created_at": "2023-02-03T20:00:41Z",
    "built_at": "2023-02-15T15:24:04Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:990116d322ce8af632edd734484ed85f5ebed97a"
  },
  {
    "hash": "99083adfe261322c83944ba769b490c83ec39d30",
    "type": "commit",
    "created_at": "2024-01-07T23:18:24Z",
    "built_at": "2024-01-10T12:09:09Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:99083adfe261322c83944ba769b490c83ec39d30",
    "build_started_at": "2024-01-10T11:27:54Z",
    "run_id": "7474237280"
  },
  {
    "hash": "9919bb28826cf8b4bba3c6444650c27f5e615012",
    "type": "pull_request",
    "pull_request": 4147,
    "label": "clemahieu:thread_runner_cleanup",
    "created_at": "2023-02-21T23:30:27Z",
    "built_at": "2023-02-22T00:04:03Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9919bb28826cf8b4bba3c6444650c27f5e615012"
  },
  {
    "hash": "993a49fe257870624dc9bd8fac8993f3f0838478",
    "type": "pull_request",
    "title": "Remove `Develop Branch Dockers Deploy` workflow",
    "author": "pwojcikdev",
    "body": "The `nano-env` docker image is no longer used by any other workflow.",
    "draft": false,
    "pull_request": 4796,
    "label": "pwojcikdev:remove-dockers-deploy-workflow",
    "created_at": "2024-11-27T19:01:59Z",
    "built_at": "2024-11-27T19:40:03Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:993a49fe257870624dc9bd8fac8993f3f0838478",
    "build_started_at": "2024-11-27T19:12:58Z",
    "run_id": "12056850217"
  },
  {
    "hash": "997e1f9f60bd838eed552cee6b2f61519f7dc3da",
    "type": "commit",
    "created_at": "2023-02-08T13:23:56Z",
    "built_at": "2023-02-08T16:45:22Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:997e1f9f60bd838eed552cee6b2f61519f7dc3da"
  },
  {
    "hash": "9995be4a0705c47ffeec4091fc39aab75bc6b54b",
    "type": "pull_request",
    "title": "Migration periodic renew transaction",
    "author": "RickiNano",
    "body": null,
    "draft": true,
    "pull_request": 4670,
    "label": "RickiNano:migration-test",
    "created_at": "2024-07-05T07:12:43Z",
    "built_at": "2024-07-05T07:40:36Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9995be4a0705c47ffeec4091fc39aab75bc6b54b",
    "build_started_at": "2024-07-05T07:14:14Z",
    "run_id": "9804544296"
  },
  {
    "hash": "99b8b5364fbfabd933f46479ef42f64992ae84d5",
    "type": "commit",
    "created_at": "2024-03-13T14:35:13Z",
    "built_at": "2024-03-15T16:16:52Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:99b8b5364fbfabd933f46479ef42f64992ae84d5",
    "build_started_at": "2024-03-15T15:29:42Z",
    "run_id": "8298619683"
  },
  {
    "hash": "9a3696d59f5c407fd6069978272da1c5e9cd30be",
    "type": "pull_request",
    "pull_request": 4509,
    "label": "clemahieu:election_header_reduction",
    "created_at": "2024-03-20T14:00:22Z",
    "built_at": "2024-03-20T14:57:16Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9a3696d59f5c407fd6069978272da1c5e9cd30be",
    "build_started_at": "2024-03-20T14:09:53Z",
    "run_id": "8360363439"
  },
  {
    "hash": "9a4eaa5c281778a2b16838259d0d37866f1ce4c5",
    "type": "pull_request",
    "pull_request": 4133,
    "label": "clemahieu:election_occupancy",
    "created_at": "2023-02-15T18:23:49Z",
    "built_at": "2023-02-22T12:19:07Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9a4eaa5c281778a2b16838259d0d37866f1ce4c5"
  },
  {
    "hash": "9a80f294dc7761a1c547d38e09e4a5348f70b363",
    "type": "pull_request",
    "pull_request": 4424,
    "label": "pwojcikdev:blockprocessor-context",
    "created_at": "2024-02-08T18:03:48Z",
    "built_at": "2024-02-09T18:08:28Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9a80f294dc7761a1c547d38e09e4a5348f70b363",
    "build_started_at": "2024-02-09T17:37:58Z",
    "run_id": "7847609075"
  },
  {
    "hash": "9a92ec25ee8da8f3036ce9dc23b5be1fdf2c0ab3",
    "type": "pull_request",
    "title": "Fix timing issue in active_elections.fork_replacement_tally",
    "author": "gr0vity-dev",
    "body": "This testcase fails in ~10% of cases on my machine with\r\n```\r\nExpected equality of these values:\r\n  max_blocks\r\n    Which is: 10\r\n  election->blocks ().size ()\r\n    Which is: 1\r\n```\r\nBy waiting for election insertion for the first block, before processing forks, this timing issue is eliminated.",
    "draft": false,
    "pull_request": 4802,
    "label": "gr0vity-dev:prs/fix-active_elections.fork_replacement_tally",
    "created_at": "2024-12-04T21:05:22Z",
    "built_at": "2024-12-05T14:49:18Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9a92ec25ee8da8f3036ce9dc23b5be1fdf2c0ab3",
    "build_started_at": "2024-12-05T14:20:01Z",
    "run_id": "12181138808"
  },
  {
    "hash": "9af62f32466f61f0d134eee490834e0c8d0e0305",
    "type": "pull_request",
    "pull_request": 4106,
    "label": "thsfs:remove-lazy-bootstrap-arg",
    "created_at": "2023-02-06T21:59:32Z",
    "built_at": "2023-02-06T22:42:57Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9af62f32466f61f0d134eee490834e0c8d0e0305"
  },
  {
    "hash": "9b0401d3d443ae1f4681520a6e619b9f0dd7c853",
    "type": "commit",
    "created_at": "2024-03-25T10:36:04Z",
    "built_at": "2024-03-25T11:04:04Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9b0401d3d443ae1f4681520a6e619b9f0dd7c853",
    "build_started_at": "2024-03-25T10:36:42Z",
    "run_id": "8418747856"
  },
  {
    "hash": "9b381f51dabd8873fb8071adc40146bc1c27513c",
    "type": "pull_request",
    "pull_request": 4134,
    "label": "dsiganos:possible_fix_for_peer_container_list_fanout",
    "created_at": "2023-02-15T19:32:31Z",
    "built_at": "2023-02-15T20:16:27Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9b381f51dabd8873fb8071adc40146bc1c27513c"
  },
  {
    "hash": "9b38bb2eaf4cc315c5ca19bf07b4d1c98b9b1f2f",
    "type": "commit",
    "created_at": "2024-03-18T14:09:14Z",
    "built_at": "2024-03-18T14:39:12Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9b38bb2eaf4cc315c5ca19bf07b4d1c98b9b1f2f",
    "build_started_at": "2024-03-18T14:14:05Z",
    "run_id": "8328097024"
  },
  {
    "hash": "9b479fe68fe4295445fa32d79ad80ad710124974",
    "type": "pull_request",
    "pull_request": 3826,
    "label": "clemahieu:zero_account_filtering",
    "created_at": "2022-05-19T14:39:56Z",
    "built_at": "2023-02-05T04:09:31Z",
    "build_status": "fail",
    "docker_tag": ""
  },
  {
    "hash": "9b4b604b326f92c8246192f6fcb0802bb049d1b8",
    "type": "pull_request",
    "title": "Add per-bucket election limiter",
    "author": "clemahieu",
    "body": "This change is a simpler version of the priority scheduler per-bucket limiter that tracks the number of elections it's started while retaining the ability to queue blocks for activation once elections already started for the bucket complete.\r\n\r\nThis removes the priority scheduler thread. Elections are activated at time of call to ::activate or when a different election is being cleaned up.",
    "draft": false,
    "pull_request": 4623,
    "label": "clemahieu:merge_buckets_priority",
    "created_at": "2024-05-14T22:54:24Z",
    "built_at": "2024-05-15T07:35:36Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9b4b604b326f92c8246192f6fcb0802bb049d1b8",
    "build_started_at": "2024-05-15T07:08:06Z",
    "run_id": "9091444849"
  },
  {
    "hash": "9b6165519d7dd8b029debec20f0d6418170e83a2",
    "type": "commit",
    "created_at": "2024-01-25T12:43:30Z",
    "built_at": "2024-01-25T13:28:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9b6165519d7dd8b029debec20f0d6418170e83a2",
    "build_started_at": "2024-01-25T12:43:57Z",
    "run_id": "7654677940"
  },
  {
    "hash": "9b89148e7067de3d55ac250e31244085fb0c2f04",
    "type": "pull_request",
    "pull_request": 4423,
    "label": "pwojcikdev:election-block-rebroadcasting",
    "created_at": "2024-02-05T21:22:24Z",
    "built_at": "2024-02-05T22:02:58Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9b89148e7067de3d55ac250e31244085fb0c2f04",
    "build_started_at": "2024-02-05T21:26:18Z",
    "run_id": "7791049861"
  },
  {
    "hash": "9baeff2265f98fe8f358c89718b8c3521e6fc83c",
    "type": "pull_request",
    "pull_request": 4506,
    "label": "pwojcikdev:io-context-shared-ptr",
    "created_at": "2024-03-19T16:03:23Z",
    "built_at": "2024-03-19T16:54:16Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9baeff2265f98fe8f358c89718b8c3521e6fc83c",
    "build_started_at": "2024-03-19T16:26:30Z",
    "run_id": "8346639292"
  },
  {
    "hash": "9bb5164324567b158632612d2e70b9e3a0be81c4",
    "type": "pull_request",
    "pull_request": 4496,
    "label": "clemahieu:receivable_iteration",
    "created_at": "2024-03-16T20:04:42Z",
    "built_at": "2024-03-17T10:17:36Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9bb5164324567b158632612d2e70b9e3a0be81c4",
    "build_started_at": "2024-03-17T09:43:00Z",
    "run_id": "8314512620"
  },
  {
    "hash": "9bbbc089f5be1f99c2873d5f094109c4242bdc8c",
    "type": "commit",
    "created_at": "2023-09-13T14:34:30Z",
    "built_at": "2023-09-13T15:30:17Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9bbbc089f5be1f99c2873d5f094109c4242bdc8c"
  },
  {
    "hash": "9bc2f146c49abc18ecd416942feed5a2107b3114",
    "type": "pull_request",
    "pull_request": 4185,
    "label": "clemahieu:node_rep_weight_fix",
    "created_at": "2023-03-17T16:42:46Z",
    "built_at": "2023-03-19T17:54:43Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9bc2f146c49abc18ecd416942feed5a2107b3114"
  },
  {
    "hash": "9bcb65ca2434ce3bc78f37544e4ffaf2d673a326",
    "type": "commit",
    "created_at": "2024-03-07T17:12:10Z",
    "built_at": "2024-03-09T13:23:48Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9bcb65ca2434ce3bc78f37544e4ffaf2d673a326",
    "build_started_at": "2024-03-09T12:18:32Z",
    "run_id": "8214449124"
  },
  {
    "hash": "9be56a67f21c36af7c4d4b1872d2ec8c24c40abd",
    "type": "commit",
    "author": "dsiganos",
    "title": "Fix some confirmation_callback tests that use confirmation counters\n\nThe counters are incremented in a callback after confirmation happens,\nso the tests need to wait for the counters to be updated.",
    "pull_request": "4564",
    "created_at": "2024-04-14T20:54:33Z",
    "built_at": "2024-04-16T09:56:32Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9be56a67f21c36af7c4d4b1872d2ec8c24c40abd",
    "build_started_at": "2024-04-16T09:20:56Z",
    "run_id": "8703244225"
  },
  {
    "hash": "9bffe3b6f059e3b90290ec7033ce35b1f66470c4",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Database scan improvements (#4734)\n\n* Rename to `database_scan`\r\n\r\n* More efficient database scan iteration\r\n\r\n* Increase batch size\r\n\r\n* Comments",
    "pull_request": "4734",
    "created_at": "2024-09-30T13:40:22Z",
    "built_at": "2024-09-30T14:10:51Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9bffe3b6f059e3b90290ec7033ce35b1f66470c4",
    "build_started_at": "2024-09-30T13:43:50Z",
    "run_id": "11107419177"
  },
  {
    "hash": "9c101081700269df97f12862bda5ee58b220cd49",
    "type": "pull_request",
    "pull_request": 4449,
    "label": "pwojcikdev:repcrawler-overhaul-2",
    "created_at": "2024-02-25T14:21:12Z",
    "built_at": "2024-02-26T13:40:38Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9c101081700269df97f12862bda5ee58b220cd49",
    "build_started_at": "2024-02-26T13:15:58Z",
    "run_id": "8049502892"
  },
  {
    "hash": "9c2e7d85cfd01be452f09f7ebaec2246c16e969e",
    "type": "commit",
    "created_at": "2024-01-30T19:46:22Z",
    "built_at": "2024-01-30T20:20:32Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9c2e7d85cfd01be452f09f7ebaec2246c16e969e",
    "build_started_at": "2024-01-30T19:47:10Z",
    "run_id": "7716628165"
  },
  {
    "hash": "9c4bc9998e3a7a003ac76a5fb4a3b56e431ad372",
    "type": "commit",
    "author": "RickiNano",
    "title": "Update reps weights with current values",
    "pull_request": "N/A",
    "created_at": "2024-10-25T20:23:50Z",
    "built_at": "2024-10-29T15:01:00Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9c4bc9998e3a7a003ac76a5fb4a3b56e431ad372",
    "build_started_at": "2024-10-29T13:30:07Z",
    "run_id": "11576081769"
  },
  {
    "hash": "9c5de9b4a0602b5e9a8117142d3b575cc7ca4941",
    "type": "pull_request",
    "pull_request": 4466,
    "label": "dsiganos:minor_bugfix",
    "created_at": "2024-03-06T21:38:50Z",
    "built_at": "2024-03-06T22:08:29Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9c5de9b4a0602b5e9a8117142d3b575cc7ca4941",
    "build_started_at": "2024-03-06T21:43:10Z",
    "run_id": "8179168878"
  },
  {
    "hash": "9c72bebfb1c9b052abe5f6798c9d813862997914",
    "type": "commit",
    "created_at": "2024-03-22T09:28:00Z",
    "built_at": "2024-03-22T09:56:48Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9c72bebfb1c9b052abe5f6798c9d813862997914",
    "build_started_at": "2024-03-22T09:30:24Z",
    "run_id": "8388206042"
  },
  {
    "hash": "9c7d41787cdabab8e9a0f3b32deb755cfa44821f",
    "type": "pull_request",
    "title": "Add per-bucket election limiter",
    "author": "clemahieu",
    "body": "This change is a simpler version of the priority scheduler per-bucket limiter that tracks the number of elections it's started while retaining the ability to queue blocks for activation once elections already started for the bucket complete.\r\n\r\nThis removes the priority scheduler thread. Elections are activated at time of call to ::activate or when a different election is being cleaned up.",
    "draft": false,
    "pull_request": 4623,
    "label": "clemahieu:merge_buckets_priority",
    "created_at": "2024-05-14T22:54:24Z",
    "built_at": "2024-05-15T16:19:03Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9c7d41787cdabab8e9a0f3b32deb755cfa44821f",
    "build_started_at": "2024-05-15T15:52:28Z",
    "run_id": "9098830857"
  },
  {
    "hash": "9c82c4055e610d75d28d367e1d6e55094b104896",
    "type": "pull_request",
    "title": "Introduce ledger view classes to separate confirmed/unconfirmed operations on the ledger",
    "body": "The motivation for this PR is in preparation for bounded backlog changes. Currently, both confirmed and unconfirmed transactions are together on disk and the ACID properties of the ledger are encapsulated with a database transaction.\r\n\r\nWith the bounded backlog, blocks will be stored in memory so there will need to be memory synchronization in addition to database synchronization. Rather than filling the ledger class with unconfirmed/confirmed variants for each operation.\r\n\r\nThere are two views of the ledger:\r\nledger::confirmed () - Gives the view of the ledger only containing confirmed information\r\nledger::unconfirmed () - Gives a view of the ledger including unconfirmed information\r\nledger::operator->() - Syntax sugar to access unconfirmed view so calls that were previously of the form `ledger.get (...)` and would otherwise become `ledger.unconfirmed ().get (...)` can be written as `ledger->get (...)`",
    "draft": false,
    "pull_request": 4486,
    "label": "clemahieu:ledger_view",
    "created_at": "2024-03-12T14:33:24Z",
    "built_at": "2024-04-01T17:24:41Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-04-01T16:58:29Z",
    "run_id": "8510945858"
  },
  {
    "hash": "9c9c56bf59e7b5603e2b414120d179e0db4b5663",
    "type": "pull_request",
    "pull_request": 4209,
    "label": "clemahieu:throttle_if_needed_lock",
    "created_at": "2023-04-05T13:47:38Z",
    "built_at": "2023-04-05T14:25:50Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9c9c56bf59e7b5603e2b414120d179e0db4b5663"
  },
  {
    "hash": "9ca04cb97cd6c69e58c4ad2bb523d3bc42ebe7ad",
    "type": "pull_request",
    "title": "Cementing rate limiter",
    "author": "pwojcikdev",
    "body": "Part of bounded backlog PR https://github.com/nanocurrency/nano-node/pull/4787 that adds cementing rate limiter. This is not expected to be exposed to end-users but is necessary for inducing backlog during testing to test the bounded backlog behavior.",
    "draft": false,
    "pull_request": 4789,
    "label": "pwojcikdev:cementing-rate-limiter-pr",
    "created_at": "2024-11-25T15:55:20Z",
    "built_at": "2024-11-26T21:43:42Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9ca04cb97cd6c69e58c4ad2bb523d3bc42ebe7ad",
    "build_started_at": "2024-11-26T21:13:13Z",
    "run_id": "12039113306"
  },
  {
    "hash": "9cbb811fbc66cb36aa3101d798874d1144d2b092",
    "type": "pull_request",
    "pull_request": 4249,
    "label": "pwojcikdev:fix-docker-build-type",
    "created_at": "2023-06-22T12:37:44Z",
    "built_at": "2023-06-22T13:30:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9cbb811fbc66cb36aa3101d798874d1144d2b092"
  },
  {
    "hash": "9cc4b953fe6c1d2a49b9564dc03d91ccfef521df",
    "type": "pull_request",
    "title": "Fix stopping of bootstrap workers",
    "author": "pwojcikdev",
    "body": "Without this node attempting to stop live node would sometimes get stuck on `bootstrap_workers.stop ();` call.",
    "draft": false,
    "pull_request": 4667,
    "label": "pwojcikdev:fix-node-stopping",
    "created_at": "2024-07-02T17:14:46Z",
    "built_at": "2024-07-02T17:57:45Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9cc4b953fe6c1d2a49b9564dc03d91ccfef521df",
    "build_started_at": "2024-07-02T17:27:39Z",
    "run_id": "9765409450"
  },
  {
    "hash": "9cd662cc702ded070395f0c9610c75414bcbcaeb",
    "type": "commit",
    "author": "clemahieu",
    "title": "Fix race condition between election creation and vote_cache triggering (#4610)\n\nThe vote_cache is triggered after an election is created, and specifically after the active_elections mutex is released, which causes a race condition when checking the votes in an election.",
    "pull_request": "4610",
    "created_at": "2024-05-09T00:48:03Z",
    "built_at": "2024-05-09T02:44:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9cd662cc702ded070395f0c9610c75414bcbcaeb",
    "build_started_at": "2024-05-09T01:39:25Z",
    "run_id": "9011371730"
  },
  {
    "hash": "9ce6c54ff9717133f5e0111973d148a7de468941",
    "type": "pull_request",
    "title": "migrate_database_lmdb_to_rocksdb improvements",
    "author": "RickiNano",
    "body": "The `migrate_database_lmdb_to_rocksdb` option is running for a very long time with the current ledger size (almost 200 million blocks). On my local machine it took 65 minutes to complete. Nothing is written on screen during this process and users may think the process has stalled.\r\nThis PR adds some progress feedback. One update for each of the 7 tables that are migrated.\r\nIt also adds a simple disk space check to warn users if they might not have enough space to complete the migration.\r\n~~The current converted RocksDb database is 73 GB, and the warning is given if the system has less than 75GB available.~~\r\nThe warning is given based on the size of the LMDB database that is being migrated. The final RocksDb size is approximately 65% of the LMDB space.",
    "draft": false,
    "pull_request": 4647,
    "label": "RickiNano:lmdb-to-rocksdb",
    "created_at": "2024-06-13T10:47:31Z",
    "built_at": "2024-07-01T15:49:29Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9ce6c54ff9717133f5e0111973d148a7de468941",
    "build_started_at": "2024-07-01T15:13:40Z",
    "run_id": "9746771139"
  },
  {
    "hash": "9d02d03bcb85e77976939d9e17cfbea25252c815",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Bootstrap fixes (#4699)",
    "pull_request": "4699",
    "created_at": "2024-08-11T11:06:13Z",
    "built_at": "2024-08-11T11:38:28Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9d02d03bcb85e77976939d9e17cfbea25252c815",
    "build_started_at": "2024-08-11T11:10:58Z",
    "run_id": "10339276894"
  },
  {
    "hash": "9d131be9548d1e790fa5c5738bdfc1208a9d38d6",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Backlog scan callback event",
    "pull_request": "N/A",
    "created_at": "2024-10-11T14:24:50Z",
    "built_at": "2024-11-27T05:04:26Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9d131be9548d1e790fa5c5738bdfc1208a9d38d6",
    "build_started_at": "2024-11-27T00:59:54Z",
    "run_id": "12043813992"
  },
  {
    "hash": "9da00f1a7888b9075227d3f086f7996e9db65d85",
    "type": "commit",
    "created_at": "2024-03-12T18:29:52Z",
    "built_at": "2024-03-15T16:26:57Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9da00f1a7888b9075227d3f086f7996e9db65d85",
    "build_started_at": "2024-03-15T15:29:42Z",
    "run_id": "8298619683"
  },
  {
    "hash": "9dd8783ba30987c176ed2ace6887d96e71f52be0",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Randomize peer scoring channels",
    "pull_request": "4786",
    "created_at": "2024-11-11T19:11:51Z",
    "built_at": "2024-11-23T03:59:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9dd8783ba30987c176ed2ace6887d96e71f52be0",
    "build_started_at": "2024-11-22T23:40:48Z",
    "run_id": "11983725406"
  },
  {
    "hash": "9de0e0eb9a133fd2306a416f842782ad1722d2bb",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Do not query new channels on network thread in `rep_crawler`",
    "pull_request": "4772",
    "created_at": "2024-10-27T15:58:11Z",
    "built_at": "2024-11-27T17:35:28Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9de0e0eb9a133fd2306a416f842782ad1722d2bb",
    "build_started_at": "2024-11-27T16:18:37Z",
    "run_id": "12055094783"
  },
  {
    "hash": "9e17b25cdf92834dc2b3b0ab05a8ea259f4b4911",
    "type": "pull_request",
    "pull_request": 4112,
    "label": "RickiNano:ipv6-telemetry-test",
    "created_at": "2023-02-08T19:29:40Z",
    "built_at": "2023-02-08T20:05:21Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9e17b25cdf92834dc2b3b0ab05a8ea259f4b4911"
  },
  {
    "hash": "9e2303222b916d14bc68f87e51e09980e87fc083",
    "type": "commit",
    "created_at": "2024-01-26T17:35:11Z",
    "built_at": "2024-01-26T18:06:26Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9e2303222b916d14bc68f87e51e09980e87fc083",
    "build_started_at": "2024-01-26T17:40:40Z",
    "run_id": "7671492699"
  },
  {
    "hash": "9e692a40d0b38bb0d83e9f07ddad474efbb6fd24",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge pull request #4792 from pwojcikdev/random-block-sampling\n\nRework random block sampling for rep crawler",
    "pull_request": "4792",
    "created_at": "2024-11-26T15:04:07Z",
    "built_at": "2024-11-26T16:01:29Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9e692a40d0b38bb0d83e9f07ddad474efbb6fd24",
    "build_started_at": "2024-11-26T15:12:14Z",
    "run_id": "12033892408"
  },
  {
    "hash": "9e7329cf356add29c743f21b93649c255fee7bfe",
    "type": "pull_request",
    "title": "Fix and re-enable unit test rpc.wallet_history",
    "author": "dsiganos",
    "body": "It appears that the problme was that a timestamp was checked for exactness instead of chacking for a time range.\r\n\r\nfixes #3514 ",
    "draft": false,
    "pull_request": 4552,
    "label": "dsiganos:fix_rpc_wallet_history",
    "created_at": "2024-04-12T12:58:47Z",
    "built_at": "2024-04-12T13:34:01Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9e7329cf356add29c743f21b93649c255fee7bfe",
    "build_started_at": "2024-04-12T13:08:22Z",
    "run_id": "8662578713"
  },
  {
    "hash": "9e7fae6c443f5e24f94cfb1d356ee31ace2bde4a",
    "type": "pull_request",
    "title": "Extend election lifetime when receiving new votes",
    "body": "This PR adds a dynamic Time-To-Live on elections to improve the AEC alignment and efficiency during heavy load. \r\n\r\nThe TTL has been reduced to 30 seconds for normal elections and 10 seconds for hinted and optimistic elections but is extended every time a new vote arrive.\r\n\r\nBlocks that are not getting any votes are getting evicted from AEC much earlier, while blocks with active voting have a higher chance of staying in the AEC and reach confirmation.\r\n\r\nRelated issue: #4352",
    "draft": false,
    "pull_request": 4527,
    "label": "RickiNano:Active-election-time-out",
    "created_at": "2024-03-30T09:30:57Z",
    "built_at": "2024-03-30T13:38:46Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9e7fae6c443f5e24f94cfb1d356ee31ace2bde4a",
    "build_started_at": "2024-03-30T13:10:19Z",
    "run_id": "8491004983"
  },
  {
    "hash": "9e865218ba1a1ce6f26bc10410b6e30ebf7e258b",
    "type": "pull_request",
    "title": "Cementing fixes",
    "author": "pwojcikdev",
    "body": "Builds on https://github.com/nanocurrency/nano-node/pull/4720",
    "draft": false,
    "pull_request": 4722,
    "label": "pwojcikdev:fix-cementing",
    "created_at": "2024-09-05T15:25:12Z",
    "built_at": "2024-09-05T16:08:02Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9e865218ba1a1ce6f26bc10410b6e30ebf7e258b",
    "build_started_at": "2024-09-05T15:30:43Z",
    "run_id": "10723648587"
  },
  {
    "hash": "9efd84972ee89030f337964f4528041b9e716212",
    "type": "commit",
    "author": "clemahieu",
    "title": "Removing lines in build scripts because bash. (#4765)",
    "pull_request": "4765",
    "created_at": "2024-10-23T05:42:09Z",
    "built_at": "2024-10-23T06:18:45Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9efd84972ee89030f337964f4528041b9e716212",
    "build_started_at": "2024-10-23T05:48:12Z",
    "run_id": "11473852595"
  },
  {
    "hash": "9f0157699bdecd01197785805e97307b757102cb",
    "type": "commit",
    "created_at": "2024-03-12T10:12:08Z",
    "built_at": "2024-03-22T18:59:31Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9f0157699bdecd01197785805e97307b757102cb",
    "build_started_at": "2024-03-22T17:19:57Z",
    "run_id": "8394068316"
  },
  {
    "hash": "9f10d0697c6dfd133950683f51423afa34758a58",
    "type": "pull_request",
    "pull_request": 4425,
    "label": "clemahieu:remove_frontiers_table",
    "created_at": "2024-02-10T18:21:12Z",
    "built_at": "2024-02-10T18:51:21Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9f10d0697c6dfd133950683f51423afa34758a58",
    "build_started_at": "2024-02-10T18:27:09Z",
    "run_id": "7856687455"
  },
  {
    "hash": "9f19e657c96baa9de57ad5786bfb826fc0ac506b",
    "type": "pull_request",
    "title": "Optimize cemented callbacks",
    "author": "pwojcikdev",
    "body": "This attempts to optimize the election cementing callbacks. It often takes as long or even longer to cement a confirmed election as it takes to get it confirmed in the first place. This is not a complete solution, there is still a delay, but I hope it's a step in the right direction. \r\nWe're debugging this together with @gr0vity-dev who really is doing incredible work to dig deep into this issue.\r\n\r\n![image](https://github.com/nanocurrency/nano-node/assets/3044353/006a4fc1-d499-478a-a372-7b5240b7ef01)\r\n",
    "draft": false,
    "pull_request": 4642,
    "label": "pwojcikdev:cemented-observers-optimize",
    "created_at": "2024-05-24T13:34:30Z",
    "built_at": "2024-05-24T21:25:17Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9f19e657c96baa9de57ad5786bfb826fc0ac506b",
    "build_started_at": "2024-05-24T20:57:17Z",
    "run_id": "9229835129"
  },
  {
    "hash": "9f2d7280ce1c3f2c9253dc9fa4ed71a38b7ef316",
    "type": "pull_request",
    "pull_request": 4425,
    "label": "clemahieu:remove_frontiers_table",
    "created_at": "2024-02-10T18:21:12Z",
    "built_at": "2024-03-05T17:10:29Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9f2d7280ce1c3f2c9253dc9fa4ed71a38b7ef316",
    "build_started_at": "2024-03-05T16:35:57Z",
    "run_id": "8159768660"
  },
  {
    "hash": "9f3293e295113c9272c930c444fdad1e77ae9cee",
    "type": "pull_request",
    "pull_request": 4455,
    "label": "pwojcikdev:vote-processor-start-stop",
    "created_at": "2024-03-05T07:52:02Z",
    "built_at": "2024-03-05T08:22:58Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9f3293e295113c9272c930c444fdad1e77ae9cee",
    "build_started_at": "2024-03-05T07:57:14Z",
    "run_id": "8152818984"
  },
  {
    "hash": "9f4459421b64d494e1ac226675826f906bf9c578",
    "type": "pull_request",
    "title": "Ascending bootstrap dependency resolution",
    "author": "pwojcikdev",
    "body": "This is the first part of our (mine & @gr0vity-dev) work on improving ascending bootstrapper. This part contains a new dependency resolution strategy among a few other smaller improvements.\r\n\r\nAn example of how it dependency resolution process works: let's have three accounts A, B, C. A depends on a transaction sent by B, and B depends on a transaction sent by C. Let's now assume we have a ledger that is not synced 100%, might be because we're doing an initial sync or our node was offline for a while. If account A performs a new live transaction, we can't process it immediately, because we're still missing chains for B & C. In the previous version resolving these dependencies was slow, as it was relying on sequential sampling of the whole ledger. With this improved algorithm, we first add account A to the blocking set, resolve its dependency as account B, since B is blocked we repeat the same process for B, finally arriving at account C that unblocks all these chains.",
    "draft": false,
    "pull_request": 4692,
    "label": "pwojcikdev:dependency-walking-rebased",
    "created_at": "2024-08-05T16:36:15Z",
    "built_at": "2024-08-05T21:06:25Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9f4459421b64d494e1ac226675826f906bf9c578",
    "build_started_at": "2024-08-05T20:35:54Z",
    "run_id": "10255678012"
  },
  {
    "hash": "9f45621c4d58aa54af1c23cc13cbfef75a04ead1",
    "type": "pull_request",
    "pull_request": 4496,
    "label": "clemahieu:receivable_iteration",
    "created_at": "2024-03-16T20:04:42Z",
    "built_at": "2024-03-18T15:15:00Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9f45621c4d58aa54af1c23cc13cbfef75a04ead1",
    "build_started_at": "2024-03-18T14:49:26Z",
    "run_id": "8328664557"
  },
  {
    "hash": "9f4d4f35eaee897ba811c89256773875ff631b88",
    "type": "pull_request",
    "pull_request": 3766,
    "label": "Exxenoz:opt_iterable_store",
    "created_at": "2022-03-29T19:12:12Z",
    "built_at": "2023-02-05T04:16:56Z",
    "build_status": "fail",
    "docker_tag": ""
  },
  {
    "hash": "9f54c87dc6f685f474c2249c37ba90d75fb32dd2",
    "type": "commit",
    "created_at": "2023-04-21T15:12:10Z",
    "built_at": "2023-04-21T16:11:10Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9f54c87dc6f685f474c2249c37ba90d75fb32dd2"
  },
  {
    "hash": "9f682b49a4f4f7cc1e9488378e31835f870d6c51",
    "type": "commit",
    "created_at": "2023-03-01T11:28:12Z",
    "built_at": "2023-03-01T12:07:19Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9f682b49a4f4f7cc1e9488378e31835f870d6c51"
  },
  {
    "hash": "9f73b209b4d25168dcb5048b7813d6cd3c31a7b8",
    "type": "pull_request",
    "title": "Remove `node::process_confirmed (...)`",
    "author": "pwojcikdev",
    "body": "This removes the `node::process_confirmed (...)` function. Blocks queued there could briefly find themselves in a limbo state, neither part of an active election or cementing set, which was racy.",
    "draft": false,
    "pull_request": 4758,
    "label": "pwojcikdev:remove-process-confirmed",
    "created_at": "2024-10-18T16:23:32Z",
    "built_at": "2024-10-19T09:57:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9f73b209b4d25168dcb5048b7813d6cd3c31a7b8",
    "build_started_at": "2024-10-19T09:27:18Z",
    "run_id": "11416439889"
  },
  {
    "hash": "9f89fb8490737a9af7ea93506ca45b6cfa9ddc12",
    "type": "pull_request",
    "pull_request": 4443,
    "label": "clemahieu:ledger_process_ptr",
    "created_at": "2024-02-20T18:52:05Z",
    "built_at": "2024-02-20T19:19:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9f89fb8490737a9af7ea93506ca45b6cfa9ddc12",
    "build_started_at": "2024-02-20T18:53:42Z",
    "run_id": "7978540757"
  },
  {
    "hash": "9fb347f5c0aec1aa0798e43dd329b7d9301da1fc",
    "type": "pull_request",
    "pull_request": 4498,
    "label": "pwojcikdev:networking-fixes-double-binding",
    "created_at": "2024-03-18T17:22:02Z",
    "built_at": "2024-03-18T18:14:04Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9fb347f5c0aec1aa0798e43dd329b7d9301da1fc",
    "build_started_at": "2024-03-18T17:23:47Z",
    "run_id": "8330952865"
  },
  {
    "hash": "9fccf320dc2d5e6e94a91af36da11179203294bb",
    "type": "pull_request",
    "pull_request": 4219,
    "label": "clemahieu:set_bandwidth_params_tsan",
    "created_at": "2023-04-24T16:27:41Z",
    "built_at": "2023-04-24T17:40:37Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9fccf320dc2d5e6e94a91af36da11179203294bb"
  },
  {
    "hash": "9ff68c1cfa0b6a14e39125577c92a34c7ee03a21",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Fix mismatched channel owners (#4750)\n\n* Move `node.inbound ()`\r\n\r\n* Assert channel owner\r\n\r\n* Fix tests",
    "pull_request": "4750",
    "created_at": "2024-10-16T09:54:21Z",
    "built_at": "2024-10-16T10:36:15Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:9ff68c1cfa0b6a14e39125577c92a34c7ee03a21",
    "build_started_at": "2024-10-16T10:07:53Z",
    "run_id": "11363478276"
  },
  {
    "hash": "a024cf7005af634588ae849d9e56ea776217d29b",
    "type": "commit",
    "created_at": "2023-02-08T22:52:36Z",
    "built_at": "2023-02-08T23:24:40Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a024cf7005af634588ae849d9e56ea776217d29b"
  },
  {
    "hash": "a0410919628b799b424fda76708418f3baf83d15",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Stats",
    "pull_request": "N/A",
    "created_at": "2024-05-24T10:33:55Z",
    "built_at": "2024-06-18T15:55:36Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a0410919628b799b424fda76708418f3baf83d15",
    "build_started_at": "2024-06-18T14:35:34Z",
    "run_id": "9567875642"
  },
  {
    "hash": "a04f0789a3253d6dc37733973ee227abbe826971",
    "type": "commit",
    "created_at": "2024-01-21T18:32:28Z",
    "built_at": "2024-01-21T19:03:23Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a04f0789a3253d6dc37733973ee227abbe826971",
    "build_started_at": "2024-01-21T18:38:04Z",
    "run_id": "7603126932"
  },
  {
    "hash": "a05d152a1bd654fdd204263a652c0be7bf6e56d1",
    "type": "pull_request",
    "pull_request": 4477,
    "label": "RickiNano:toml-description-rename",
    "created_at": "2024-03-11T15:42:34Z",
    "built_at": "2024-03-11T16:11:49Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a05d152a1bd654fdd204263a652c0be7bf6e56d1",
    "build_started_at": "2024-03-11T15:45:34Z",
    "run_id": "8235699762"
  },
  {
    "hash": "a0960bcd3284f589d471f7f9578cc25d5397cf67",
    "type": "pull_request",
    "pull_request": 4144,
    "label": "pwojcikdev:ci/separate-windows-build-run",
    "created_at": "2023-02-19T18:19:10Z",
    "built_at": "2023-02-19T18:49:18Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a0960bcd3284f589d471f7f9578cc25d5397cf67"
  },
  {
    "hash": "a0b1f28791daa8febab172c3e2715e1415bf7947",
    "type": "commit",
    "created_at": "2024-03-10T16:55:17Z",
    "built_at": "2024-03-10T22:10:04Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a0b1f28791daa8febab172c3e2715e1415bf7947",
    "build_started_at": "2024-03-10T20:14:43Z",
    "run_id": "8224504096"
  },
  {
    "hash": "a0ba5b14dc61e3b083b1278b65cbdb87fa1034d0",
    "type": "pull_request",
    "pull_request": 4250,
    "label": "gr0vity-dev:wip/unified_artifacts_worflow",
    "created_at": "2023-06-22T15:06:28Z",
    "built_at": "2023-07-02T09:40:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a0ba5b14dc61e3b083b1278b65cbdb87fa1034d0"
  },
  {
    "hash": "a0c1bd0f147620ec92855dd5aff1d41c9eb2efa4",
    "type": "pull_request",
    "pull_request": 4299,
    "label": "pwojcikdev:fix-duplicate-linking",
    "created_at": "2023-09-26T23:26:50Z",
    "built_at": "2023-09-27T17:27:48Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a0c1bd0f147620ec92855dd5aff1d41c9eb2efa4"
  },
  {
    "hash": "a0dd56cc8ad07832d4f494ab627dae6eb1472089",
    "type": "commit",
    "created_at": "2023-02-15T12:07:31Z",
    "built_at": "2023-02-15T13:03:31Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a0dd56cc8ad07832d4f494ab627dae6eb1472089"
  },
  {
    "hash": "a126fcc6c9be748fb52946dcbee6f7a9719a3cfc",
    "type": "pull_request",
    "title": "Bounded election buckets with dynamic reprioritization",
    "author": "pwojcikdev",
    "body": "Based on:\r\n- Elections sets (can't find PR, Colin's initial attempt at bucket limiting)\r\n- Bobs bucket vacancy branch https://github.com/nanocurrency/nano-node/compare/develop...gr0vity-dev:nano-node:wip/bucket_vacancy \r\n\r\nbut simpler, more robust and allows for dynamically dropping and scheduling higher priority elections. Also, buckets can be configured to opportunistically use more available space if AEC is underutilized.",
    "draft": false,
    "pull_request": 4626,
    "label": "pwojcikdev:election-bounding-2",
    "created_at": "2024-05-15T16:21:38Z",
    "built_at": "2024-07-10T12:13:47Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a126fcc6c9be748fb52946dcbee6f7a9719a3cfc",
    "build_started_at": "2024-07-10T11:36:20Z",
    "run_id": "9873541108"
  },
  {
    "hash": "a16fd71ae60295653882ce96681e46427dbe8719",
    "type": "pull_request",
    "pull_request": 4486,
    "label": "clemahieu:ledger_view",
    "created_at": "2024-03-12T14:33:24Z",
    "built_at": "2024-03-17T19:05:17Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-17T18:50:01Z",
    "run_id": "8317565488"
  },
  {
    "hash": "a187ca80454a495aa0e13b5f7bc97b072f061c6e",
    "type": "pull_request",
    "pull_request": 4091,
    "label": "dsiganos:fix_fork_publish_inactive",
    "created_at": "2023-01-31T12:57:54Z",
    "built_at": "2023-02-08T18:46:23Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a187ca80454a495aa0e13b5f7bc97b072f061c6e"
  },
  {
    "hash": "a1a0a9fbaab1f3f0e4b690e2fbe09be31e08aaed",
    "type": "pull_request",
    "pull_request": 4205,
    "label": "clemahieu:bootstrap_ascending_throttling",
    "created_at": "2023-04-04T15:28:57Z",
    "built_at": "2023-04-04T16:15:11Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a1a0a9fbaab1f3f0e4b690e2fbe09be31e08aaed"
  },
  {
    "hash": "a1bee12bcd08a0aa0ec75b612d9b02445f2f4c79",
    "type": "pull_request",
    "title": "Fix race conditions in accessing election confirmation counters ",
    "author": "dsiganos",
    "body": null,
    "draft": false,
    "pull_request": 4564,
    "label": "dsiganos:fix_active_transactions_activate_inactive",
    "created_at": "2024-04-14T21:04:36Z",
    "built_at": "2024-04-15T05:22:44Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a1bee12bcd08a0aa0ec75b612d9b02445f2f4c79",
    "build_started_at": "2024-04-14T22:18:13Z",
    "run_id": "8683619295"
  },
  {
    "hash": "a1cc7a5a8c044746d6e05a9316c055b858002da1",
    "type": "commit",
    "created_at": "2023-09-27T18:28:43Z",
    "built_at": "2023-09-27T19:31:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a1cc7a5a8c044746d6e05a9316c055b858002da1"
  },
  {
    "hash": "a1d7cdc47c29a89c71e228522c6a12c2ae3d5a66",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Dynamic bucket threshold",
    "pull_request": "4787",
    "created_at": "2024-11-28T20:15:16Z",
    "built_at": "2024-11-29T17:43:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a1d7cdc47c29a89c71e228522c6a12c2ae3d5a66",
    "build_started_at": "2024-11-29T15:39:54Z",
    "run_id": "12088519253"
  },
  {
    "hash": "a1e359bae7a53de665c03b189a0ed9b6865689a6",
    "type": "commit",
    "created_at": "2023-01-31T21:32:37Z",
    "built_at": "2023-02-06T21:09:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a1e359bae7a53de665c03b189a0ed9b6865689a6"
  },
  {
    "hash": "a1f3d7ed00700f3412948725c05eb47bf122b0b3",
    "type": "pull_request",
    "pull_request": 4454,
    "label": "pwojcikdev:block-broadcaster-2",
    "created_at": "2024-03-04T16:29:07Z",
    "built_at": "2024-03-04T17:03:53Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a1f3d7ed00700f3412948725c05eb47bf122b0b3",
    "build_started_at": "2024-03-04T16:38:34Z",
    "run_id": "8143765258"
  },
  {
    "hash": "a216b1508d51b804ea357bf82adef093d5099433",
    "type": "pull_request",
    "title": "Traffic shaping",
    "author": "pwojcikdev",
    "body": "This is a draft PR for an ongoing work that overhauls how outgoing traffic is handled and prioritized. This will significantly improve how the node handles network congestion, which is extremely important during spam.\r\n\r\nDepends on PRs:\r\nhttps://github.com/nanocurrency/nano-node/pull/4784",
    "draft": false,
    "pull_request": 4786,
    "label": "pwojcikdev:traffic-shaping-pr",
    "created_at": "2024-11-18T19:43:02Z",
    "built_at": "2024-12-17T18:23:21Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a216b1508d51b804ea357bf82adef093d5099433",
    "build_started_at": "2024-12-17T17:55:48Z",
    "run_id": "12378641507"
  },
  {
    "hash": "a2368a6ccd7828bfa878081a42220a0fd711d969",
    "type": "pull_request",
    "title": "Remove `node::process_confirmed (...)`",
    "author": "pwojcikdev",
    "body": "This removes the `node::process_confirmed (...)` function. Blocks queued there could briefly find themselves in a limbo state, neither part of an active election or cementing set, which was racy.",
    "draft": false,
    "pull_request": 4758,
    "label": "pwojcikdev:remove-process-confirmed",
    "created_at": "2024-10-18T16:23:32Z",
    "built_at": "2024-10-20T14:58:53Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a2368a6ccd7828bfa878081a42220a0fd711d969",
    "build_started_at": "2024-10-20T14:27:52Z",
    "run_id": "11427124243"
  },
  {
    "hash": "a23deff88e0b75c749a7ee01bd7671a2b23d9e5b",
    "type": "commit",
    "author": "clemahieu",
    "title": "Forward declare nano::transport::fake::channel",
    "pull_request": "4776",
    "created_at": "2024-10-28T22:15:25Z",
    "built_at": "2024-10-31T06:38:24Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-10-31T03:33:18Z",
    "run_id": "11607131057"
  },
  {
    "hash": "a249a9791c5228f704261287bda603031220fae3",
    "type": "pull_request",
    "pull_request": 3923,
    "label": "nanocurrency:remove-upd-support-from-peer-container-tests",
    "created_at": "2022-08-26T21:20:38Z",
    "built_at": "2023-02-05T05:00:50Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a249a9791c5228f704261287bda603031220fae3"
  },
  {
    "hash": "a29b618296c94e51588d85bf51ce8ee307239a48",
    "type": "pull_request",
    "title": "Optimize election scheduler activate function",
    "author": "pwojcikdev",
    "body": "This reverts some of the changes made during refactoring to block sets. The new versions were doing many redundant database lookups, which started to become a bottleneck.",
    "draft": false,
    "pull_request": 4636,
    "label": "pwojcikdev:revert-activate-develop",
    "created_at": "2024-05-22T12:48:37Z",
    "built_at": "2024-05-22T13:43:39Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a29b618296c94e51588d85bf51ce8ee307239a48",
    "build_started_at": "2024-05-22T13:17:09Z",
    "run_id": "9192057430"
  },
  {
    "hash": "a29f9291627932b297209a799f1fc88e88e08a8e",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Priority scheduler config",
    "pull_request": "N/A",
    "created_at": "2024-05-12T10:53:17Z",
    "built_at": "2024-05-14T14:24:58Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a29f9291627932b297209a799f1fc88e88e08a8e",
    "build_started_at": "2024-05-14T11:08:37Z",
    "run_id": "9080651977"
  },
  {
    "hash": "a2bc018c47ebeaa999713374cff5a2e8edf17fdb",
    "type": "pull_request",
    "pull_request": 4383,
    "label": "dsiganos:fix_bootstrap_unit_tests",
    "created_at": "2024-01-21T13:11:59Z",
    "built_at": "2024-01-25T18:42:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a2bc018c47ebeaa999713374cff5a2e8edf17fdb",
    "build_started_at": "2024-01-25T18:15:37Z",
    "run_id": "7658741484"
  },
  {
    "hash": "a2c5eaaf4761177bfe0ece6ac1714440533668fb",
    "type": "pull_request",
    "pull_request": 4213,
    "label": "thsfs:bootstrap_ascending_class_files_split",
    "created_at": "2023-04-07T13:02:58Z",
    "built_at": "2023-04-11T14:11:38Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a2c5eaaf4761177bfe0ece6ac1714440533668fb"
  },
  {
    "hash": "a2f9e181747b59a6e573b8dbcebaec75f0c87d05",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge pull request #4695 from pwojcikdev/disable-telemetry-replies\n\nDisable telemetry replies",
    "pull_request": "4695",
    "created_at": "2024-08-22T08:17:17Z",
    "built_at": "2024-08-22T09:00:58Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a2f9e181747b59a6e573b8dbcebaec75f0c87d05",
    "build_started_at": "2024-08-22T08:29:05Z",
    "run_id": "10504570464"
  },
  {
    "hash": "a2ff7b28be12b71312d4e995a0fca4a0f64e91b8",
    "type": "pull_request",
    "title": "Convert rep_weights mutex to a shared_mutex since the majority of time it's being read",
    "author": "clemahieu",
    "body": null,
    "draft": false,
    "pull_request": 4628,
    "label": "clemahieu:rep_weights_shared_mutex",
    "created_at": "2024-05-18T14:30:38Z",
    "built_at": "2024-05-18T15:02:53Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a2ff7b28be12b71312d4e995a0fca4a0f64e91b8",
    "build_started_at": "2024-05-18T14:33:25Z",
    "run_id": "9140591026"
  },
  {
    "hash": "a3026afca1560d477d13fc5ebb1688dda999de38",
    "type": "commit",
    "created_at": "2023-04-24T15:49:33Z",
    "built_at": "2023-04-24T16:24:30Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a3026afca1560d477d13fc5ebb1688dda999de38"
  },
  {
    "hash": "a304dd5617e82f4a176008c43eef79131a0f3736",
    "type": "commit",
    "title": "Adding const to ledger::weight* functions. (#4534)",
    "pull_request": "4534",
    "created_at": "2024-04-04T08:04:05Z",
    "built_at": "2024-04-04T08:46:10Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a304dd5617e82f4a176008c43eef79131a0f3736",
    "build_started_at": "2024-04-04T08:19:28Z",
    "run_id": "8551478156"
  },
  {
    "hash": "a323b6b631e09a551eb156ebd0f5f8c2875b7a53",
    "type": "pull_request",
    "pull_request": 4173,
    "label": "clemahieu:flatbuffer_version_bump",
    "created_at": "2023-03-06T11:18:55Z",
    "built_at": "2023-03-06T18:08:38Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a323b6b631e09a551eb156ebd0f5f8c2875b7a53"
  },
  {
    "hash": "a39259bdfdca747ff0f3514d1c5dfd6389398744",
    "type": "commit",
    "created_at": "2024-02-11T18:32:56Z",
    "built_at": "2024-02-11T19:00:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a39259bdfdca747ff0f3514d1c5dfd6389398744",
    "build_started_at": "2024-02-11T18:33:37Z",
    "run_id": "7863925504"
  },
  {
    "hash": "a3972fbfda55b4b6548283b60d008dd321582b1b",
    "type": "pull_request",
    "title": "Move confirmation processing on to worker threads rather than io threads.",
    "author": "clemahieu",
    "body": null,
    "draft": false,
    "pull_request": 4634,
    "label": "clemahieu:confirm_worker_thread",
    "created_at": "2024-05-21T15:51:39Z",
    "built_at": "2024-05-21T16:28:24Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a3972fbfda55b4b6548283b60d008dd321582b1b",
    "build_started_at": "2024-05-21T15:56:49Z",
    "run_id": "9177618678"
  },
  {
    "hash": "a3a2a5f1a2f9baa1d1c9cbc3d0d0306fb04dcbfc",
    "type": "pull_request",
    "pull_request": 4211,
    "label": "clemahieu:bootstrap_channel_scoring",
    "created_at": "2023-04-05T17:07:44Z",
    "built_at": "2023-04-14T10:57:52Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a3a2a5f1a2f9baa1d1c9cbc3d0d0306fb04dcbfc"
  },
  {
    "hash": "a3ea5fae31b7cec441aa6f7bf5ababe8b2d4b95f",
    "type": "pull_request",
    "title": "Redesign the priority scheduler to maintain a 1-to-1 link with running elections",
    "author": "clemahieu",
    "body": "This change appropriately prioritises elections by bucket and then by LRU account. Overfilled buckets have the lowest priority block election cancelled and rolled back.",
    "draft": true,
    "pull_request": 4593,
    "label": "clemahieu:priority_limiter",
    "created_at": "2024-04-30T12:53:50Z",
    "built_at": "2024-05-06T15:20:24Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a3ea5fae31b7cec441aa6f7bf5ababe8b2d4b95f",
    "build_started_at": "2024-05-06T14:51:01Z",
    "run_id": "8971107485"
  },
  {
    "hash": "a40bdcd47049668526e834110a22c88601f705b8",
    "type": "commit",
    "created_at": "2023-09-22T14:12:20Z",
    "built_at": "2023-09-22T15:13:40Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a40bdcd47049668526e834110a22c88601f705b8"
  },
  {
    "hash": "a41716eb89067b36dbb4e13ea4defabfd53c3493",
    "type": "pull_request",
    "pull_request": 4380,
    "label": "gr0vity-dev:prs/respect_protected_branch",
    "created_at": "2024-01-21T09:12:31Z",
    "built_at": "2024-01-23T14:39:21Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a41716eb89067b36dbb4e13ea4defabfd53c3493",
    "build_started_at": "2024-01-23T14:14:12Z",
    "run_id": "7627018710"
  },
  {
    "hash": "a42aaf9db86d8e5196673073b66ea9741fa3137b",
    "type": "commit",
    "created_at": "2023-09-04T00:30:41Z",
    "built_at": "2023-09-05T12:24:43Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a42aaf9db86d8e5196673073b66ea9741fa3137b"
  },
  {
    "hash": "a4614215d030cfcb3b39799fd4ded2f72bbb3f63",
    "type": "pull_request",
    "title": "Make election behavior mutable to support dynamic behaviour transition",
    "author": "gr0vity-dev",
    "body": "Problem:\r\n- Elections are currently immutable and can't be transitioned to priority status\r\n- Causing delays for optimistic elections rescheduled by priority scheduler as the next Vote broadcast is fixed to 15-second intervals. (by `network.vote_broadcast_interval`)\r\n\r\nChanges:\r\n- Modifies election behavior to be mutable, allowing elections (optimistic/hinted/...) to be transitioned to priority status\r\n- Added ability to trigger immediate vote broadcasts on transition without waiting for the next 15-second round\r\n\r\nBenefits:\r\n- It would allow for more aggressive use of optimistic elections (to narrow the gap between checked and cemented during bootstrapping) \r\n  - currently configured to accounts with gap_threshold of 32 could be reduced to 4\r\n- Maintain quick response times for live traffic by allowing election behavior changes.",
    "draft": false,
    "pull_request": 4799,
    "label": "gr0vity-dev:prs/upgrade_elections",
    "created_at": "2024-11-30T09:50:16Z",
    "built_at": "2024-12-01T16:45:04Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a4614215d030cfcb3b39799fd4ded2f72bbb3f63",
    "build_started_at": "2024-12-01T16:17:50Z",
    "run_id": "12106694302"
  },
  {
    "hash": "a464acce417334491404b4726921140cdd29c436",
    "type": "pull_request",
    "title": "Separate vote_router from active_transactions",
    "author": "clemahieu",
    "body": "This change is to simplify the active_transactions class which has many responsibilities around election management. This change separates the responsibility of routing votes to their respective elections from other responsibilities inside active_transactions.\r\n\r\nThe mapping hash -> election in nano::active_transactions::blocks is moved into a new class nano::vote_router. Vote processing logic is moved from nano::active_transactions::vote to nano::vote_router::vote.\r\n\r\nnano::vote_router changes the behavior from active_transactions::blocks in that it does not own the lifetime of elections. Only a weak_ptr to election is held and a background thread cleans up orphaned routes periodically.\r\n\r\nnano::vote_code and nano::vote_source are moved into the vote_router.hpp file and forward declared when possible.",
    "draft": false,
    "pull_request": 4607,
    "label": "clemahieu:vote_router",
    "created_at": "2024-05-07T13:47:40Z",
    "built_at": "2024-05-07T14:56:15Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a464acce417334491404b4726921140cdd29c436",
    "build_started_at": "2024-05-07T13:51:35Z",
    "run_id": "8987133113"
  },
  {
    "hash": "a47da679a9de942ae77cfdac61c12a1c83cf313d",
    "type": "commit",
    "created_at": "2024-03-21T20:20:10Z",
    "built_at": "2024-03-22T09:38:07Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a47da679a9de942ae77cfdac61c12a1c83cf313d",
    "build_started_at": "2024-03-22T08:48:02Z",
    "run_id": "8387719129"
  },
  {
    "hash": "a48adc29ecf72d2f22aad046f51ff2efcadc0839",
    "type": "commit",
    "author": "clemahieu",
    "title": "Move ledger::pending_info on to ledger set get",
    "pull_request": "4593",
    "created_at": "2024-03-12T10:37:51Z",
    "built_at": "2024-04-30T17:05:58Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a48adc29ecf72d2f22aad046f51ff2efcadc0839",
    "build_started_at": "2024-04-30T13:34:48Z",
    "run_id": "8898472968"
  },
  {
    "hash": "a4f2164cef9adf89b1d5aecdca0a527ac8c29b92",
    "type": "pull_request",
    "title": "Peer cache",
    "author": "pwojcikdev",
    "body": "This introduces a new `peer_cache` component that is responsible for storing and managing cached peers. Previously storing peers was done by `tcp_channels` and loading by `node`, which is not the core responsibility of these classes.\r\nPrevious behavior was that only the latest set of peers was stored (ie. cache was cleared before every write). Now the cache keeps track of peers up to a certain cutoff age (by default 1 hour).\r\nAnother behavior change is that network reachout thread tries to contact cached peers. Previously this was only done once, on node startup. This should help with resiliency if for some reason node temporarily loses connection to a peer (eg. due to network outage).",
    "draft": false,
    "pull_request": 4574,
    "label": "pwojcikdev:cached-peers-2",
    "created_at": "2024-04-17T11:34:31Z",
    "built_at": "2024-04-17T12:12:15Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a4f2164cef9adf89b1d5aecdca0a527ac8c29b92",
    "build_started_at": "2024-04-17T11:40:01Z",
    "run_id": "8721306960"
  },
  {
    "hash": "a4f8bdb859efd3be52c4cb61a49785f23018d2e5",
    "type": "pull_request",
    "title": "Fix windows tests",
    "author": "RickiNano",
    "body": "The timeout command behaves differently in windows than linux and mac. In windows it will pause for the specified value before continuing the script.\r\nThis PR enables windows system tests to be launched from a native Windows command prompt instead of the bash and use the build in timeout function (in milliseconds)",
    "draft": false,
    "pull_request": 4571,
    "label": "RickiNano:fix-windows-tests",
    "created_at": "2024-04-17T09:21:55Z",
    "built_at": "2024-04-17T10:31:49Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a4f8bdb859efd3be52c4cb61a49785f23018d2e5",
    "build_started_at": "2024-04-17T10:05:30Z",
    "run_id": "8720037776"
  },
  {
    "hash": "a51dcd23ac6483b60e6300e65a69211bb2ccdba1",
    "type": "pull_request",
    "pull_request": 4460,
    "label": "clemahieu:remove_frontier_table_usage",
    "created_at": "2024-03-05T16:34:33Z",
    "built_at": "2024-03-12T02:35:32Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a51dcd23ac6483b60e6300e65a69211bb2ccdba1",
    "build_started_at": "2024-03-12T00:59:11Z",
    "run_id": "8241927781"
  },
  {
    "hash": "a53a45dcc8340657048ea4b0b2d60a15f95aac88",
    "type": "pull_request",
    "pull_request": 4424,
    "label": "pwojcikdev:blockprocessor-context",
    "created_at": "2024-02-08T18:03:48Z",
    "built_at": "2024-02-09T18:47:28Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a53a45dcc8340657048ea4b0b2d60a15f95aac88",
    "build_started_at": "2024-02-09T18:19:07Z",
    "run_id": "7848028481"
  },
  {
    "hash": "a5503c55bfd94608796541c71a620d4dd026b9db",
    "type": "pull_request",
    "pull_request": 4353,
    "label": "pwojcikdev:ub-fixes-3",
    "created_at": "2024-01-08T17:42:35Z",
    "built_at": "2024-01-08T18:15:09Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a5503c55bfd94608796541c71a620d4dd026b9db",
    "build_started_at": "2024-01-08T17:46:00Z",
    "run_id": "7451199930"
  },
  {
    "hash": "a55f4080a10c7efa7fc8bdb6763fd2bd02a93883",
    "type": "commit",
    "created_at": "2023-03-07T02:58:15Z",
    "built_at": "2023-03-07T03:50:23Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a55f4080a10c7efa7fc8bdb6763fd2bd02a93883"
  },
  {
    "hash": "a57f5d07cb61fe2801dc859ba634df44c1e3dd57",
    "type": "commit",
    "author": "clemahieu",
    "title": "Add existing fwd files to cmake project.",
    "pull_request": "4776",
    "created_at": "2024-10-30T21:23:59Z",
    "built_at": "2024-10-31T07:11:58Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a57f5d07cb61fe2801dc859ba634df44c1e3dd57",
    "build_started_at": "2024-10-31T03:33:18Z",
    "run_id": "11607323609"
  },
  {
    "hash": "a5ac56bf399d93e38c0ee00774a15cc117fa408f",
    "type": "pull_request",
    "pull_request": 3855,
    "label": "JerzyStanislawski:forbid_confirmation_height_clear_to_run_along_with_another_node_instance",
    "created_at": "2022-07-10T22:24:47Z",
    "built_at": "2023-02-05T05:00:46Z",
    "build_status": "fail",
    "docker_tag": ""
  },
  {
    "hash": "a5bd37f8df4c0784f508d4caa63f108d23fa4589",
    "type": "commit",
    "created_at": "2023-03-01T16:58:56Z",
    "built_at": "2023-03-05T04:16:22Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a5bd37f8df4c0784f508d4caa63f108d23fa4589"
  },
  {
    "hash": "a5bf4d76f6ef877a335a5f1359e2590efd64a67f",
    "type": "commit",
    "author": "homebot",
    "title": "Add transition_priority method to election class",
    "pull_request": "4799",
    "created_at": "2024-12-02T21:35:00Z",
    "built_at": "2024-12-04T11:17:48Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a5bf4d76f6ef877a335a5f1359e2590efd64a67f",
    "build_started_at": "2024-12-04T10:33:56Z",
    "run_id": "12158183444"
  },
  {
    "hash": "a605681525cc11ff058de5c9150bdd9f227847dd",
    "type": "pull_request",
    "title": "Fair queuing for request aggregator",
    "author": "pwojcikdev",
    "body": "This implements fair queuing for request aggregator. The benefit is that it removes a small delay that was there due to buffering of requests. This is unnecessary, because client side (`confirmation_solicitor` class) already bundles requests.\r\nI believe that the principle of client->server communication should be that the server does the least processing possible. If client requests data inefficiently, then it will just receive less data and fewer resources will be spent servicing them.",
    "draft": false,
    "pull_request": 4598,
    "label": "pwojcikdev:fair-queuing/request-aggregator-3",
    "created_at": "2024-05-03T07:15:46Z",
    "built_at": "2024-05-08T08:10:18Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a605681525cc11ff058de5c9150bdd9f227847dd",
    "build_started_at": "2024-05-08T07:44:25Z",
    "run_id": "8998092631"
  },
  {
    "hash": "a60a16b338afd2ed48337ff5c665910f28580b40",
    "type": "commit",
    "created_at": "2024-03-08T00:04:10Z",
    "built_at": "2024-03-09T13:34:27Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a60a16b338afd2ed48337ff5c665910f28580b40",
    "build_started_at": "2024-03-09T12:18:32Z",
    "run_id": "8214449124"
  },
  {
    "hash": "a60b60aa1fcfc8ffdf13b40b2a67a0feb2a81a26",
    "type": "commit",
    "created_at": "2023-03-01T12:54:35Z",
    "built_at": "2023-03-01T13:32:34Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a60b60aa1fcfc8ffdf13b40b2a67a0feb2a81a26"
  },
  {
    "hash": "a622e3df9979fb8d7769f6bdfbfee0ad0bd859b1",
    "type": "pull_request",
    "pull_request": 4288,
    "label": "RickiNano:bugfix/fix-windows-build",
    "created_at": "2023-09-21T06:42:26Z",
    "built_at": "2023-09-21T10:17:57Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a622e3df9979fb8d7769f6bdfbfee0ad0bd859b1"
  },
  {
    "hash": "a65ce7a28c741be61efac0a1082f04e0c8311da5",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Formula qt5 was renamed to qt@5",
    "pull_request": "4756",
    "created_at": "2024-10-03T16:28:30Z",
    "built_at": "2024-10-17T10:19:07Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a65ce7a28c741be61efac0a1082f04e0c8311da5",
    "build_started_at": "2024-10-17T09:18:10Z",
    "run_id": "11382520533"
  },
  {
    "hash": "a66787ae2b0ca8f6c57eb7305e83ea17054f23a3",
    "type": "pull_request",
    "pull_request": 4354,
    "label": "clemahieu:socket_threads",
    "created_at": "2024-01-09T01:21:46Z",
    "built_at": "2024-01-09T11:50:00Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a66787ae2b0ca8f6c57eb7305e83ea17054f23a3",
    "build_started_at": "2024-01-09T11:22:09Z",
    "run_id": "7460439601"
  },
  {
    "hash": "a66b8e8a750ee5682fb86a3937e0dc00983f5eb5",
    "type": "pull_request",
    "title": "Frontier scan client",
    "author": "pwojcikdev",
    "body": "This implements frontier scan client for the new bootstrapper. It should be the last missing piece blocking removal of legacy bootstrap code.\r\n\r\nBuilds on top of https://github.com/nanocurrency/nano-node/pull/4734\r\n\r\nHere are some initial test results from @gr0vity-dev showing that there are no obvious problems.\r\n\r\n![image](https://github.com/user-attachments/assets/50ebf35e-aedc-4cdf-a1ea-eea0c699e332)\r\n",
    "draft": false,
    "pull_request": 4739,
    "label": "pwojcikdev:frontier-scan-5",
    "created_at": "2024-09-28T13:10:19Z",
    "built_at": "2024-10-14T19:03:22Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a66b8e8a750ee5682fb86a3937e0dc00983f5eb5",
    "build_started_at": "2024-10-14T18:35:40Z",
    "run_id": "11333155226"
  },
  {
    "hash": "a670fa162d49c82494b307af55dbb65adb207f18",
    "type": "commit",
    "author": "clemahieu",
    "title": "Moving ledger::account on to ledger sets",
    "pull_request": "N/A",
    "created_at": "2024-03-11T21:36:44Z",
    "built_at": "2024-04-30T17:14:23Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a670fa162d49c82494b307af55dbb65adb207f18",
    "build_started_at": "2024-04-30T13:34:48Z",
    "run_id": "8898565951"
  },
  {
    "hash": "a680b2b6ff01274ea424be90436f84f0688a0068",
    "type": "pull_request",
    "title": "Move node::receive_confirmed to wallets::receive_confirmed",
    "author": "clemahieu",
    "body": "This is inherently a wallet operation so it's more appropriate to be on the wallets class.\r\n\r\nThis also breaks a direct dependency/cycle from block processing to the wallet operations.\r\n\r\nThis also breaks a lock order inversion where a ledger transaction mutex is held while acquiring the wallet mutexes while most operations do it in the reverse order.",
    "draft": false,
    "pull_request": 4557,
    "label": "clemahieu:move_node_receive_confirmed",
    "created_at": "2024-04-13T16:21:13Z",
    "built_at": "2024-04-13T17:03:09Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a680b2b6ff01274ea424be90436f84f0688a0068",
    "build_started_at": "2024-04-13T16:25:51Z",
    "run_id": "8674876384"
  },
  {
    "hash": "a6832e7d242e08ba82ba23f3667350b2c19e46f3",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Rename thread roles",
    "pull_request": "N/A",
    "created_at": "2024-10-29T16:55:53Z",
    "built_at": "2024-10-31T17:16:31Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a6832e7d242e08ba82ba23f3667350b2c19e46f3",
    "build_started_at": "2024-10-31T13:47:32Z",
    "run_id": "11616234668"
  },
  {
    "hash": "a6aa9a792490928aa95d5e4cfa31781ebe2e522a",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Use lowest priority for dependency scan",
    "pull_request": "N/A",
    "created_at": "2024-11-02T15:44:04Z",
    "built_at": "2024-11-23T04:16:36Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a6aa9a792490928aa95d5e4cfa31781ebe2e522a",
    "build_started_at": "2024-11-22T23:40:48Z",
    "run_id": "11983835244"
  },
  {
    "hash": "a6b32f525bdd859e23b897fe513333f695d43e30",
    "type": "pull_request",
    "title": "Automatic database backend",
    "author": "RickiNano",
    "body": "Switching database backend between LMDB and RocksDb is currently done by setting `RocksDb.enabled` to true or false in the config.\r\n\r\nThis PR removes that setting and adds a new `Database_backend` config setting.\r\n`Database_backend` can be set to one of the following:\r\n* lmdb\r\n* rocksdb\r\n* auto\r\n\r\nThe first two are self explanitory. \r\nWhen using auto mode the node will look for an existing ledger and use this. If no ledger is found it will initialize a new RocksDb ledger. If multiple ledgers are found it will display a warning message and use the RocksDb ledger.\r\nThe main purpose is to make new node operators use RocksDb but without forcing existing LMDB users to make changes.\r\nIn future node versions (V29?) we can show messages to LMDB users that encourage them to update to RocksDb and instructions on how to do this.\r\nEven later versions (V30?) could halt the node initialization if LMDB is used and display instructions on updating. If they insist on using LMDB they can set `Database_backend` to lmdb ",
    "draft": false,
    "pull_request": 4754,
    "label": "RickiNano:Automatic-database-backend",
    "created_at": "2024-10-15T08:37:17Z",
    "built_at": "2024-10-15T17:09:18Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a6b32f525bdd859e23b897fe513333f695d43e30",
    "build_started_at": "2024-10-15T16:38:33Z",
    "run_id": "11350499260"
  },
  {
    "hash": "a6d7d1ce6669b9f966602e528c884bf3d29b89d4",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Test multithreaded transactions",
    "pull_request": "4780",
    "created_at": "2024-11-04T15:53:36Z",
    "built_at": "2024-11-04T19:20:12Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a6d7d1ce6669b9f966602e528c884bf3d29b89d4",
    "build_started_at": "2024-11-04T18:31:28Z",
    "run_id": "11670714152"
  },
  {
    "hash": "a6da6b8b0936e8f84361413bd685468a13558f33",
    "type": "pull_request",
    "pull_request": 4243,
    "label": "pwojcikdev:logging-artifact-hashes",
    "created_at": "2023-05-31T22:33:24Z",
    "built_at": "2023-06-01T21:16:34Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a6da6b8b0936e8f84361413bd685468a13558f33"
  },
  {
    "hash": "a702e6eb008ef4e6653ae2977615bec2cc0b71d1",
    "type": "pull_request",
    "pull_request": 4462,
    "label": "pwojcikdev:block-processor-start-stop",
    "created_at": "2024-03-06T11:51:37Z",
    "built_at": "2024-03-06T12:44:52Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a702e6eb008ef4e6653ae2977615bec2cc0b71d1",
    "build_started_at": "2024-03-06T11:56:08Z",
    "run_id": "8171629566"
  },
  {
    "hash": "a709bf19fb35ae938127ea4b1515565984926afa",
    "type": "commit",
    "created_at": "2024-03-20T08:01:33Z",
    "built_at": "2024-03-20T09:14:48Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a709bf19fb35ae938127ea4b1515565984926afa",
    "build_started_at": "2024-03-20T08:13:47Z",
    "run_id": "8355682154"
  },
  {
    "hash": "a712e448258de35c1717d27d607e2f9c52154fb7",
    "type": "commit",
    "created_at": "2023-03-02T23:13:17Z",
    "built_at": "2023-03-05T04:22:40Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a712e448258de35c1717d27d607e2f9c52154fb7"
  },
  {
    "hash": "a770ea15fbe3d4f9a7bd0027a1918e3b896bd88e",
    "type": "pull_request",
    "pull_request": 4350,
    "label": "pwojcikdev:larger-votes",
    "created_at": "2023-12-12T12:51:22Z",
    "built_at": "2023-12-12T16:16:28Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a770ea15fbe3d4f9a7bd0027a1918e3b896bd88e",
    "build_started_at": "2023-12-12T15:48:22Z",
    "run_id": "7183896262"
  },
  {
    "hash": "a7a2c0b2f097e73045a5ee6f77af0a42cd333f26",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Final vote requests/replies only (#4648)\n\n* Remove cache from request aggregator\r\n\r\n* Remove non final replies\r\n\r\n* Trace vote source in vote processor\r\n\r\n* Stats\r\n\r\n* Disable local votes cache tests\r\n\r\n* Constness\r\n\r\n* Fix tests\r\n\r\n* Since cached votes are no longer being used the requests_generated stat counters will increment for both requests.\r\n\r\n* Fix tests\r\n\r\n---------\r\n\r\nCo-authored-by: Colin LeMahieu <clemahieu@gmail.com>",
    "pull_request": "4648",
    "created_at": "2024-07-11T13:09:19Z",
    "built_at": "2024-07-11T13:59:13Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a7a2c0b2f097e73045a5ee6f77af0a42cd333f26",
    "build_started_at": "2024-07-11T13:23:53Z",
    "run_id": "9892398379"
  },
  {
    "hash": "a7ad430729f0bb091893fc01fa2d640f1c7de1ba",
    "type": "commit",
    "created_at": "2023-05-09T10:34:34Z",
    "built_at": "2023-05-09T11:07:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a7ad430729f0bb091893fc01fa2d640f1c7de1ba"
  },
  {
    "hash": "a7b09f81548da43ef93a86a147248636c7d2cf59",
    "type": "pull_request",
    "pull_request": 4182,
    "label": "thsfs:add_bootstrap_ascending_config",
    "created_at": "2023-03-15T01:47:36Z",
    "built_at": "2023-03-20T22:39:07Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a7b09f81548da43ef93a86a147248636c7d2cf59"
  },
  {
    "hash": "a7c8b48d11ab74f73069eeae194e8622d6aab5cb",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge pull request #4629 from pwojcikdev/vote-cache-fixing-2\n\nMore vote cache optimizations",
    "pull_request": "4629",
    "created_at": "2024-05-19T09:02:29Z",
    "built_at": "2024-05-19T10:19:42Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a7c8b48d11ab74f73069eeae194e8622d6aab5cb",
    "build_started_at": "2024-05-19T09:03:51Z",
    "run_id": "9146749445"
  },
  {
    "hash": "a7cfce13011900826f4d1eebfc3d96d5a45dea7f",
    "type": "pull_request",
    "title": "Compile time autumn2024",
    "author": "clemahieu",
    "body": "This is a series of header cleanups aimed at improving compile time.\r\n\r\nTemplates for hashing numbers was moved to numbers_templ.hpp\r\n\r\nA forward declaration header for nano::stream was added to stream_fwd.hpp\r\n\r\nTotal compile time including submodules was reduced from 10m to 9m, about a 10% improvement overall and likely more significant for incremental recompiles. ",
    "draft": false,
    "pull_request": 4776,
    "label": "clemahieu:compile_time_autumn2024",
    "created_at": "2024-10-29T09:06:43Z",
    "built_at": "2024-10-30T22:38:03Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a7cfce13011900826f4d1eebfc3d96d5a45dea7f",
    "build_started_at": "2024-10-30T22:08:46Z",
    "run_id": "11602413592"
  },
  {
    "hash": "a7d2b4c889e27e77dc6717387aba8a2c5ce25ab5",
    "type": "commit",
    "created_at": "2024-01-10T19:01:49Z",
    "built_at": "2024-01-10T19:31:16Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a7d2b4c889e27e77dc6717387aba8a2c5ce25ab5",
    "build_started_at": "2024-01-10T19:03:05Z",
    "run_id": "7479586683"
  },
  {
    "hash": "a8025906348005384f44deece9adcb289e60f2cc",
    "type": "commit",
    "created_at": "2023-04-27T19:29:04Z",
    "built_at": "2023-06-21T18:21:49Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a8025906348005384f44deece9adcb289e60f2cc"
  },
  {
    "hash": "a805a62ff7327d7f5d8e71cb360fc8cd91e88e49",
    "type": "pull_request",
    "pull_request": 4392,
    "label": "clemahieu:assert_internal_noreturn",
    "created_at": "2024-01-23T19:05:32Z",
    "built_at": "2024-01-24T14:42:25Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a805a62ff7327d7f5d8e71cb360fc8cd91e88e49",
    "build_started_at": "2024-01-24T14:13:21Z",
    "run_id": "7641442808"
  },
  {
    "hash": "a80b027dfb72fe52b889412432c7693cfb5ec5c5",
    "type": "pull_request",
    "pull_request": 4203,
    "label": "pwojcikdev:fix-thread-pool-names",
    "created_at": "2023-04-03T14:56:45Z",
    "built_at": "2023-04-03T15:37:18Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a80b027dfb72fe52b889412432c7693cfb5ec5c5"
  },
  {
    "hash": "a81213016098fa09932d877ee6d4b3346599250a",
    "type": "commit",
    "created_at": "2023-02-03T17:47:27Z",
    "built_at": "2023-02-08T10:38:42Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a81213016098fa09932d877ee6d4b3346599250a"
  },
  {
    "hash": "a8133b3e1a31801d6734bacdd4776e257a9b2843",
    "type": "pull_request",
    "pull_request": 4184,
    "label": "clemahieu:rpc_test_check_fix",
    "created_at": "2023-03-16T12:58:10Z",
    "built_at": "2023-03-16T13:41:07Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a8133b3e1a31801d6734bacdd4776e257a9b2843"
  },
  {
    "hash": "a8522e9cccfdaeafccdc2a69086d7b2b0bc9bb9b",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Improve systest output",
    "pull_request": "4563",
    "created_at": "2024-01-31T23:02:49Z",
    "built_at": "2024-04-17T08:54:31Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a8522e9cccfdaeafccdc2a69086d7b2b0bc9bb9b",
    "build_started_at": "2024-04-17T07:51:58Z",
    "run_id": "8718752569"
  },
  {
    "hash": "a85dd4ad497bac434be3260978bff222df8a57b1",
    "type": "pull_request",
    "pull_request": 4238,
    "label": "clemahieu:scheduling_limiter",
    "created_at": "2023-05-19T01:07:22Z",
    "built_at": "2023-09-05T19:11:19Z",
    "build_status": "fail",
    "docker_tag": ""
  },
  {
    "hash": "a865db54960bc66e77791792b5e55caff1b5ffbb",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge pull request #4804 from gr0vity-dev/prs/fix-node-fork_publish\n\nReduce likelyhood of race in node.fork_publish",
    "pull_request": "4804",
    "created_at": "2024-12-06T10:56:51Z",
    "built_at": "2024-12-06T11:49:37Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a865db54960bc66e77791792b5e55caff1b5ffbb",
    "build_started_at": "2024-12-06T11:07:35Z",
    "run_id": "12197931406"
  },
  {
    "hash": "a875267715c062e6c08f500df06c2371f2f37d17",
    "type": "pull_request",
    "pull_request": 4482,
    "label": "simpago:rep-weight-table",
    "created_at": "2024-03-12T10:20:34Z",
    "built_at": "2024-03-12T10:51:31Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-12T10:25:45Z",
    "run_id": "8247240799"
  },
  {
    "hash": "a8c05bad55b3d7caa1cf3143096396f1197bba33",
    "type": "commit",
    "author": "RickiNano",
    "title": "Updated gxrb -> knano ratio in comments (#4738)",
    "pull_request": "4738",
    "created_at": "2024-09-28T11:27:42Z",
    "built_at": "2024-09-28T11:54:52Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a8c05bad55b3d7caa1cf3143096396f1197bba33",
    "build_started_at": "2024-09-28T11:28:45Z",
    "run_id": "11083547364"
  },
  {
    "hash": "a8d8d2899e298024ed30fc0126a793ce267dbc2c",
    "type": "commit",
    "created_at": "2023-04-24T20:02:01Z",
    "built_at": "2023-04-24T20:44:51Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a8d8d2899e298024ed30fc0126a793ce267dbc2c"
  },
  {
    "hash": "a964d45776b624191612ab65dec3004da2591b4c",
    "type": "pull_request",
    "pull_request": 4326,
    "label": "clemahieu:fix_block_uniquer_linear_scan",
    "created_at": "2023-11-04T23:13:22Z",
    "built_at": "2023-11-05T00:10:57Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a964d45776b624191612ab65dec3004da2591b4c",
    "build_started_at": "2023-11-04T23:16:56Z",
    "run_id": "6757724571"
  },
  {
    "hash": "a97cbff2c009a2f9e9ea1ea70c87b204d79d09c7",
    "type": "pull_request",
    "pull_request": 4375,
    "label": "pwojcikdev:logging-overhaul-10-develop",
    "created_at": "2024-01-19T14:05:43Z",
    "built_at": "2024-01-20T21:04:31Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a97cbff2c009a2f9e9ea1ea70c87b204d79d09c7",
    "build_started_at": "2024-01-20T20:36:49Z",
    "run_id": "7596699221"
  },
  {
    "hash": "a998ad6e34433023db6a08b4acaab7c3488bc79d",
    "type": "pull_request",
    "title": "Remove `block_process_timeout`",
    "author": "pwojcikdev",
    "body": "Timeout is no longer necessary, as future will become invalid if entry (`context`) is dropped from block processor queue.",
    "draft": false,
    "pull_request": 4599,
    "label": "pwojcikdev:block-process-timeout-remove",
    "created_at": "2024-05-03T11:01:03Z",
    "built_at": "2024-05-03T11:27:28Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a998ad6e34433023db6a08b4acaab7c3488bc79d",
    "build_started_at": "2024-05-03T11:01:24Z",
    "run_id": "8937968033"
  },
  {
    "hash": "a9b2d97498c5655512bac1ed9ece71a15f1c8a97",
    "type": "pull_request",
    "title": "Remove legacy bootstrap",
    "author": "pwojcikdev",
    "body": "This removes legacy bootstrap, which was replaced by the new ascending bootstrap. Legacy bootstrap implementation was unnecessarily complicated with many inefficiencies. Debugging it was a pain and slowed down development of new features. \r\n\r\nAll the `bootstrap_ascending*` classes and stats are renamed to simply `bootstrap`.\r\n\r\nTODO for the future is porting previous `bootstrap_processor` test suite to use the new bootstrapper.",
    "draft": false,
    "pull_request": 4777,
    "label": "pwojcikdev:remove-legacy-bootstrap-2",
    "created_at": "2024-10-29T17:20:20Z",
    "built_at": "2024-10-29T22:00:03Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a9b2d97498c5655512bac1ed9ece71a15f1c8a97",
    "build_started_at": "2024-10-29T21:33:11Z",
    "run_id": "11582818761"
  },
  {
    "hash": "a9f5e96be4f19339e16ffbc23225285232b910dd",
    "type": "commit",
    "author": "RickiNano",
    "title": "Fix rocksdb migration (#4645)",
    "pull_request": "4645",
    "created_at": "2024-06-18T16:43:51Z",
    "built_at": "2024-06-18T17:15:40Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:a9f5e96be4f19339e16ffbc23225285232b910dd",
    "build_started_at": "2024-06-18T16:49:40Z",
    "run_id": "9569026765"
  },
  {
    "hash": "aa167a34cef236d5cf0ae890d5932869c4fe0e80",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Remove unnecessary transaction constness",
    "pull_request": "4714",
    "created_at": "2024-08-22T14:23:55Z",
    "built_at": "2024-08-27T17:05:17Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:aa167a34cef236d5cf0ae890d5932869c4fe0e80",
    "build_started_at": "2024-08-27T15:42:11Z",
    "run_id": "10582176867"
  },
  {
    "hash": "aa1c493165cb573ec803d3eefec9c3615aac2c01",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Document message headers",
    "pull_request": "N/A",
    "created_at": "2024-05-09T10:53:18Z",
    "built_at": "2024-05-17T08:13:32Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:aa1c493165cb573ec803d3eefec9c3615aac2c01",
    "build_started_at": "2024-05-17T07:17:57Z",
    "run_id": "9124780092"
  },
  {
    "hash": "aa1ef3144b1b4ef1bd421da4a992e58cbf87a0a7",
    "type": "pull_request",
    "pull_request": 4424,
    "label": "pwojcikdev:blockprocessor-context",
    "created_at": "2024-02-08T18:03:48Z",
    "built_at": "2024-02-08T18:40:44Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:aa1ef3144b1b4ef1bd421da4a992e58cbf87a0a7",
    "build_started_at": "2024-02-08T18:11:05Z",
    "run_id": "7834015485"
  },
  {
    "hash": "aa5d2ae584a2652fa8bd6a28c9466e51e2c567e5",
    "type": "commit",
    "created_at": "2023-04-26T20:40:15Z",
    "built_at": "2023-04-26T21:17:12Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:aa5d2ae584a2652fa8bd6a28c9466e51e2c567e5"
  },
  {
    "hash": "aa6445902b8e8a32269020f183249634d13026f6",
    "type": "pull_request",
    "pull_request": 4518,
    "label": "pwojcikdev:vote-cache-full-votes-4",
    "created_at": "2024-03-23T10:39:59Z",
    "built_at": "2024-03-23T11:11:13Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:aa6445902b8e8a32269020f183249634d13026f6",
    "build_started_at": "2024-03-23T10:43:32Z",
    "run_id": "8401252333"
  },
  {
    "hash": "aa8ba177fce322612f78fa0025a73db9392c5200",
    "type": "pull_request",
    "title": "Final vote requests/replies only",
    "author": "pwojcikdev",
    "body": "There are two main changes:  \r\n- We are only replying with final votes, for blocks that are either confirmed or marked as final.\r\n- We are not using cached votes for replies.\r\n\r\nDuring testing it was shown that the above changes reduce vote traffic by an order of magnitude.\r\n\r\nThe rationale for abandoning replies from vote cache is that it causes excessive bandwidth usage. A vote request might contain 12 hashes (255 hashes after upcoming network upgrade) and the chance that a vote with exactly these hashes is already cached is low. This in turn requires replying with multiple votes, which is incredibly inefficient. Pessimistic bandwidth usage in such scenario is number of hashes squared.\r\n\r\n",
    "draft": false,
    "pull_request": 4648,
    "label": "pwojcikdev:final-replies-only",
    "created_at": "2024-06-14T19:32:55Z",
    "built_at": "2024-06-22T15:21:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:aa8ba177fce322612f78fa0025a73db9392c5200",
    "build_started_at": "2024-06-22T14:55:35Z",
    "run_id": "9626312276"
  },
  {
    "hash": "aa9782921969abd15fbe18ae64cdeb2de0c78d70",
    "type": "pull_request",
    "title": "Node configuration auto updater",
    "author": "RickiNano",
    "body": "This pull request introduces a new command line feature `--update_config` , which updates the nodes current configuration by merging custom settings into the latest configuration template. Custom settings will be uncommented in the new configuration, while default values will be commented.\r\nThis feature simplifies the process for node operators to maintain an up-to-date configuration without manually merging the current configuration with the new one.\r\n\r\nFeatures:\r\n* Updates config file with new entries, tables and documentation\r\n* Removes entries that are no longer referenced in code\r\n* Preserves custom values from current configuration\r\n* Formatted output\r\n\r\nLimitations:\r\n* Currently only works with node configuration file but could easily be extended to rpc an log configs\r\n",
    "draft": false,
    "pull_request": 4579,
    "label": "RickiNano:auto_update_config",
    "created_at": "2024-04-20T07:34:06Z",
    "built_at": "2024-04-24T20:04:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:aa9782921969abd15fbe18ae64cdeb2de0c78d70",
    "build_started_at": "2024-04-24T19:38:36Z",
    "run_id": "8822322343"
  },
  {
    "hash": "aa9ca25acadcdad832e447d2271abc7c784bafac",
    "type": "pull_request",
    "pull_request": 4397,
    "label": "pwojcikdev:enum-conversion-improvements",
    "created_at": "2024-01-25T17:55:37Z",
    "built_at": "2024-01-25T18:25:36Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:aa9ca25acadcdad832e447d2271abc7c784bafac",
    "build_started_at": "2024-01-25T17:57:13Z",
    "run_id": "7658533276"
  },
  {
    "hash": "aaa77ff369ad0dbc703566e58fe3e37fe56d54e3",
    "type": "pull_request",
    "pull_request": 4221,
    "label": "clemahieu:bootstrap_weak_ptr",
    "created_at": "2023-04-28T08:18:31Z",
    "built_at": "2023-04-28T08:57:48Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:aaa77ff369ad0dbc703566e58fe3e37fe56d54e3"
  },
  {
    "hash": "aaa8b4fc942d4f13f5ad7b09417a63158252e484",
    "type": "pull_request",
    "title": "Block checker",
    "body": "Rewrite of https://github.com/nanocurrency/nano-node/pull/3727 with functional style checking rather than a pipeline",
    "draft": true,
    "pull_request": 4345,
    "label": "clemahieu:block_checker",
    "created_at": "2023-11-14T12:02:06Z",
    "built_at": "2024-04-04T18:00:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:aaa8b4fc942d4f13f5ad7b09417a63158252e484",
    "build_started_at": "2024-04-04T17:34:52Z",
    "run_id": "8558915468"
  },
  {
    "hash": "aad0b4ba9a65a823a6307af0b2a9c4abf375601c",
    "type": "commit",
    "author": "clemahieu",
    "title": "Merge pull request #4714 from pwojcikdev/batched-ledger-upgrade\n\nPerform ledger upgrade in batches",
    "pull_request": "4714",
    "created_at": "2024-08-27T15:39:35Z",
    "built_at": "2024-08-27T17:14:13Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:aad0b4ba9a65a823a6307af0b2a9c4abf375601c",
    "build_started_at": "2024-08-27T15:42:11Z",
    "run_id": "10582333933"
  },
  {
    "hash": "aad626f04d86cfaae0a3e19021478119cd840290",
    "type": "pull_request",
    "title": "Redesign the priority scheduler to maintain a 1-to-1 link with running elections",
    "author": "clemahieu",
    "body": "This change appropriately prioritises elections by bucket and then by LRU account. Overfilled buckets have the lowest priority block election cancelled and rolled back.",
    "draft": true,
    "pull_request": 4593,
    "label": "clemahieu:priority_limiter",
    "created_at": "2024-04-30T12:53:50Z",
    "built_at": "2024-04-30T17:18:36Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:aad626f04d86cfaae0a3e19021478119cd840290",
    "build_started_at": "2024-04-30T13:49:17Z",
    "run_id": "8898655126"
  },
  {
    "hash": "aae52f6ac2e616a2cbb723607867d4b2a67af5f6",
    "type": "pull_request",
    "title": "Fix correctness, sanity check, and resolve shutdown issue.",
    "author": "clemahieu",
    "body": "There was a missing mutex lock entries_mutex in unchecked_map::collect_container_info.\r\n\r\nSanity check the equality of the iterator qualified root to the item searched for.\r\n\r\nConsider stopped flag when wait-looping. Use condition_variable::wait rather than this_thread::sleep_for",
    "draft": false,
    "pull_request": 4719,
    "label": "clemahieu:tsan_fixes",
    "created_at": "2024-09-03T02:23:56Z",
    "built_at": "2024-09-04T16:48:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:aae52f6ac2e616a2cbb723607867d4b2a67af5f6",
    "build_started_at": "2024-09-04T16:21:13Z",
    "run_id": "10705634946"
  },
  {
    "hash": "ab093d58d6458f29648e1d49a1793cb7ccda9b30",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Rework `collect_container_info (..)` functions (#4736)\n\n* Move container info classes to separate file\r\n\r\n* Introduce better `container_info` class\r\n\r\n* Rename legacy to `container_info_entry`\r\n\r\n* Conversion\r\n\r\n* Test\r\n\r\n* Fixes",
    "pull_request": "4736",
    "created_at": "2024-10-03T13:36:34Z",
    "built_at": "2024-10-03T14:15:52Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ab093d58d6458f29648e1d49a1793cb7ccda9b30",
    "build_started_at": "2024-10-03T13:42:40Z",
    "run_id": "11163288806"
  },
  {
    "hash": "ab3036759876a802da6092d1f0a40cbcf9abeab2",
    "type": "pull_request",
    "pull_request": 4485,
    "label": "simpago:rep-cache-min-weight",
    "created_at": "2024-03-12T13:26:39Z",
    "built_at": "2024-03-16T07:11:39Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ab3036759876a802da6092d1f0a40cbcf9abeab2",
    "build_started_at": "2024-03-16T06:46:56Z",
    "run_id": "8306027294"
  },
  {
    "hash": "ab4e51de8fdd85ae8b88f06eb21c2a34f508ff97",
    "type": "commit",
    "created_at": "2024-03-19T10:24:02Z",
    "built_at": "2024-03-20T09:21:38Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ab4e51de8fdd85ae8b88f06eb21c2a34f508ff97",
    "build_started_at": "2024-03-20T08:13:47Z",
    "run_id": "8355682154"
  },
  {
    "hash": "ab8d3a7a414997561c37125a5039574d149413fb",
    "type": "commit",
    "author": "clemahieu",
    "title": "Convert unit tests to directly confirm blocks\n\nTests modified:\nactive_transactions.confirm_frontier\nactive_transactions.keep_local\nbootstrap_processor.lazy_hash_pruning\nbootstrap_processor.lazy_hash_pruning\nfrontier_req.confirmed_frontier\nelection.continuous_voting\nnode.vote_by_hash_bundle\nnode.epoch_conflict_confirm\nnode.rollback_vote_self\noptimistic_scheduler.activate_one\noptimistic_scheduler.under_gap_threshold\nrpc.receivable_unconfirmed\nrpc.history_pruning\nrpc.accounts_receivable_confirmed\nrpc.block_confirmed\nnode.aggressive_flooding",
    "pull_request": "4605",
    "created_at": "2024-05-06T19:52:11Z",
    "built_at": "2024-05-09T14:01:30Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ab8d3a7a414997561c37125a5039574d149413fb",
    "build_started_at": "2024-05-09T12:44:20Z",
    "run_id": "9018114715"
  },
  {
    "hash": "ab995e4ec6965fd7a913019e3ce1b157922d84ba",
    "type": "commit",
    "created_at": "2024-03-23T16:24:36Z",
    "built_at": "2024-03-25T14:23:12Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ab995e4ec6965fd7a913019e3ce1b157922d84ba",
    "build_started_at": "2024-03-25T13:29:30Z",
    "run_id": "8420893800"
  },
  {
    "hash": "ab9f963ca23bc00ce8655eb1ff9f34f4631ee5e6",
    "type": "pull_request",
    "title": "Directly confirm blocks within unit tests rather than starting/forcing elections",
    "author": "clemahieu",
    "body": "Replaces nano::test::force_confirm with nano::test::confirm and overrides. The action was renamed to test::confirm because the action is to confirm.  election::force_confirm is an action specific to an election where the normal path causes confirmation after the vote tally has quorum and force_confirm simulates this.\r\n\r\nThis removes ledger::force_confirm as it was inappropriately calling the private ledger::confirm(block) rather than the public ledger::confirm(hash).\r\n\r\nWhile this doesn't fix any test specifically it should help with general unit test reliability by not running election functionality when setting up tests.",
    "draft": false,
    "pull_request": 4605,
    "label": "clemahieu:testing_direct_confirmation",
    "created_at": "2024-05-06T22:14:55Z",
    "built_at": "2024-05-08T13:57:33Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ab9f963ca23bc00ce8655eb1ff9f34f4631ee5e6",
    "build_started_at": "2024-05-08T13:29:19Z",
    "run_id": "9002710242"
  },
  {
    "hash": "abb09cd939b816e835b30072b48d11eb495f6ab7",
    "type": "pull_request",
    "title": "Migration progress in percentage",
    "author": "RickiNano",
    "body": "Each step in the LMDB -> RocksDb migration now shows the progress in percentage completion.\r\nThis pr also adds a missing check for rep_weights count on completion.\r\n\r\nHere is an example of the output log after a migration of the current live ledger. I have cut the example down to reduce size.\r\n\r\n```\r\n[2024-09-08 13:27:51.448] [ledger] [info] Migrating LMDB database to RocksDB. This will take a while...\r\n[2024-09-08 13:27:51.700] [ledger] [info] Step 1 of 7: Converting 201939233 entries from blocks table\r\n[2024-09-08 13:28:06.071] [ledger] [info] 5000000 blocks converted (2%)\r\n[2024-09-08 13:28:26.194] [ledger] [info] 10000000 blocks converted (4%)\r\n[2024-09-08 13:28:43.688] [ledger] [info] 15000000 blocks converted (7%)\r\n[2024-09-08 13:29:36.411] [ledger] [info] 20000000 blocks converted (9%)\r\n[2024-09-08 13:31:02.810] [ledger] [info] 25000000 blocks converted (12%)\r\n[2024-09-08 13:31:55.081] [ledger] [info] 30000000 blocks converted (14%)\r\n............\r\n[2024-09-08 14:05:12.277] [ledger] [info] 185000000 blocks converted (91%)\r\n[2024-09-08 14:06:40.593] [ledger] [info] 190000000 blocks converted (94%)\r\n[2024-09-08 14:07:43.115] [ledger] [info] 195000000 blocks converted (96%)\r\n[2024-09-08 14:08:34.332] [ledger] [info] 200000000 blocks converted (99%)\r\n[2024-09-08 14:09:15.069] [ledger] [info] 201939233 entries converted (100%)\r\n[2024-09-08 14:09:15.071] [ledger] [info] Step 2 of 7: Converting 27226087 entries from pending table\r\n[2024-09-08 14:09:15.754] [ledger] [info] 500000 entries converted (1%)\r\n[2024-09-08 14:09:16.513] [ledger] [info] 1000000 entries converted (3%)\r\n[2024-09-08 14:09:17.422] [ledger] [info] 1500000 entries converted (5%)\r\n[2024-09-08 14:09:18.744] [ledger] [info] 2000000 entries converted (7%)\r\n[2024-09-08 14:09:34.113] [ledger] [info] 2500000 entries converted (9%)\r\n[2024-09-08 14:09:35.856] [ledger] [info] 3000000 entries converted (11%)\r\n............\r\n[2024-09-08 14:10:54.568] [ledger] [info] 24500000 entries converted (89%)\r\n[2024-09-08 14:10:57.789] [ledger] [info] 25000000 entries converted (91%)\r\n[2024-09-08 14:11:02.119] [ledger] [info] 25500000 entries converted (93%)\r\n[2024-09-08 14:11:05.754] [ledger] [info] 26000000 entries converted (95%)\r\n[2024-09-08 14:11:11.586] [ledger] [info] 26500000 entries converted (97%)\r\n[2024-09-08 14:11:13.163] [ledger] [info] 27000000 entries converted (99%)\r\n[2024-09-08 14:11:14.047] [ledger] [info] 27226087 entries converted (100%)\r\n[2024-09-08 14:11:14.047] [ledger] [info] Step 3 of 7: Converting 36913275 entries from confirmation_height table\r\n[2024-09-08 14:11:14.656] [ledger] [info] 500000 entries converted (1%)\r\n[2024-09-08 14:11:15.168] [ledger] [info] 1000000 entries converted (2%)\r\n[2024-09-08 14:11:15.630] [ledger] [info] 1500000 entries converted (4%)\r\n[2024-09-08 14:11:16.093] [ledger] [info] 2000000 entries converted (5%)\r\n[2024-09-08 14:11:16.632] [ledger] [info] 2500000 entries converted (6%)\r\n............\r\n[2024-09-08 14:12:58.828] [ledger] [info] 35000000 entries converted (94%)\r\n[2024-09-08 14:12:59.383] [ledger] [info] 35500000 entries converted (96%)\r\n[2024-09-08 14:12:59.678] [ledger] [info] 36000000 entries converted (97%)\r\n[2024-09-08 14:13:15.473] [ledger] [info] 36500000 entries converted (98%)\r\n[2024-09-08 14:13:17.734] [ledger] [info] 36913275 entries converted (100%)\r\n[2024-09-08 14:13:17.734] [ledger] [info] Step 4 of 7: Converting 36913275 entries from accounts table\r\n[2024-09-08 14:13:18.010] [ledger] [info] 500000 entries converted (1%)\r\n[2024-09-08 14:13:18.549] [ledger] [info] 1000000 entries converted (2%)\r\n[2024-09-08 14:13:19.270] [ledger] [info] 1500000 entries converted (4%)\r\n[2024-09-08 14:13:20.118] [ledger] [info] 2000000 entries converted (5%)\r\n[2024-09-08 14:13:20.964] [ledger] [info] 2500000 entries converted (6%)\r\n[2024-09-08 14:13:21.551] [ledger] [info] 3000000 entries converted (8%)\r\n............\r\n[2024-09-08 14:17:30.146] [ledger] [info] 35500000 entries converted (96%)\r\n[2024-09-08 14:17:31.476] [ledger] [info] 36000000 entries converted (97%)\r\n[2024-09-08 14:17:33.273] [ledger] [info] 36500000 entries converted (98%)\r\n[2024-09-08 14:17:34.482] [ledger] [info] 36913275 entries converted (100%)\r\n[2024-09-08 14:17:34.483] [ledger] [info] Step 5 of 7: Converting 5538654 entries from rep_weights table\r\n[2024-09-08 14:17:35.524] [ledger] [info] 500000 entries converted (9%)\r\n[2024-09-08 14:17:36.697] [ledger] [info] 1000000 entries converted (18%)\r\n[2024-09-08 14:17:38.295] [ledger] [info] 1500000 entries converted (27%)\r\n[2024-09-08 14:17:40.180] [ledger] [info] 2000000 entries converted (36%)\r\n[2024-09-08 14:17:41.463] [ledger] [info] 2500000 entries converted (45%)\r\n[2024-09-08 14:17:42.710] [ledger] [info] 3000000 entries converted (54%)\r\n[2024-09-08 14:17:43.672] [ledger] [info] 3500000 entries converted (63%)\r\n[2024-09-08 14:17:46.968] [ledger] [info] 4000000 entries converted (72%)\r\n[2024-09-08 14:17:52.017] [ledger] [info] 4500000 entries converted (81%)\r\n[2024-09-08 14:17:58.306] [ledger] [info] 5000000 entries converted (90%)\r\n[2024-09-08 14:18:01.618] [ledger] [info] 5500000 entries converted (99%)\r\n[2024-09-08 14:18:02.008] [ledger] [info] 5538654 entries converted (100%)\r\n[2024-09-08 14:18:02.008] [ledger] [info] Step 6 of 7: Converting 0 entries from pruned table\r\n[2024-09-08 14:18:02.019] [ledger] [info] 0 entries converted (100%)\r\n[2024-09-08 14:18:02.019] [ledger] [info] Step 7 of 7: Converting 43278268 entries from final_votes table\r\n[2024-09-08 14:18:02.432] [ledger] [info] 500000 entries converted (1%)\r\n[2024-09-08 14:18:03.066] [ledger] [info] 1000000 entries converted (2%)\r\n[2024-09-08 14:18:03.529] [ledger] [info] 1500000 entries converted (3%)\r\n[2024-09-08 14:18:04.145] [ledger] [info] 2000000 entries converted (4%)\r\n[2024-09-08 14:18:04.758] [ledger] [info] 2500000 entries converted (5%)\r\n............\r\n[2024-09-08 14:21:06.247] [ledger] [info] 41000000 entries converted (94%)\r\n[2024-09-08 14:21:19.742] [ledger] [info] 41500000 entries converted (95%)\r\n[2024-09-08 14:21:20.616] [ledger] [info] 42000000 entries converted (97%)\r\n[2024-09-08 14:21:22.728] [ledger] [info] 42500000 entries converted (98%)\r\n[2024-09-08 14:21:23.769] [ledger] [info] 43000000 entries converted (99%)\r\n[2024-09-08 14:21:24.657] [ledger] [info] 43278268 entries converted (100%)\r\n[2024-09-08 14:21:24.657] [ledger] [info] Finalizing migration...\r\n[2024-09-08 14:21:26.886] [ledger] [info] Migration completed. Make sure to enable RocksDb in the config file under [node.rocksdb]\r\n[2024-09-08 14:21:26.886] [ledger] [info] After confirming correct node operation, the data.ldb file can be deleted if no longer required\r\n```",
    "draft": false,
    "pull_request": 4725,
    "label": "RickiNano:database-migration-percentage",
    "created_at": "2024-09-10T12:50:23Z",
    "built_at": "2024-09-10T13:20:57Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:abb09cd939b816e835b30072b48d11eb495f6ab7",
    "build_started_at": "2024-09-10T12:52:40Z",
    "run_id": "10792833134"
  },
  {
    "hash": "abe7466d95b2863acb603fcdc64b71dad66460d2",
    "type": "pull_request",
    "pull_request": 4421,
    "label": "pwojcikdev:free-block-publisher-class",
    "created_at": "2024-02-05T21:08:35Z",
    "built_at": "2024-02-05T21:37:48Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:abe7466d95b2863acb603fcdc64b71dad66460d2",
    "build_started_at": "2024-02-05T21:08:46Z",
    "run_id": "7790861885"
  },
  {
    "hash": "ac04d88fc5a7e4ba2fb5dd0746158896c290b6b4",
    "type": "pull_request",
    "title": "Make election behavior mutable to support dynamic behaviour transition",
    "author": "gr0vity-dev",
    "body": "Problem:\r\n- Elections are currently immutable and can't be transitioned to priority status\r\n- Causing delays for optimistic elections rescheduled by priority scheduler as the next Vote broadcast is fixed to 15-second intervals. (by `network.vote_broadcast_interval`)\r\n\r\nChanges:\r\n- Modifies election behavior to be mutable, allowing elections (optimistic/hinted/...) to be transitioned to priority status\r\n- Added ability to trigger immediate vote broadcasts on transition without waiting for the next 15-second round\r\n\r\nBenefits:\r\n- It would allow for more aggressive use of optimistic elections (to narrow the gap between checked and cemented during bootstrapping) \r\n  - currently configured to accounts with gap_threshold of 32 could be reduced to 4\r\n- Maintain quick response times for live traffic by allowing election behavior changes.",
    "draft": false,
    "pull_request": 4799,
    "label": "gr0vity-dev:prs/upgrade_elections",
    "created_at": "2024-11-30T09:50:16Z",
    "built_at": "2024-12-01T15:16:39Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ac04d88fc5a7e4ba2fb5dd0746158896c290b6b4",
    "build_started_at": "2024-12-01T14:46:51Z",
    "run_id": "12106309714"
  },
  {
    "hash": "ac4c77370f813a33e7a22223d34153955d8a1092",
    "type": "pull_request",
    "title": "Do not wait for cancellation signal",
    "author": "pwojcikdev",
    "body": "Waiting for cancellation signal is unnecessary and was causing a deadlock in `tcp_listener` class.\r\n\r\n```\r\nThread 37 (LWP 25214):\r\n#0  0x00007fa2b77c388d in syscall () from target:/lib/x86_64-linux-gnu/libc.so.6\r\n#1  0x000055dc7f386491 in std::__atomic_futex_unsigned_base::_M_futex_wait_until(unsigned int*, unsigned int, bool, std::chrono::duration<long, std::ratio<1l, 1l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> >) ()\r\n#2  0x000055dc7e9d1175 in std::__atomic_futex_unsigned<2147483648u>::_M_load_and_test_until (__ns=..., __s=..., __has_timeout=<optimized out>, __mo=<optimized out>, __equal=<optimized out>, __operand=<optimized out>, __assumed=<optimized out>, this=<optimized out>) at /tmp/src/submodules/boost/libs/asio/include/boost/asio/scheduler.hpp:646\r\n#3  std::__atomic_futex_unsigned<2147483648u>::_M_load_and_test (__mo=<optimized out>, __equal=<optimized out>, __operand=<optimized out>, __assumed=<optimized out>, this=<optimized out>) at /usr/include/x86_64-linux-gnu/bits/gthr-default.h:159\r\n#4  std::__atomic_futex_unsigned<2147483648u>::_M_load_when_equal (__mo=<error reading variable: dwarf2_find_location_expression: Corrupted DWARF expression.>, __val=<error reading variable: dwarf2_find_location_expression: Corrupted DWARF expression.>, this=<error reading variable: dwarf2_find_location_expression: Corrupted DWARF expression.>) at /usr/include/x86_64-linux-gnu/bits/gthr-default.h:213\r\n#5  std::__future_base::_State_baseV2::wait (this=<error reading variable: dwarf2_find_location_expression: Corrupted DWARF expression.>) at /tmp/src/submodules/boost/libs/asio/include/boost/asio/execution/impl/bad_address_cast.hpp:336\r\n#6  std::__basic_future<void>::wait (this=0x7fa23cff73b0, this@entry=<error reading variable: dwarf2_find_location_expression: Corrupted DWARF expression.>) at /tmp/src/submodules/boost/libs/asio/include/boost/asio/execution/impl/bad_address_cast.hpp:694\r\n#7  nano::async::cancellation::emit (type=boost::asio::cancellation_type::all, type@entry=<error reading variable: dwarf2_find_location_expression: Corrupted DWARF expression.>, this=0x7fa1e0074838, this@entry=<error reading variable: dwarf2_find_location_expression: Corrupted DWARF expression.>) at /tmp/src/submodules/boost/libs/asio/include/boost/asio/detail/atomic_futex.h:57\r\n#8  nano::async::task::cancel (this=0x7fa1e0074820, this@entry=<error reading variable: dwarf2_find_location_expression: Corrupted DWARF expression.>) at /tmp/src/submodules/boost/libs/asio/include/boost/asio/detail/atomic_futex.h:143\r\n#9  nano::transport::tcp_listener::timeout() () at /tmp/src/submodules/boost/libs/asio/include/boost/asio/ip/string_view:212\r\n#10 0x000055dc7e9d1369 in nano::transport::tcp_listener::run_cleanup() () at /tmp/src/submodules/boost/libs/asio/include/boost/asio/ip/string_view:171\r\n#11 0x000055dc7f3b89f4 in execute_native_thread_routine ()\r\n#12 0x00007fa2b7739ac3 in ?? () from target:/lib/x86_64-linux-gnu/libc.so.6\r\n#13 0x00007fa2b77caa04 in clone () from target:/lib/x86_64-linux-gnu/libc.so.6\r\n\r\nThread 35 (LWP 25212):\r\n#0  0x00007fa2b77362c0 in ?? () from target:/lib/x86_64-linux-gnu/libc.so.6\r\n#1  0x00007fa2b773d002 in pthread_mutex_lock () from target:/lib/x86_64-linux-gnu/libc.so.6\r\n#2  0x000055dc7e9d00d0 in __gthread_mutex_lock (__mutex=0x55dc847a67e8) at /tmp/src/submodules/boost/libs/asio/include/boost/asio/socket_holder.hpp:749\r\n#3  std::mutex::lock (this=0x55dc847a67e8) at /tmp/src/build/nano/node/tcp_listener.cpp:100\r\n#4  nano::mutex::lock (this=0x55dc847a67e8) at /tmp/src/submodules/boost/libs/asio/include/boost/asio/detail/std_mutex.h:77\r\n#5  std::unique_lock<nano::mutex>::lock (this=0x7fa23dff8be0) at /tmp/src/submodules/boost/libs/system/include/boost/system/detail/use_awaitable.hpp:139\r\n#6  std::unique_lock<nano::mutex>::unique_lock (__m=..., this=0x7fa23dff8be0) at /tmp/src/submodules/boost/libs/system/include/boost/system/detail/use_awaitable.hpp:69\r\n#7  nano::transport::tcp_listener::connect(boost::asio::ip::address, unsigned short) () at /tmp/src/submodules/boost/libs/asio/include/boost/asio/ip/string_view:223\r\n#8  0x000055dc7e9badc2 in nano::transport::tcp_channels::start_tcp (this=<optimized out>, endpoint=...) at /usr/include/x86_64-linux-gnu/bits/socket_ops.ipp:60\r\n#9  0x000055dc7e919cda in nano::network::merge_peer (peer_a=..., this=<optimized out>) at /tmp/src/submodules/boost/libs/asio/include/boost/asio/detail/unordered_map.h:334\r\n#10 nano::network::merge_peer (this=<optimized out>, peer_a=...) at /tmp/src/submodules/boost/libs/asio/include/boost/asio/detail/unordered_map.h:328\r\n#11 0x000055dc7eaf6d65 in (anonymous namespace)::process_visitor::keepalive (this=0x7fa23dff8e20, message=...) at /tmp/src/build/nano/node/messages.hpp:177\r\n#12 0x000055dc7eaf72c5 in nano::message_processor::process(nano::message const&, std::shared_ptr<nano::transport::channel> const&) () at /tmp/src/build/nano/node/messages.hpp:287\r\n#13 0x000055dc7eaf8d45 in nano::message_processor::run_batch(std::unique_lock<nano::mutex>&) () at /tmp/src/build/nano/node/messages.hpp:146\r\n#14 0x000055dc7eaf91c2 in nano::message_processor::run() () at /tmp/src/build/nano/node/messages.hpp:115\r\n#15 0x000055dc7eaf92bd in operator() (__closure=0x55dc8036a388) at /tmp/src/build/nano/node/messages.hpp:35\r\n#16 std::__invoke_impl<void, nano::message_processor::start()::<lambda()> > (__f=...) at /tmp/src/nano/lib/std_function.h:61\r\n#17 std::__invoke<nano::message_processor::start()::<lambda()> > (__fn=...) at /tmp/src/nano/lib/std_function.h:96\r\n#18 std::thread::_Invoker<std::tuple<nano::message_processor::start()::<lambda()> > >::_M_invoke<0> (this=0x55dc8036a388) at /usr/include/c++/11/exception_implementation.hpp:259\r\n#19 std::thread::_Invoker<std::tuple<nano::message_processor::start()::<lambda()> > >::operator() (this=0x55dc8036a388) at /usr/include/c++/11/exception_implementation.hpp:266\r\n#20 std::thread::_State_impl<std::thread::_Invoker<std::tuple<nano::message_processor::start()::{lambda()#1}> > >::_M_run() () at /usr/include/c++/11/exception_implementation.hpp:211\r\n#21 0x000055dc7f3b89f4 in execute_native_thread_routine ()\r\n#22 0x00007fa2b7739ac3 in ?? () from target:/lib/x86_64-linux-gnu/libc.so.6\r\n#23 0x00007fa2b77caa04 in clone () from target:/lib/x86_64-linux-gnu/libc.so.6\r\n\r\n// More IO threads with the same stacktrace\r\n// ....\r\n```",
    "draft": false,
    "pull_request": 4664,
    "label": "pwojcikdev:aysnc-cancelation-do-not-wait",
    "created_at": "2024-07-01T08:22:35Z",
    "built_at": "2024-07-01T17:54:46Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ac4c77370f813a33e7a22223d34153955d8a1092",
    "build_started_at": "2024-07-01T17:28:14Z",
    "run_id": "9748551482"
  },
  {
    "hash": "ac56df90d2d8e9614825dc567b054d145e6ce6f2",
    "type": "commit",
    "created_at": "2023-09-14T18:56:29Z",
    "built_at": "2023-09-15T16:28:48Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ac56df90d2d8e9614825dc567b054d145e6ce6f2"
  },
  {
    "hash": "ac7483d32973678e11f72d65768bc7a8321cb0bd",
    "type": "pull_request",
    "title": "Bound the growth of `election_winner_details` set",
    "author": "pwojcikdev",
    "body": null,
    "draft": false,
    "pull_request": 4720,
    "label": "pwojcikdev:aec-bound-election-winners",
    "created_at": "2024-09-04T19:29:31Z",
    "built_at": "2024-09-04T19:52:34Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-09-04T19:29:52Z",
    "run_id": "10708275309"
  },
  {
    "hash": "ac9af10236647f03656b7c50bc1891e5f5a6cdb1",
    "type": "pull_request",
    "pull_request": 4345,
    "label": "clemahieu:block_checker",
    "created_at": "2023-11-14T12:02:06Z",
    "built_at": "2024-03-21T13:39:33Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-21T13:22:24Z",
    "run_id": "8375695567"
  },
  {
    "hash": "acd51a424ffdaa58443e1744aa3a530ff7c937ef",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Ignore TSAN warning from test only classes",
    "pull_request": "4618",
    "created_at": "2024-05-12T15:20:31Z",
    "built_at": "2024-05-14T14:42:19Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:acd51a424ffdaa58443e1744aa3a530ff7c937ef",
    "build_started_at": "2024-05-14T11:08:37Z",
    "run_id": "9080886906"
  },
  {
    "hash": "acf24335fcea270747735b27ffd10dd88e4057d6",
    "type": "pull_request",
    "pull_request": 4439,
    "label": "clemahieu:threading_header",
    "created_at": "2024-02-19T11:00:56Z",
    "built_at": "2024-02-19T11:37:24Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:acf24335fcea270747735b27ffd10dd88e4057d6",
    "build_started_at": "2024-02-19T11:09:52Z",
    "run_id": "7958599028"
  },
  {
    "hash": "ad0340527c3fba4a9925ebff02ed65a93a22e4ea",
    "type": "commit",
    "created_at": "2023-10-31T09:58:25Z",
    "built_at": "2023-10-31T13:58:17Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ad0340527c3fba4a9925ebff02ed65a93a22e4ea",
    "build_started_at": "2023-10-31T12:59:04Z",
    "run_id": "6706839487"
  },
  {
    "hash": "ad0573e7286f1eeec6e23a21f8b64e35c558e4a3",
    "type": "commit",
    "author": "clemahieu",
    "title": "Convert rep_weights mutex to a shared_mutex since the majority of time it's being read (#4628)",
    "pull_request": "4628",
    "created_at": "2024-05-19T09:19:25Z",
    "built_at": "2024-05-19T10:27:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ad0573e7286f1eeec6e23a21f8b64e35c558e4a3",
    "build_started_at": "2024-05-19T09:21:26Z",
    "run_id": "9146778042"
  },
  {
    "hash": "ad0cdb7bebbeda2d9f4090673aa775c03bcc9c93",
    "type": "pull_request",
    "title": "Add flamegraph generation in CI build",
    "author": "clemahieu",
    "body": "Flamegraphs are attached to the workflow build as artifacts.\r\n\r\nNew tests can be added by creating a new gtest in slow_test.\r\nTests like TEST (flamegraph, testname_x) will be executed if testname_x is added to the flamegraph.yml file test matrix.",
    "draft": false,
    "pull_request": 4638,
    "label": "clemahieu:flamegraph_test",
    "created_at": "2024-05-23T01:21:53Z",
    "built_at": "2024-05-23T13:44:33Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ad0cdb7bebbeda2d9f4090673aa775c03bcc9c93",
    "build_started_at": "2024-05-23T13:17:53Z",
    "run_id": "9208748130"
  },
  {
    "hash": "ad18ecc9586653d461567dfdf754336fd4330aa7",
    "type": "pull_request",
    "pull_request": 4272,
    "label": "clemahieu:scheduler_buckets_rename",
    "created_at": "2023-09-01T08:42:24Z",
    "built_at": "2023-09-01T09:35:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ad18ecc9586653d461567dfdf754336fd4330aa7"
  },
  {
    "hash": "ad309d6f2330cdfe1ab6ffc19086ece3b1554868",
    "type": "pull_request",
    "pull_request": 4305,
    "label": "gr0vity-dev:prs/refactor_act_tx_vote_flow",
    "created_at": "2023-10-02T10:07:04Z",
    "built_at": "2023-10-02T11:47:37Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ad309d6f2330cdfe1ab6ffc19086ece3b1554868"
  },
  {
    "hash": "ad4f6c923c07f79371a8f7f4f2b7145fd26c9154",
    "type": "commit",
    "author": "clemahieu",
    "title": "Add comment/warning to node::block_confirmed_or_being_confirmed functions indicating potentially unexpected behavior with respect to MVCC database transactions. (#4540)",
    "pull_request": "4540",
    "created_at": "2024-05-07T10:49:29Z",
    "built_at": "2024-05-07T11:20:37Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ad4f6c923c07f79371a8f7f4f2b7145fd26c9154",
    "build_started_at": "2024-05-07T10:52:10Z",
    "run_id": "8984075058"
  },
  {
    "hash": "ad5da18b6683506c4782a133b2d31ed7101a1166",
    "type": "pull_request",
    "title": "Enable debug logging for core tests",
    "author": "gr0vity-dev",
    "body": "Failures on GitHub runners are sometimes hard to reproduce locally. Adding detailed logging helps analyze test failures directly from CI logs.\r\n\r\n- Enables NANO_LOG_STATS and debug level logging for core tests across all CI platforms\r\n- Helps diagnose intermittent test failures by providing more detailed execution traces",
    "draft": false,
    "pull_request": 4807,
    "label": "gr0vity-dev:prs/enable-debug-log-for-core-tests",
    "created_at": "2024-12-07T08:45:19Z",
    "built_at": "2024-12-07T09:24:12Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ad5da18b6683506c4782a133b2d31ed7101a1166",
    "build_started_at": "2024-12-07T08:57:45Z",
    "run_id": "12211517247"
  },
  {
    "hash": "ad841dfdc65d472bf51b2323a352f04058c03d3b",
    "type": "commit",
    "created_at": "2023-06-01T19:05:03Z",
    "built_at": null,
    "build_status": "building",
    "docker_tag": null
  },
  {
    "hash": "ad938b67cff63cb20cf44c1f322d9bfb4c54e728",
    "type": "pull_request",
    "pull_request": 4394,
    "label": "gr0vity-dev:prs/fix_active-tx-fifo",
    "created_at": "2024-01-25T15:25:56Z",
    "built_at": "2024-01-25T15:52:03Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ad938b67cff63cb20cf44c1f322d9bfb4c54e728",
    "build_started_at": "2024-01-25T15:26:54Z",
    "run_id": "7656726379"
  },
  {
    "hash": "adbb40c5b65300cfe418515329517c7b034c0662",
    "type": "commit",
    "author": "gr0vity-dev",
    "title": "transition active for non live traffic (#4798)\n\nCo-authored-by: gr0vity-dev <homebot@users.noreply.github.com>",
    "pull_request": "4798",
    "created_at": "2024-12-14T12:26:26Z",
    "built_at": "2024-12-14T13:31:00Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:adbb40c5b65300cfe418515329517c7b034c0662",
    "build_started_at": "2024-12-14T12:50:42Z",
    "run_id": "12329995155"
  },
  {
    "hash": "addea482b93f3c04f84bd5f86c0846d4bf40d5a0",
    "type": "commit",
    "created_at": "2023-04-05T12:55:19Z",
    "built_at": "2023-04-05T13:27:21Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:addea482b93f3c04f84bd5f86c0846d4bf40d5a0"
  },
  {
    "hash": "ae2ed00ff4409542b5ed436143dd81d870f4aa41",
    "type": "pull_request",
    "title": "Creating nano::secure::transaction type",
    "body": "Creating nano::secure::transaction type which is used by nano::ledger and can be expanded to include memory locking.",
    "draft": true,
    "pull_request": 4543,
    "label": "clemahieu:transaction_parameter",
    "created_at": "2024-04-08T13:57:07Z",
    "built_at": "2024-04-08T14:24:24Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ae2ed00ff4409542b5ed436143dd81d870f4aa41",
    "build_started_at": "2024-04-08T13:59:07Z",
    "run_id": "8601371354"
  },
  {
    "hash": "ae31275d0d1d336093b55e0c7f5b5140eb0aaf34",
    "type": "commit",
    "created_at": "2024-03-22T18:06:27Z",
    "built_at": "2024-03-25T14:37:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ae31275d0d1d336093b55e0c7f5b5140eb0aaf34",
    "build_started_at": "2024-03-25T13:29:30Z",
    "run_id": "8420893800"
  },
  {
    "hash": "ae5cb33c7011aff9f74fdfeb85d69536d84d9c98",
    "type": "pull_request",
    "pull_request": 4160,
    "label": "thsfs:inproc_channel_with_message_desserializer",
    "created_at": "2023-02-27T20:25:02Z",
    "built_at": "2023-03-01T04:14:48Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ae5cb33c7011aff9f74fdfeb85d69536d84d9c98"
  },
  {
    "hash": "ae5f991c0b79a06574827db41b65914a7f5c42c5",
    "type": "pull_request",
    "title": "Make election behavior mutable to support dynamic behaviour transition",
    "author": "gr0vity-dev",
    "body": "Problem:\r\n- Elections are currently immutable and can't be transitioned to priority status\r\n- Causing delays for optimistic elections rescheduled by priority scheduler as the next Vote broadcast is fixed to 15-second intervals. (by `network.vote_broadcast_interval`)\r\n\r\nChanges:\r\n- Modifies election behavior to be mutable, allowing elections (optimistic/hinted/...) to be transitioned to priority status\r\n- Added ability to trigger immediate vote broadcasts on transition without waiting for the next 15-second round\r\n\r\nBenefits:\r\n- It would allow for more aggressive use of optimistic elections (to narrow the gap between checked and cemented during bootstrapping) \r\n  - currently configured to accounts with gap_threshold of 32 could be reduced to 4\r\n- Maintain quick response times for live traffic by allowing election behavior changes.",
    "draft": false,
    "pull_request": 4799,
    "label": "gr0vity-dev:prs/upgrade_elections",
    "created_at": "2024-11-30T09:50:16Z",
    "built_at": "2024-12-02T22:18:19Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ae5f991c0b79a06574827db41b65914a7f5c42c5",
    "build_started_at": "2024-12-02T21:50:50Z",
    "run_id": "12128296431"
  },
  {
    "hash": "aea421798ffee5cc3b314b230ca474f29957ff78",
    "type": "pull_request",
    "pull_request": 4501,
    "label": "clemahieu:receivable_abstraction",
    "created_at": "2024-03-18T19:58:44Z",
    "built_at": "2024-03-18T20:36:39Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:aea421798ffee5cc3b314b230ca474f29957ff78",
    "build_started_at": "2024-03-18T20:11:11Z",
    "run_id": "8332985221"
  },
  {
    "hash": "aea6b963f3e2b686c2f3f1320e46eba035c022d6",
    "type": "pull_request",
    "pull_request": 4257,
    "label": "pwojcikdev:rate-observer-printing",
    "created_at": "2023-07-13T16:41:36Z",
    "built_at": "2023-07-13T17:26:31Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:aea6b963f3e2b686c2f3f1320e46eba035c022d6"
  },
  {
    "hash": "aec1d845b2ec5f07a7907113a7fda3b32402fde9",
    "type": "pull_request",
    "title": "Benchmarking suite",
    "author": "pwojcikdev",
    "body": "This adds a benchmarking suite.",
    "draft": true,
    "pull_request": 4689,
    "label": "pwojcikdev:benchmarking",
    "created_at": "2024-08-03T11:22:46Z",
    "built_at": "2024-08-03T11:42:37Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-08-03T11:28:28Z",
    "run_id": "10227641702"
  },
  {
    "hash": "aecf0748b3ebf8f972c065cc9b6b6108f0df4591",
    "type": "commit",
    "author": "clemahieu",
    "title": "Forward declare endpoint in lib/common.hpp",
    "pull_request": "N/A",
    "created_at": "2024-10-27T20:16:57Z",
    "built_at": "2024-10-31T07:18:01Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:aecf0748b3ebf8f972c065cc9b6b6108f0df4591",
    "build_started_at": "2024-10-31T03:33:18Z",
    "run_id": "11607411346"
  },
  {
    "hash": "aeddeb5934f7a2baaaafd6068aa138f965be3b4b",
    "type": "commit",
    "created_at": "2024-01-26T00:19:38Z",
    "built_at": "2024-01-26T02:24:11Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:aeddeb5934f7a2baaaafd6068aa138f965be3b4b",
    "build_started_at": "2024-01-26T01:10:13Z",
    "run_id": "7662595228"
  },
  {
    "hash": "aefd7c18fbebf836e337d2831e52a2fc27451891",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Use spaceship comparisons",
    "pull_request": "4767",
    "created_at": "2024-10-24T18:02:30Z",
    "built_at": "2024-10-26T00:28:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:aefd7c18fbebf836e337d2831e52a2fc27451891",
    "build_started_at": "2024-10-25T22:56:00Z",
    "run_id": "11526990912"
  },
  {
    "hash": "af02fbeed61dea2b92384cd54176ca9b82c7dff1",
    "type": "pull_request",
    "pull_request": 4203,
    "label": "pwojcikdev:fix-thread-pool-names",
    "created_at": "2023-04-03T14:56:45Z",
    "built_at": "2023-04-03T16:03:58Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:af02fbeed61dea2b92384cd54176ca9b82c7dff1"
  },
  {
    "hash": "af196cc1500280923d4dce46463bf12f07c99632",
    "type": "pull_request",
    "title": "Ascending bootstrap dependency resolution",
    "author": "pwojcikdev",
    "body": "This is the first part of our (mine & @gr0vity-dev) work on improving ascending bootstrapper. This part contains a new dependency resolution strategy among a few other smaller improvements.\r\n\r\nAn example of how it dependency resolution process works: let's have three accounts A, B, C. A depends on a transaction sent by B, and B depends on a transaction sent by C. Let's now assume we have a ledger that is not synced 100%, might be because we're doing an initial sync or our node was offline for a while. If account A performs a new live transaction, we can't process it immediately, because we're still missing chains for B & C. In the previous version resolving these dependencies was slow, as it was relying on sequential sampling of the whole ledger. With this improved algorithm, we first add account A to the blocking set, resolve its dependency as account B, since B is blocked we repeat the same process for B, finally arriving at account C that unblocks all these chains.",
    "draft": false,
    "pull_request": 4692,
    "label": "pwojcikdev:dependency-walking-rebased",
    "created_at": "2024-08-05T16:36:15Z",
    "built_at": "2024-08-05T21:45:17Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:af196cc1500280923d4dce46463bf12f07c99632",
    "build_started_at": "2024-08-05T21:15:21Z",
    "run_id": "10256132491"
  },
  {
    "hash": "af36d9ff358f9a3ba7fc9f7a915c33cb3c1839e9",
    "type": "commit",
    "created_at": "2024-03-10T16:49:32Z",
    "built_at": "2024-03-10T22:26:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:af36d9ff358f9a3ba7fc9f7a915c33cb3c1839e9",
    "build_started_at": "2024-03-10T20:14:43Z",
    "run_id": "8224504096"
  },
  {
    "hash": "af685590ba861d415e6f9d22ada3853bdf46296f",
    "type": "pull_request",
    "pull_request": 4424,
    "label": "pwojcikdev:blockprocessor-context",
    "created_at": "2024-02-08T18:03:48Z",
    "built_at": "2024-02-13T19:25:12Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-02-13T19:00:03Z",
    "run_id": "7891422634"
  },
  {
    "hash": "af724f4a005a82b33e8bfe9bfd2964b993a30db0",
    "type": "pull_request",
    "pull_request": 4345,
    "label": "clemahieu:block_checker",
    "created_at": "2023-11-14T12:02:06Z",
    "built_at": "2024-03-27T14:31:58Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-27T14:12:03Z",
    "run_id": "8453199250"
  },
  {
    "hash": "af9b5f1561ae962258e7d2633e4279d41eb3eef1",
    "type": "pull_request",
    "pull_request": 4184,
    "label": "clemahieu:rpc_test_check_fix",
    "created_at": "2023-03-16T12:58:10Z",
    "built_at": "2023-03-16T17:57:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:af9b5f1561ae962258e7d2633e4279d41eb3eef1"
  },
  {
    "hash": "afa344efb1f9438da8e09be954fb71e420e469e5",
    "type": "commit",
    "created_at": "2023-09-08T22:54:24Z",
    "built_at": "2023-09-08T23:59:25Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:afa344efb1f9438da8e09be954fb71e420e469e5"
  },
  {
    "hash": "afa74c33c0fe8b4ba62aea6fbb7f1741adcb5e50",
    "type": "commit",
    "created_at": "2023-05-24T15:41:47Z",
    "built_at": "2023-05-24T16:14:12Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:afa74c33c0fe8b4ba62aea6fbb7f1741adcb5e50"
  },
  {
    "hash": "afc81e6ee498d539f1045745df25513dd86c7072",
    "type": "pull_request",
    "pull_request": 4392,
    "label": "clemahieu:assert_internal_noreturn",
    "created_at": "2024-01-23T19:05:32Z",
    "built_at": "2024-01-23T19:41:17Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:afc81e6ee498d539f1045745df25513dd86c7072",
    "build_started_at": "2024-01-23T19:16:10Z",
    "run_id": "7630735838"
  },
  {
    "hash": "afcbde1928e8b9d3fba48062669c0f16f71bc655",
    "type": "commit",
    "created_at": "2024-01-24T22:52:17Z",
    "built_at": "2024-01-24T23:22:47Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:afcbde1928e8b9d3fba48062669c0f16f71bc655",
    "build_started_at": "2024-01-24T22:56:56Z",
    "run_id": "7647299664"
  },
  {
    "hash": "afd5949afd24b25eada28708e3b8592acc407c13",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Use saturation arithmetic for incrementing account numbers",
    "pull_request": "4790",
    "created_at": "2024-10-26T09:12:48Z",
    "built_at": "2024-11-27T05:14:45Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:afd5949afd24b25eada28708e3b8592acc407c13",
    "build_started_at": "2024-11-27T00:59:54Z",
    "run_id": "12043933851"
  },
  {
    "hash": "b00064b5a79e3b9cb77e707539f5987d2bb32010",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge pull request #4758 from pwojcikdev/remove-process-confirmed\n\nRemove `node::process_confirmed (...)`",
    "pull_request": "4758",
    "created_at": "2024-11-24T02:25:51Z",
    "built_at": "2024-11-24T03:12:45Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b00064b5a79e3b9cb77e707539f5987d2bb32010",
    "build_started_at": "2024-11-24T02:45:25Z",
    "run_id": "11992492111"
  },
  {
    "hash": "b00c757bc73433f0f0229f4c09ec75b7979ac1b5",
    "type": "commit",
    "created_at": "2024-03-15T18:40:17Z",
    "built_at": "2024-03-24T14:05:59Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-24T12:11:57Z",
    "run_id": "8409177637"
  },
  {
    "hash": "b06c9ebd62855a0f2f1bffa6270158c64a507043",
    "type": "commit",
    "author": "RickiNano",
    "title": "Delete unused declarations (#4781)",
    "pull_request": "4781",
    "created_at": "2024-11-23T13:35:16Z",
    "built_at": "2024-11-23T14:04:33Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b06c9ebd62855a0f2f1bffa6270158c64a507043",
    "build_started_at": "2024-11-23T13:35:44Z",
    "run_id": "11987600541"
  },
  {
    "hash": "b06c9f658de1eed0e3fd4dc94d186b43953019c8",
    "type": "pull_request",
    "title": "Updated gxrb -> knano ratio in comments",
    "author": "RickiNano",
    "body": "Some comments about Gxrb ratio was not updated in PR #4733 ",
    "draft": false,
    "pull_request": 4738,
    "label": "RickiNano:Updated_xrb_comments",
    "created_at": "2024-09-28T09:43:40Z",
    "built_at": "2024-09-28T10:16:33Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b06c9f658de1eed0e3fd4dc94d186b43953019c8",
    "build_started_at": "2024-09-28T09:50:40Z",
    "run_id": "11082972055"
  },
  {
    "hash": "b07d3db243dd441fc71a187adaf775549d7d2553",
    "type": "pull_request",
    "title": "Disallow database operations on network IO threads",
    "author": "pwojcikdev",
    "body": "Doing synchronous disk IO on network IO threads can introduce very long delays, blocking network thread pool. This adds an assert that will detect this.\r\n\r\nCurrently this doesn't pass tests nicely because legacy bootstrap trips the assert.",
    "draft": false,
    "pull_request": 4772,
    "label": "pwojcikdev:prevent-db-on-io-threads",
    "created_at": "2024-10-27T16:02:45Z",
    "built_at": "2024-11-27T13:33:44Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b07d3db243dd441fc71a187adaf775549d7d2553",
    "build_started_at": "2024-11-27T13:03:41Z",
    "run_id": "12050871346"
  },
  {
    "hash": "b07fa46536c46e6923e774349017115c9838082c",
    "type": "commit",
    "created_at": "2023-02-23T16:17:50Z",
    "built_at": "2023-02-23T17:09:30Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b07fa46536c46e6923e774349017115c9838082c"
  },
  {
    "hash": "b0896aa755d8fcbb6c0cef25b31bed8157829c8f",
    "type": "pull_request",
    "pull_request": 4367,
    "label": "clemahieu:ipc_server_signals",
    "created_at": "2024-01-18T01:27:55Z",
    "built_at": "2024-01-18T14:38:04Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b0896aa755d8fcbb6c0cef25b31bed8157829c8f",
    "build_started_at": "2024-01-18T14:10:22Z",
    "run_id": "7571212660"
  },
  {
    "hash": "b0d9ca8a469be6862f5a3db0e6ad32f140b6616c",
    "type": "commit",
    "created_at": "2023-02-23T13:20:14Z",
    "built_at": "2023-02-23T14:05:36Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b0d9ca8a469be6862f5a3db0e6ad32f140b6616c"
  },
  {
    "hash": "b0e3f2f750221421cdceccaea197f01d40ed293e",
    "type": "commit",
    "created_at": "2023-04-07T12:26:21Z",
    "built_at": "2023-04-13T14:28:57Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b0e3f2f750221421cdceccaea197f01d40ed293e"
  },
  {
    "hash": "b0e925212734ebaefd5377d6c0bab5af14079b95",
    "type": "pull_request",
    "title": "Fix vote generator stopping",
    "author": "pwojcikdev",
    "body": "Missing `stopped` check in condition",
    "draft": false,
    "pull_request": 4788,
    "label": "pwojcikdev:fix-vote-generator-stopping",
    "created_at": "2024-11-22T16:50:07Z",
    "built_at": "2024-11-22T17:20:07Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b0e925212734ebaefd5377d6c0bab5af14079b95",
    "build_started_at": "2024-11-22T16:52:08Z",
    "run_id": "11976737777"
  },
  {
    "hash": "b0f31e48f528fe9844afbb9e3a54f68bff84fbe7",
    "type": "pull_request",
    "pull_request": 4421,
    "label": "pwojcikdev:free-block-publisher-class",
    "created_at": "2024-02-05T21:08:35Z",
    "built_at": "2024-02-08T15:20:58Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b0f31e48f528fe9844afbb9e3a54f68bff84fbe7",
    "build_started_at": "2024-02-08T14:56:20Z",
    "run_id": "7831400830"
  },
  {
    "hash": "b0f61f11f35e22fc7eb8f7f181b1724998f315ea",
    "type": "pull_request",
    "title": "Extend election lifetime when receiving new votes",
    "author": "RickiNano",
    "body": "This PR adds a dynamic Time-To-Live on elections to improve the AEC alignment and efficiency during heavy load. \r\n\r\nThe TTL has been reduced to 30 seconds for normal elections and 10 seconds for hinted and optimistic elections but is extended every time a new vote arrive.\r\n\r\nBlocks that are not getting any votes are getting evicted from AEC much earlier, while blocks with active voting have a higher chance of staying in the AEC and reach confirmation.\r\n\r\nRelated issue: #4352\r\n\r\nEdit: Rebased May 8th",
    "draft": false,
    "pull_request": 4527,
    "label": "RickiNano:Active-election-time-out",
    "created_at": "2024-03-30T09:30:57Z",
    "built_at": "2024-05-19T19:18:04Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b0f61f11f35e22fc7eb8f7f181b1724998f315ea",
    "build_started_at": "2024-05-19T18:51:54Z",
    "run_id": "9149819155"
  },
  {
    "hash": "b0fe9b3856c50193891cc119efba289c0d461a77",
    "type": "commit",
    "created_at": "2024-03-18T21:43:07Z",
    "built_at": "2024-03-18T22:22:44Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b0fe9b3856c50193891cc119efba289c0d461a77",
    "build_started_at": "2024-03-18T21:48:54Z",
    "run_id": "8334077948"
  },
  {
    "hash": "b10ab55e69252e804b386fef33088acad31c7d03",
    "type": "commit",
    "created_at": "2023-09-12T17:35:12Z",
    "built_at": "2023-09-13T15:41:17Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b10ab55e69252e804b386fef33088acad31c7d03"
  },
  {
    "hash": "b123c301687c36f34f7dda7834b012d3e0d1f041",
    "type": "pull_request",
    "title": "Bounded election buckets with dynamic reprioritization",
    "author": "pwojcikdev",
    "body": "Based on:\r\n- Elections sets (can't find PR, Colin's initial attempt at bucket limiting)\r\n- Bobs bucket vacancy branch https://github.com/nanocurrency/nano-node/compare/develop...gr0vity-dev:nano-node:wip/bucket_vacancy \r\n\r\nbut simpler, more robust and allows for dynamically dropping and scheduling higher priority elections. Also, buckets can be configured to opportunistically use more available space if AEC is underutilized.",
    "draft": false,
    "pull_request": 4626,
    "label": "pwojcikdev:election-bounding-2",
    "created_at": "2024-05-15T16:21:38Z",
    "built_at": "2024-07-09T20:09:40Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b123c301687c36f34f7dda7834b012d3e0d1f041",
    "build_started_at": "2024-07-09T19:42:18Z",
    "run_id": "9863197596"
  },
  {
    "hash": "b123e90f05eff33e6b6d48010ce612b588732b34",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Use unique ptr",
    "pull_request": "4690",
    "created_at": "2024-08-03T11:45:38Z",
    "built_at": "2024-08-11T19:13:20Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b123e90f05eff33e6b6d48010ce612b588732b34",
    "build_started_at": "2024-08-11T18:19:33Z",
    "run_id": "10341990035"
  },
  {
    "hash": "b12f4eb2c0b730cfac05e9c3a17e39455d5c7c30",
    "type": "pull_request",
    "pull_request": 4235,
    "label": "clemahieu:active_overfill",
    "created_at": "2023-05-17T19:35:42Z",
    "built_at": "2023-05-17T20:19:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b12f4eb2c0b730cfac05e9c3a17e39455d5c7c30"
  },
  {
    "hash": "b187757f5ba729d56e4941772e819f7d437703ff",
    "type": "commit",
    "created_at": "2024-01-26T16:08:29Z",
    "built_at": "2024-01-31T17:55:38Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b187757f5ba729d56e4941772e819f7d437703ff",
    "build_started_at": "2024-01-31T16:56:18Z",
    "run_id": "7729573301"
  },
  {
    "hash": "b1be78507ada0364588e1184006e65123347ecb3",
    "type": "commit",
    "created_at": "2024-02-01T11:32:01Z",
    "built_at": "2024-02-01T11:58:36Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b1be78507ada0364588e1184006e65123347ecb3",
    "build_started_at": "2024-02-01T11:33:51Z",
    "run_id": "7740575356"
  },
  {
    "hash": "b1c1d883948b494648b535edd41461e47ffaec70",
    "type": "commit",
    "created_at": "2023-05-31T12:31:17Z",
    "built_at": "2023-05-31T14:06:15Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b1c1d883948b494648b535edd41461e47ffaec70"
  },
  {
    "hash": "b2108b71aae62f8dcea0fc7c7a1d47a2cc85459d",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Batched ledger upgrade",
    "pull_request": "4714",
    "created_at": "2024-08-26T17:23:11Z",
    "built_at": "2024-08-27T17:19:18Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b2108b71aae62f8dcea0fc7c7a1d47a2cc85459d",
    "build_started_at": "2024-08-27T15:42:11Z",
    "run_id": "10582434201"
  },
  {
    "hash": "b225de0ae0958f817ef34a09d3cd5131ba1508e8",
    "type": "commit",
    "created_at": "2024-01-24T11:42:42Z",
    "built_at": "2024-01-24T12:19:37Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b225de0ae0958f817ef34a09d3cd5131ba1508e8",
    "build_started_at": "2024-01-24T11:46:33Z",
    "run_id": "7639686867"
  },
  {
    "hash": "b2607dbabfbb9c9f55a919d9ade5dedebaf2f8aa",
    "type": "pull_request",
    "pull_request": 4505,
    "label": "clemahieu:active_confirmed_simplify",
    "created_at": "2024-03-19T13:08:58Z",
    "built_at": "2024-03-19T13:44:18Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b2607dbabfbb9c9f55a919d9ade5dedebaf2f8aa",
    "build_started_at": "2024-03-19T13:16:17Z",
    "run_id": "8343709074"
  },
  {
    "hash": "b2ab8cf4130a579a9bd8fa7008d1f4cae7f953a7",
    "type": "commit",
    "created_at": "2023-05-31T12:42:46Z",
    "built_at": "2023-05-31T14:18:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b2ab8cf4130a579a9bd8fa7008d1f4cae7f953a7"
  },
  {
    "hash": "b2b7860463ca8489e87b564c05925df725a61400",
    "type": "pull_request",
    "pull_request": 4447,
    "label": "clemahieu:connection_cleanup",
    "created_at": "2024-02-23T15:42:23Z",
    "built_at": "2024-02-23T18:46:56Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b2b7860463ca8489e87b564c05925df725a61400",
    "build_started_at": "2024-02-23T18:21:45Z",
    "run_id": "8023400975"
  },
  {
    "hash": "b2b8ec0df2637d7995b6881fb5fcac34c317b341",
    "type": "pull_request",
    "pull_request": 4130,
    "label": "simpago:dont-requeue-invalid-blocks",
    "created_at": "2023-02-15T09:09:48Z",
    "built_at": "2023-02-15T09:43:25Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b2b8ec0df2637d7995b6881fb5fcac34c317b341"
  },
  {
    "hash": "b2db447c2b5fd51463abddfb5804a8e2349aa28e",
    "type": "pull_request",
    "pull_request": 4449,
    "label": "pwojcikdev:repcrawler-overhaul-2",
    "created_at": "2024-02-25T14:21:12Z",
    "built_at": "2024-02-28T15:41:53Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b2db447c2b5fd51463abddfb5804a8e2349aa28e",
    "build_started_at": "2024-02-28T15:16:10Z",
    "run_id": "8082702965"
  },
  {
    "hash": "b2e265186bf0db06660ea8bda1ee611483cda629",
    "type": "commit",
    "author": "dsiganos",
    "title": "Remove inaccurate and needless comments",
    "pull_request": "4594",
    "created_at": "2024-04-30T13:50:58Z",
    "built_at": "2024-04-30T17:26:23Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b2e265186bf0db06660ea8bda1ee611483cda629",
    "build_started_at": "2024-04-30T14:39:22Z",
    "run_id": "8898743967"
  },
  {
    "hash": "b34317004258d30fe38bdc64325a6ae20c8790c2",
    "type": "commit",
    "created_at": "2024-03-16T18:07:30Z",
    "built_at": "2024-03-18T18:22:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b34317004258d30fe38bdc64325a6ae20c8790c2",
    "build_started_at": "2024-03-18T16:48:08Z",
    "run_id": "8330437043"
  },
  {
    "hash": "b362c7ca40cc9faa67c265b475e085c9c0779b8a",
    "type": "commit",
    "author": "clemahieu",
    "title": "Merge pull request #4719 from clemahieu/tsan_fixes\n\nFix correctness, sanity check, and resolve shutdown issue.",
    "pull_request": "4719",
    "created_at": "2024-09-05T08:11:42Z",
    "built_at": "2024-09-05T08:46:17Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b362c7ca40cc9faa67c265b475e085c9c0779b8a",
    "build_started_at": "2024-09-05T08:19:09Z",
    "run_id": "10716588858"
  },
  {
    "hash": "b3aa270075dbf3925f41cb1e380ca8d9bd2c514d",
    "type": "pull_request",
    "title": "Make election behavior mutable to support dynamic behaviour transition",
    "author": "gr0vity-dev",
    "body": "Problem:\r\n- Elections are currently immutable and can't be transitioned to priority status\r\n- Causing delays for optimistic elections rescheduled by priority scheduler as the next Vote broadcast is fixed to 15-second intervals. (by `network.vote_broadcast_interval`)\r\n\r\nChanges:\r\n- Modifies election behavior to be mutable, allowing elections (optimistic/hinted/...) to be transitioned to priority status\r\n- Added ability to trigger immediate vote broadcasts on transition without waiting for the next 15-second round\r\n\r\nBenefits:\r\n- It would allow for more aggressive use of optimistic elections (to narrow the gap between checked and cemented during bootstrapping) \r\n  - currently configured to accounts with gap_threshold of 32 could be reduced to 4\r\n- Maintain quick response times for live traffic by allowing election behavior changes.",
    "draft": false,
    "pull_request": 4799,
    "label": "gr0vity-dev:prs/upgrade_elections",
    "created_at": "2024-11-30T09:50:16Z",
    "built_at": "2024-11-30T10:54:17Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b3aa270075dbf3925f41cb1e380ca8d9bd2c514d",
    "build_started_at": "2024-11-30T10:24:21Z",
    "run_id": "12095562742"
  },
  {
    "hash": "b3bb7af9ff8af31797a8863d103ea47d34511bfd",
    "type": "commit",
    "author": "homebot",
    "title": "add active_transaction_config to nodeconfig\n\n- remove old config variables",
    "pull_request": "N/A",
    "created_at": "2024-05-06T10:03:44Z",
    "built_at": "2024-05-07T15:56:18Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-05-07T15:20:15Z",
    "run_id": "8988216223"
  },
  {
    "hash": "b3c2f6de0145ccc1e12d8a28ad4c71fc25ee88a4",
    "type": "pull_request",
    "title": "Optimize election scheduler activate function",
    "author": "pwojcikdev",
    "body": "This reverts some of the changes made during refactoring to block sets. The new versions were doing many redundant database lookups, which started to become a bottleneck.",
    "draft": false,
    "pull_request": 4636,
    "label": "pwojcikdev:revert-activate-develop",
    "created_at": "2024-05-22T12:48:37Z",
    "built_at": "2024-05-22T17:53:02Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b3c2f6de0145ccc1e12d8a28ad4c71fc25ee88a4",
    "build_started_at": "2024-05-22T17:23:49Z",
    "run_id": "9195746961"
  },
  {
    "hash": "b3c738338e239b7dd8ff36e1ca9612413a687563",
    "type": "pull_request",
    "title": "Enable reporting memory leaks when running sanitizers",
    "author": "pwojcikdev",
    "body": null,
    "draft": false,
    "pull_request": 4769,
    "label": "pwojcikdev:enable-leak-reporting",
    "created_at": "2024-10-27T11:34:42Z",
    "built_at": null,
    "build_status": "building",
    "docker_tag": null,
    "build_started_at": "2024-10-27T11:36:39Z",
    "run_id": null
  },
  {
    "hash": "b3d4de846943b216822d8b0a4ed2abfaa04b7d8e",
    "type": "commit",
    "author": "gr0vity-dev",
    "title": "Add block_hash to websocket response for new_unconfirmed_block (#4729)\n\nCo-authored-by: gr0vity-dev <homebot@users.noreply.github.com>",
    "pull_request": "4729",
    "created_at": "2024-09-12T10:23:48Z",
    "built_at": "2024-09-12T11:00:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b3d4de846943b216822d8b0a4ed2abfaa04b7d8e",
    "build_started_at": "2024-09-12T10:30:05Z",
    "run_id": "10829030274"
  },
  {
    "hash": "b3d77bb7d5373cf8ff4a8aa2ea0becc2e00e8f4d",
    "type": "pull_request",
    "title": "Move assert to a dedicated header",
    "author": "pwojcikdev",
    "body": null,
    "draft": false,
    "pull_request": 4773,
    "label": "pwojcikdev:assert-header",
    "created_at": "2024-10-27T18:14:57Z",
    "built_at": "2024-11-03T17:00:25Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b3d77bb7d5373cf8ff4a8aa2ea0becc2e00e8f4d",
    "build_started_at": "2024-11-03T16:34:03Z",
    "run_id": "11652964546"
  },
  {
    "hash": "b3eaaa6b6b7be03adbabf50e26a7d61d55d4a1ef",
    "type": "pull_request",
    "pull_request": 4316,
    "label": "RickiNano:remove-includes",
    "created_at": "2023-10-19T15:38:21Z",
    "built_at": "2023-11-05T20:28:13Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b3eaaa6b6b7be03adbabf50e26a7d61d55d4a1ef",
    "build_started_at": "2023-11-05T19:49:07Z",
    "run_id": "6763399324"
  },
  {
    "hash": "b3f0c53008b5ef3bb4cc19c35587ff1cd222a94b",
    "type": "commit",
    "created_at": "2023-02-17T12:32:08Z",
    "built_at": "2023-02-17T13:22:24Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b3f0c53008b5ef3bb4cc19c35587ff1cd222a94b"
  },
  {
    "hash": "b41943214be091f32bc35b484259ff6bb8a5fc64",
    "type": "commit",
    "created_at": "2023-04-05T11:41:32Z",
    "built_at": "2023-04-05T12:18:56Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b41943214be091f32bc35b484259ff6bb8a5fc64"
  },
  {
    "hash": "b426defe95f9817bdcb9ab314c588d957ffe44bc",
    "type": "pull_request",
    "pull_request": 4276,
    "label": "clemahieu:remove_priority_flush",
    "created_at": "2023-09-04T14:45:54Z",
    "built_at": "2023-09-04T15:29:33Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b426defe95f9817bdcb9ab314c588d957ffe44bc"
  },
  {
    "hash": "b42da52525ec7535aace4602d65499df76980416",
    "type": "pull_request",
    "pull_request": 4519,
    "label": "clemahieu:confirming_set",
    "created_at": "2024-03-23T22:40:41Z",
    "built_at": "2024-03-24T22:38:26Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b42da52525ec7535aace4602d65499df76980416",
    "build_started_at": "2024-03-24T22:11:23Z",
    "run_id": "8412454876"
  },
  {
    "hash": "b44040347b58007acf4a8bf1a476895a4d2a9afc",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Rename `exists ()` to `contains ()`",
    "pull_request": "4755",
    "created_at": "2024-10-15T15:19:01Z",
    "built_at": "2024-10-18T10:17:43Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b44040347b58007acf4a8bf1a476895a4d2a9afc",
    "build_started_at": "2024-10-18T08:49:46Z",
    "run_id": "11401445436"
  },
  {
    "hash": "b44be68650af1cea1d671d658655e92ee270f902",
    "type": "pull_request",
    "pull_request": 4318,
    "label": "clemahieu:election_state_mutex",
    "created_at": "2023-10-26T14:21:12Z",
    "built_at": "2024-01-12T23:31:26Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b44be68650af1cea1d671d658655e92ee270f902",
    "build_started_at": "2024-01-12T23:06:43Z",
    "run_id": "7508401094"
  },
  {
    "hash": "b44e5a43d0072d93578a71a4a1bc60fa50d01d3b",
    "type": "pull_request",
    "pull_request": 4478,
    "label": "clemahieu:block_destination",
    "created_at": "2024-03-11T19:44:51Z",
    "built_at": "2024-03-11T20:16:07Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b44e5a43d0072d93578a71a4a1bc60fa50d01d3b",
    "build_started_at": "2024-03-11T19:50:09Z",
    "run_id": "8238857934"
  },
  {
    "hash": "b45a80432c65a2594090704294b4280ec82485e3",
    "type": "pull_request",
    "pull_request": 4190,
    "label": "thsfs:add_node_lib_to_node_rpc_build",
    "created_at": "2023-03-20T22:02:02Z",
    "built_at": "2023-03-20T23:01:27Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b45a80432c65a2594090704294b4280ec82485e3"
  },
  {
    "hash": "b4b5d09b81a1deadc7549efafa610b7f35d7c542",
    "type": "pull_request",
    "pull_request": 4425,
    "label": "clemahieu:remove_frontiers_table",
    "created_at": "2024-02-10T18:21:12Z",
    "built_at": "2024-03-05T18:04:43Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b4b5d09b81a1deadc7549efafa610b7f35d7c542",
    "build_started_at": "2024-03-05T17:27:14Z",
    "run_id": "8160452329"
  },
  {
    "hash": "b4eb3a0637f80a56efbbf77d24d90eb7305f3697",
    "type": "pull_request",
    "pull_request": 4375,
    "label": "pwojcikdev:logging-overhaul-10-develop",
    "created_at": "2024-01-19T14:05:43Z",
    "built_at": "2024-01-22T19:17:47Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b4eb3a0637f80a56efbbf77d24d90eb7305f3697",
    "build_started_at": "2024-01-22T18:45:57Z",
    "run_id": "7615899798"
  },
  {
    "hash": "b4eb765a90961297effbd5392dd44a6e74b81d65",
    "type": "commit",
    "author": "clemahieu",
    "title": "Forward declare work_version and extract to its own file.",
    "pull_request": "N/A",
    "created_at": "2024-10-27T23:51:52Z",
    "built_at": "2024-10-31T07:26:58Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b4eb765a90961297effbd5392dd44a6e74b81d65",
    "build_started_at": "2024-10-31T03:33:18Z",
    "run_id": "11607471484"
  },
  {
    "hash": "b4fdc073eebb09093c908529f1079bf4a813eb45",
    "type": "pull_request",
    "pull_request": 4173,
    "label": "clemahieu:flatbuffer_version_bump",
    "created_at": "2023-03-06T11:18:55Z",
    "built_at": "2023-03-06T17:45:53Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b4fdc073eebb09093c908529f1079bf4a813eb45"
  },
  {
    "hash": "b509b4604560fdd0d37fb226ef76d54ceaaa4dd0",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Move `block_deserializer` to `transport` namespace",
    "pull_request": "N/A",
    "created_at": "2024-10-29T13:14:28Z",
    "built_at": "2024-10-31T17:26:01Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b509b4604560fdd0d37fb226ef76d54ceaaa4dd0",
    "build_started_at": "2024-10-31T13:47:32Z",
    "run_id": "11616349142"
  },
  {
    "hash": "b51737b6b9f03c99737ff7c0fca8ce7bf1801103",
    "type": "pull_request",
    "pull_request": 4484,
    "label": "clemahieu:ledger_successor_simplify",
    "created_at": "2024-03-12T12:33:19Z",
    "built_at": "2024-03-13T13:26:29Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-13T13:10:59Z",
    "run_id": "8265236170"
  },
  {
    "hash": "b52e7615ccbffd046bde0ae91fa514bf8cbee09f",
    "type": "pull_request",
    "pull_request": 3780,
    "label": "nanocurrency:flow_control_model",
    "created_at": "2022-04-05T08:00:04Z",
    "built_at": "2023-05-27T16:49:01Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b52e7615ccbffd046bde0ae91fa514bf8cbee09f"
  },
  {
    "hash": "b52fa9333b7b2fa308ee95610a5dc2f42ae8f66d",
    "type": "pull_request",
    "pull_request": 4200,
    "label": "clemahieu:election_confirmed_durable",
    "created_at": "2023-03-27T20:55:35Z",
    "built_at": "2023-03-28T12:14:52Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b52fa9333b7b2fa308ee95610a5dc2f42ae8f66d"
  },
  {
    "hash": "b530ba145e63c495ce984539a26b4b8a5ff4bf6c",
    "type": "pull_request",
    "pull_request": 4360,
    "label": "nanocurrency:minor_assert_improvement",
    "created_at": "2024-01-15T03:58:15Z",
    "built_at": null,
    "build_status": "building",
    "docker_tag": null
  },
  {
    "hash": "b530bbeecd728f06294cf172e800264623b23203",
    "type": "pull_request",
    "title": "Block checker",
    "body": "Rewrite of https://github.com/nanocurrency/nano-node/pull/3727 with functional style checking rather than a pipeline",
    "draft": true,
    "pull_request": 4345,
    "label": "clemahieu:block_checker",
    "created_at": "2023-11-14T12:02:06Z",
    "built_at": "2024-04-03T20:16:51Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b530bbeecd728f06294cf172e800264623b23203",
    "build_started_at": "2024-04-03T19:49:27Z",
    "run_id": "8544651153"
  },
  {
    "hash": "b54aef1bf1b539aa259d487945fc7e4aa4ae56d8",
    "type": "pull_request",
    "pull_request": 4335,
    "label": "pwojcikdev:scheduler-container-infos",
    "created_at": "2023-11-07T18:27:39Z",
    "built_at": "2023-11-07T19:14:16Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b54aef1bf1b539aa259d487945fc7e4aa4ae56d8",
    "build_started_at": "2023-11-07T18:30:27Z",
    "run_id": "6788802953"
  },
  {
    "hash": "b55414ff4fae5b3fd0a4dbceb2bbb217de7db7b8",
    "type": "pull_request",
    "title": "Fix and re-enable unit test rpc.wallet_history",
    "author": "dsiganos",
    "body": "It appears that the problme was that a timestamp was checked for exactness instead of chacking for a time range.\r\n\r\nfixes #3514 ",
    "draft": false,
    "pull_request": 4552,
    "label": "dsiganos:fix_rpc_wallet_history",
    "created_at": "2024-04-12T12:58:47Z",
    "built_at": "2024-04-12T15:50:45Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b55414ff4fae5b3fd0a4dbceb2bbb217de7db7b8",
    "build_started_at": "2024-04-12T15:22:03Z",
    "run_id": "8664340631"
  },
  {
    "hash": "b57e93c5f615dc7a1539c4a4950cd13147698e51",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Revert account store iterator in `bootstrap_server` (#4688)",
    "pull_request": "4688",
    "created_at": "2024-08-03T14:53:12Z",
    "built_at": "2024-08-03T15:24:12Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b57e93c5f615dc7a1539c4a4950cd13147698e51",
    "build_started_at": "2024-08-03T14:57:07Z",
    "run_id": "10228887652"
  },
  {
    "hash": "b5e66324ae5552de14f0875e112b9e522eac67aa",
    "type": "pull_request",
    "pull_request": 4349,
    "label": "RickiNano:remove-unused-includes",
    "created_at": "2023-12-06T08:44:13Z",
    "built_at": "2023-12-06T09:16:01Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b5e66324ae5552de14f0875e112b9e522eac67aa",
    "build_started_at": "2023-12-06T08:50:23Z",
    "run_id": "7112214382"
  },
  {
    "hash": "b5fe8765388795d97b3c475496f3a95fb26bba61",
    "type": "pull_request",
    "pull_request": 4438,
    "label": "dsiganos:renable_unit_test_confirm_new",
    "created_at": "2024-02-17T16:16:58Z",
    "built_at": "2024-02-17T16:51:28Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b5fe8765388795d97b3c475496f3a95fb26bba61",
    "build_started_at": "2024-02-17T16:25:51Z",
    "run_id": "7942908784"
  },
  {
    "hash": "b600e3a75941ca06d0c8ddce47493f366146f851",
    "type": "commit",
    "author": "homebot",
    "title": "formatting",
    "pull_request": "4604",
    "created_at": "2024-05-06T11:38:06Z",
    "built_at": "2024-05-07T16:13:49Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b600e3a75941ca06d0c8ddce47493f366146f851",
    "build_started_at": "2024-05-07T15:20:15Z",
    "run_id": "8988319251"
  },
  {
    "hash": "b61020c02c4f8c9ebd5d9bafefea58bbbb9accd9",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge pull request #4563 from pwojcikdev/daemon-systests-rebased\n\nTest daemon interrupt handling",
    "pull_request": "4563",
    "created_at": "2024-04-17T07:45:04Z",
    "built_at": "2024-04-17T09:03:12Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b61020c02c4f8c9ebd5d9bafefea58bbbb9accd9",
    "build_started_at": "2024-04-17T07:51:58Z",
    "run_id": "8718868163"
  },
  {
    "hash": "b64fd555549aaf019eb3c674366276f6e36c7a26",
    "type": "pull_request",
    "pull_request": 4119,
    "label": "JerzyStanislawski:refactor_election_vote",
    "created_at": "2023-02-12T19:50:11Z",
    "built_at": "2023-02-12T20:22:28Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b64fd555549aaf019eb3c674366276f6e36c7a26"
  },
  {
    "hash": "b66bfe2a2c0ef0485b5343aff32f171f948e601a",
    "type": "commit",
    "created_at": "2024-03-07T14:17:06Z",
    "built_at": "2024-03-09T13:47:35Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b66bfe2a2c0ef0485b5343aff32f171f948e601a",
    "build_started_at": "2024-03-09T12:18:32Z",
    "run_id": "8214449124"
  },
  {
    "hash": "b67d125896773fe1e383a42391b5375f8642b62f",
    "type": "commit",
    "created_at": "2024-03-14T16:47:30Z",
    "built_at": "2024-03-15T16:44:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b67d125896773fe1e383a42391b5375f8642b62f",
    "build_started_at": "2024-03-15T15:29:42Z",
    "run_id": "8298619683"
  },
  {
    "hash": "b6bf11793f3aba6a36f8b2fe9d8dc7b921ca8a4f",
    "type": "commit",
    "created_at": "2024-01-15T19:05:06Z",
    "built_at": "2024-01-15T19:35:18Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b6bf11793f3aba6a36f8b2fe9d8dc7b921ca8a4f",
    "build_started_at": "2024-01-15T19:10:44Z",
    "run_id": "7533129886"
  },
  {
    "hash": "b6d5d012564c95af3295d8d021c897170921d39b",
    "type": "commit",
    "created_at": "2023-09-05T10:58:39Z",
    "built_at": "2023-09-05T12:25:26Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b6d5d012564c95af3295d8d021c897170921d39b"
  },
  {
    "hash": "b6ec7731480e67af9f082bd4f329b57c97b206fc",
    "type": "pull_request",
    "pull_request": 4485,
    "label": "simpago:rep-cache-min-weight",
    "created_at": "2024-03-12T13:26:39Z",
    "built_at": "2024-03-22T13:48:15Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b6ec7731480e67af9f082bd4f329b57c97b206fc",
    "build_started_at": "2024-03-22T13:19:36Z",
    "run_id": "8390975209"
  },
  {
    "hash": "b6ee1692c5d6f7833ac0a84fdfc94e5a57c3060b",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Batch cemented callback",
    "pull_request": "N/A",
    "created_at": "2024-05-24T08:35:46Z",
    "built_at": "2024-06-18T16:02:13Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b6ee1692c5d6f7833ac0a84fdfc94e5a57c3060b",
    "build_started_at": "2024-06-18T14:35:34Z",
    "run_id": "9567995898"
  },
  {
    "hash": "b6efeb699ad4329c1b4824d96f2dadab60fa0b7b",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Cleanup",
    "pull_request": "4757",
    "created_at": "2024-10-18T11:57:58Z",
    "built_at": "2024-10-18T21:15:27Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b6efeb699ad4329c1b4824d96f2dadab60fa0b7b",
    "build_started_at": "2024-10-18T20:40:42Z",
    "run_id": "11410803151"
  },
  {
    "hash": "b712075e20611e2c06b231e07670af6bf4c63b0e",
    "type": "pull_request",
    "title": "Remove legacy bootstrap",
    "author": "pwojcikdev",
    "body": "This removes legacy bootstrap, which was replaced by the new ascending bootstrap. Legacy bootstrap implementation was unnecessarily complicated with many inefficiencies. Debugging it was a pain and slowed down development of new features. \r\n\r\nAll the `bootstrap_ascending*` classes and stats are renamed to simply `bootstrap`.\r\n\r\nTODO for the future is porting previous `bootstrap_processor` test suite to use the new bootstrapper.",
    "draft": false,
    "pull_request": 4777,
    "label": "pwojcikdev:remove-legacy-bootstrap-2",
    "created_at": "2024-10-29T17:20:20Z",
    "built_at": "2024-10-29T19:07:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b712075e20611e2c06b231e07670af6bf4c63b0e",
    "build_started_at": "2024-10-29T18:40:16Z",
    "run_id": "11580389873"
  },
  {
    "hash": "b7204bfc2675a7de23d89073a56675abc53cebf4",
    "type": "pull_request",
    "pull_request": 4202,
    "label": "pwojcikdev:traffic-queue-types-2",
    "created_at": "2023-04-02T12:03:42Z",
    "built_at": "2023-04-02T13:07:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b7204bfc2675a7de23d89073a56675abc53cebf4"
  },
  {
    "hash": "b73bdf8da0f39086b41fcb532284e4d599db643c",
    "type": "pull_request",
    "pull_request": 4345,
    "label": "clemahieu:block_checker",
    "created_at": "2023-11-14T12:02:06Z",
    "built_at": "2024-03-28T16:02:35Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b73bdf8da0f39086b41fcb532284e4d599db643c",
    "build_started_at": "2024-03-28T15:30:16Z",
    "run_id": "8469735349"
  },
  {
    "hash": "b749ef526ac082563f3f4329b9024317ba4806b1",
    "type": "pull_request",
    "title": "Fix rocksdb migration",
    "author": "RickiNano",
    "body": "Database migrations are currently failing on RocksDb because the rep_weights table does not exist. This PR creates the table if it does not exist.\r\nIt also fixes the wrong log types in the same migration",
    "draft": false,
    "pull_request": 4645,
    "label": "RickiNano:fix-rocksdb-migration",
    "created_at": "2024-05-31T21:08:33Z",
    "built_at": "2024-05-31T21:35:51Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b749ef526ac082563f3f4329b9024317ba4806b1",
    "build_started_at": "2024-05-31T21:08:57Z",
    "run_id": "9324341239"
  },
  {
    "hash": "b7816bada085356f95b5ed6c481d4bfb61a07fe0",
    "type": "commit",
    "created_at": "2023-03-05T01:11:26Z",
    "built_at": "2023-03-05T04:36:12Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b7816bada085356f95b5ed6c481d4bfb61a07fe0"
  },
  {
    "hash": "b78b8cc581a46c12d4b3f4d41a4240e5a5e86c29",
    "type": "commit",
    "created_at": "2023-03-08T01:37:39Z",
    "built_at": "2023-03-08T03:58:57Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b78b8cc581a46c12d4b3f4d41a4240e5a5e86c29"
  },
  {
    "hash": "b7ae57a5ee8bddb1413d18902d44a257d87be27e",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Ascending bootstrap dependency resolution (#4692)\n\n* Dependency walking\r\n\r\n* Parallel database scan\r\n\r\n* Stats\r\n\r\n* Throttling & backoff\r\n\r\n* Dependency account scanning\r\n\r\n* Sync dependencies\r\n\r\n* Track source when throttling\r\n\r\n* Count tags\r\n\r\n* Priorities backoff\r\n\r\nCo-authored-by: gr0vity-dev <85646666+gr0vity-dev@users.noreply.github.com>\r\n\r\n* Timestamps\r\n\r\n* Avoid reprocessing old blocks\r\n\r\nCo-authored-by: gr0vity-dev <85646666+gr0vity-dev@users.noreply.github.com>\r\n\r\n* Max tags limit\r\n\r\n* Handle `gap_previous`\r\n\r\nCo-authored-by: gr0vity-dev <85646666+gr0vity-dev@users.noreply.github.com>\r\n\r\n* Check timestamp\r\n\r\n* Tune initial priority\r\n\r\nCo-authored-by: gr0vity-dev <85646666+gr0vity-dev@users.noreply.github.com>\r\n\r\n* Fix config\r\n\r\n* Verify response\r\n\r\n* Use filters\r\n\r\n* Remove random sampling\r\n\r\nCo-authored-by: gr0vity-dev <85646666+gr0vity-dev@users.noreply.github.com>\r\n\r\n* Backoff adjustments\r\n\r\n* Insert genesis on start\r\n\r\nCo-authored-by: gr0vity-dev <85646666+gr0vity-dev@users.noreply.github.com>\r\n\r\n* Fix timestamp check performance\r\n\r\nCo-authored-by: gr0vity-dev <85646666+gr0vity-dev@users.noreply.github.com>\r\n\r\n* Adjust throttle size computation\r\n\r\n* Config improvements\r\n\r\n* Fix compilation\r\n\r\n* Extend test timeout\r\n\r\n---------\r\n\r\nCo-authored-by: gr0vity-dev <85646666+gr0vity-dev@users.noreply.github.com>",
    "pull_request": "4692",
    "created_at": "2024-08-06T15:44:24Z",
    "built_at": "2024-08-06T16:13:28Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b7ae57a5ee8bddb1413d18902d44a257d87be27e",
    "build_started_at": "2024-08-06T15:45:35Z",
    "run_id": "10269727200"
  },
  {
    "hash": "b7b0395a03e1c1a8ff51b842e5ab9e975c0c569a",
    "type": "pull_request",
    "title": "Simplify vote generator",
    "author": "RickiNano",
    "body": "This PR removes the vote_generator_threshold that generates an additional wait to bundle more votes into each message. That wait period adds voting latency.\r\nThe logic that handles processing of requests and candidates have also been simplified.\r\nBob has performance tested this branch and found no performance improvement nor degredatation\r\n![screenshot_2024-10-08_at_08 18 29](https://github.com/user-attachments/assets/f061f655-319f-45de-8cfb-76e0cd50a0fe)\r\n\r\nAn interesting side effect is that the amount of active election timeouts dropped with this branch\r\n![screenshot_2024-10-08_at_08 21 18](https://github.com/user-attachments/assets/41cd50a5-727a-4e40-bf71-96cb8d2d5626)\r\n\r\nI've marked this PR as draft to discuss benefits and drawbacks of this change",
    "draft": true,
    "pull_request": 4748,
    "label": "RickiNano:Vote-wait",
    "created_at": "2024-10-08T10:50:59Z",
    "built_at": "2024-10-08T11:17:37Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b7b0395a03e1c1a8ff51b842e5ab9e975c0c569a",
    "build_started_at": "2024-10-08T10:51:03Z",
    "run_id": "11233900840"
  },
  {
    "hash": "b7ba1eb08a4b2c54dd87a204f8df4afb47f63e17",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Rework cemented notification",
    "pull_request": "N/A",
    "created_at": "2024-10-15T13:27:12Z",
    "built_at": "2024-10-18T10:25:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b7ba1eb08a4b2c54dd87a204f8df4afb47f63e17",
    "build_started_at": "2024-10-18T08:49:46Z",
    "run_id": "11401545980"
  },
  {
    "hash": "b7c3a78de40c47aeeb85c4ab5a0559c292fcba9c",
    "type": "pull_request",
    "pull_request": 4513,
    "label": "gr0vity-dev:wip/nano-nightly_builds",
    "created_at": "2024-03-21T15:35:51Z",
    "built_at": "2024-03-21T17:03:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b7c3a78de40c47aeeb85c4ab5a0559c292fcba9c",
    "build_started_at": "2024-03-21T16:34:01Z",
    "run_id": "8378435159"
  },
  {
    "hash": "b7da868c2ac5016d62fc8055c7306bcf447c640c",
    "type": "pull_request",
    "pull_request": 3538,
    "label": "gr0vity-dev:websocket_confirmation_source_account",
    "created_at": "2021-10-31T00:26:28Z",
    "built_at": "2023-02-05T05:05:08Z",
    "build_status": "fail",
    "docker_tag": ""
  },
  {
    "hash": "b7dc1da699f208a568d08172e1aa69f843bc0409",
    "type": "commit",
    "created_at": "2023-08-30T18:42:50Z",
    "built_at": "2023-08-30T19:39:22Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b7dc1da699f208a568d08172e1aa69f843bc0409"
  },
  {
    "hash": "b7f23708e8305930be5aac440cd06ca6846aac1b",
    "type": "commit",
    "created_at": "2023-09-14T13:02:00Z",
    "built_at": "2023-09-15T16:38:15Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b7f23708e8305930be5aac440cd06ca6846aac1b"
  },
  {
    "hash": "b8249326d139830f033c1ce8aec3b2c7ebd8f24f",
    "type": "commit",
    "created_at": "2024-02-13T13:37:59Z",
    "built_at": "2024-02-13T14:23:43Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b8249326d139830f033c1ce8aec3b2c7ebd8f24f",
    "build_started_at": "2024-02-13T13:43:04Z",
    "run_id": "7887429112"
  },
  {
    "hash": "b833f88c376ec296841a373fd61ffee24f14ae7f",
    "type": "pull_request",
    "title": "Feature: disable_activate_successors flag",
    "author": "dsiganos",
    "body": "This flag stops active_transactions from calling `activate_successors()`, which is useful for testing.",
    "draft": false,
    "pull_request": 4586,
    "label": "dsiganos:feature/disable_activate_successors",
    "created_at": "2024-04-26T19:13:59Z",
    "built_at": "2024-04-26T19:43:56Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b833f88c376ec296841a373fd61ffee24f14ae7f",
    "build_started_at": "2024-04-26T19:18:33Z",
    "run_id": "8853234691"
  },
  {
    "hash": "b8459e9cecaf3ffb901dc355134139e9ceb0d6d3",
    "type": "pull_request",
    "pull_request": 4237,
    "label": "clemahieu:scheduler_component",
    "created_at": "2023-05-19T00:10:26Z",
    "built_at": "2023-05-19T02:01:18Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b8459e9cecaf3ffb901dc355134139e9ceb0d6d3"
  },
  {
    "hash": "b851b75ba2aa1b140963a46f99fdfda9c232d2a5",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Adjust max fails",
    "pull_request": "4786",
    "created_at": "2024-11-12T12:21:56Z",
    "built_at": "2024-11-23T04:20:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b851b75ba2aa1b140963a46f99fdfda9c232d2a5",
    "build_started_at": "2024-11-22T23:40:48Z",
    "run_id": "11983884242"
  },
  {
    "hash": "b88841c644a134a7bd7479ff9d7c35150399844c",
    "type": "pull_request",
    "pull_request": 4210,
    "label": "thsfs:simplify_bootstrap_ascending_injected_deps",
    "created_at": "2023-04-05T17:05:13Z",
    "built_at": "2023-04-05T17:58:01Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b88841c644a134a7bd7479ff9d7c35150399844c"
  },
  {
    "hash": "b8914821f3d7952532cc0e62f8a0430c338872a4",
    "type": "pull_request",
    "pull_request": 4287,
    "label": "clemahieu:nano_store_cleanup",
    "created_at": "2023-09-20T13:53:09Z",
    "built_at": "2023-09-20T15:51:16Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b8914821f3d7952532cc0e62f8a0430c338872a4"
  },
  {
    "hash": "b897c696e7ace8340e38290fa239977ccf623dea",
    "type": "pull_request",
    "pull_request": 4484,
    "label": "clemahieu:ledger_successor_simplify",
    "created_at": "2024-03-12T12:33:19Z",
    "built_at": "2024-03-13T14:41:37Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-13T14:26:13Z",
    "run_id": "8266345851"
  },
  {
    "hash": "b8a4727c4ab29d3cfebd797db6348bffdfee38d8",
    "type": "pull_request",
    "title": "Redesign the priority scheduler to maintain a 1-to-1 link with running elections",
    "author": "clemahieu",
    "body": "This change appropriately prioritises elections by bucket and then by LRU account. Overfilled buckets have the lowest priority block election cancelled and rolled back.",
    "draft": true,
    "pull_request": 4593,
    "label": "clemahieu:priority_limiter",
    "created_at": "2024-04-30T12:53:50Z",
    "built_at": "2024-04-30T13:21:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b8a4727c4ab29d3cfebd797db6348bffdfee38d8",
    "build_started_at": "2024-04-30T12:55:32Z",
    "run_id": "8895107334"
  },
  {
    "hash": "b8b72d477fd40a21b45a8427e89b6b983a6e3e05",
    "type": "pull_request",
    "pull_request": 4162,
    "label": "clemahieu:timer_types",
    "created_at": "2023-02-28T13:55:57Z",
    "built_at": "2023-02-28T14:38:36Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b8b72d477fd40a21b45a8427e89b6b983a6e3e05"
  },
  {
    "hash": "b8d1b027307818ec7a7138cd94a4a99c294a844f",
    "type": "pull_request",
    "title": "Separate vote_router from active_transactions",
    "author": "clemahieu",
    "body": "This change is to simplify the active_transactions class which has many responsibilities around election management. This change separates the responsibility of routing votes to their respective elections from other responsibilities inside active_transactions.\r\n\r\nThe mapping hash -> election in nano::active_transactions::blocks is moved into a new class nano::vote_router. Vote processing logic is moved from nano::active_transactions::vote to nano::vote_router::vote.\r\n\r\nnano::vote_router changes the behavior from active_transactions::blocks in that it does not own the lifetime of elections. Only a weak_ptr to election is held and a background thread cleans up orphaned routes periodically.\r\n\r\nnano::vote_code and nano::vote_source are moved into the vote_router.hpp file and forward declared when possible.",
    "draft": false,
    "pull_request": 4607,
    "label": "clemahieu:vote_router",
    "created_at": "2024-05-07T13:47:40Z",
    "built_at": "2024-05-07T22:58:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b8d1b027307818ec7a7138cd94a4a99c294a844f",
    "build_started_at": "2024-05-07T22:32:14Z",
    "run_id": "8993182347"
  },
  {
    "hash": "b90618ca13b026103d71ab662b6152baa9c36973",
    "type": "pull_request",
    "pull_request": 4149,
    "label": "clemahieu:active_transaction_stats",
    "created_at": "2023-02-22T18:00:16Z",
    "built_at": "2023-02-22T18:51:34Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b90618ca13b026103d71ab662b6152baa9c36973"
  },
  {
    "hash": "b91ff4bb4fb2c1bc7b5daa12436970c7f72354a2",
    "type": "commit",
    "created_at": "2023-05-15T12:54:01Z",
    "built_at": "2023-05-15T14:12:25Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b91ff4bb4fb2c1bc7b5daa12436970c7f72354a2"
  },
  {
    "hash": "b927ce911c759fa60a3fc84fd0ca97912c25a7d6",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Deprioritize synced accounts faster",
    "pull_request": "4806",
    "created_at": "2024-11-02T15:47:21Z",
    "built_at": "2024-12-10T19:54:37Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b927ce911c759fa60a3fc84fd0ca97912c25a7d6",
    "build_started_at": "2024-12-10T18:42:47Z",
    "run_id": "12263288139"
  },
  {
    "hash": "b9465494edfe18bdab76bd67a5e463761419acc1",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Readme update (#4795)\n\n* Remove dead badges from readme\n\n* Update security policy file",
    "pull_request": "4795",
    "created_at": "2024-11-26T21:18:46Z",
    "built_at": "2024-11-26T21:55:23Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b9465494edfe18bdab76bd67a5e463761419acc1",
    "build_started_at": "2024-11-26T21:28:05Z",
    "run_id": "12039321579"
  },
  {
    "hash": "b9685ed8e4e03c4a5c3fee6b94560dd5ada1f327",
    "type": "commit",
    "created_at": "2023-02-03T18:33:59Z",
    "built_at": "2023-02-15T15:45:43Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b9685ed8e4e03c4a5c3fee6b94560dd5ada1f327"
  },
  {
    "hash": "b9701e8779a3c9f2a6b35c8ebb256799b4a6ab23",
    "type": "pull_request",
    "title": "map::iterator is a dependent typename and needs the typename keyword.",
    "body": null,
    "draft": false,
    "pull_request": 4545,
    "label": "clemahieu:fair_queue_build_error",
    "created_at": "2024-04-09T15:49:08Z",
    "built_at": "2024-04-09T16:20:59Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b9701e8779a3c9f2a6b35c8ebb256799b4a6ab23",
    "build_started_at": "2024-04-09T15:52:42Z",
    "run_id": "8618657543"
  },
  {
    "hash": "b99a2a9fa1e89531aa1d18164502e40f4e47f5ad",
    "type": "pull_request",
    "pull_request": 4215,
    "label": "clemahieu:throttle_tuning",
    "created_at": "2023-04-19T15:37:21Z",
    "built_at": "2023-04-19T22:05:56Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b99a2a9fa1e89531aa1d18164502e40f4e47f5ad"
  },
  {
    "hash": "b9b0e44db1b88ae184fd04d477063d77a3de14ec",
    "type": "pull_request",
    "title": "Transport classes cleanup",
    "author": "pwojcikdev",
    "body": "This moves and renames a few classes from `nano::transport` namespace to better reflect their role and break their source into smaller, separate files.",
    "draft": false,
    "pull_request": 4651,
    "label": "pwojcikdev:transport-cleanup",
    "created_at": "2024-06-17T16:01:29Z",
    "built_at": "2024-06-17T16:46:43Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b9b0e44db1b88ae184fd04d477063d77a3de14ec",
    "build_started_at": "2024-06-17T16:17:59Z",
    "run_id": "9551146497"
  },
  {
    "hash": "b9c077ddef393943c30c5d5c9b6e5bd6767675f4",
    "type": "pull_request",
    "pull_request": 4167,
    "label": "clemahieu:block_origin_remove",
    "created_at": "2023-03-03T03:40:11Z",
    "built_at": "2023-03-04T12:04:01Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b9c077ddef393943c30c5d5c9b6e5bd6767675f4"
  },
  {
    "hash": "b9d21305333182bc108421bf08937219afd32659",
    "type": "pull_request",
    "title": "Use new priority timestamp in priority scheduler",
    "author": "simpago",
    "body": "This PR changes the priority scheduler to use the priority timestamp that is calculated by the new ledger::block_priority function instead of the latest account timestamp",
    "draft": false,
    "pull_request": 4809,
    "label": "rsnano-node:use-new-priority-timestamp",
    "created_at": "2024-12-20T12:32:49Z",
    "built_at": null,
    "build_status": "building",
    "docker_tag": null,
    "build_started_at": "2024-12-20T12:38:32Z",
    "run_id": null
  },
  {
    "hash": "b9f02254d089cff922fb7f98c8bdb350909065ec",
    "type": "pull_request",
    "title": "Remove `election_winner_details` container",
    "author": "pwojcikdev",
    "body": "This removes `election_winner_details` container which proved to be difficult to keep in sync and was leaking entires when rollbacks were performed (as part of bounded backlog work). The election that triggered the cementing is now passed as part of context, ie. the flow of cementing is: `election::confirm_once (...) > confirming_set::add (...) > confirming_set::batch_cemented event > active_elections::block_cemented callback (...)` where election is passed through the pipeline.",
    "draft": false,
    "pull_request": 4755,
    "label": "pwojcikdev:remove-election-winner-details",
    "created_at": "2024-10-16T15:15:58Z",
    "built_at": "2024-10-16T15:59:49Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b9f02254d089cff922fb7f98c8bdb350909065ec",
    "build_started_at": "2024-10-16T15:32:25Z",
    "run_id": "11368948157"
  },
  {
    "hash": "b9faa5654904e7f60ee49f2f48587b555b939a19",
    "type": "pull_request",
    "title": "Use multithreaded io runner in socket tests",
    "author": "pwojcikdev",
    "body": "Enabling multithreaded io context in socket tests was one of the changes in https://github.com/nanocurrency/nano-node/pull/4523 that helped uncover additional TSAN problems.",
    "draft": false,
    "pull_request": 4578,
    "label": "pwojcikdev:socket-tests-multithreading",
    "created_at": "2024-04-18T18:45:08Z",
    "built_at": "2024-04-18T19:20:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b9faa5654904e7f60ee49f2f48587b555b939a19",
    "build_started_at": "2024-04-18T18:50:52Z",
    "run_id": "8743179077"
  },
  {
    "hash": "b9fae83a4ac1fa3c482d7b4282dea70f444fb874",
    "type": "pull_request",
    "pull_request": 4131,
    "label": "simpago:clear-unchecked-table",
    "created_at": "2023-02-15T13:24:53Z",
    "built_at": "2023-04-25T22:09:44Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:b9fae83a4ac1fa3c482d7b4282dea70f444fb874"
  },
  {
    "hash": "ba002c6703de4ed02eaebbd0fee193d58711bd67",
    "type": "pull_request",
    "pull_request": 4382,
    "label": "dsiganos:fix_node_fork_publish_inactive",
    "created_at": "2024-01-21T12:42:13Z",
    "built_at": "2024-01-21T18:55:29Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ba002c6703de4ed02eaebbd0fee193d58711bd67",
    "build_started_at": "2024-01-21T18:30:15Z",
    "run_id": "7603085098"
  },
  {
    "hash": "ba2e815cf9624f1c44bca11732392d9a7f0afb04",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Rename `num_queued_tasks` to `queued_tasks`",
    "pull_request": "N/A",
    "created_at": "2024-10-22T13:50:04Z",
    "built_at": "2024-10-27T14:00:21Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ba2e815cf9624f1c44bca11732392d9a7f0afb04",
    "build_started_at": "2024-10-27T11:28:44Z",
    "run_id": "11540926625"
  },
  {
    "hash": "ba835584f4c39bcc6533c25329c672d7ce39c6c0",
    "type": "pull_request",
    "pull_request": 4246,
    "label": "pwojcikdev:parallel-core-tests",
    "created_at": "2023-06-06T23:26:01Z",
    "built_at": "2023-06-12T10:21:37Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ba835584f4c39bcc6533c25329c672d7ce39c6c0"
  },
  {
    "hash": "ba8ac3e92dd0e770840f4b3bc4f7ee0932944896",
    "type": "pull_request",
    "pull_request": 4318,
    "label": "clemahieu:election_state_mutex",
    "created_at": "2023-10-26T14:21:12Z",
    "built_at": "2023-10-26T16:50:40Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ba8ac3e92dd0e770840f4b3bc4f7ee0932944896",
    "build_started_at": "2023-10-26T15:50:23Z",
    "run_id": "6656600272"
  },
  {
    "hash": "baabcca4260566d02815106f4d625f4771cca3df",
    "type": "commit",
    "created_at": "2023-02-02T15:14:26Z",
    "built_at": "2023-02-06T21:21:13Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:baabcca4260566d02815106f4d625f4771cca3df"
  },
  {
    "hash": "bac144fc671ab86b7db1b315bae1b2c851ef821d",
    "type": "pull_request",
    "title": "Offload block processor notifications",
    "author": "pwojcikdev",
    "body": "This offloads block processors notifications to be processed on a background thread, so that block processor can continue checking new blocks without waiting for other components to do their work. Checking new blocks requires a write-transaction, while handling `batch_processed` event is done with read-only transaction, both can happen in parallel.\r\n\r\nThe changes here are based on top of https://github.com/nanocurrency/nano-node/pull/4762 which is a necessary prerequisite.",
    "draft": false,
    "pull_request": 4763,
    "label": "pwojcikdev:offload-block-processor-notifications",
    "created_at": "2024-10-22T15:43:39Z",
    "built_at": "2024-10-28T08:40:04Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:bac144fc671ab86b7db1b315bae1b2c851ef821d",
    "build_started_at": "2024-10-28T08:13:04Z",
    "run_id": "11549876252"
  },
  {
    "hash": "bacfaae8baf42083f90fbbc954d52070726b27b0",
    "type": "pull_request",
    "pull_request": 4339,
    "label": "pwojcikdev:generic-uniquer",
    "created_at": "2023-11-10T12:47:03Z",
    "built_at": "2023-11-10T19:21:07Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:bacfaae8baf42083f90fbbc954d52070726b27b0",
    "build_started_at": "2023-11-10T18:52:05Z",
    "run_id": "6828573627"
  },
  {
    "hash": "baddb06a995d5c5d3d84844e22ee28df56f83f8d",
    "type": "commit",
    "created_at": "2023-02-07T01:41:05Z",
    "built_at": "2023-02-07T02:33:13Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:baddb06a995d5c5d3d84844e22ee28df56f83f8d"
  },
  {
    "hash": "bae125846fba9c9ef6d0cb246ca4d269c8f9e7b5",
    "type": "pull_request",
    "title": "Creating nano::secure::transaction type",
    "author": "clemahieu",
    "body": "Creating nano::secure::transaction type which is used by nano::ledger and can be expanded to include memory locking.",
    "draft": false,
    "pull_request": 4543,
    "label": "clemahieu:transaction_parameter",
    "created_at": "2024-04-08T13:57:07Z",
    "built_at": "2024-04-16T16:27:47Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:bae125846fba9c9ef6d0cb246ca4d269c8f9e7b5",
    "build_started_at": "2024-04-16T15:59:26Z",
    "run_id": "8708775541"
  },
  {
    "hash": "bb0d05436f71a58891d7fec64f1765da570e367e",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Fix logging (#4693)",
    "pull_request": "4693",
    "created_at": "2024-08-05T22:11:38Z",
    "built_at": "2024-08-05T22:43:15Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:bb0d05436f71a58891d7fec64f1765da570e367e",
    "build_started_at": "2024-08-05T22:13:30Z",
    "run_id": "10256783712"
  },
  {
    "hash": "bb43943fe0928c348e8b2d37b5f64e6a8b49a66a",
    "type": "pull_request",
    "pull_request": 4357,
    "label": "pwojcikdev:ledger-walker-removal",
    "created_at": "2024-01-10T12:11:31Z",
    "built_at": "2024-01-10T12:47:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:bb43943fe0928c348e8b2d37b5f64e6a8b49a66a",
    "build_started_at": "2024-01-10T12:22:36Z",
    "run_id": "7474836687"
  },
  {
    "hash": "bb4f14f38f89407be9bc50e13a49866ac1d10654",
    "type": "pull_request",
    "pull_request": 4111,
    "label": "pwojcikdev:optimistic-elections-2-rebased",
    "created_at": "2023-02-08T18:34:22Z",
    "built_at": "2023-02-22T14:35:17Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:bb4f14f38f89407be9bc50e13a49866ac1d10654"
  },
  {
    "hash": "bb649774ba4a349f0998ff56ac2c192827f3f1d1",
    "type": "pull_request",
    "pull_request": 4507,
    "label": "goodmost:develop",
    "created_at": "2024-03-20T02:37:48Z",
    "built_at": "2024-03-20T03:07:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:bb649774ba4a349f0998ff56ac2c192827f3f1d1",
    "build_started_at": "2024-03-20T02:41:58Z",
    "run_id": "8353103331"
  },
  {
    "hash": "bb714ec0267578900b94e7c16439913905966536",
    "type": "pull_request",
    "title": "Possible fix for difficulty_death_test core dump crash",
    "author": "RickiNano",
    "body": null,
    "draft": false,
    "pull_request": 4616,
    "label": "RickiNano:fix-difficulty-unit-test",
    "created_at": "2024-05-12T17:34:37Z",
    "built_at": "2024-05-12T18:03:26Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:bb714ec0267578900b94e7c16439913905966536",
    "build_started_at": "2024-05-12T17:37:43Z",
    "run_id": "9053138207"
  },
  {
    "hash": "bb79f69f2906fac6972da93ac413959d7b0b4e64",
    "type": "pull_request",
    "pull_request": 4116,
    "label": "dsiganos:convert_start_election_to_take_hashes",
    "created_at": "2023-02-09T11:38:52Z",
    "built_at": "2023-02-09T12:11:51Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:bb79f69f2906fac6972da93ac413959d7b0b4e64"
  },
  {
    "hash": "bb9ddeced94671396ab50df2c57113cb48120983",
    "type": "pull_request",
    "title": "Offload rollback notifications to background thread",
    "author": "pwojcikdev",
    "body": "This avoids holding the database write lock when issuing block rollback notifications.",
    "draft": false,
    "pull_request": 4791,
    "label": "pwojcikdev:block-processor-rolled-back-notif",
    "created_at": "2024-11-25T16:18:42Z",
    "built_at": "2024-11-25T17:24:07Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:bb9ddeced94671396ab50df2c57113cb48120983",
    "build_started_at": "2024-11-25T16:28:08Z",
    "run_id": "12014910516"
  },
  {
    "hash": "bba68b5fe36ead9242ee0551d0ca7b7b1245dfe6",
    "type": "commit",
    "created_at": "2023-04-27T22:21:42Z",
    "built_at": "2023-05-02T18:14:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:bba68b5fe36ead9242ee0551d0ca7b7b1245dfe6"
  },
  {
    "hash": "bba89c30dac92bd7cb88ea88e028df95fb808848",
    "type": "commit",
    "created_at": "2023-11-11T19:12:55Z",
    "built_at": "2023-11-11T19:41:02Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:bba89c30dac92bd7cb88ea88e028df95fb808848",
    "build_started_at": "2023-11-11T19:15:45Z",
    "run_id": "6836104801"
  },
  {
    "hash": "bbe6110597b83c68ca81553f77f6a3a9dba15688",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Use chrono timestamps in ascending bootstrap code (#4687)\n\n* Use unique ptr\r\n\r\n* Use chrono timestamps",
    "pull_request": "4687",
    "created_at": "2024-07-29T17:01:45Z",
    "built_at": "2024-07-29T17:45:52Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:bbe6110597b83c68ca81553f77f6a3a9dba15688",
    "build_started_at": "2024-07-29T17:16:14Z",
    "run_id": "10148790307"
  },
  {
    "hash": "bbf07116f264491620727cab6d9cf37f59144f88",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Remove `disable_ascending_bootstrap` flag",
    "pull_request": "N/A",
    "created_at": "2024-10-29T17:04:26Z",
    "built_at": "2024-10-31T17:39:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:bbf07116f264491620727cab6d9cf37f59144f88",
    "build_started_at": "2024-10-31T13:47:32Z",
    "run_id": "11616596465"
  },
  {
    "hash": "bbfb139d19eefd98a6fd77dc6b82134141ea0ba0",
    "type": "pull_request",
    "pull_request": 3436,
    "label": "nanocurrency:remove_temp_socket",
    "created_at": "2021-09-01T12:10:13Z",
    "built_at": "2023-02-05T05:25:15Z",
    "build_status": "fail",
    "docker_tag": ""
  },
  {
    "hash": "bbfb7debb2befb3376fcb09892cc62c7e8824353",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Erase lowest priority accounts first",
    "pull_request": "N/A",
    "created_at": "2024-11-02T14:59:50Z",
    "built_at": "2024-11-23T04:39:30Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:bbfb7debb2befb3376fcb09892cc62c7e8824353",
    "build_started_at": "2024-11-22T23:40:48Z",
    "run_id": "11983991188"
  },
  {
    "hash": "bc3865d39dd552e8e7654e1f1a1d7b7220334d87",
    "type": "commit",
    "created_at": "2023-12-19T20:08:20Z",
    "built_at": "2024-01-09T00:08:45Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:bc3865d39dd552e8e7654e1f1a1d7b7220334d87",
    "build_started_at": "2024-01-08T23:09:58Z",
    "run_id": "7454294270"
  },
  {
    "hash": "bc549f15df46bfa1912dc70988dd59c9b4de498e",
    "type": "pull_request",
    "title": "Stats logging",
    "author": "pwojcikdev",
    "body": "This allows logging individual stat counter increments. This is useful for debugging tests. This functionality can be enabled by setting `NANO_LOG_STATS=[1,true,on]` environment variable.\r\n\r\nExample output:\r\n```\r\n[2024-05-02 18:43:27.939] [node_16gzg] [stats] [debug] Stat: bootstrap_server::request::in += 1\r\n[2024-05-02 18:43:27.939] [node_16gzg] [stats] [debug] Stat: bootstrap_server_request::blocks::in += 1\r\n[2024-05-02 18:43:27.939] [node_3e5x4] [stats] [debug] Stat: traffic_tcp::all::out += 51\r\n[2024-05-02 18:43:27.939] [node_3e5x4] [stats] [debug] Stat: bootstrap_ascending::track::in += 1\r\n[2024-05-02 18:43:27.939] [node_3e5x4] [stats] [debug] Sample: bootstrap_tag_duration -> 1\r\n```",
    "draft": false,
    "pull_request": 4596,
    "label": "pwojcikdev:stats-logging",
    "created_at": "2024-05-02T16:49:32Z",
    "built_at": "2024-05-02T17:21:40Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:bc549f15df46bfa1912dc70988dd59c9b4de498e",
    "build_started_at": "2024-05-02T16:53:09Z",
    "run_id": "8927526386"
  },
  {
    "hash": "bc60e763a9ee4d704f91789718b5ea33d5d44e7f",
    "type": "commit",
    "created_at": "2023-03-05T16:32:06Z",
    "built_at": "2023-03-05T17:02:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:bc60e763a9ee4d704f91789718b5ea33d5d44e7f"
  },
  {
    "hash": "bc6c154a412dc70457dd18973b32fbe25ce91049",
    "type": "commit",
    "created_at": "2023-03-07T19:41:59Z",
    "built_at": "2023-03-07T20:23:59Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:bc6c154a412dc70457dd18973b32fbe25ce91049"
  },
  {
    "hash": "bc77ff9a8d0b43897e57d620e9aa2968edb1b154",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Use batch event for background backlog scan",
    "pull_request": "N/A",
    "created_at": "2024-10-26T08:43:45Z",
    "built_at": "2024-11-27T05:24:32Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:bc77ff9a8d0b43897e57d620e9aa2968edb1b154",
    "build_started_at": "2024-11-27T00:59:54Z",
    "run_id": "12044005075"
  },
  {
    "hash": "bc86e466243425b1d91150ed3d97da79eddc2547",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Dedicated io context in ipc server",
    "pull_request": "4618",
    "created_at": "2024-05-12T16:23:05Z",
    "built_at": "2024-05-14T14:58:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:bc86e466243425b1d91150ed3d97da79eddc2547",
    "build_started_at": "2024-05-14T11:08:37Z",
    "run_id": "9081135199"
  },
  {
    "hash": "bc9bc82a8d63ca995e2c1ab3b67766686a7d39bb",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Log node status periodically (#4676)\n\n* Fix alignment\r\n\r\n* Log node status periodically\r\n\r\n* Log detailed peer and connections info\r\n\r\n* Logging consistency",
    "pull_request": "4676",
    "created_at": "2024-07-10T09:00:11Z",
    "built_at": "2024-07-10T09:42:00Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:bc9bc82a8d63ca995e2c1ab3b67766686a7d39bb",
    "build_started_at": "2024-07-10T09:11:48Z",
    "run_id": "9871434187"
  },
  {
    "hash": "bc9f74b3dfff5b8affd7fffb4c754d7665788f4b",
    "type": "pull_request",
    "pull_request": 4199,
    "label": "thsfs:add_cmake_for_submodules",
    "created_at": "2023-03-22T19:51:02Z",
    "built_at": "2023-03-29T17:41:22Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:bc9f74b3dfff5b8affd7fffb4c754d7665788f4b"
  },
  {
    "hash": "bcb5159530e3b76eb8893b3f1cdc78a34cbf3c5c",
    "type": "pull_request",
    "title": "Remove `node::process_confirmed (...)`",
    "author": "pwojcikdev",
    "body": "This removes the `node::process_confirmed (...)` function. Blocks queued there could briefly find themselves in a limbo state, neither part of an active election or cementing set, which was racy.",
    "draft": false,
    "pull_request": 4758,
    "label": "pwojcikdev:remove-process-confirmed",
    "created_at": "2024-10-18T16:23:32Z",
    "built_at": "2024-11-01T15:39:33Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:bcb5159530e3b76eb8893b3f1cdc78a34cbf3c5c",
    "build_started_at": "2024-11-01T15:13:01Z",
    "run_id": "11631608417"
  },
  {
    "hash": "bcb53695e8c079aa3ea92989075c41810160ea0b",
    "type": "pull_request",
    "title": "migrate_database_lmdb_to_rocksdb improvements",
    "author": "RickiNano",
    "body": "The `migrate_database_lmdb_to_rocksdb` option is running for a very long time with the current ledger size (almost 200 million blocks). On my local machine it took 65 minutes to complete. Nothing is written on screen during this process and users may think the process has stalled.\r\nThis PR adds some progress feedback. One update for each of the 7 tables that are migrated.\r\nIt also adds a simple disk space check to warn users if they might not have enough space to complete the migration.\r\n~~The current converted RocksDb database is 73 GB, and the warning is given if the system has less than 75GB available.~~\r\nThe warning is given based on the size of the LMDB database that is being migrated. The final RocksDb size is approximately 65% of the LMDB space.",
    "draft": false,
    "pull_request": 4647,
    "label": "RickiNano:lmdb-to-rocksdb",
    "created_at": "2024-06-13T10:47:31Z",
    "built_at": "2024-07-10T17:23:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:bcb53695e8c079aa3ea92989075c41810160ea0b",
    "build_started_at": "2024-07-10T16:49:45Z",
    "run_id": "9878335090"
  },
  {
    "hash": "bccbf39d8c7d62ad333496fe6bc1c4b14750b53e",
    "type": "pull_request",
    "pull_request": 3664,
    "label": "nanocurrency:scheduler_timely",
    "created_at": "2022-01-12T12:45:17Z",
    "built_at": "2023-02-05T05:39:08Z",
    "build_status": "fail",
    "docker_tag": ""
  },
  {
    "hash": "bcf11c2bbd2a8aed41d3714e7821342efb5ccfd8",
    "type": "pull_request",
    "title": "Bootstrap config tuning",
    "author": "pwojcikdev",
    "body": "This adjusts some of the config values for ascending bootstrap.",
    "draft": false,
    "pull_request": 4698,
    "label": "pwojcikdev:bootstrap-tuning",
    "created_at": "2024-08-08T19:29:16Z",
    "built_at": "2024-08-08T20:08:33Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:bcf11c2bbd2a8aed41d3714e7821342efb5ccfd8",
    "build_started_at": "2024-08-08T19:37:54Z",
    "run_id": "10308432868"
  },
  {
    "hash": "bcf8ac0464b693e1d51c02b02defb00edef8442b",
    "type": "pull_request",
    "title": "Make election behavior mutable to support dynamic behaviour transition",
    "author": "gr0vity-dev",
    "body": "Problem:\r\n- Elections are currently immutable and can't be transitioned to priority status\r\n- Causing delays for optimistic elections rescheduled by priority scheduler as the next Vote broadcast is fixed to 15-second intervals. (by `network.vote_broadcast_interval`)\r\n\r\nChanges:\r\n- Modifies election behavior to be mutable, allowing elections (optimistic/hinted/...) to be transitioned to priority status\r\n- Added ability to trigger immediate vote broadcasts on transition without waiting for the next 15-second round\r\n\r\nBenefits:\r\n- It would allow for more aggressive use of optimistic elections (to narrow the gap between checked and cemented during bootstrapping) \r\n  - currently configured to accounts with gap_threshold of 32 could be reduced to 4\r\n- Maintain quick response times for live traffic by allowing election behavior changes.",
    "draft": false,
    "pull_request": 4799,
    "label": "gr0vity-dev:prs/upgrade_elections",
    "created_at": "2024-11-30T09:50:16Z",
    "built_at": "2024-12-03T15:57:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:bcf8ac0464b693e1d51c02b02defb00edef8442b",
    "build_started_at": "2024-12-03T15:29:42Z",
    "run_id": "12142256849"
  },
  {
    "hash": "bd11f930e5a24b707174cbf5fa43a3e8680d0a44",
    "type": "pull_request",
    "title": "Block checker",
    "body": "Rewrite of https://github.com/nanocurrency/nano-node/pull/3727 with functional style checking rather than a pipeline",
    "draft": true,
    "pull_request": 4345,
    "label": "clemahieu:block_checker",
    "created_at": "2023-11-14T12:02:06Z",
    "built_at": "2024-04-06T00:10:49Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:bd11f930e5a24b707174cbf5fa43a3e8680d0a44",
    "build_started_at": "2024-04-05T23:45:17Z",
    "run_id": "8576961577"
  },
  {
    "hash": "bd1ef2cada6589bf2e6f520196c20a963f205be3",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "IWYU",
    "pull_request": "4584",
    "created_at": "2024-04-25T14:34:33Z",
    "built_at": "2024-04-26T23:09:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:bd1ef2cada6589bf2e6f520196c20a963f205be3",
    "build_started_at": "2024-04-26T22:30:20Z",
    "run_id": "8855098621"
  },
  {
    "hash": "bd31e60aaa2ba769d03eb0542b01e96558d1b19a",
    "type": "pull_request",
    "pull_request": 4514,
    "label": "clemahieu:block_hash_debugger",
    "created_at": "2024-03-21T16:39:18Z",
    "built_at": "2024-03-21T17:04:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:bd31e60aaa2ba769d03eb0542b01e96558d1b19a",
    "build_started_at": "2024-03-21T16:39:23Z",
    "run_id": "8378598513"
  },
  {
    "hash": "bd36f3fbb2e51f0acaeffbefd0b8757ad051c082",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Move rate tests to a separate file\n\n# Conflicts:\n#\tnano/core_test/CMakeLists.txt",
    "pull_request": "4785",
    "created_at": "2024-10-23T18:17:32Z",
    "built_at": "2024-11-12T10:18:58Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:bd36f3fbb2e51f0acaeffbefd0b8757ad051c082",
    "build_started_at": "2024-11-12T09:51:50Z",
    "run_id": "11794760534"
  },
  {
    "hash": "bd3c6b251653ed17e1d09ac22c8edecc211b3cb8",
    "type": "pull_request",
    "pull_request": 4284,
    "label": "clemahieu:block_store_cleanup",
    "created_at": "2023-09-15T09:59:18Z",
    "built_at": "2023-09-15T10:48:56Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:bd3c6b251653ed17e1d09ac22c8edecc211b3cb8"
  },
  {
    "hash": "bdbefc601f4ecec4f807c431cd98adbec99bb2f7",
    "type": "commit",
    "author": "gr0vity-dev",
    "title": "Fix ledger_priority.sequential_blocks testcase (#4805)\n\nDifferent account chains are ot guaranteed to have the same priority timestamp. Openening could happen much later, independant of the sending. It can be euqal or greater\r\n\r\nCo-authored-by: gr0vity <gr0vity.dev@gmail.com>",
    "pull_request": "4805",
    "created_at": "2024-12-07T12:14:00Z",
    "built_at": "2024-12-07T14:06:19Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:bdbefc601f4ecec4f807c431cd98adbec99bb2f7",
    "build_started_at": "2024-12-07T13:32:27Z",
    "run_id": "12213301739"
  },
  {
    "hash": "bdc741141a4bff749383a022155eeaf1965cad8d",
    "type": "pull_request",
    "title": "Move assert to a dedicated header",
    "author": "pwojcikdev",
    "body": null,
    "draft": false,
    "pull_request": 4773,
    "label": "pwojcikdev:assert-header",
    "created_at": "2024-10-27T18:14:57Z",
    "built_at": "2024-11-02T23:42:15Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-11-02T23:27:41Z",
    "run_id": "11646604318"
  },
  {
    "hash": "bdced6bb38a1106f110fbb358d728d0fecfc7045",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Keep operators inlined",
    "pull_request": "4794",
    "created_at": "2024-11-25T17:11:08Z",
    "built_at": "2024-11-27T08:57:28Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:bdced6bb38a1106f110fbb358d728d0fecfc7045",
    "build_started_at": "2024-11-27T07:27:46Z",
    "run_id": "12046464962"
  },
  {
    "hash": "bdf129b96b477c6e96061a05fddbefed12813c3b",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Virtual transaction refresh_if_needed",
    "pull_request": "N/A",
    "created_at": "2024-10-25T22:05:47Z",
    "built_at": "2024-11-29T17:59:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:bdf129b96b477c6e96061a05fddbefed12813c3b",
    "build_started_at": "2024-11-29T15:39:54Z",
    "run_id": "12088699606"
  },
  {
    "hash": "bdf46680399e3e0101b276dc2700b6b88af4d0b9",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge pull request #4762 from pwojcikdev/thread-pool-work\n\nRework `nano::thread_pool`",
    "pull_request": "4762",
    "created_at": "2024-10-27T11:24:49Z",
    "built_at": "2024-10-27T14:07:16Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:bdf46680399e3e0101b276dc2700b6b88af4d0b9",
    "build_started_at": "2024-10-27T11:28:44Z",
    "run_id": "11540981583"
  },
  {
    "hash": "bdf6bcc243e0a73b9de0234aa4e879d59bfbeae0",
    "type": "commit",
    "created_at": "2023-03-07T20:45:45Z",
    "built_at": "2023-03-08T04:12:02Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:bdf6bcc243e0a73b9de0234aa4e879d59bfbeae0"
  },
  {
    "hash": "be198bfcd88f2faf669cccbbf8649c5727cbd34b",
    "type": "pull_request",
    "pull_request": 4238,
    "label": "clemahieu:scheduling_limiter",
    "created_at": "2023-05-19T01:07:22Z",
    "built_at": "2023-09-12T13:08:25Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:be198bfcd88f2faf669cccbbf8649c5727cbd34b"
  },
  {
    "hash": "be25823483dcf437932773b04df355c98101725f",
    "type": "pull_request",
    "title": "Convert store iterators to variants rather than using polymorphism.",
    "author": "clemahieu",
    "body": "This converts the store iterators from version that use polymorphism to using std::variant.\r\n\r\nThe primary drivers for this change is to simplify and allow more complex iterators to be created where this was previously fairly difficult to do.\r\n\r\nThe iterators are separated in the 3 parts:\r\n- The base database iterators LMDB/RocksDB that use the library's native data type, MDB_val/Slice.\r\n- A variant database iterator that can hold any of the raw database iterators and adapts the native database type to std::span<uint8_t>\r\n- A strong-typed database iterator that mirrors existing iterator behavior with strong typing for key/value pairs.\r\n\r\nThe iterators are bi-directional with a sentinel value to signify end of iteration. The iterators are also circular so after reaching the end-sentinel value, further incrementing will wrap around to the beginning, or decrementing will position the iterator at the last key/value.\r\n\r\nUsing std::variant also eliminates heap allocations when constructing iterators which can improve performance in some circumstances.",
    "draft": true,
    "pull_request": 4759,
    "label": "clemahieu:store_iterator_cleanup",
    "created_at": "2024-10-20T19:24:20Z",
    "built_at": "2024-10-20T19:58:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:be25823483dcf437932773b04df355c98101725f",
    "build_started_at": "2024-10-20T19:28:13Z",
    "run_id": "11429029180"
  },
  {
    "hash": "be27552fb1d5a9ff336fc9bfb06b3562344d843a",
    "type": "commit",
    "created_at": "2023-11-07T18:24:27Z",
    "built_at": "2023-11-07T21:58:43Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:be27552fb1d5a9ff336fc9bfb06b3562344d843a",
    "build_started_at": "2023-11-07T20:59:05Z",
    "run_id": "6790225316"
  },
  {
    "hash": "be28a8ac912bd9ba20e53fd2c5d2055b1b47c45a",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Collect bootstrap limiters info",
    "pull_request": "4786",
    "created_at": "2024-11-11T20:41:36Z",
    "built_at": "2024-11-23T04:59:16Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:be28a8ac912bd9ba20e53fd2c5d2055b1b47c45a",
    "build_started_at": "2024-11-22T23:40:48Z",
    "run_id": "11984130491"
  },
  {
    "hash": "be28e2bdd61508ce7cb78c3fc62ddc339a2d21d5",
    "type": "pull_request",
    "title": "Final vote requests/replies only",
    "author": "pwojcikdev",
    "body": "There are two main changes:  \r\n- We are only replying with final votes, for blocks that are either confirmed or marked as final.\r\n- We are not using cached votes for replies.\r\n\r\nDuring testing it was shown that the above changes reduce vote traffic by an order of magnitude.\r\n\r\nThe rationale for abandoning replies from vote cache is that it causes excessive bandwidth usage. A vote request might contain 12 hashes (255 hashes after upcoming network upgrade) and the chance that a vote with exactly these hashes is already cached is low. This in turn requires replying with multiple votes, which is incredibly inefficient. Pessimistic bandwidth usage in such scenario is number of hashes squared.\r\n\r\n",
    "draft": false,
    "pull_request": 4648,
    "label": "pwojcikdev:final-replies-only",
    "created_at": "2024-06-14T19:32:55Z",
    "built_at": "2024-06-18T11:41:40Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:be28e2bdd61508ce7cb78c3fc62ddc339a2d21d5",
    "build_started_at": "2024-06-18T11:15:06Z",
    "run_id": "9564008174"
  },
  {
    "hash": "be310b630ff2da509e9d64ca89c9bf49aab462e8",
    "type": "commit",
    "created_at": "2023-05-02T17:22:41Z",
    "built_at": "2023-05-02T18:09:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:be310b630ff2da509e9d64ca89c9bf49aab462e8"
  },
  {
    "hash": "be53f611a7421bbe0bbfee50f865d2b9bac0e06c",
    "type": "commit",
    "author": "clemahieu",
    "title": "Add sanity check",
    "pull_request": "4719",
    "created_at": "2024-09-03T00:27:39Z",
    "built_at": "2024-09-05T09:02:59Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:be53f611a7421bbe0bbfee50f865d2b9bac0e06c",
    "build_started_at": "2024-09-05T08:19:09Z",
    "run_id": "10716848833"
  },
  {
    "hash": "be75108dbb9fe01060ea87808658b53237b7c5be",
    "type": "pull_request",
    "pull_request": 4135,
    "label": "dsiganos:fix_channels_fill_random_full",
    "created_at": "2023-02-16T00:14:00Z",
    "built_at": "2023-02-16T01:33:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:be75108dbb9fe01060ea87808658b53237b7c5be"
  },
  {
    "hash": "be764b0408c630476f910024c1ecfb1c0fb7057c",
    "type": "commit",
    "author": "clemahieu",
    "title": "Merge pull request #4709 from clemahieu/state_open_account_history\n\nFix regression account history when querying open state blocks",
    "pull_request": "4709",
    "created_at": "2024-08-20T11:55:57Z",
    "built_at": "2024-08-20T13:54:47Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:be764b0408c630476f910024c1ecfb1c0fb7057c",
    "build_started_at": "2024-08-20T12:17:20Z",
    "run_id": "10472506500"
  },
  {
    "hash": "bea03769e7723e625cd60ee2f88b59395fcfa59b",
    "type": "pull_request",
    "title": "Perform ledger upgrade in batches",
    "author": "pwojcikdev",
    "body": "There was a problem with ledger upgrade process where due to a large number of new rep weight entires, nodes with low ram (2-4GB) were having trouble upgrading and were crashing due to out of memory errors. This should fix it.\r\n\r\nThis builds on https://github.com/nanocurrency/nano-node/pull/4713 and disables prunning unit tests, which were failing.",
    "draft": false,
    "pull_request": 4714,
    "label": "pwojcikdev:batched-ledger-upgrade",
    "created_at": "2024-08-27T08:55:51Z",
    "built_at": "2024-08-27T14:58:17Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:bea03769e7723e625cd60ee2f88b59395fcfa59b",
    "build_started_at": "2024-08-27T14:30:09Z",
    "run_id": "10580208923"
  },
  {
    "hash": "beb0133af6373885159a3c67b072b5be192c6dad",
    "type": "pull_request",
    "pull_request": 4464,
    "label": "clemahieu:xcode_15_3_deployment_target",
    "created_at": "2024-03-06T14:13:49Z",
    "built_at": "2024-03-06T14:52:39Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:beb0133af6373885159a3c67b072b5be192c6dad",
    "build_started_at": "2024-03-06T14:24:17Z",
    "run_id": "8173650168"
  },
  {
    "hash": "becfb760a1cfd1de1b4604bebbf99755645fd4a1",
    "type": "pull_request",
    "pull_request": 4111,
    "label": "pwojcikdev:optimistic-elections-2-rebased",
    "created_at": "2023-02-08T18:34:22Z",
    "built_at": "2023-02-22T19:05:39Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:becfb760a1cfd1de1b4604bebbf99755645fd4a1"
  },
  {
    "hash": "bee668f8c58ac821b685d19223346e8b72e1642f",
    "type": "pull_request",
    "pull_request": 4239,
    "label": "thsfs:bump-rhel-compatible-linux",
    "created_at": "2023-05-29T22:22:09Z",
    "built_at": "2023-05-30T21:26:04Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:bee668f8c58ac821b685d19223346e8b72e1642f"
  },
  {
    "hash": "bef31c19908fc1da67b44ba7236e0a9212b84aca",
    "type": "pull_request",
    "pull_request": 4345,
    "label": "clemahieu:block_checker",
    "created_at": "2023-11-14T12:02:06Z",
    "built_at": "2024-03-10T13:50:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:bef31c19908fc1da67b44ba7236e0a9212b84aca",
    "build_started_at": "2024-03-10T13:23:33Z",
    "run_id": "8222334830"
  },
  {
    "hash": "bf76d042aa90e2ddfac244f5079ac29c3e9affb5",
    "type": "pull_request",
    "title": "Block checker",
    "body": "Rewrite of https://github.com/nanocurrency/nano-node/pull/3727 with functional style checking rather than a pipeline",
    "draft": true,
    "pull_request": 4345,
    "label": "clemahieu:block_checker",
    "created_at": "2023-11-14T12:02:06Z",
    "built_at": "2024-03-29T17:05:20Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:bf76d042aa90e2ddfac244f5079ac29c3e9affb5",
    "build_started_at": "2024-03-29T16:37:55Z",
    "run_id": "8483272176"
  },
  {
    "hash": "bf9d18c9b63583a14ba0e6105f5c03fb9533fa4e",
    "type": "pull_request",
    "pull_request": 4476,
    "label": "pwojcikdev:fair-queuing-3",
    "created_at": "2024-03-10T19:14:44Z",
    "built_at": "2024-03-11T10:42:31Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:bf9d18c9b63583a14ba0e6105f5c03fb9533fa4e",
    "build_started_at": "2024-03-11T10:16:59Z",
    "run_id": "8231108200"
  },
  {
    "hash": "bfc17557836d1a985d5c012c3e4b9a5329b303c7",
    "type": "pull_request",
    "title": "Fix intermittent failure of request_aggregator.split",
    "body": "Fix intermittent failure of request_aggregator.split by directly confirming setup blocks instead of using an election.",
    "draft": false,
    "pull_request": 4546,
    "label": "clemahieu:fix_request_aggregator_split",
    "created_at": "2024-04-09T18:51:00Z",
    "built_at": "2024-04-09T19:22:20Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:bfc17557836d1a985d5c012c3e4b9a5329b303c7",
    "build_started_at": "2024-04-09T18:55:42Z",
    "run_id": "8620855699"
  },
  {
    "hash": "bfe80ab1b8b77b7c8adaae33f2549c3e1bc6a4d2",
    "type": "pull_request",
    "title": "Traffic shaping",
    "author": "pwojcikdev",
    "body": "This is a draft PR for an ongoing work that overhauls how outgoing traffic is handled and prioritized. This will significantly improve how the node handles network congestion, which is extremely important during spam.\r\n\r\nDepends on PRs:\r\nhttps://github.com/nanocurrency/nano-node/pull/4784",
    "draft": true,
    "pull_request": 4786,
    "label": "pwojcikdev:traffic-shaping-pr",
    "created_at": "2024-11-18T19:43:02Z",
    "built_at": "2024-11-19T00:22:20Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:bfe80ab1b8b77b7c8adaae33f2549c3e1bc6a4d2",
    "build_started_at": "2024-11-18T23:38:27Z",
    "run_id": "11903230509"
  },
  {
    "hash": "bff8e7670bb1fcea7094b6dc7fccd3a0cb26f0f8",
    "type": "pull_request",
    "title": "Style fix, pass transaction as first argument.",
    "author": "clemahieu",
    "body": null,
    "draft": false,
    "pull_request": 4592,
    "label": "clemahieu:priority_activate_signature",
    "created_at": "2024-04-30T12:41:36Z",
    "built_at": "2024-04-30T13:11:36Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:bff8e7670bb1fcea7094b6dc7fccd3a0cb26f0f8",
    "build_started_at": "2024-04-30T12:43:03Z",
    "run_id": "8894882015"
  },
  {
    "hash": "c0270c77c270f71f1949a02185a6a46cf050b78c",
    "type": "pull_request",
    "title": "Prototype for batch TCP receiving",
    "author": "clemahieu",
    "body": null,
    "draft": true,
    "pull_request": 4630,
    "label": "clemahieu:batch_socket_read",
    "created_at": "2024-05-20T00:55:27Z",
    "built_at": "2024-05-20T13:54:21Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c0270c77c270f71f1949a02185a6a46cf050b78c",
    "build_started_at": "2024-05-20T13:25:23Z",
    "run_id": "9159440351"
  },
  {
    "hash": "c02c98cde3a6b4fd18d776ca1739187e9d8a6da1",
    "type": "pull_request",
    "pull_request": 4168,
    "label": "pwojcikdev:handshake-v2-merged",
    "created_at": "2023-03-03T22:04:06Z",
    "built_at": "2023-03-03T22:34:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c02c98cde3a6b4fd18d776ca1739187e9d8a6da1"
  },
  {
    "hash": "c04f061471274c4b08425d9848103c82b06ba93c",
    "type": "pull_request",
    "pull_request": 4435,
    "label": "pwojcikdev:leak-sanitizer",
    "created_at": "2024-02-14T12:30:40Z",
    "built_at": "2024-02-14T13:13:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c04f061471274c4b08425d9848103c82b06ba93c",
    "build_started_at": "2024-02-14T12:44:27Z",
    "run_id": "7901382013"
  },
  {
    "hash": "c0562b05e7a0404c50de7615777e48360360c90a",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Tests",
    "pull_request": "4773",
    "created_at": "2024-11-02T18:54:54Z",
    "built_at": "2024-11-12T12:48:32Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c0562b05e7a0404c50de7615777e48360360c90a",
    "build_started_at": "2024-11-12T12:21:42Z",
    "run_id": "11797141805"
  },
  {
    "hash": "c064dba914ea315411204b6421e1b782f98523e3",
    "type": "pull_request",
    "title": "Overhaul of `online_reps` class",
    "author": "pwojcikdev",
    "body": "This is an overhaul of `online_reps` class:\r\n\r\n- Run periodic online weight sampling on a dedicated thread, which makes it more robust and easier to debug.\r\n- Eliminate use of `store.online_weight.count ()` and erasing entries based on their timestamps instead (2 weeks for live, 1 day for beta). \r\n- Add stats and logging to improve observability.\r\n- Add asserts to ensure data consistency.\r\n- Split and rewrite functions, so they are (subjectively) cleaner.\r\n- Ensure that `nano::online_reps::trended ()` can never return value lower than the limit configured via `online_weight_minimum`.",
    "draft": false,
    "pull_request": 4656,
    "label": "pwojcikdev:online-reps-overhaul",
    "created_at": "2024-06-26T08:29:08Z",
    "built_at": "2024-12-20T17:22:46Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c064dba914ea315411204b6421e1b782f98523e3",
    "build_started_at": "2024-12-20T16:54:20Z",
    "run_id": "12435293706"
  },
  {
    "hash": "c09e95b51696147a47ed5227d1507a75bf0c07e7",
    "type": "pull_request",
    "title": "Bootstrap weights in plain text",
    "author": "RickiNano",
    "body": "Replaces the binary file with embedded bootstrap weight in plain text.\r\nThe weight values and max block counts in this PR are from 14-08-2024",
    "draft": false,
    "pull_request": 4703,
    "label": "RickiNano:bootstrap-weights",
    "created_at": "2024-08-14T16:45:07Z",
    "built_at": "2024-10-26T12:47:50Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c09e95b51696147a47ed5227d1507a75bf0c07e7",
    "build_started_at": "2024-10-26T12:20:44Z",
    "run_id": "11531735307"
  },
  {
    "hash": "c0bbbefb1eb8adc37499e9ae82b87410ab61ba58",
    "type": "pull_request",
    "pull_request": 4311,
    "label": "pwojcikdev:transaction-type-checking",
    "created_at": "2023-10-09T12:43:41Z",
    "built_at": "2023-10-09T13:23:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c0bbbefb1eb8adc37499e9ae82b87410ab61ba58"
  },
  {
    "hash": "c0dbcb45834c5dd29ab6dc4798de85373d871a36",
    "type": "pull_request",
    "pull_request": 4519,
    "label": "clemahieu:confirming_set",
    "created_at": "2024-03-23T22:40:41Z",
    "built_at": "2024-03-24T15:01:23Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c0dbcb45834c5dd29ab6dc4798de85373d871a36",
    "build_started_at": "2024-03-24T14:36:49Z",
    "run_id": "8410057339"
  },
  {
    "hash": "c10ecd8f1058aecbc5b3c8f353fdb893187b56c3",
    "type": "pull_request",
    "title": "Disable telemetry replies",
    "author": "pwojcikdev",
    "body": "Since V25, telemetry is always periodically rebroadcasted. Peers should just listen for it passively. Sending replies directly in response to network messages is a bad practice.",
    "draft": false,
    "pull_request": 4695,
    "label": "pwojcikdev:disable-telemetry-replies",
    "created_at": "2024-08-06T16:16:35Z",
    "built_at": "2024-08-06T17:05:02Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c10ecd8f1058aecbc5b3c8f353fdb893187b56c3",
    "build_started_at": "2024-08-06T16:23:45Z",
    "run_id": "10270498572"
  },
  {
    "hash": "c11def0489757dfffcd9cc4c048d518f0b6b826b",
    "type": "pull_request",
    "title": "Final vote requests/replies only",
    "author": "pwojcikdev",
    "body": "There are two main changes:  \r\n- We are only replying with final votes, for blocks that are either confirmed or marked as final.\r\n- We are not using cached votes for replies.\r\n\r\nDuring testing it was shown that the above changes reduce vote traffic by an order of magnitude.\r\n\r\nThe rationale for abandoning replies from vote cache is that it causes excessive bandwidth usage. A vote request might contain 12 hashes (255 hashes after upcoming network upgrade) and the chance that a vote with exactly these hashes is already cached is low. This in turn requires replying with multiple votes, which is incredibly inefficient. Pessimistic bandwidth usage in such scenario is number of hashes squared.\r\n\r\n",
    "draft": false,
    "pull_request": 4648,
    "label": "pwojcikdev:final-replies-only",
    "created_at": "2024-06-14T19:32:55Z",
    "built_at": "2024-06-14T20:02:04Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c11def0489757dfffcd9cc4c048d518f0b6b826b",
    "build_started_at": "2024-06-14T19:33:32Z",
    "run_id": "9521422947"
  },
  {
    "hash": "c11dfba37a169a076b601b867d6b5044fef6eec8",
    "type": "pull_request",
    "pull_request": 3923,
    "label": "nanocurrency:remove-upd-support-from-peer-container-tests",
    "created_at": "2022-08-26T21:20:38Z",
    "built_at": "2023-02-06T21:30:58Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c11dfba37a169a076b601b867d6b5044fef6eec8"
  },
  {
    "hash": "c1255fb7f6dbdb757918fe826422015b3b812b0c",
    "type": "commit",
    "created_at": "2023-04-07T14:02:28Z",
    "built_at": "2023-04-13T14:43:29Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c1255fb7f6dbdb757918fe826422015b3b812b0c"
  },
  {
    "hash": "c14163649b6adec31017d94d2827bb6f6f84ad40",
    "type": "commit",
    "created_at": "2024-03-23T19:17:15Z",
    "built_at": "2024-03-25T14:54:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c14163649b6adec31017d94d2827bb6f6f84ad40",
    "build_started_at": "2024-03-25T13:29:30Z",
    "run_id": "8420893800"
  },
  {
    "hash": "c15fedb7109d1c392f63bc733a62e128ef3be06b",
    "type": "commit",
    "author": "RickiNano",
    "title": "Drop existing rep_weights table before migrating",
    "pull_request": "4714",
    "created_at": "2024-08-22T09:11:08Z",
    "built_at": "2024-08-27T17:25:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c15fedb7109d1c392f63bc733a62e128ef3be06b",
    "build_started_at": "2024-08-27T15:42:11Z",
    "run_id": "10582530014"
  },
  {
    "hash": "c16f020af4124762d0187a8950f8146d00cb1adc",
    "type": "commit",
    "author": "clemahieu",
    "title": "Add environment variable NANO_MEMORY_INTENSIVE to explicitly enable/disable the memory_intensive_instrumentation check. (#4640)\n\nrunning_within_valgrind doesn't always play well with arm and there may be other reasons to enable/disable this option.",
    "pull_request": "4640",
    "created_at": "2024-05-23T12:54:44Z",
    "built_at": "2024-05-23T13:54:13Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c16f020af4124762d0187a8950f8146d00cb1adc",
    "build_started_at": "2024-05-23T12:59:16Z",
    "run_id": "9208893289"
  },
  {
    "hash": "c1713dcbfacf7196bd7f83f67569c77c8a535f29",
    "type": "pull_request",
    "pull_request": 4345,
    "label": "clemahieu:block_checker",
    "created_at": "2023-11-14T12:02:06Z",
    "built_at": "2024-03-28T02:24:04Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-28T02:07:27Z",
    "run_id": "8461388639"
  },
  {
    "hash": "c17cf7a89735dd9beb50443e4e6556d8a0e68245",
    "type": "pull_request",
    "pull_request": 4313,
    "label": "pwojcikdev:fix-aec-confirmed-race",
    "created_at": "2023-10-09T18:48:38Z",
    "built_at": "2023-10-09T19:41:36Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c17cf7a89735dd9beb50443e4e6556d8a0e68245"
  },
  {
    "hash": "c1928439472c5f95fed3c8d3bec27744a57537c5",
    "type": "pull_request",
    "title": "Introduce ledger confirmed_set/any_set classes to separate confirmed-only and confirmed/unconfirmed operations on the ledger",
    "author": "clemahieu",
    "body": "The motivation for this PR is in preparation for bounded backlog changes. Currently, both confirmed and unconfirmed transactions are together on disk and the ACID properties of the ledger are encapsulated with a database transaction.\r\n\r\nWith the bounded backlog, blocks will be stored in memory so there will need to be memory synchronization in addition to database synchronization. Rather than filling the ledger class with unconfirmed/confirmed variants for each operation.\r\n\r\nThe ledger is divided in to several sets and subsets:\r\nledger::confirmed - The set of confirmed transactions\r\nledger::any - The superset of confirmed and unconfirmed transactions\r\n\r\nWhen unconfirmed blocks are held in memory the set ledger::unconfirmed will be added which holds only unconfirmed transactions.\r\n\r\nIn the future the confirming_set can be moved on to ledger which is the subset of unconfirmed blocks that are queued to be moved in to the confirmed set.",
    "draft": false,
    "pull_request": 4486,
    "label": "clemahieu:ledger_view",
    "created_at": "2024-03-12T14:33:24Z",
    "built_at": "2024-04-22T09:22:27Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c1928439472c5f95fed3c8d3bec27744a57537c5",
    "build_started_at": "2024-04-22T08:54:32Z",
    "run_id": "8781271843"
  },
  {
    "hash": "c195663d8911507e738860caefe12e150beea34b",
    "type": "commit",
    "created_at": "2024-02-15T10:04:01Z",
    "built_at": "2024-02-15T10:33:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c195663d8911507e738860caefe12e150beea34b",
    "build_started_at": "2024-02-15T10:08:16Z",
    "run_id": "7914211998"
  },
  {
    "hash": "c1961c49414a01b25880401c28686e594a69a8ce",
    "type": "pull_request",
    "pull_request": 4258,
    "label": "gr0vity-dev:prs/update_code_sanitizers",
    "created_at": "2023-07-15T12:11:28Z",
    "built_at": null,
    "build_status": "building",
    "docker_tag": null
  },
  {
    "hash": "c1c60f0fe754ffa3c4dbe1f27c19408fb5e2a440",
    "type": "pull_request",
    "title": "Fix flaky inactive_votes_cache.election_start test",
    "author": "gr0vity-dev",
    "body": "This testcase fails sometimes on the github runners. And in ~1/1000 cases on my machine.\r\n\r\n`nano::test::confirmed () ` checks for confirmation being written to disk while node.ledger.cemented_count () uses cached cemented_count.\r\n\r\nUse ASSERT_TIMELY to give some time for disk I/O completion.",
    "draft": false,
    "pull_request": 4803,
    "label": "gr0vity-dev:prs/fix-inactive_votes_cache-election_start",
    "created_at": "2024-12-05T16:01:47Z",
    "built_at": "2024-12-05T16:57:30Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c1c60f0fe754ffa3c4dbe1f27c19408fb5e2a440",
    "build_started_at": "2024-12-05T16:27:19Z",
    "run_id": "12183400404"
  },
  {
    "hash": "c1fc6a22bdf95e2f9a55134f56e38cef02bbcbd6",
    "type": "pull_request",
    "pull_request": 4158,
    "label": "clemahieu:bootstrap_ascending_client",
    "created_at": "2023-02-27T20:15:37Z",
    "built_at": "2023-02-27T20:45:49Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c1fc6a22bdf95e2f9a55134f56e38cef02bbcbd6"
  },
  {
    "hash": "c22851b107f43dd6619b2399d9255ec4198ff05b",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Generated vote size histogram (#4751)",
    "pull_request": "4751",
    "created_at": "2024-10-09T21:35:28Z",
    "built_at": "2024-10-09T22:08:04Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c22851b107f43dd6619b2399d9255ec4198ff05b",
    "build_started_at": "2024-10-09T21:40:03Z",
    "run_id": "11263504025"
  },
  {
    "hash": "c2352e834e7953d273c247f7527dfbaf9834e8aa",
    "type": "pull_request",
    "title": "Traffic shaping",
    "author": "pwojcikdev",
    "body": "This is a draft PR for an ongoing work that overhauls how outgoing traffic is handled and prioritized. This will significantly improve how the node handles network congestion, which is extremely important during spam.\r\n\r\nDepends on PRs:\r\nhttps://github.com/nanocurrency/nano-node/pull/4784",
    "draft": true,
    "pull_request": 4786,
    "label": "pwojcikdev:traffic-shaping-pr",
    "created_at": "2024-11-18T19:43:02Z",
    "built_at": "2024-12-16T22:08:12Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c2352e834e7953d273c247f7527dfbaf9834e8aa",
    "build_started_at": "2024-12-16T21:40:15Z",
    "run_id": "12361789422"
  },
  {
    "hash": "c258d76c807ede5b0c3d132c598ac598dc81d7e7",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Update checkout action",
    "pull_request": "N/A",
    "created_at": "2024-10-03T16:27:16Z",
    "built_at": "2024-10-17T10:24:30Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c258d76c807ede5b0c3d132c598ac598dc81d7e7",
    "build_started_at": "2024-10-17T09:18:10Z",
    "run_id": "11382625695"
  },
  {
    "hash": "c26d14400e92e2af06313636ce6aa439a2bc9b59",
    "type": "pull_request",
    "pull_request": 4345,
    "label": "clemahieu:block_checker",
    "created_at": "2023-11-14T12:02:06Z",
    "built_at": "2024-03-18T22:49:55Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-18T22:24:23Z",
    "run_id": "8334444480"
  },
  {
    "hash": "c288bb132743e31f282996bb87ee554f27a7ed0a",
    "type": "commit",
    "created_at": "2023-03-22T02:17:27Z",
    "built_at": "2023-03-22T03:05:59Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c288bb132743e31f282996bb87ee554f27a7ed0a"
  },
  {
    "hash": "c2a90d1a9b6d6ac706e6ac1f5616b890298458fb",
    "type": "commit",
    "created_at": "2024-03-22T17:10:16Z",
    "built_at": "2024-03-22T19:05:03Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c2a90d1a9b6d6ac706e6ac1f5616b890298458fb",
    "build_started_at": "2024-03-22T17:19:57Z",
    "run_id": "8394068316"
  },
  {
    "hash": "c2b7706e3e0356ad6c4212618e6248262d243680",
    "type": "commit",
    "author": "dsiganos",
    "title": "Remove unnecessary encapsulation breakage - no functional difference",
    "pull_request": "4594",
    "created_at": "2024-04-30T13:50:19Z",
    "built_at": "2024-04-30T17:40:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c2b7706e3e0356ad6c4212618e6248262d243680",
    "build_started_at": "2024-04-30T14:39:22Z",
    "run_id": "8898940135"
  },
  {
    "hash": "c2c0a42e6c2bb07e4da2062270c581f7422cea45",
    "type": "pull_request",
    "title": "Disallow database operations on network IO threads",
    "author": "pwojcikdev",
    "body": "Doing synchronous disk IO on network IO threads can introduce very long delays, blocking network thread pool. This adds an assert that will detect this.\r\n\r\nCurrently this doesn't pass tests nicely because legacy bootstrap trips the assert.",
    "draft": false,
    "pull_request": 4772,
    "label": "pwojcikdev:prevent-db-on-io-threads",
    "created_at": "2024-10-27T16:02:45Z",
    "built_at": "2024-11-02T19:02:20Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c2c0a42e6c2bb07e4da2062270c581f7422cea45",
    "build_started_at": "2024-11-02T18:35:44Z",
    "run_id": "11644962316"
  },
  {
    "hash": "c2d2c4f6dc74b164c4a25da891995e1e1ff8ec0a",
    "type": "pull_request",
    "pull_request": 4342,
    "label": "RickiNano:configurable-unchecked-blocks",
    "created_at": "2023-11-12T21:33:37Z",
    "built_at": "2024-01-28T19:58:04Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c2d2c4f6dc74b164c4a25da891995e1e1ff8ec0a",
    "build_started_at": "2024-01-28T19:33:42Z",
    "run_id": "7687961088"
  },
  {
    "hash": "c2ed57493d6ee873d48299123f239b8e84939eb4",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Common header for transport namespace",
    "pull_request": "N/A",
    "created_at": "2024-04-20T23:06:07Z",
    "built_at": "2024-05-04T11:59:37Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c2ed57493d6ee873d48299123f239b8e84939eb4",
    "build_started_at": "2024-05-04T09:36:39Z",
    "run_id": "8950168099"
  },
  {
    "hash": "c314893f3fc9bf81b78ff2cc6fc4c9427f185974",
    "type": "pull_request",
    "title": "Revert recent ascending bootstrap changes",
    "author": "pwojcikdev",
    "body": "This reverts recent changes made to ascending bootstrap. It seems like there might be some problems related to bootstrapping and we need more time to understand what's causing those.",
    "draft": false,
    "pull_request": 4672,
    "label": "pwojcikdev:revert-bootstrap-stuff",
    "created_at": "2024-07-06T18:47:16Z",
    "built_at": "2024-07-06T19:20:50Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c314893f3fc9bf81b78ff2cc6fc4c9427f185974",
    "build_started_at": "2024-07-06T18:54:12Z",
    "run_id": "9821425820"
  },
  {
    "hash": "c340b103b2f53a8c4b32f80cc23659a617763e1a",
    "type": "pull_request",
    "pull_request": 4100,
    "label": "dsiganos:introduce_system_start_election",
    "created_at": "2023-02-03T01:41:02Z",
    "built_at": "2023-02-07T21:38:25Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c340b103b2f53a8c4b32f80cc23659a617763e1a"
  },
  {
    "hash": "c34835f5483dc87e806fe31d63bf86a2051386e4",
    "type": "pull_request",
    "pull_request": 4144,
    "label": "pwojcikdev:ci/separate-windows-build-run",
    "created_at": "2023-02-19T18:19:10Z",
    "built_at": "2023-02-20T14:08:15Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c34835f5483dc87e806fe31d63bf86a2051386e4"
  },
  {
    "hash": "c34b9649e96569e5ca65396f80c17f122ac0671f",
    "type": "pull_request",
    "title": "Introduce ledger view classes to separate confirmed/unconfirmed operations on the ledger",
    "author": "clemahieu",
    "body": "The motivation for this PR is in preparation for bounded backlog changes. Currently, both confirmed and unconfirmed transactions are together on disk and the ACID properties of the ledger are encapsulated with a database transaction.\r\n\r\nWith the bounded backlog, blocks will be stored in memory so there will need to be memory synchronization in addition to database synchronization. Rather than filling the ledger class with unconfirmed/confirmed variants for each operation.\r\n\r\nThe ledger is divided in to several sets and subsets:\r\nledger::confirmed - The set of confirmed transactions\r\nledger::any - The superset of confirmed and unconfirmed transactions\r\n\r\nWhen unconfirmed blocks are held in memory the set ledger::unconfirmed will be added which holds only unconfirmed transactions.\r\n\r\nIn the future the confirming_set can be moved on to ledger which is the subset of unconfirmed blocks that are queued to be moved in to the confirmed set.",
    "draft": false,
    "pull_request": 4486,
    "label": "clemahieu:ledger_view",
    "created_at": "2024-03-12T14:33:24Z",
    "built_at": "2024-04-11T18:14:59Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c34b9649e96569e5ca65396f80c17f122ac0671f",
    "build_started_at": "2024-04-11T17:50:00Z",
    "run_id": "8651069307"
  },
  {
    "hash": "c36197d56312bb539d9b224eb5bb028820b2acd8",
    "type": "pull_request",
    "pull_request": 4471,
    "label": "pwojcikdev:vote-processor-tiers",
    "created_at": "2024-03-08T11:10:27Z",
    "built_at": "2024-03-09T11:16:04Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c36197d56312bb539d9b224eb5bb028820b2acd8",
    "build_started_at": "2024-03-09T10:50:47Z",
    "run_id": "8214009875"
  },
  {
    "hash": "c3b3614223baa1f738806d0fec61b53581940628",
    "type": "commit",
    "created_at": "2024-03-19T11:08:25Z",
    "built_at": "2024-03-20T09:35:46Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c3b3614223baa1f738806d0fec61b53581940628",
    "build_started_at": "2024-03-20T08:13:47Z",
    "run_id": "8355682154"
  },
  {
    "hash": "c3c7cb61b69d25cdd5fcfa25debd7ed0e024be83",
    "type": "pull_request",
    "title": "Block checker",
    "body": "Rewrite of https://github.com/nanocurrency/nano-node/pull/3727 with functional style checking rather than a pipeline",
    "draft": true,
    "pull_request": 4345,
    "label": "clemahieu:block_checker",
    "created_at": "2023-11-14T12:02:06Z",
    "built_at": "2024-04-04T10:34:09Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c3c7cb61b69d25cdd5fcfa25debd7ed0e024be83",
    "build_started_at": "2024-04-04T10:09:21Z",
    "run_id": "8552900898"
  },
  {
    "hash": "c3f09c10d2be416155fc18b58e5c2616306e37f6",
    "type": "commit",
    "author": "clemahieu",
    "title": "Replace ledger::block_confirmed with equivalent queries if the block exists in the confirmed ledger set.",
    "pull_request": "N/A",
    "created_at": "2024-03-11T11:48:14Z",
    "built_at": "2024-04-30T17:56:27Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c3f09c10d2be416155fc18b58e5c2616306e37f6",
    "build_started_at": "2024-04-30T13:34:48Z",
    "run_id": "8899078750"
  },
  {
    "hash": "c3f6087905039e039de6bb4ee2c02cb1026c01a7",
    "type": "pull_request",
    "pull_request": 4286,
    "label": "clemahieu:nano_store_lib",
    "created_at": "2023-09-19T13:14:01Z",
    "built_at": "2023-09-19T16:44:47Z",
    "build_status": "fail",
    "docker_tag": ""
  },
  {
    "hash": "c440cc1c8d4d593364f4ef0c7039f1f60b92f3e4",
    "type": "pull_request",
    "title": "GitHub workflow updates",
    "author": "pwojcikdev",
    "body": "This makes a few updates to our GitHub pipeline:\r\n- Update checkout action to @v4 to avoid deprecation warnings\r\n- Fix warning about homebrew qt5 package name\r\n- Fix warning about dockerfile syntax\r\n- Nicely log hashes of built executables and docker image, so that they can be found in github action summary instead of having to dig though build logs",
    "draft": false,
    "pull_request": 4756,
    "label": "pwojcikdev:github-actions-update",
    "created_at": "2024-10-16T15:49:29Z",
    "built_at": "2024-10-16T16:17:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c440cc1c8d4d593364f4ef0c7039f1f60b92f3e4",
    "build_started_at": "2024-10-16T15:49:43Z",
    "run_id": "11369247578"
  },
  {
    "hash": "c451d5190c9823ba536027bb8c33fbf873386ccd",
    "type": "pull_request",
    "title": "Move assert to a dedicated header",
    "author": "pwojcikdev",
    "body": null,
    "draft": false,
    "pull_request": 4773,
    "label": "pwojcikdev:assert-header",
    "created_at": "2024-10-27T18:14:57Z",
    "built_at": "2024-11-02T19:31:35Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-11-02T18:51:53Z",
    "run_id": "11645191233"
  },
  {
    "hash": "c470c885a9beb28ece6698ea3b1bab96e00774ad",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Pass confirmation root info",
    "pull_request": "N/A",
    "created_at": "2024-05-24T13:24:38Z",
    "built_at": "2024-06-18T16:08:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c470c885a9beb28ece6698ea3b1bab96e00774ad",
    "build_started_at": "2024-06-18T14:35:34Z",
    "run_id": "9568096097"
  },
  {
    "hash": "c4aa597ed403b19b13de34a965dcb5af9e0d477c",
    "type": "pull_request",
    "pull_request": 4500,
    "label": "pwojcikdev:networking-fixes/channel-comparisons",
    "created_at": "2024-03-18T18:27:21Z",
    "built_at": "2024-03-18T18:53:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c4aa597ed403b19b13de34a965dcb5af9e0d477c",
    "build_started_at": "2024-03-18T18:28:58Z",
    "run_id": "8331815453"
  },
  {
    "hash": "c4eca37f4adb8967d0fecc8b3225f31201b5f28c",
    "type": "pull_request",
    "title": "Add database information to telemetry data",
    "author": "RickiNano",
    "body": "Adds telemetry information about the type of database backend the node is using.\r\nThe telemetry RPC function reports both individual database backend information or consolidated (average). The reported database backend for each node will be either 'RocksDb' , 'LMDB' or \"Unknown\". \r\n'Unknown' is for nodes running v26.1 or earlier that does not send any database information in telemetry data.",
    "draft": false,
    "pull_request": 4675,
    "label": "RickiNano:Telemetry-db-backend",
    "created_at": "2024-07-08T18:09:12Z",
    "built_at": "2024-07-13T18:37:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c4eca37f4adb8967d0fecc8b3225f31201b5f28c",
    "build_started_at": "2024-07-13T18:09:46Z",
    "run_id": "9921898770"
  },
  {
    "hash": "c4feb1af413d4c330964ba215ad10efff85208c1",
    "type": "pull_request",
    "title": "Enable debug logging for core tests",
    "author": "gr0vity-dev",
    "body": "Failures on GitHub runners are sometimes hard to reproduce locally. Adding detailed logging helps analyze test failures directly from CI logs.\r\n\r\n- Enables NANO_LOG_STATS and debug level logging for core tests across all CI platforms\r\n- Helps diagnose intermittent test failures by providing more detailed execution traces",
    "draft": false,
    "pull_request": 4807,
    "label": "gr0vity-dev:prs/enable-debug-log-for-core-tests",
    "created_at": "2024-12-07T08:45:19Z",
    "built_at": "2024-12-09T06:57:59Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c4feb1af413d4c330964ba215ad10efff85208c1",
    "build_started_at": "2024-12-09T06:26:59Z",
    "run_id": "12229854548"
  },
  {
    "hash": "c572de1d1369141bebba38a9d43bb5c41556b003",
    "type": "pull_request",
    "pull_request": 4355,
    "label": "clemahieu:v26_rep_weights",
    "created_at": "2024-01-09T16:00:30Z",
    "built_at": "2024-01-09T16:37:01Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c572de1d1369141bebba38a9d43bb5c41556b003",
    "build_started_at": "2024-01-09T16:11:03Z",
    "run_id": "7463731771"
  },
  {
    "hash": "c58ec87dcd54751c521ef173137f5dd27acf4893",
    "type": "commit",
    "created_at": "2024-01-27T17:48:56Z",
    "built_at": "2024-01-27T18:15:12Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c58ec87dcd54751c521ef173137f5dd27acf4893",
    "build_started_at": "2024-01-27T17:49:14Z",
    "run_id": "7680233544"
  },
  {
    "hash": "c58ff456b7190cd615656338408bde257e2434ab",
    "type": "commit",
    "created_at": "2024-03-11T23:31:54Z",
    "built_at": "2024-03-12T00:01:22Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c58ff456b7190cd615656338408bde257e2434ab",
    "build_started_at": "2024-03-11T23:36:33Z",
    "run_id": "8241187150"
  },
  {
    "hash": "c5926cb4efad66ab71dd60db8f2bcb2bd6122aa5",
    "type": "commit",
    "created_at": "2024-02-08T15:56:40Z",
    "built_at": "2024-02-08T16:23:44Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c5926cb4efad66ab71dd60db8f2bcb2bd6122aa5",
    "build_started_at": "2024-02-08T15:57:49Z",
    "run_id": "7832340304"
  },
  {
    "hash": "c5b24e8000cb92da74d93f6fcea57397827b3fb8",
    "type": "commit",
    "created_at": "2024-03-20T11:26:35Z",
    "built_at": "2024-03-21T11:59:17Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c5b24e8000cb92da74d93f6fcea57397827b3fb8",
    "build_started_at": "2024-03-21T10:56:10Z",
    "run_id": "8373770720"
  },
  {
    "hash": "c5df1a56647e4a32164c44c07a060f9de5739ba5",
    "type": "pull_request",
    "pull_request": 4414,
    "label": "pwojcikdev:clang-format-update",
    "created_at": "2024-01-30T21:13:46Z",
    "built_at": "2024-01-30T21:47:00Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c5df1a56647e4a32164c44c07a060f9de5739ba5",
    "build_started_at": "2024-01-30T21:20:44Z",
    "run_id": "7717612307"
  },
  {
    "hash": "c61251914b4c15528babffc22d556de41528aa87",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge pull request #4777 from pwojcikdev/remove-legacy-bootstrap-2\n\nRemove legacy bootstrap",
    "pull_request": "4777",
    "created_at": "2024-10-31T13:45:50Z",
    "built_at": "2024-10-31T17:58:04Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c61251914b4c15528babffc22d556de41528aa87",
    "build_started_at": "2024-10-31T13:47:32Z",
    "run_id": "11616883071"
  },
  {
    "hash": "c659c8b1658b19ce858fabfb8e86568b0be76c84",
    "type": "pull_request",
    "title": "Various cleanups to store classes",
    "author": "clemahieu",
    "body": "Use unqualified names and type inference when possible.\r\n\r\nAdd type aliases for iterators in store classes.\r\n\r\nRename store/final.hpp to store/final_vote.hpp to match names in lmdb and rocksdb backend.",
    "draft": false,
    "pull_request": 4760,
    "label": "clemahieu:store_cleanup",
    "created_at": "2024-10-20T20:16:30Z",
    "built_at": "2024-10-20T22:25:53Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c659c8b1658b19ce858fabfb8e86568b0be76c84",
    "build_started_at": "2024-10-20T21:57:33Z",
    "run_id": "11429937404"
  },
  {
    "hash": "c6b1f3092d0b859fe4eca7a49b3362a5694c727e",
    "type": "pull_request",
    "pull_request": 4345,
    "label": "clemahieu:block_checker",
    "created_at": "2023-11-14T12:02:06Z",
    "built_at": "2024-03-25T17:22:20Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-25T17:07:05Z",
    "run_id": "8424058776"
  },
  {
    "hash": "c6b3ec2a3ec64feb733394a53fa87c439abec454",
    "type": "pull_request",
    "pull_request": 4486,
    "label": "clemahieu:ledger_view",
    "created_at": "2024-03-12T14:33:24Z",
    "built_at": "2024-03-13T16:34:24Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-13T16:15:41Z",
    "run_id": "8267990146"
  },
  {
    "hash": "c6bb1702de06e0429f39c63b6e94cf6866e03dc9",
    "type": "pull_request",
    "pull_request": 4423,
    "label": "pwojcikdev:election-block-rebroadcasting",
    "created_at": "2024-02-05T21:22:24Z",
    "built_at": "2024-02-05T22:21:12Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c6bb1702de06e0429f39c63b6e94cf6866e03dc9",
    "build_started_at": "2024-02-05T21:56:40Z",
    "run_id": "7791341251"
  },
  {
    "hash": "c6c12566c84bc955f3189ae4d9779047bd439b6f",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Move tcp_listener test into a single file",
    "pull_request": "4808",
    "created_at": "2024-12-10T12:58:50Z",
    "built_at": "2024-12-10T20:05:03Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c6c12566c84bc955f3189ae4d9779047bd439b6f",
    "build_started_at": "2024-12-10T18:42:47Z",
    "run_id": "12263418458"
  },
  {
    "hash": "c6ef58b54850927f25d6506d5fc0c9e8032724b6",
    "type": "pull_request",
    "pull_request": 4314,
    "label": "clemahieu:ledger_file_exception",
    "created_at": "2023-10-16T15:57:18Z",
    "built_at": "2023-10-17T13:25:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c6ef58b54850927f25d6506d5fc0c9e8032724b6"
  },
  {
    "hash": "c6f88b7162f9cbd54fe5e8b70ed46a73e1fc0d96",
    "type": "pull_request",
    "title": "Stats overhaul",
    "author": "pwojcikdev",
    "body": "# Stats overhaul\r\n\r\nThe goal of this PR is to address some of the issues that have been increasingly cropping up with the current stats system. I believe that having a more flexible and performant system will allow us to experiment and iterate faster.\r\n\r\nThe immediate problem that is fixed is the fact that we ran out of space for declaring new stat enums:\r\n```\r\nIn file included from /nano-node/nano/lib/stats.hpp:5:\r\n/nano-node/nano/lib/stats_enums.hpp:407:2: error: enumerator value 256 is not representable in the underlying type 'uint8_t' (aka 'unsigned char')\r\n```\r\n\r\nHowever, this PR contains a bit more than that. The main changes are:\r\n- Do not require `stat::detail` enum to have `uint8` underlying type. This allows for practically unlimited number of custom stats.\r\n- Offload heavy IO operations (saving stats to disk) to a dedicated thread. Previously this was done inside the call to stat update functions, which introduced latency spikes.\r\n- Rework the way histograms are handled. Previously histograms needed to be registered with the stats system beforehand, which could be cumbersome and as a result not used. Now we store samples in a ring buffer and leave histogram creation to the user (e.g. nano-prom-exporter).\r\nNote: I'm still not sure whether this approach is really better, this needs a bit more experimentation.\r\n- Use read-write locks with atomic integers for counter values. This is a bit experimental, but on my system it seems to give some performance benefits. I'll try to include microbenchmarking suite as part of a separate PR (ongoing work is here https://github.com/pwojcikdev/nano-node/tree/stats-benchmarking )\r\n\r\n## Heatmaps\r\n\r\nI added experimental support for histogram generation to my fork of the `nano-prom-exporter` (https://github.com/pwojcikdev/nano-prom-exporter/commits/histograms/). This allows for generating heatmaps like this one:\r\n\r\n<img width=\"2991\" alt=\"Screenshot 2024-03-06 at 10 20 51\" src=\"https://github.com/nanocurrency/nano-node/assets/3044353/ec59d9ed-6dbf-4bbe-a710-b894bb2d6106\">\r\n",
    "draft": false,
    "pull_request": 4583,
    "label": "pwojcikdev:stats-improvements-2",
    "created_at": "2024-04-24T14:26:18Z",
    "built_at": "2024-04-24T15:20:53Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c6f88b7162f9cbd54fe5e8b70ed46a73e1fc0d96",
    "build_started_at": "2024-04-24T14:54:12Z",
    "run_id": "8818657207"
  },
  {
    "hash": "c70ec633eba5ce29c0f4e1f220134314634b16ba",
    "type": "pull_request",
    "pull_request": 4238,
    "label": "clemahieu:scheduling_limiter",
    "created_at": "2023-05-19T01:07:22Z",
    "built_at": "2023-09-11T16:56:10Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c70ec633eba5ce29c0f4e1f220134314634b16ba"
  },
  {
    "hash": "c725bc4399e0b452a948b2959a1262f03a3157d1",
    "type": "pull_request",
    "title": "Final vote requests/replies only",
    "author": "pwojcikdev",
    "body": "There are two main changes:  \r\n- We are only replying with final votes, for blocks that are either confirmed or marked as final.\r\n- We are not using cached votes for replies.\r\n\r\nDuring testing it was shown that the above changes reduce vote traffic by an order of magnitude.\r\n\r\nThe rationale for abandoning replies from vote cache is that it causes excessive bandwidth usage. A vote request might contain 12 hashes (255 hashes after upcoming network upgrade) and the chance that a vote with exactly these hashes is already cached is low. This in turn requires replying with multiple votes, which is incredibly inefficient. Pessimistic bandwidth usage in such scenario is number of hashes squared.\r\n\r\n",
    "draft": false,
    "pull_request": 4648,
    "label": "pwojcikdev:final-replies-only",
    "created_at": "2024-06-14T19:32:55Z",
    "built_at": "2024-06-18T12:00:27Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c725bc4399e0b452a948b2959a1262f03a3157d1",
    "build_started_at": "2024-06-18T11:30:17Z",
    "run_id": "9564199416"
  },
  {
    "hash": "c734caf4d1ad840df83983e40b86e5d2c1f56a69",
    "type": "pull_request",
    "pull_request": 4518,
    "label": "pwojcikdev:vote-cache-full-votes-4",
    "created_at": "2024-03-23T10:39:59Z",
    "built_at": "2024-03-23T12:12:12Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c734caf4d1ad840df83983e40b86e5d2c1f56a69",
    "build_started_at": "2024-03-23T11:46:33Z",
    "run_id": "8401544227"
  },
  {
    "hash": "c75f04fcf157276cd72acf90f12bf272f86fcca2",
    "type": "commit",
    "created_at": "2023-02-01T11:20:08Z",
    "built_at": "2023-02-06T21:37:46Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c75f04fcf157276cd72acf90f12bf272f86fcca2"
  },
  {
    "hash": "c774654dc6c03653461916acd8f9610e71b4ee3f",
    "type": "commit",
    "created_at": "2023-11-06T16:37:19Z",
    "built_at": "2023-11-06T17:33:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c774654dc6c03653461916acd8f9610e71b4ee3f",
    "build_started_at": "2023-11-06T16:43:18Z",
    "run_id": "6773809432"
  },
  {
    "hash": "c78c39c829f7e27131b22f5cfaec8dd23395a731",
    "type": "pull_request",
    "pull_request": 4308,
    "label": "RickiNano:replace-boost-filesystem",
    "created_at": "2023-10-05T10:02:02Z",
    "built_at": "2023-10-05T17:06:11Z",
    "build_status": "fail",
    "docker_tag": ""
  },
  {
    "hash": "c7a48b1fd542f324e7717911d0f4a989e81d029a",
    "type": "pull_request",
    "title": "Stats overhaul",
    "author": "pwojcikdev",
    "body": "# Stats overhaul\r\n\r\nThe goal of this PR is to address some of the issues that have been increasingly cropping up with the current stats system. I believe that having a more flexible and performant system will allow us to experiment and iterate faster.\r\n\r\nThe immediate problem that is fixed is the fact that we ran out of space for declaring new stat enums:\r\n```\r\nIn file included from /nano-node/nano/lib/stats.hpp:5:\r\n/nano-node/nano/lib/stats_enums.hpp:407:2: error: enumerator value 256 is not representable in the underlying type 'uint8_t' (aka 'unsigned char')\r\n```\r\n\r\nHowever, this PR contains a bit more than that. The main changes are:\r\n- Do not require `stat::detail` enum to have `uint8` underlying type. This allows for practically unlimited number of custom stats.\r\n- Offload heavy IO operations (saving stats to disk) to a dedicated thread. Previously this was done inside the call to stat update functions, which introduced latency spikes.\r\n- Rework the way histograms are handled. Previously histograms needed to be registered with the stats system beforehand, which could be cumbersome and as a result not used. Now we store samples in a ring buffer and leave histogram creation to the user (e.g. nano-prom-exporter).\r\nNote: I'm still not sure whether this approach is really better, this needs a bit more experimentation.\r\n- Use read-write locks with atomic integers for counter values. This is a bit experimental, but on my system it seems to give some performance benefits. I'll try to include microbenchmarking suite as part of a separate PR (ongoing work is here https://github.com/pwojcikdev/nano-node/tree/stats-benchmarking )\r\n- Remove special semantics of `stat::detail::all` enum. Previously we tracked a special `all` entry that was used to aggregate all stats of a given type. It was used only by unit tests and required special filters to remove from grafana dashboards, where it unnecessarily cluttered the view. Now stat aggregation is handled by a dedicated overload of `stats::count ()` function.\r\n\r\n## Heatmaps\r\n\r\nI added experimental support for histogram generation to my fork of the `nano-prom-exporter` (https://github.com/pwojcikdev/nano-prom-exporter/commits/histograms/). This allows for generating heatmaps like this one:\r\n\r\n<img width=\"2991\" alt=\"Screenshot 2024-03-06 at 10 20 51\" src=\"https://github.com/nanocurrency/nano-node/assets/3044353/ec59d9ed-6dbf-4bbe-a710-b894bb2d6106\">\r\n",
    "draft": false,
    "pull_request": 4583,
    "label": "pwojcikdev:stats-improvements-2",
    "created_at": "2024-04-24T14:26:18Z",
    "built_at": "2024-04-30T17:59:20Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c7a48b1fd542f324e7717911d0f4a989e81d029a",
    "build_started_at": "2024-04-30T14:46:37Z",
    "run_id": "8899165085"
  },
  {
    "hash": "c7aa46557c86411b4c1057647b34da56caef1fa1",
    "type": "commit",
    "created_at": "2023-06-25T15:38:20Z",
    "built_at": "2023-06-25T16:45:50Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c7aa46557c86411b4c1057647b34da56caef1fa1"
  },
  {
    "hash": "c7d77ed83692927e8b79d2bfbb43908dc0e6d307",
    "type": "pull_request",
    "pull_request": 4131,
    "label": "simpago:clear-unchecked-table",
    "created_at": "2023-02-15T13:24:53Z",
    "built_at": "2023-05-04T13:51:48Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c7d77ed83692927e8b79d2bfbb43908dc0e6d307"
  },
  {
    "hash": "c88b196bc45b09329bb3dfadcc72246ce7f9c216",
    "type": "pull_request",
    "title": "Remove legacy bootstrap",
    "author": "pwojcikdev",
    "body": "This removes legacy bootstrap, which was replaced by the new ascending bootstrap. Legacy bootstrap implementation was unnecessarily complicated with many inefficiencies. Debugging it was a pain and slowed down development of new features. \r\n\r\nAll the `bootstrap_ascending*` classes and stats are renamed to simply `bootstrap`.\r\n\r\nTODO for the future is porting previous `bootstrap_processor` test suite to use the new bootstrapper.",
    "draft": false,
    "pull_request": 4777,
    "label": "pwojcikdev:remove-legacy-bootstrap-2",
    "created_at": "2024-10-29T17:20:20Z",
    "built_at": "2024-10-30T19:18:34Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c88b196bc45b09329bb3dfadcc72246ce7f9c216",
    "build_started_at": "2024-10-30T18:49:23Z",
    "run_id": "11599739827"
  },
  {
    "hash": "c8b6debc43acf78f95d75e4622736191c614b5a8",
    "type": "commit",
    "title": "Clean up write_queue::wait.\n\nAdd consistency check to ensure the writer token is not already queued since they're waited for by value.\nChange wait-loop to use the predicated overload of wait.",
    "pull_request": "4556",
    "created_at": "2024-04-12T19:09:50Z",
    "built_at": "2024-04-13T20:15:32Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c8b6debc43acf78f95d75e4622736191c614b5a8",
    "build_started_at": "2024-04-13T19:36:13Z",
    "run_id": "8675872928"
  },
  {
    "hash": "c8ef4beaedb9a87aafee88dcabefa932729131bd",
    "type": "pull_request",
    "title": "Simplify `system.add_node` checks",
    "author": "pwojcikdev",
    "body": null,
    "draft": false,
    "pull_request": 4614,
    "label": "pwojcikdev:system-add-node",
    "created_at": "2024-05-11T14:55:21Z",
    "built_at": "2024-05-11T15:32:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c8ef4beaedb9a87aafee88dcabefa932729131bd",
    "build_started_at": "2024-05-11T15:03:49Z",
    "run_id": "9044543556"
  },
  {
    "hash": "c8fb3a5c4a04776abedba9a060ef67e3136e3d23",
    "type": "commit",
    "title": "Merge pull request #4547 from clemahieu/tsan_fix\n\nFixes TSAN issues.",
    "pull_request": "4547",
    "created_at": "2024-04-09T23:57:27Z",
    "built_at": "2024-04-12T11:14:40Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c8fb3a5c4a04776abedba9a060ef67e3136e3d23",
    "build_started_at": "2024-04-12T09:48:30Z",
    "run_id": "8660922170"
  },
  {
    "hash": "c90d599ccdb204bfb06460c10232808b15cc6ccd",
    "type": "pull_request",
    "pull_request": 4124,
    "label": "clemahieu:election_behavior_get",
    "created_at": "2023-02-14T11:32:47Z",
    "built_at": "2023-02-14T12:18:03Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c90d599ccdb204bfb06460c10232808b15cc6ccd"
  },
  {
    "hash": "c95420e28af65a33f2b6c0454a13c97b8afbf66e",
    "type": "pull_request",
    "pull_request": 4345,
    "label": "clemahieu:block_checker",
    "created_at": "2023-11-14T12:02:06Z",
    "built_at": "2024-02-22T23:04:23Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c95420e28af65a33f2b6c0454a13c97b8afbf66e",
    "build_started_at": "2024-02-22T22:39:35Z",
    "run_id": "8011932260"
  },
  {
    "hash": "c962248a21448a888b4d6cb3310fb7b1a3aed4a0",
    "type": "pull_request",
    "title": "Replace `tcp_message_manager`",
    "author": "pwojcikdev",
    "body": "This replaces `tcp_message_manager` with a new `message_processor` component based around fair queue. There are two major differences:\r\n- Instead of a single, large shared message queue each peer gets its own smaller, dedicated queue. \r\n- The producer/consumer condition behavior is changed, so that when overfilled it no longer blocks, instead dropping new messages. (With channels ideally throttling receiving new messages, but that's a todo for future network refactorings)\r\n\r\nIn the future it should be explored if message dispatch can be done directly from IO threads, thus saving one intermediate queue. This requires simulating real live network contention conditions, ie. 200+ peers.",
    "draft": false,
    "pull_request": 4609,
    "label": "pwojcikdev:fair-queuing/message-processor-3",
    "created_at": "2024-05-08T20:17:58Z",
    "built_at": "2024-05-08T20:52:00Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c962248a21448a888b4d6cb3310fb7b1a3aed4a0",
    "build_started_at": "2024-05-08T20:24:47Z",
    "run_id": "9008088198"
  },
  {
    "hash": "c988438f2297664ca604b13970844e8122a49228",
    "type": "pull_request",
    "pull_request": 4143,
    "label": "thsfs:mix_of_udp_references_removal",
    "created_at": "2023-02-18T22:03:56Z",
    "built_at": "2023-02-18T22:48:24Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c988438f2297664ca604b13970844e8122a49228"
  },
  {
    "hash": "c98892ebf26f4c64000c3d6f95c3eacfcff7cefe",
    "type": "commit",
    "title": "Refactor print_all_account_info() to take a ledger rather than a node ref",
    "pull_request": "4553",
    "created_at": "2024-04-12T14:39:17Z",
    "built_at": "2024-04-14T06:18:00Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c98892ebf26f4c64000c3d6f95c3eacfcff7cefe",
    "build_started_at": "2024-04-14T02:26:53Z",
    "run_id": "8678569044"
  },
  {
    "hash": "c98f7696beaa6e5dc7dbc53bae35b5d66da0bffc",
    "type": "pull_request",
    "title": "QT wallet: proper display of state open block in GUI history",
    "author": "SergiySW",
    "body": "State open block should be marked as \"Receive\".\r\nFor open blocks `previous` == 0 and function `nano::ledger_set_any::block_balance ()` will return `std::nullopt` resulting in displaying \"Unknown\" block type.",
    "draft": false,
    "pull_request": 4744,
    "label": "SergiySW:qt_state_open",
    "created_at": "2024-10-06T20:20:47Z",
    "built_at": null,
    "build_status": "building",
    "docker_tag": null,
    "build_started_at": "2024-10-27T20:29:02Z",
    "run_id": null
  },
  {
    "hash": "c9994948244ccb6e8dc8c25c8fde7b184a2ae7a3",
    "type": "pull_request",
    "pull_request": 4368,
    "label": "clemahieu:bootstrap_test_add_node",
    "created_at": "2024-01-18T01:32:57Z",
    "built_at": "2024-01-18T05:11:46Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c9994948244ccb6e8dc8c25c8fde7b184a2ae7a3",
    "build_started_at": "2024-01-18T04:45:53Z",
    "run_id": "7565448041"
  },
  {
    "hash": "c9ab35a94b11d0fd59c2df1d362654f689bed6a3",
    "type": "pull_request",
    "title": "migrate_database_lmdb_to_rocksdb improvements",
    "author": "RickiNano",
    "body": "The `migrate_database_lmdb_to_rocksdb` option is running for a very long time with the current ledger size (almost 200 million blocks). On my local machine it took 65 minutes to complete. Nothing is written on screen during this process and users may think the process has stalled.\r\nThis PR adds some progress feedback. One update for each of the 7 tables that are migrated.\r\nIt also adds a simple disk space check to warn users if they might not have enough space to complete the migration.\r\n~~The current converted RocksDb database is 73 GB, and the warning is given if the system has less than 75GB available.~~\r\nThe warning is given based on the size of the LMDB database that is being migrated. The final RocksDb size is approximately 65% of the LMDB space.",
    "draft": false,
    "pull_request": 4647,
    "label": "RickiNano:lmdb-to-rocksdb",
    "created_at": "2024-06-13T10:47:31Z",
    "built_at": "2024-07-03T16:03:04Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c9ab35a94b11d0fd59c2df1d362654f689bed6a3",
    "build_started_at": "2024-07-03T15:37:07Z",
    "run_id": "9780835316"
  },
  {
    "hash": "c9ba8f5b6d43976ed42388490439016393b4bf4a",
    "type": "commit",
    "author": "clemahieu",
    "title": "Add command line option to log process id to file. (#4685)",
    "pull_request": "4685",
    "created_at": "2024-07-22T10:50:08Z",
    "built_at": "2024-07-22T11:34:40Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c9ba8f5b6d43976ed42388490439016393b4bf4a",
    "build_started_at": "2024-07-22T10:54:34Z",
    "run_id": "10039651516"
  },
  {
    "hash": "c9c1fcf9d08e2b6ae7f48c88482e801df7498a35",
    "type": "commit",
    "created_at": "2023-12-16T17:41:56Z",
    "built_at": "2024-01-09T00:16:26Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c9c1fcf9d08e2b6ae7f48c88482e801df7498a35",
    "build_started_at": "2024-01-08T23:09:58Z",
    "run_id": "7454294270"
  },
  {
    "hash": "c9c646403211cedef5c48bfce7de5439a7d25d1c",
    "type": "pull_request",
    "title": "Redesign the priority scheduler to maintain a 1-to-1 link with running elections",
    "author": "clemahieu",
    "body": "This change appropriately prioritises elections by bucket and then by LRU account. Overfilled buckets have the lowest priority block election cancelled and rolled back.",
    "draft": true,
    "pull_request": 4593,
    "label": "clemahieu:priority_limiter",
    "created_at": "2024-04-30T12:53:50Z",
    "built_at": "2024-05-01T16:53:19Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c9c646403211cedef5c48bfce7de5439a7d25d1c",
    "build_started_at": "2024-05-01T16:27:04Z",
    "run_id": "8911998652"
  },
  {
    "hash": "c9d1666b51167123853daf10ffd9a68932ae2e5b",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Remove `Develop Branch Dockers Deploy` workflow (#4796)",
    "pull_request": "4796",
    "created_at": "2024-11-28T19:43:44Z",
    "built_at": "2024-11-28T20:11:45Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c9d1666b51167123853daf10ffd9a68932ae2e5b",
    "build_started_at": "2024-11-28T19:45:18Z",
    "run_id": "12074714097"
  },
  {
    "hash": "c9e052fe581cdd65ee7a05584288673e902110e0",
    "type": "pull_request",
    "pull_request": 4173,
    "label": "clemahieu:flatbuffer_version_bump",
    "created_at": "2023-03-06T11:18:55Z",
    "built_at": "2023-03-06T15:33:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c9e052fe581cdd65ee7a05584288673e902110e0"
  },
  {
    "hash": "c9ee5365e3935db30c99b58da86c9a2568fc2301",
    "type": "pull_request",
    "title": "Network filter for votes",
    "author": "pwojcikdev",
    "body": "This filters out vote duplicates early on during packet processing. This showed significant reduction in number of processed votes for synthetic network simulations and when running on a live network representative.\r\n\r\nThe network filter now implements an age cutoff for its entries, so rebroadcasts are allowed after 60 seconds by default. This should remove the need for explicit clearing in case entries are dropped further in the pipeline.\r\n\r\nTest results from @gr0vity-dev, his help was invaluable in detecting and fixing this inefficiency:\r\n\r\n![image](https://github.com/user-attachments/assets/a6b3c148-ee22-4508-9f30-e18c06613ecd)\r\n\r\n",
    "draft": false,
    "pull_request": 4735,
    "label": "pwojcikdev:vote-duplicate-filter",
    "created_at": "2024-09-24T18:15:03Z",
    "built_at": "2024-09-24T19:03:52Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:c9ee5365e3935db30c99b58da86c9a2568fc2301",
    "build_started_at": "2024-09-24T18:38:33Z",
    "run_id": "11019912744"
  },
  {
    "hash": "ca0bfdf92a65d61461e4d27d62ede2b756ffc8f0",
    "type": "pull_request",
    "pull_request": 4238,
    "label": "clemahieu:scheduling_limiter",
    "created_at": "2023-05-19T01:07:22Z",
    "built_at": "2023-09-06T13:28:42Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ca0bfdf92a65d61461e4d27d62ede2b756ffc8f0"
  },
  {
    "hash": "ca0e2268ce6464296684da8c61e89eeeecd60af6",
    "type": "commit",
    "created_at": "2024-03-12T12:25:28Z",
    "built_at": "2024-03-15T13:23:45Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ca0e2268ce6464296684da8c61e89eeeecd60af6",
    "build_started_at": "2024-03-15T11:52:51Z",
    "run_id": "8295661667"
  },
  {
    "hash": "ca2a785e39403038ac42c648f13d51e7b56532aa",
    "type": "pull_request",
    "pull_request": 4254,
    "label": "brandon-bb:main",
    "created_at": "2023-07-01T14:48:20Z",
    "built_at": "2023-07-01T15:29:53Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ca2a785e39403038ac42c648f13d51e7b56532aa"
  },
  {
    "hash": "ca31348b96524f7965555d4a97e6f4ef7d2e83ff",
    "type": "commit",
    "created_at": "2024-02-22T16:11:30Z",
    "built_at": "2024-02-22T16:45:23Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ca31348b96524f7965555d4a97e6f4ef7d2e83ff",
    "build_started_at": "2024-02-22T16:16:47Z",
    "run_id": "8007600825"
  },
  {
    "hash": "ca751b46b49f91158ae49e6b0abe95bf8be91df7",
    "type": "pull_request",
    "pull_request": 4220,
    "label": "pwojcikdev:fix-crypto-windows-arm",
    "created_at": "2023-04-26T18:08:39Z",
    "built_at": "2023-04-26T18:52:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ca751b46b49f91158ae49e6b0abe95bf8be91df7"
  },
  {
    "hash": "ca9d74f26c7de256db0138770fa9457976eb7878",
    "type": "pull_request",
    "pull_request": 4499,
    "label": "pwojcikdev:networking-fixes/tcp-channel-constructor",
    "created_at": "2024-03-18T17:27:08Z",
    "built_at": "2024-03-18T18:28:04Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ca9d74f26c7de256db0138770fa9457976eb7878",
    "build_started_at": "2024-03-18T17:33:03Z",
    "run_id": "8331053002"
  },
  {
    "hash": "cae17f34761eba138278c8f8e7c89ed21afe4871",
    "type": "pull_request",
    "pull_request": 4158,
    "label": "clemahieu:bootstrap_ascending_client",
    "created_at": "2023-02-27T20:15:37Z",
    "built_at": "2023-02-27T22:59:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:cae17f34761eba138278c8f8e7c89ed21afe4871"
  },
  {
    "hash": "caef5dcabcf6a5ef87ead342935a6a18a4ec362c",
    "type": "commit",
    "created_at": "2024-03-10T15:32:30Z",
    "built_at": "2024-03-10T22:39:12Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:caef5dcabcf6a5ef87ead342935a6a18a4ec362c",
    "build_started_at": "2024-03-10T20:14:43Z",
    "run_id": "8224504096"
  },
  {
    "hash": "cafaadfeeecf021ef964cbb95926033e4cc46878",
    "type": "commit",
    "author": "clemahieu",
    "title": "Move ledger::latest on to ledger set head",
    "pull_request": "N/A",
    "created_at": "2024-03-11T15:26:53Z",
    "built_at": "2024-04-30T18:12:47Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:cafaadfeeecf021ef964cbb95926033e4cc46878",
    "build_started_at": "2024-04-30T13:34:48Z",
    "run_id": "8899322100"
  },
  {
    "hash": "cb103c5d205596c13f8fd1621cf54ed32a99b6e3",
    "type": "pull_request",
    "title": "Bounded backlog",
    "author": "pwojcikdev",
    "body": "This is ongoing work for bounded backlog. This limits the number of unconfirmed blocks that the node needs to store. The implementation of this mechanism is nontrivial because the node relies heavily on the fact that unconfirmed blocks are present in the ledger.\r\n\r\nDepends on PRs:\r\nhttps://github.com/nanocurrency/nano-node/pull/4758",
    "draft": true,
    "pull_request": 4787,
    "label": "pwojcikdev:bounded-backlog-pr",
    "created_at": "2024-11-18T20:36:19Z",
    "built_at": "2024-11-26T21:29:10Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:cb103c5d205596c13f8fd1621cf54ed32a99b6e3",
    "build_started_at": "2024-11-26T20:41:54Z",
    "run_id": "12038880963"
  },
  {
    "hash": "cb1893a424d407f18a009e682e902d8ea525ea59",
    "type": "commit",
    "title": "Fix race condition from TSAN where block_sideband is updated by different nodes.",
    "pull_request": "4547",
    "created_at": "2024-04-09T14:51:12Z",
    "built_at": "2024-04-12T11:23:07Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:cb1893a424d407f18a009e682e902d8ea525ea59",
    "build_started_at": "2024-04-12T09:48:30Z",
    "run_id": "8660994322"
  },
  {
    "hash": "cb2765664500276cc9989d86dd5a478f23fd2046",
    "type": "pull_request",
    "pull_request": 4124,
    "label": "clemahieu:election_behavior_get",
    "created_at": "2023-02-14T11:32:47Z",
    "built_at": "2023-02-14T14:10:56Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:cb2765664500276cc9989d86dd5a478f23fd2046"
  },
  {
    "hash": "cb391e6be58c185eb17a32eea7770f7b46c7ebc3",
    "type": "pull_request",
    "pull_request": 4121,
    "label": "clemahieu:head_block",
    "created_at": "2023-02-13T22:32:40Z",
    "built_at": "2023-02-13T23:13:53Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:cb391e6be58c185eb17a32eea7770f7b46c7ebc3"
  },
  {
    "hash": "cb39f8d70b903a3d680fd44a341d7f61719fefe5",
    "type": "commit",
    "author": "homebot",
    "title": "Make use of transition_priority() in active_elections",
    "pull_request": "4799",
    "created_at": "2024-12-03T07:28:05Z",
    "built_at": "2024-12-04T11:26:17Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:cb39f8d70b903a3d680fd44a341d7f61719fefe5",
    "build_started_at": "2024-12-04T10:33:56Z",
    "run_id": "12158294516"
  },
  {
    "hash": "cb3c30d9213eef90d09b181eb83fe5eb91cbc5b5",
    "type": "pull_request",
    "pull_request": 4401,
    "label": "dsiganos:fix_active_transactions_vote_replays",
    "created_at": "2024-01-26T16:44:09Z",
    "built_at": "2024-01-26T18:36:39Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:cb3c30d9213eef90d09b181eb83fe5eb91cbc5b5",
    "build_started_at": "2024-01-26T18:10:32Z",
    "run_id": "7671774527"
  },
  {
    "hash": "cb60b5a90772305b25124dfaec89a87d8feadff6",
    "type": "pull_request",
    "title": "Add `is_originator` flag to publish messages",
    "author": "pwojcikdev",
    "body": "This adds a new flag to `publish` messages that indicates whether a block is coming from a node that performed initial flooding. This helps avoid a situation when under a high load, a legitimate block is dropped because blockprocessor queue for a peer is full of rebroadcasted blocks. However, the potential for exploiting this is limited, as both rebroadcasted and originator queues have the same max size and priority, so effectively this gives each peer two queues to spam the network - which is not much, but should be plenty for legitimate traffic.\r\n\r\nFormat of extended publish message:\r\n```\r\n/*\r\n * Binary Format:\r\n * [message_header] Common message header\r\n * [variable] Block (serialized according to the block type specified in the header)\r\n *\r\n * Header extensions:\r\n * - [0x0f00] Block type: Identifies the specific type of the block.\r\n * - [0x0004] Originator flag\r\n */\r\n```",
    "draft": false,
    "pull_request": 4654,
    "label": "pwojcikdev:publish-originator",
    "created_at": "2024-06-23T16:07:14Z",
    "built_at": "2024-06-23T17:08:38Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:cb60b5a90772305b25124dfaec89a87d8feadff6",
    "build_started_at": "2024-06-23T16:42:44Z",
    "run_id": "9634972721"
  },
  {
    "hash": "cb8c901a26f559cd1bcb0fa617d5fd1b9731f47b",
    "type": "pull_request",
    "title": "Fix database iterator-transaction lifetimes",
    "author": "pwojcikdev",
    "body": "This adds debug assertions that ensure database iterators can't be used after their corresponding transaction gets committed / released.\r\n\r\nThe `nano::node::collect_ledger_pruning_targets ()` is still triggering the assert, so I invite someone to have a look at it.",
    "draft": false,
    "pull_request": 4713,
    "label": "pwojcikdev:iterator-transaction-lifetimes",
    "created_at": "2024-08-23T09:39:19Z",
    "built_at": "2024-08-27T09:36:27Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:cb8c901a26f559cd1bcb0fa617d5fd1b9731f47b",
    "build_started_at": "2024-08-27T09:06:41Z",
    "run_id": "10575106002"
  },
  {
    "hash": "cbb0126e6a871286006a310df3d2a5d2e681ccb9",
    "type": "commit",
    "created_at": "2023-02-20T15:35:53Z",
    "built_at": "2023-02-20T17:09:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:cbb0126e6a871286006a310df3d2a5d2e681ccb9"
  },
  {
    "hash": "cbca29322969bc3f6583272ac82c56f35606ef4a",
    "type": "pull_request",
    "pull_request": 4161,
    "label": "clemahieu:block_processor_drop",
    "created_at": "2023-02-27T23:23:24Z",
    "built_at": "2023-02-28T17:27:31Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:cbca29322969bc3f6583272ac82c56f35606ef4a"
  },
  {
    "hash": "cbcfd602c5957c2ff6b7a4fcb6f645b4ba8efc55",
    "type": "pull_request",
    "title": "Introduce ledger view classes to separate confirmed/unconfirmed operations on the ledger",
    "body": "The motivation for this PR is in preparation for bounded backlog changes. Currently, both confirmed and unconfirmed transactions are together on disk and the ACID properties of the ledger are encapsulated with a database transaction.\r\n\r\nWith the bounded backlog, blocks will be stored in memory so there will need to be memory synchronization in addition to database synchronization. Rather than filling the ledger class with unconfirmed/confirmed variants for each operation.\r\n\r\nThe ledger is divided in to several sets and subsets:\r\nledger::confirmed - The set of confirmed transactions\r\nledger::any - The superset of confirmed and unconfirmed transactions\r\n\r\nWhen unconfirmed blocks are held in memory the set ledger::unconfirmed will be added which holds only unconfirmed transactions.\r\n\r\nIn the future the confirming_set can be moved on to ledger which is the subset of unconfirmed blocks that are queued to be moved in to the confirmed set.",
    "draft": false,
    "pull_request": 4486,
    "label": "clemahieu:ledger_view",
    "created_at": "2024-03-12T14:33:24Z",
    "built_at": "2024-04-07T18:34:16Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-04-07T18:18:23Z",
    "run_id": "8590729842"
  },
  {
    "hash": "cc265f289b2b8c7dd9b5fa7e9686bc07f2a383aa",
    "type": "pull_request",
    "pull_request": 4151,
    "label": "pwojcikdev:election-scheduler-stats",
    "created_at": "2023-02-22T20:31:54Z",
    "built_at": "2023-02-23T13:01:48Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:cc265f289b2b8c7dd9b5fa7e9686bc07f2a383aa"
  },
  {
    "hash": "cc3299f9b3a00c3e6867e0a977894dad1e812fab",
    "type": "pull_request",
    "title": "Remove legacy bootstrap",
    "author": "pwojcikdev",
    "body": "This removes legacy bootstrap, which was replaced by the new ascending bootstrap. Legacy bootstrap implementation was unnecessarily complicated with many inefficiencies. Debugging it was a pain and slowed down development of new features. \r\n\r\nAll the `bootstrap_ascending*` classes and stats are renamed to simply `bootstrap`.\r\n\r\nTODO for the future is porting previous `bootstrap_processor` test suite to use the new bootstrapper.",
    "draft": false,
    "pull_request": 4777,
    "label": "pwojcikdev:remove-legacy-bootstrap-2",
    "created_at": "2024-10-29T17:20:20Z",
    "built_at": "2024-10-30T21:59:12Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:cc3299f9b3a00c3e6867e0a977894dad1e812fab",
    "build_started_at": "2024-10-30T21:32:11Z",
    "run_id": "11601990701"
  },
  {
    "hash": "cc7b18b488751e26a0bc04564f98b0e9faf6d7c9",
    "type": "pull_request",
    "pull_request": 4281,
    "label": "clemahieu:manual_scheduler",
    "created_at": "2023-09-12T17:49:20Z",
    "built_at": "2023-09-13T01:34:26Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:cc7b18b488751e26a0bc04564f98b0e9faf6d7c9"
  },
  {
    "hash": "cc9006563031f830aa1c3eb8bebf5db29eb1f022",
    "type": "commit",
    "created_at": "2024-03-16T19:16:48Z",
    "built_at": "2024-03-18T18:44:26Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:cc9006563031f830aa1c3eb8bebf5db29eb1f022",
    "build_started_at": "2024-03-18T16:48:08Z",
    "run_id": "8330437043"
  },
  {
    "hash": "cca0b43059a89d2c79f926b4355a4809a66993d0",
    "type": "pull_request",
    "pull_request": 4485,
    "label": "simpago:rep-cache-min-weight",
    "created_at": "2024-03-12T13:26:39Z",
    "built_at": "2024-03-12T14:09:44Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-12T13:53:15Z",
    "run_id": "8250016028"
  },
  {
    "hash": "ccb14afe3b5022716db0ce868af235b8fccd90d0",
    "type": "pull_request",
    "title": "Encapsulate ledger cache counts",
    "body": "This is a cleanup PR for encapsulating the various ledger counts in ledger_cache which get new ledger accessors.",
    "draft": false,
    "pull_request": 4528,
    "label": "clemahieu:encapsulate_ledger_cache",
    "created_at": "2024-03-30T16:17:33Z",
    "built_at": "2024-04-01T09:55:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ccb14afe3b5022716db0ce868af235b8fccd90d0",
    "build_started_at": "2024-04-01T09:29:40Z",
    "run_id": "8506415528"
  },
  {
    "hash": "ccb536437a115340bbc4bee112141673bd55c27f",
    "type": "pull_request",
    "pull_request": 4315,
    "label": "RickiNano:feature/use-std-filesystem-2",
    "created_at": "2023-10-18T20:15:15Z",
    "built_at": "2023-10-18T21:06:45Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ccb536437a115340bbc4bee112141673bd55c27f"
  },
  {
    "hash": "ccc4e4395d761d0d6703056f7fb64cc48d4e41b7",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Fair queuing for request aggregator (#4598)\n\n* Start / stop\r\n\r\n* Constness\r\n\r\n* Use fwd header\r\n\r\n* Return named result for easy verification\r\n\r\n* Fair queuing\r\n\r\n* Fix and remove unneeded tests\r\n\r\n* Config\r\n\r\n* Fix `channel_max_queue` test\r\n\r\n* Use unique ptr",
    "pull_request": "4598",
    "created_at": "2024-05-08T12:10:33Z",
    "built_at": "2024-05-08T13:15:22Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ccc4e4395d761d0d6703056f7fb64cc48d4e41b7",
    "build_started_at": "2024-05-08T12:49:19Z",
    "run_id": "9002109348"
  },
  {
    "hash": "cce0b01f2d4a537839f68617c2de9c00dacdb340",
    "type": "pull_request",
    "pull_request": 4158,
    "label": "clemahieu:bootstrap_ascending_client",
    "created_at": "2023-02-27T20:15:37Z",
    "built_at": "2023-03-05T15:55:03Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:cce0b01f2d4a537839f68617c2de9c00dacdb340"
  },
  {
    "hash": "cceecaec717ce99e9d86ac8ff06b1b31e1790c42",
    "type": "pull_request",
    "pull_request": 4289,
    "label": "clemahieu:lmdb_0_9_31",
    "created_at": "2023-09-21T11:28:11Z",
    "built_at": "2023-09-21T12:21:25Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:cceecaec717ce99e9d86ac8ff06b1b31e1790c42"
  },
  {
    "hash": "ccefffc114c2928e4c1ab8a057e68bee3c6b0b28",
    "type": "pull_request",
    "title": "Node configuration auto updater",
    "author": "RickiNano",
    "body": "This pull request introduces a new command line feature `--update_config` , which updates the nodes current configuration by merging custom settings into the latest configuration template. Custom settings will be uncommented in the new configuration, while default values will be commented.\r\nThis feature simplifies the process for node operators to maintain an up-to-date configuration without manually merging the current configuration with the new one.\r\n\r\nFeatures:\r\n* Updates config file with new entries, tables and documentation\r\n* Removes entries that are no longer referenced in code\r\n* Preserves custom values from current configuration\r\n* Formatted output\r\n\r\nLimitations:\r\n* Currently only works with node configuration file but could easily be extended to rpc an log configs\r\n",
    "draft": false,
    "pull_request": 4579,
    "label": "RickiNano:auto_update_config",
    "created_at": "2024-04-20T07:34:06Z",
    "built_at": "2024-04-24T18:55:09Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ccefffc114c2928e4c1ab8a057e68bee3c6b0b28",
    "build_started_at": "2024-04-24T18:25:24Z",
    "run_id": "8821457129"
  },
  {
    "hash": "cd3f261df3471e7e26b92890542d69ad272746d8",
    "type": "pull_request",
    "title": "Use a dedicated thread for tcp listener",
    "body": "While I'm not aware of any problems with previous implementation, the async way of implementing `tcp_listener` was generally harder to understand and to evolve over time. It was especially problematic when making changes to other aspects of networking code. Given that our connections are long-lived and relatively infrequent, there is very little need for tcp acceptor code to be focused on performance and instead we should prioritize readability and maintainability. This modifies it to instead run on a single, dedicated thread and use blocking IO operations.",
    "draft": false,
    "pull_request": 4523,
    "label": "pwojcikdev:networking-fixes/tcp-listener-2",
    "created_at": "2024-03-25T16:06:32Z",
    "built_at": "2024-04-01T08:56:16Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:cd3f261df3471e7e26b92890542d69ad272746d8",
    "build_started_at": "2024-04-01T08:31:07Z",
    "run_id": "8505862963"
  },
  {
    "hash": "cd411b9820f7756446adff7703bbc83cd8deae4f",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Configurable max_peers_per_ip / subnetwork & related test fixes",
    "pull_request": "4618",
    "created_at": "2024-05-12T21:09:57Z",
    "built_at": "2024-05-14T15:00:52Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:cd411b9820f7756446adff7703bbc83cd8deae4f",
    "build_started_at": "2024-05-14T11:08:37Z",
    "run_id": "9081258968"
  },
  {
    "hash": "cd5b6bd91f9e4245c7802787601829081832c76a",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Pass explicit dependencies to election schedulers",
    "pull_request": "4757",
    "created_at": "2024-10-17T13:13:03Z",
    "built_at": "2024-10-18T21:23:53Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:cd5b6bd91f9e4245c7802787601829081832c76a",
    "build_started_at": "2024-10-18T20:40:42Z",
    "run_id": "11410886624"
  },
  {
    "hash": "cd72cc922594d0dcc6a48c0237086c65d9fe3a1f",
    "type": "commit",
    "created_at": "2023-02-06T21:02:01Z",
    "built_at": "2023-02-15T15:55:57Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:cd72cc922594d0dcc6a48c0237086c65d9fe3a1f"
  },
  {
    "hash": "cd770d7a3aa3a1e1dc3f361d2a92f1cb89f162fb",
    "type": "commit",
    "created_at": "2024-02-19T16:48:36Z",
    "built_at": "2024-02-19T17:23:50Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:cd770d7a3aa3a1e1dc3f361d2a92f1cb89f162fb",
    "build_started_at": "2024-02-19T16:55:39Z",
    "run_id": "7962926033"
  },
  {
    "hash": "cd88390d8ae8f5f4b69507513c650902718e68b7",
    "type": "pull_request",
    "pull_request": 4158,
    "label": "clemahieu:bootstrap_ascending_client",
    "created_at": "2023-02-27T20:15:37Z",
    "built_at": "2023-02-27T21:48:12Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:cd88390d8ae8f5f4b69507513c650902718e68b7"
  },
  {
    "hash": "cdaea9ab9be42ad0bdb2a2b7ea4edb84fdd02061",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Fix network tests",
    "pull_request": "N/A",
    "created_at": "2024-04-29T16:37:20Z",
    "built_at": "2024-05-04T12:03:57Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:cdaea9ab9be42ad0bdb2a2b7ea4edb84fdd02061",
    "build_started_at": "2024-05-04T09:36:39Z",
    "run_id": "8950208322"
  },
  {
    "hash": "cdbed5eaccc5b63207710ac915bb2d551097e7c1",
    "type": "commit",
    "created_at": "2023-03-20T23:27:29Z",
    "built_at": "2023-03-21T00:10:01Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:cdbed5eaccc5b63207710ac915bb2d551097e7c1"
  },
  {
    "hash": "cddc0c357ff53819f102dc7691f25a822034820c",
    "type": "pull_request",
    "pull_request": 4286,
    "label": "clemahieu:nano_store_lib",
    "created_at": "2023-09-19T13:14:01Z",
    "built_at": "2023-09-19T16:07:57Z",
    "build_status": "fail",
    "docker_tag": ""
  },
  {
    "hash": "cde58d5917691c003c5418cc44fe018b3490accd",
    "type": "pull_request",
    "pull_request": 4475,
    "label": "clemahieu:ledger_header_reduction",
    "created_at": "2024-03-10T17:06:04Z",
    "built_at": "2024-03-10T17:41:16Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:cde58d5917691c003c5418cc44fe018b3490accd",
    "build_started_at": "2024-03-10T17:14:02Z",
    "run_id": "8223561393"
  },
  {
    "hash": "ce0956a8a4f654b8eaa42fcc56ceb308da1ce324",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Safe ascending bootstrap",
    "pull_request": "N/A",
    "created_at": "2024-10-02T20:15:37Z",
    "built_at": "2024-10-31T18:08:38Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ce0956a8a4f654b8eaa42fcc56ceb308da1ce324",
    "build_started_at": "2024-10-31T13:47:32Z",
    "run_id": "11617046845"
  },
  {
    "hash": "ce11ced792901a3f7f959008d10d0943b0734ce1",
    "type": "pull_request",
    "pull_request": 4342,
    "label": "RickiNano:configurable-unchecked-blocks",
    "created_at": "2023-11-12T21:33:37Z",
    "built_at": "2024-01-26T15:00:37Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ce11ced792901a3f7f959008d10d0943b0734ce1",
    "build_started_at": "2024-01-26T14:32:30Z",
    "run_id": "7669393019"
  },
  {
    "hash": "ce18686104aa6ab1317172520dc422596d414d50",
    "type": "pull_request",
    "title": "Bounded election buckets with dynamic reprioritization",
    "author": "pwojcikdev",
    "body": "Based on:\r\n- Elections sets (can't find PR, Colin's initial attempt at bucket limiting)\r\n- Bobs bucket vacancy branch https://github.com/nanocurrency/nano-node/compare/develop...gr0vity-dev:nano-node:wip/bucket_vacancy \r\n\r\nbut simpler, more robust and allows for dynamically dropping and scheduling higher priority elections. Also, buckets can be configured to opportunistically use more available space if AEC is underutilized.",
    "draft": false,
    "pull_request": 4626,
    "label": "pwojcikdev:election-bounding-2",
    "created_at": "2024-05-15T16:21:38Z",
    "built_at": "2024-05-15T17:01:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ce18686104aa6ab1317172520dc422596d414d50",
    "build_started_at": "2024-05-15T16:34:40Z",
    "run_id": "9099427606"
  },
  {
    "hash": "ce4ea05407d932e089880709823d2e539a8eebe0",
    "type": "commit",
    "title": "Make nano::ledger::account_balance() const",
    "pull_request": "4553",
    "created_at": "2024-04-12T14:29:24Z",
    "built_at": "2024-04-14T08:11:59Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ce4ea05407d932e089880709823d2e539a8eebe0",
    "build_started_at": "2024-04-14T02:26:53Z",
    "run_id": "8678901709"
  },
  {
    "hash": "ce5250d277780f436c6290983f0a8eeab34ff242",
    "type": "pull_request",
    "title": "Fix ledger_priority.sequential_blocks testcase",
    "author": "gr0vity-dev",
    "body": "I saw this testcase failing on the windows github runner.\r\n\r\nDifferent account chains are not guaranteed to have the same priority timestamp. \r\nThe opening could happen much later than the sending. \r\nIf we add a 1 second delay between processing `send1` and `open1`, the testcase previously always failed.\r\nThe opening timestamp of \"key1 account\" can be equal or greater than the matching send timestamp of \"genesis account\". ",
    "draft": false,
    "pull_request": 4805,
    "label": "gr0vity-dev:prs/fix-ledger_priority-sequential_blocks",
    "created_at": "2024-12-06T18:37:19Z",
    "built_at": "2024-12-06T19:26:32Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ce5250d277780f436c6290983f0a8eeab34ff242",
    "build_started_at": "2024-12-06T18:54:32Z",
    "run_id": "12204259361"
  },
  {
    "hash": "ce5a2f31871f5d0103e03909c877f6762c9561d4",
    "type": "pull_request",
    "title": "migrate_database_lmdb_to_rocksdb improvements",
    "author": "RickiNano",
    "body": "The `migrate_database_lmdb_to_rocksdb` option is running for a very long time with the current ledger size (almost 200 million blocks). On my local machine it took 65 minutes to complete. Nothing is written on screen during this process and users may think the process has stalled.\r\nThis PR adds some progress feedback. One update for each of the 7 tables that are migrated.\r\nIt also adds a simple disk space check to warn users if they might not have enough space to complete the migration.\r\n~~The current converted RocksDb database is 73 GB, and the warning is given if the system has less than 75GB available.~~\r\nThe warning is given based on the size of the LMDB database that is being migrated. The final RocksDb size is approximately 65% of the LMDB space.",
    "draft": false,
    "pull_request": 4647,
    "label": "RickiNano:lmdb-to-rocksdb",
    "created_at": "2024-06-13T10:47:31Z",
    "built_at": "2024-06-14T19:37:48Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ce5a2f31871f5d0103e03909c877f6762c9561d4",
    "build_started_at": "2024-06-14T19:09:07Z",
    "run_id": "9521165283"
  },
  {
    "hash": "ce5ef01d7b6c6df687bef7d06f1f30edcbc4e0f2",
    "type": "commit",
    "created_at": "2023-09-25T13:51:25Z",
    "built_at": "2023-10-09T16:31:58Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ce5ef01d7b6c6df687bef7d06f1f30edcbc4e0f2"
  },
  {
    "hash": "ce757fdd6abf08a6d947d9ebce3f0157aaab4c06",
    "type": "pull_request",
    "pull_request": 4178,
    "label": "thsfs:add_block_publisher_class",
    "created_at": "2023-03-08T20:26:00Z",
    "built_at": "2023-03-08T20:58:42Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ce757fdd6abf08a6d947d9ebce3f0157aaab4c06"
  },
  {
    "hash": "ce7c992083c0794fd4fa2d814e47376049a32e73",
    "type": "pull_request",
    "title": "Bootstrap config tuning",
    "author": "pwojcikdev",
    "body": "This adjusts some of the config values for ascending bootstrap.",
    "draft": false,
    "pull_request": 4698,
    "label": "pwojcikdev:bootstrap-tuning",
    "created_at": "2024-08-08T19:29:16Z",
    "built_at": "2024-08-11T09:57:43Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ce7c992083c0794fd4fa2d814e47376049a32e73",
    "build_started_at": "2024-08-11T09:31:30Z",
    "run_id": "10338707260"
  },
  {
    "hash": "ce97409b5ca85aac1266dd0d1cd47c8c53caf243",
    "type": "pull_request",
    "pull_request": 4156,
    "label": "pwojcikdev:prs/move-socket-namespace",
    "created_at": "2023-02-25T16:59:34Z",
    "built_at": "2023-02-25T17:53:39Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ce97409b5ca85aac1266dd0d1cd47c8c53caf243"
  },
  {
    "hash": "ceadd1170a77f4d909059de3beedae5abf01224e",
    "type": "pull_request",
    "pull_request": 4133,
    "label": "clemahieu:election_occupancy",
    "created_at": "2023-02-15T18:23:49Z",
    "built_at": "2023-02-22T03:27:31Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ceadd1170a77f4d909059de3beedae5abf01224e"
  },
  {
    "hash": "cec9adf98a06579dad2ad63b38e82b49b3c43a13",
    "type": "commit",
    "created_at": "2023-09-18T01:48:24Z",
    "built_at": "2023-09-20T20:10:36Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:cec9adf98a06579dad2ad63b38e82b49b3c43a13"
  },
  {
    "hash": "cef74b94603e62bc4aa9c5de48e895bb81c59fae",
    "type": "pull_request",
    "pull_request": 4375,
    "label": "pwojcikdev:logging-overhaul-10-develop",
    "created_at": "2024-01-19T14:05:43Z",
    "built_at": "2024-01-21T15:48:44Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:cef74b94603e62bc4aa9c5de48e895bb81c59fae",
    "build_started_at": "2024-01-21T15:23:05Z",
    "run_id": "7602139272"
  },
  {
    "hash": "cefc1ee1237cba337352d785060ac90d9b681ccd",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Bounded backlog",
    "pull_request": "4787",
    "created_at": "2024-10-31T11:30:26Z",
    "built_at": "2024-11-29T18:08:57Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:cefc1ee1237cba337352d785060ac90d9b681ccd",
    "build_started_at": "2024-11-29T15:39:54Z",
    "run_id": "12088806332"
  },
  {
    "hash": "cefcbce5e988c67b54ba1a6687733e2f236b1d3f",
    "type": "pull_request",
    "pull_request": 4316,
    "label": "RickiNano:remove-includes",
    "created_at": "2023-10-19T15:38:21Z",
    "built_at": "2023-11-05T20:21:17Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:cefcbce5e988c67b54ba1a6687733e2f236b1d3f",
    "build_started_at": "2023-11-05T19:34:29Z",
    "run_id": "6763344753"
  },
  {
    "hash": "cf109c900a0a4c056ec691ae665aa8669f7ed35b",
    "type": "pull_request",
    "pull_request": 4158,
    "label": "clemahieu:bootstrap_ascending_client",
    "created_at": "2023-02-27T20:15:37Z",
    "built_at": "2023-03-05T17:58:44Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:cf109c900a0a4c056ec691ae665aa8669f7ed35b"
  },
  {
    "hash": "cf119acd8f01111ddb8126165f68da6c228c799e",
    "type": "pull_request",
    "pull_request": 4345,
    "label": "clemahieu:block_checker",
    "created_at": "2023-11-14T12:02:06Z",
    "built_at": "2024-03-14T17:04:35Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-14T16:29:57Z",
    "run_id": "8284072067"
  },
  {
    "hash": "cf267c008a63e46bd4c2692068ed766739f010fa",
    "type": "pull_request",
    "pull_request": 4251,
    "label": "brandon-bb:develop",
    "created_at": "2023-06-23T20:57:59Z",
    "built_at": "2023-06-26T21:19:42Z",
    "build_status": "fail",
    "docker_tag": ""
  },
  {
    "hash": "cf35e5d88879475a8da67504372e636e459e29c3",
    "type": "pull_request",
    "title": "Rework configs for backlog, telemetry and bandwidth limiter",
    "author": "pwojcikdev",
    "body": "This refactors configuration files for backlog, telemetry and bandwidth limiter to use `<component_name>_config` pattern. There are also some smaller improvements that I noticed.",
    "draft": false,
    "pull_request": 4728,
    "label": "pwojcikdev:configs-rework",
    "created_at": "2024-09-11T11:24:13Z",
    "built_at": "2024-09-11T11:59:13Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:cf35e5d88879475a8da67504372e636e459e29c3",
    "build_started_at": "2024-09-11T11:31:00Z",
    "run_id": "10810737303"
  },
  {
    "hash": "cf7e1bcda4d9f013bf8f64970ef259fd87fe12a4",
    "type": "pull_request",
    "pull_request": 4225,
    "label": "clemahieu:rpc_pending_exists_active",
    "created_at": "2023-05-04T23:18:14Z",
    "built_at": "2023-05-04T23:56:23Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:cf7e1bcda4d9f013bf8f64970ef259fd87fe12a4"
  },
  {
    "hash": "cf844c583a8a732fbbffc40ccb59136729d8ef63",
    "type": "commit",
    "created_at": "2024-01-25T23:41:23Z",
    "built_at": "2024-01-31T18:02:01Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:cf844c583a8a732fbbffc40ccb59136729d8ef63",
    "build_started_at": "2024-01-31T16:56:18Z",
    "run_id": "7729573301"
  },
  {
    "hash": "cfc1c14cacc1050ec624e084a0bae43137abffc9",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "IWYU",
    "pull_request": "4808",
    "created_at": "2024-12-10T13:04:54Z",
    "built_at": "2024-12-10T20:11:22Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:cfc1c14cacc1050ec624e084a0bae43137abffc9",
    "build_started_at": "2024-12-10T18:42:47Z",
    "run_id": "12263522222"
  },
  {
    "hash": "cfdcb4f39c182b2fdea3a0f97a30d8314e8349b2",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Move assert to a dedicated header",
    "pull_request": "4773",
    "created_at": "2024-10-27T17:47:59Z",
    "built_at": "2024-11-12T13:45:37Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:cfdcb4f39c182b2fdea3a0f97a30d8314e8349b2",
    "build_started_at": "2024-11-12T12:21:42Z",
    "run_id": "11798096555"
  },
  {
    "hash": "cff1dbde7f8b076001c38dd0eac39b3efcb6b25c",
    "type": "commit",
    "created_at": "2023-03-07T20:45:52Z",
    "built_at": "2023-03-08T17:58:57Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:cff1dbde7f8b076001c38dd0eac39b3efcb6b25c"
  },
  {
    "hash": "cff51c4a219e5116a8d810d4838c63e67b94f416",
    "type": "commit",
    "created_at": "2023-10-08T18:55:19Z",
    "built_at": "2023-10-08T19:35:07Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:cff51c4a219e5116a8d810d4838c63e67b94f416"
  },
  {
    "hash": "d0297fcdaaedd97b0e830c5f0bb975a60ca436fd",
    "type": "pull_request",
    "pull_request": 4314,
    "label": "clemahieu:ledger_file_exception",
    "created_at": "2023-10-16T15:57:18Z",
    "built_at": "2023-10-16T16:41:11Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d0297fcdaaedd97b0e830c5f0bb975a60ca436fd"
  },
  {
    "hash": "d03357c8cbcda1acfadb0a65c95e351402c990a9",
    "type": "pull_request",
    "pull_request": 4250,
    "label": "gr0vity-dev:wip/unified_artifacts_worflow",
    "created_at": "2023-06-22T15:06:28Z",
    "built_at": "2023-07-03T08:01:25Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d03357c8cbcda1acfadb0a65c95e351402c990a9"
  },
  {
    "hash": "d0387effce467e167412dc2cbc036e99a41927bf",
    "type": "commit",
    "created_at": "2023-03-07T21:28:36Z",
    "built_at": "2023-03-07T22:06:42Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d0387effce467e167412dc2cbc036e99a41927bf"
  },
  {
    "hash": "d0418baec63f9eed5c4b4fb48521949dbec89ed1",
    "type": "commit",
    "created_at": "2024-01-10T21:03:04Z",
    "built_at": "2024-01-10T21:37:33Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d0418baec63f9eed5c4b4fb48521949dbec89ed1",
    "build_started_at": "2024-01-10T21:09:32Z",
    "run_id": "7480802443"
  },
  {
    "hash": "d05cf12a4ba16e67745d0e51d1690bc366095028",
    "type": "commit",
    "created_at": "2024-03-24T11:55:45Z",
    "built_at": "2024-03-24T14:14:43Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d05cf12a4ba16e67745d0e51d1690bc366095028",
    "build_started_at": "2024-03-24T12:11:57Z",
    "run_id": "8409177637"
  },
  {
    "hash": "d05fee7addef2577481a96f0b6a3b7e99b94953a",
    "type": "pull_request",
    "pull_request": 4237,
    "label": "clemahieu:scheduler_component",
    "created_at": "2023-05-19T00:10:26Z",
    "built_at": "2023-05-24T12:55:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d05fee7addef2577481a96f0b6a3b7e99b94953a"
  },
  {
    "hash": "d09940f645541ad14173affb3c6773e10b250548",
    "type": "commit",
    "author": "clemahieu",
    "title": "Remove inclusion of vote in common.hpp header.",
    "pull_request": "N/A",
    "created_at": "2024-10-28T21:38:03Z",
    "built_at": "2024-10-31T07:33:08Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-10-31T03:33:18Z",
    "run_id": "11607656861"
  },
  {
    "hash": "d099c96ccecc603edf772c3d0d6143b07320a373",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Rename test file to `bootstrap.cpp`",
    "pull_request": "N/A",
    "created_at": "2024-10-29T16:40:41Z",
    "built_at": "2024-10-31T18:16:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d099c96ccecc603edf772c3d0d6143b07320a373",
    "build_started_at": "2024-10-31T13:47:32Z",
    "run_id": "11617148593"
  },
  {
    "hash": "d0aa62d546e8bd73d88edc16082e5210cd5ccba9",
    "type": "pull_request",
    "pull_request": 4486,
    "label": "clemahieu:ledger_view",
    "created_at": "2024-03-12T14:33:24Z",
    "built_at": "2024-03-15T13:30:31Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-15T11:52:51Z",
    "run_id": "8295661667"
  },
  {
    "hash": "d0bdc6b0514eae741a03f2e8afb4a681370c6c8f",
    "type": "pull_request",
    "pull_request": 4412,
    "label": "pwojcikdev:tracing-4-develop",
    "created_at": "2024-01-30T17:15:41Z",
    "built_at": "2024-01-30T19:04:39Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d0bdc6b0514eae741a03f2e8afb4a681370c6c8f",
    "build_started_at": "2024-01-30T18:36:26Z",
    "run_id": "7715875579"
  },
  {
    "hash": "d0ca8ed0e337b36b08838f20dfe4f7d49d0e07c7",
    "type": "pull_request",
    "title": "Bounded backlog",
    "author": "pwojcikdev",
    "body": "This is ongoing work for bounded backlog. This limits the number of unconfirmed blocks that the node needs to store. The implementation of this mechanism is nontrivial because the node relies heavily on the fact that unconfirmed blocks are present in the ledger.\r\n\r\nDepends on PRs:\r\nhttps://github.com/nanocurrency/nano-node/pull/4758",
    "draft": true,
    "pull_request": 4787,
    "label": "pwojcikdev:bounded-backlog-pr",
    "created_at": "2024-11-18T20:36:19Z",
    "built_at": "2024-11-18T20:59:39Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-11-18T20:40:36Z",
    "run_id": "11900711985"
  },
  {
    "hash": "d0f75882ffb4118d9758ce005fbc25f80956428c",
    "type": "pull_request",
    "title": "Legacy bootstrap throttling",
    "author": "pwojcikdev",
    "body": "This should reduce the load on IO threads caused by legacy bootstrap. \r\n\r\n![image](https://github.com/nanocurrency/nano-node/assets/3044353/bcd891f2-2862-40c1-8d13-31caf7ac49bc)\r\n",
    "draft": false,
    "pull_request": 4669,
    "label": "pwojcikdev:legacy-bootstrap-throttling",
    "created_at": "2024-07-04T14:17:10Z",
    "built_at": "2024-07-04T15:00:22Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d0f75882ffb4118d9758ce005fbc25f80956428c",
    "build_started_at": "2024-07-04T14:34:32Z",
    "run_id": "9796168730"
  },
  {
    "hash": "d12bd4a61a14e5de8822fa87ee99ad08bc01922b",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge pull request #4785 from pwojcikdev/traffic-info\n\nPer traffic type stats",
    "pull_request": "4785",
    "created_at": "2024-11-12T09:45:36Z",
    "built_at": "2024-11-12T10:29:57Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d12bd4a61a14e5de8822fa87ee99ad08bc01922b",
    "build_started_at": "2024-11-12T09:51:50Z",
    "run_id": "11794870420"
  },
  {
    "hash": "d141bbb0a2778139e9a6d012647088fde87cd3bb",
    "type": "pull_request",
    "pull_request": 4496,
    "label": "clemahieu:receivable_iteration",
    "created_at": "2024-03-16T20:04:42Z",
    "built_at": "2024-03-16T23:51:24Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d141bbb0a2778139e9a6d012647088fde87cd3bb",
    "build_started_at": "2024-03-16T23:24:13Z",
    "run_id": "8311201273"
  },
  {
    "hash": "d154ddcddccb071551d032a3e73845a01647862a",
    "type": "pull_request",
    "pull_request": 4118,
    "label": "JerzyStanislawski:refactor_election_vote",
    "created_at": "2023-02-11T17:28:54Z",
    "built_at": "2023-02-11T18:18:43Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d154ddcddccb071551d032a3e73845a01647862a"
  },
  {
    "hash": "d15849eec2a25ceb7c1e1788f09b1d5e3bce9c5c",
    "type": "commit",
    "author": "dsiganos",
    "title": "Introduce disable_activate_successors flag (#4586)\n\nThis flag stops active_transactions from calling\r\nactivate_successors() which is useful for unit testing.",
    "pull_request": "4586",
    "created_at": "2024-04-26T20:59:35Z",
    "built_at": "2024-04-26T21:27:30Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d15849eec2a25ceb7c1e1788f09b1d5e3bce9c5c",
    "build_started_at": "2024-04-26T21:01:42Z",
    "run_id": "8854223060"
  },
  {
    "hash": "d17339c7414ab88d905a5c4b26b9996cbeb52daf",
    "type": "pull_request",
    "pull_request": 4167,
    "label": "clemahieu:block_origin_remove",
    "created_at": "2023-03-03T03:40:11Z",
    "built_at": "2023-03-04T12:00:19Z",
    "build_status": "fail",
    "docker_tag": ""
  },
  {
    "hash": "d18f135a40c53e8ccdc1d8f9f283cee4b4841430",
    "type": "pull_request",
    "pull_request": 4277,
    "label": "clemahieu:start_election_return",
    "created_at": "2023-09-05T10:44:05Z",
    "built_at": "2023-09-05T13:36:19Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d18f135a40c53e8ccdc1d8f9f283cee4b4841430"
  },
  {
    "hash": "d2052cec80d76540776e2f519d25bfe0e0b79c52",
    "type": "commit",
    "created_at": "2024-02-27T11:37:04Z",
    "built_at": "2024-03-06T18:57:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d2052cec80d76540776e2f519d25bfe0e0b79c52",
    "build_started_at": "2024-03-06T17:44:51Z",
    "run_id": "8176435828"
  },
  {
    "hash": "d21bd3cca7b1a48d65987ac5e2267f05c175799d",
    "type": "pull_request",
    "pull_request": 4125,
    "label": "clemahieu:remove_scheduler_confirm_action",
    "created_at": "2023-02-14T12:15:08Z",
    "built_at": "2023-02-14T13:06:02Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d21bd3cca7b1a48d65987ac5e2267f05c175799d"
  },
  {
    "hash": "d21bea2a72414b1695f0789ba5210fac3e145c8b",
    "type": "pull_request",
    "pull_request": 4218,
    "label": "clemahieu:election_confirmed_race",
    "created_at": "2023-04-24T14:31:20Z",
    "built_at": "2023-04-24T15:18:56Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d21bea2a72414b1695f0789ba5210fac3e145c8b"
  },
  {
    "hash": "d22b69c934e25ceb24680ba7480132feba172350",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Activate accounts with freshly processed blocks",
    "pull_request": "4757",
    "created_at": "2024-10-17T15:13:58Z",
    "built_at": "2024-10-18T21:43:02Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d22b69c934e25ceb24680ba7480132feba172350",
    "build_started_at": "2024-10-18T20:40:42Z",
    "run_id": "11411071146"
  },
  {
    "hash": "d22bb9535de8471f1cdeae626bef9475e9ce8bce",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Propagate invalid responses to peer scoring",
    "pull_request": "4786",
    "created_at": "2024-11-04T20:19:58Z",
    "built_at": "2024-11-23T05:11:18Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d22bb9535de8471f1cdeae626bef9475e9ce8bce",
    "build_started_at": "2024-11-22T23:40:48Z",
    "run_id": "11984210897"
  },
  {
    "hash": "d241751868e8153c327076c4fe83748b0cf66f7f",
    "type": "commit",
    "author": "clemahieu",
    "title": "Remove election_behavior argument for manual scheduler insertion.\n\nThis value was never changed from default.",
    "pull_request": "4593",
    "created_at": "2024-05-09T14:41:49Z",
    "built_at": "2024-05-13T11:19:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d241751868e8153c327076c4fe83748b0cf66f7f",
    "build_started_at": "2024-05-13T10:46:03Z",
    "run_id": "9061642519"
  },
  {
    "hash": "d24699313b681c281393abe1260a1eb98920a8e1",
    "type": "pull_request",
    "pull_request": 4133,
    "label": "clemahieu:election_occupancy",
    "created_at": "2023-02-15T18:23:49Z",
    "built_at": "2023-05-17T18:15:46Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d24699313b681c281393abe1260a1eb98920a8e1"
  },
  {
    "hash": "d283c100ce42fd4dae6d86f2f039cdaef9ae2860",
    "type": "pull_request",
    "title": "Use deque rather than vector to support large initialization sequences",
    "author": "clemahieu",
    "body": null,
    "draft": false,
    "pull_request": 4641,
    "label": "clemahieu:ledger_initialization_deque",
    "created_at": "2024-05-23T12:06:56Z",
    "built_at": "2024-05-23T13:12:33Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d283c100ce42fd4dae6d86f2f039cdaef9ae2860",
    "build_started_at": "2024-05-23T12:23:50Z",
    "run_id": "9208245729"
  },
  {
    "hash": "d29032a839601ae1143891800447046304c4975b",
    "type": "commit",
    "created_at": "2023-09-05T14:41:16Z",
    "built_at": "2023-09-05T15:35:49Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d29032a839601ae1143891800447046304c4975b"
  },
  {
    "hash": "d2e6f97283f1df927e801717917c0441e79236d8",
    "type": "commit",
    "created_at": "2024-03-21T15:30:21Z",
    "built_at": "2024-03-21T17:12:32Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d2e6f97283f1df927e801717917c0441e79236d8",
    "build_started_at": "2024-03-21T15:39:06Z",
    "run_id": "8377740510"
  },
  {
    "hash": "d30b84867090fa15a96799fa91edeb89f1673efc",
    "type": "pull_request",
    "title": "Frontier scan client",
    "author": "pwojcikdev",
    "body": "This implements frontier scan client for the new bootstrapper. It should be the last missing piece blocking removal of legacy bootstrap code.\r\n\r\nBuilds on top of https://github.com/nanocurrency/nano-node/pull/4734\r\n\r\nHere are some initial test results from @gr0vity-dev showing that there are no obvious problems.\r\n\r\n![image](https://github.com/user-attachments/assets/50ebf35e-aedc-4cdf-a1ea-eea0c699e332)\r\n",
    "draft": false,
    "pull_request": 4739,
    "label": "pwojcikdev:frontier-scan-5",
    "created_at": "2024-09-28T13:10:19Z",
    "built_at": "2024-09-28T13:56:33Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d30b84867090fa15a96799fa91edeb89f1673efc",
    "build_started_at": "2024-09-28T13:18:24Z",
    "run_id": "11084323030"
  },
  {
    "hash": "d33803e0a37d038fa7a4f8e39bbc5d8a7ecccc0b",
    "type": "commit",
    "created_at": "2023-06-21T16:43:10Z",
    "built_at": "2023-06-21T18:36:12Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d33803e0a37d038fa7a4f8e39bbc5d8a7ecccc0b"
  },
  {
    "hash": "d36a98ddb0fb6da51e6f5cde4c9e2a662204efca",
    "type": "pull_request",
    "title": "Move recently_cemented_cache and recently_confirmed_cache to their own files.",
    "author": "clemahieu",
    "body": null,
    "draft": false,
    "pull_request": 4606,
    "label": "clemahieu:separate_recently_cemented_confirmed",
    "created_at": "2024-05-07T13:44:16Z",
    "built_at": "2024-05-07T16:21:45Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d36a98ddb0fb6da51e6f5cde4c9e2a662204efca",
    "build_started_at": "2024-05-07T15:35:26Z",
    "run_id": "8988421093"
  },
  {
    "hash": "d36d59285e9ddc0d8dafa0a1ef38412f457ee274",
    "type": "pull_request",
    "pull_request": 4480,
    "label": "clemahieu:remove_pragma_pending",
    "created_at": "2024-03-11T23:23:26Z",
    "built_at": "2024-03-11T23:54:21Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d36d59285e9ddc0d8dafa0a1ef38412f457ee274",
    "build_started_at": "2024-03-11T23:29:17Z",
    "run_id": "8241117277"
  },
  {
    "hash": "d374ccfed47df4fe249ac71c59b20ce8d47d649a",
    "type": "pull_request",
    "pull_request": 3727,
    "label": "clemahieu:block_pipeline",
    "created_at": "2022-02-09T15:28:27Z",
    "built_at": "2023-02-08T17:53:09Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d374ccfed47df4fe249ac71c59b20ce8d47d649a"
  },
  {
    "hash": "d3b180a2c5b59c62cde4134de09a8c5fb0d14a69",
    "type": "commit",
    "author": "homebot",
    "title": "Make election behaviour mutable",
    "pull_request": "4799",
    "created_at": "2024-12-02T21:32:22Z",
    "built_at": "2024-12-04T11:43:35Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d3b180a2c5b59c62cde4134de09a8c5fb0d14a69",
    "build_started_at": "2024-12-04T10:33:56Z",
    "run_id": "12158555058"
  },
  {
    "hash": "d3db4bd35833d0e0ad2e4b068823fdad6056f616",
    "type": "pull_request",
    "pull_request": 4173,
    "label": "clemahieu:flatbuffer_version_bump",
    "created_at": "2023-03-06T11:18:55Z",
    "built_at": "2023-03-06T11:52:37Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d3db4bd35833d0e0ad2e4b068823fdad6056f616"
  },
  {
    "hash": "d3fcc4dcc6ebbf17338ce44237b0dbf2906f7be7",
    "type": "commit",
    "created_at": "2023-04-17T10:41:26Z",
    "built_at": "2023-04-17T11:15:17Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d3fcc4dcc6ebbf17338ce44237b0dbf2906f7be7"
  },
  {
    "hash": "d40f6d9358c632c4a017105a5af71f86d8487b15",
    "type": "pull_request",
    "pull_request": 4440,
    "label": "pwojcikdev:cleanup-send-confirm-reqs",
    "created_at": "2024-02-19T15:11:24Z",
    "built_at": "2024-02-19T15:45:39Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d40f6d9358c632c4a017105a5af71f86d8487b15",
    "build_started_at": "2024-02-19T15:20:56Z",
    "run_id": "7961795427"
  },
  {
    "hash": "d411cc7c6eb32f5e477e5ef1f888c2c7398521eb",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Fix purge_dead_channel tests",
    "pull_request": "N/A",
    "created_at": "2024-04-15T19:14:23Z",
    "built_at": "2024-05-04T12:10:29Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d411cc7c6eb32f5e477e5ef1f888c2c7398521eb",
    "build_started_at": "2024-05-04T09:36:39Z",
    "run_id": "8950233537"
  },
  {
    "hash": "d4455e4ca20f2adb022712411a6edec861ecd1fb",
    "type": "pull_request",
    "title": "Various cleanups to store classes",
    "author": "clemahieu",
    "body": "Use unqualified names and type inference when possible.\r\n\r\nAdd type aliases for iterators in store classes.\r\n\r\nRename store/final.hpp to store/final_vote.hpp to match names in lmdb and rocksdb backend.",
    "draft": false,
    "pull_request": 4760,
    "label": "clemahieu:store_cleanup",
    "created_at": "2024-10-20T20:16:30Z",
    "built_at": "2024-10-20T21:15:41Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-10-20T20:59:35Z",
    "run_id": "11429567223"
  },
  {
    "hash": "d4578911c5fa116f711c0ec46588de97151e2366",
    "type": "pull_request",
    "title": "Make election behavior mutable to support dynamic behaviour transition",
    "author": "gr0vity-dev",
    "body": "Problem:\r\n- Elections are currently immutable and can't be transitioned to priority status\r\n- Causing delays for optimistic elections rescheduled by priority scheduler as the next Vote broadcast is fixed to 15-second intervals. (by `network.vote_broadcast_interval`)\r\n\r\nChanges:\r\n- Modifies election behavior to be mutable, allowing elections (optimistic/hinted/...) to be transitioned to priority status\r\n- Added ability to trigger immediate vote broadcasts on transition without waiting for the next 15-second round\r\n\r\nBenefits:\r\n- It would allow for more aggressive use of optimistic elections (to narrow the gap between checked and cemented during bootstrapping) \r\n  - currently configured to accounts with gap_threshold of 32 could be reduced to 4\r\n- Maintain quick response times for live traffic by allowing election behavior changes.",
    "draft": false,
    "pull_request": 4799,
    "label": "gr0vity-dev:prs/upgrade_elections",
    "created_at": "2024-11-30T09:50:16Z",
    "built_at": "2024-12-03T08:26:44Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d4578911c5fa116f711c0ec46588de97151e2366",
    "build_started_at": "2024-12-03T07:59:44Z",
    "run_id": "12134904850"
  },
  {
    "hash": "d45947947b697510e24d33634c67a4303628da63",
    "type": "pull_request",
    "pull_request": 4167,
    "label": "clemahieu:block_origin_remove",
    "created_at": "2023-03-03T03:40:11Z",
    "built_at": "2023-03-04T14:05:19Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d45947947b697510e24d33634c67a4303628da63"
  },
  {
    "hash": "d4611d0e27c085d48a57058396f8a567e56ba113",
    "type": "pull_request",
    "pull_request": 4149,
    "label": "clemahieu:active_transaction_stats",
    "created_at": "2023-02-22T18:00:16Z",
    "built_at": "2023-02-22T19:13:22Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d4611d0e27c085d48a57058396f8a567e56ba113"
  },
  {
    "hash": "d47ce4b7ba8438b7de0839d9662b0f73b15e13e1",
    "type": "pull_request",
    "pull_request": 4383,
    "label": "dsiganos:fix_bootstrap_unit_tests",
    "created_at": "2024-01-21T13:11:59Z",
    "built_at": "2024-01-23T04:44:11Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d47ce4b7ba8438b7de0839d9662b0f73b15e13e1",
    "build_started_at": "2024-01-23T04:19:05Z",
    "run_id": "7620977754"
  },
  {
    "hash": "d484daca25881716f408fdf2f0ca1e415c5f6067",
    "type": "pull_request",
    "title": "Multithreaded vote processor",
    "author": "pwojcikdev",
    "body": "Changes vote processor to use multiple threads. While processing of votes inside the election container is still done under exclusive lock, this should help amortize time spent checking vote signatures.",
    "draft": false,
    "pull_request": 4600,
    "label": "pwojcikdev:vote-processor-threads",
    "created_at": "2024-05-03T11:36:29Z",
    "built_at": "2024-05-04T22:15:29Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d484daca25881716f408fdf2f0ca1e415c5f6067",
    "build_started_at": "2024-05-04T21:50:21Z",
    "run_id": "8953469158"
  },
  {
    "hash": "d49240816ca0117ac895d87eec2722e6b9f5d49a",
    "type": "commit",
    "created_at": "2023-03-08T10:57:11Z",
    "built_at": "2023-03-08T18:07:16Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d49240816ca0117ac895d87eec2722e6b9f5d49a"
  },
  {
    "hash": "d49a3508b19d0c6880d7fa13c027fe9472388b5e",
    "type": "pull_request",
    "pull_request": 4212,
    "label": "clemahieu:bootstrap_ascending_locking",
    "created_at": "2023-04-05T17:34:52Z",
    "built_at": "2023-04-05T18:06:36Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d49a3508b19d0c6880d7fa13c027fe9472388b5e"
  },
  {
    "hash": "d4a7886506a570a224885658a296f578e9297584",
    "type": "pull_request",
    "title": "Redesign the priority scheduler to maintain a 1-to-1 link with running elections",
    "author": "clemahieu",
    "body": "This change appropriately prioritises elections by bucket and then by LRU account. Overfilled buckets have the lowest priority block election cancelled and rolled back.",
    "draft": true,
    "pull_request": 4593,
    "label": "clemahieu:priority_limiter",
    "created_at": "2024-04-30T12:53:50Z",
    "built_at": "2024-05-08T12:17:01Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d4a7886506a570a224885658a296f578e9297584",
    "build_started_at": "2024-05-08T11:50:34Z",
    "run_id": "9001299070"
  },
  {
    "hash": "d4cac87a248d9732dd07a257571f37912bc0b88d",
    "type": "pull_request",
    "title": "Rework `collect_container_info (..)` functions",
    "author": "pwojcikdev",
    "body": "This simplifies how container info functionality is implemented for node components, avoiding unnecessary and annoying boilerplate.\r\n\r\nPreviously:\r\n```\r\nstd::unique_ptr<nano::container_info_component> nano::block_processor::collect_container_info (std::string const & name)\r\n{\r\n\tnano::lock_guard<nano::mutex> guard{ mutex };\r\n\r\n\tauto composite = std::make_unique<container_info_composite> (name);\r\n\tcomposite->add_component (std::make_unique<container_info_leaf> (container_info_entry{ \"blocks\", queue.size (), 0 }));\r\n\tcomposite->add_component (std::make_unique<container_info_leaf> (container_info_entry{ \"forced\", queue.size ({ nano::block_source::forced }), 0 }));\r\n\tcomposite->add_component (queue.collect_container_info (\"queue\"));\r\n\treturn composite;\r\n}\r\n```\r\n\r\n\r\nNow:\r\n```\r\nnano::container_info nano::block_processor::container_info () const\r\n{\r\n\tnano::lock_guard<nano::mutex> guard{ mutex };\r\n\r\n\tnano::container_info info;\r\n\tinfo.put (\"blocks\", queue.size ());\r\n\tinfo.put (\"forced\", queue.size ({ nano::block_source::forced }));\r\n\tinfo.add (\"queue\", queue.container_info ());\r\n\treturn info;\r\n}\r\n```\r\n",
    "draft": false,
    "pull_request": 4736,
    "label": "pwojcikdev:container-infos-5",
    "created_at": "2024-09-24T19:43:06Z",
    "built_at": "2024-09-24T20:10:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d4cac87a248d9732dd07a257571f37912bc0b88d",
    "build_started_at": "2024-09-24T19:44:00Z",
    "run_id": "11020809435"
  },
  {
    "hash": "d4cbf1eaf3b1f95629761976debdf0d65006f78d",
    "type": "commit",
    "created_at": "2024-03-07T00:32:00Z",
    "built_at": "2024-03-07T14:18:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d4cbf1eaf3b1f95629761976debdf0d65006f78d",
    "build_started_at": "2024-03-07T13:21:35Z",
    "run_id": "8188836572"
  },
  {
    "hash": "d4f3f430b736e3e75523cb0c68eb7a9b9ae4c808",
    "type": "pull_request",
    "pull_request": 4105,
    "label": "thsfs:udp-removal",
    "created_at": "2023-02-06T21:19:57Z",
    "built_at": "2023-02-09T21:54:40Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d4f3f430b736e3e75523cb0c68eb7a9b9ae4c808"
  },
  {
    "hash": "d4f88073164a49feb2e13686454ec215cd2d6aa4",
    "type": "pull_request",
    "title": "Redesign the priority scheduler to maintain a 1-to-1 link with running elections",
    "author": "clemahieu",
    "body": "This change appropriately prioritises elections by bucket and then by LRU account. Overfilled buckets have the lowest priority block election cancelled and rolled back.",
    "draft": true,
    "pull_request": 4593,
    "label": "clemahieu:priority_limiter",
    "created_at": "2024-04-30T12:53:50Z",
    "built_at": "2024-05-10T10:52:15Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d4f88073164a49feb2e13686454ec215cd2d6aa4",
    "build_started_at": "2024-05-10T10:26:14Z",
    "run_id": "9030880822"
  },
  {
    "hash": "d4ff55bff7582c57cfa62fa4c522dd47d81ff015",
    "type": "commit",
    "author": "clemahieu",
    "title": "Fix negative-wraparound issue when converting size_t to ptrdiff_t which is used by std::views::take.\n\nThis issue was flagged by VisualStudio debug asserts",
    "pull_request": "4719",
    "created_at": "2024-09-03T17:23:07Z",
    "built_at": "2024-09-05T09:14:00Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d4ff55bff7582c57cfa62fa4c522dd47d81ff015",
    "build_started_at": "2024-09-05T08:19:09Z",
    "run_id": "10717003129"
  },
  {
    "hash": "d54258102cca2f8876b636b5a49c3dbf3e9565d8",
    "type": "commit",
    "author": "clemahieu",
    "title": "Renaming file \"final\" to \"final_vote\".",
    "pull_request": "4760",
    "created_at": "2024-10-10T12:37:08Z",
    "built_at": "2024-10-21T08:07:13Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d54258102cca2f8876b636b5a49c3dbf3e9565d8",
    "build_started_at": "2024-10-21T07:31:42Z",
    "run_id": "11435454402"
  },
  {
    "hash": "d54e3d99156b6cf56f118f9b4886b4723d4e1a32",
    "type": "commit",
    "author": "clemahieu",
    "title": "Rename nano/common.hpp to nano/endpoint.hpp and extract endpoint_templ.hpp template implementation file.",
    "pull_request": "N/A",
    "created_at": "2024-10-27T23:41:52Z",
    "built_at": "2024-10-31T07:57:01Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d54e3d99156b6cf56f118f9b4886b4723d4e1a32",
    "build_started_at": "2024-10-31T03:33:18Z",
    "run_id": "11607807168"
  },
  {
    "hash": "d55445bedadd6b7f87d726942d714cb9ea1a9387",
    "type": "pull_request",
    "pull_request": 4345,
    "label": "clemahieu:block_checker",
    "created_at": "2023-11-14T12:02:06Z",
    "built_at": "2024-02-20T14:35:19Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d55445bedadd6b7f87d726942d714cb9ea1a9387",
    "build_started_at": "2024-02-20T14:09:01Z",
    "run_id": "7974792127"
  },
  {
    "hash": "d556a3f78547b467c6f3546c409a31da9fbc3fe8",
    "type": "pull_request",
    "title": "Incremental backoff for `local_block_broadcaster`",
    "author": "pwojcikdev",
    "body": "This implements incremental backoff for block rebroadcasting. Previously block rebroadcasts happened every 60 seconds. This changes it, so that early on rebroadcasts happen more frequently, with 3 second interval increase. Ie. first rebroadcast happens after 3 seconds, second after 9, third after 18 etc.\r\n\r\nAdditionally there are improvements that were necessary to implement the above: avoiding unnecessary locking and config cleanup.",
    "draft": false,
    "pull_request": 4662,
    "label": "pwojcikdev:aggressive-block-broadcasts",
    "created_at": "2024-06-29T16:22:17Z",
    "built_at": "2024-06-29T17:02:31Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d556a3f78547b467c6f3546c409a31da9fbc3fe8",
    "build_started_at": "2024-06-29T16:35:22Z",
    "run_id": "9725510909"
  },
  {
    "hash": "d570e645fa75e20be43069af4aced47d38360feb",
    "type": "commit",
    "created_at": "2023-05-18T18:57:38Z",
    "built_at": "2023-05-18T19:34:42Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d570e645fa75e20be43069af4aced47d38360feb"
  },
  {
    "hash": "d5809d0bac99c79c2a65e17a086600ea0b12d0fa",
    "type": "pull_request",
    "title": "Max election age precision",
    "body": "`max_election_age` is currently being casted as `std::chrono::seconds` which causes the value to be rounded to nearest second. This pr changes it to use `double` and returns the value with 2 decimals.\r\nIt's unfortunate that I did not notice this issue in the original PR.\r\nThe unit test is also updated to test that both election age values are greater than zero. On my machine they are 0.09 seconds during unit test.\r\nI also implemented the syntax Colin suggested for `oldest_election_start` to avoid the if statement",
    "draft": false,
    "pull_request": 4549,
    "label": "RickiNano:max-age-decimals",
    "created_at": "2024-04-10T06:10:14Z",
    "built_at": "2024-04-10T08:14:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d5809d0bac99c79c2a65e17a086600ea0b12d0fa",
    "build_started_at": "2024-04-10T07:47:28Z",
    "run_id": "8627766747"
  },
  {
    "hash": "d58316451abd507a5a328ffc024651fa8a129ba2",
    "type": "commit",
    "created_at": "2024-03-16T19:24:17Z",
    "built_at": "2024-03-18T19:02:58Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d58316451abd507a5a328ffc024651fa8a129ba2",
    "build_started_at": "2024-03-18T16:48:08Z",
    "run_id": "8330437043"
  },
  {
    "hash": "d590edf8718a487b2ff98a3122988d4705b77093",
    "type": "pull_request",
    "pull_request": 4160,
    "label": "thsfs:inproc_channel_with_message_desserializer",
    "created_at": "2023-02-27T20:25:02Z",
    "built_at": "2023-02-27T21:15:34Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d590edf8718a487b2ff98a3122988d4705b77093"
  },
  {
    "hash": "d59565539206158076ab043042b1f8e86cb0e2c9",
    "type": "commit",
    "created_at": "2024-03-11T12:52:29Z",
    "built_at": "2024-03-11T13:24:53Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d59565539206158076ab043042b1f8e86cb0e2c9",
    "build_started_at": "2024-03-11T12:56:51Z",
    "run_id": "8233169756"
  },
  {
    "hash": "d5abebb83edc0ba56e7f5a70c6d691f05a572f72",
    "type": "commit",
    "created_at": "2023-09-12T16:53:05Z",
    "built_at": "2023-09-13T15:47:22Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d5abebb83edc0ba56e7f5a70c6d691f05a572f72"
  },
  {
    "hash": "d5bf9a2573a613f5b5e454cbbca023b9fdb6ce96",
    "type": "commit",
    "created_at": "2024-03-08T20:13:58Z",
    "built_at": null,
    "build_status": "building",
    "docker_tag": null,
    "build_started_at": "2024-03-08T20:19:22Z",
    "run_id": "8208601453"
  },
  {
    "hash": "d5e863874b72e1e53af1593efc30a605e6a9cc70",
    "type": "pull_request",
    "pull_request": 4217,
    "label": "pwojcikdev:backtrace-restore",
    "created_at": "2023-04-21T12:56:54Z",
    "built_at": "2023-04-21T13:38:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d5e863874b72e1e53af1593efc30a605e6a9cc70"
  },
  {
    "hash": "d61ea9f4c7d8966665eeab9bce78963c76eb3e8c",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Make functions non-const",
    "pull_request": "4713",
    "created_at": "2024-08-22T15:10:37Z",
    "built_at": "2024-08-27T17:41:13Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d61ea9f4c7d8966665eeab9bce78963c76eb3e8c",
    "build_started_at": "2024-08-27T15:42:11Z",
    "run_id": "10582752590"
  },
  {
    "hash": "d63dd09692ad4800b57b54e78ef0fd5ddc5833f6",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge pull request #4787 from pwojcikdev/bounded-backlog-pr\n\nBounded backlog",
    "pull_request": "4787",
    "created_at": "2024-11-29T15:32:35Z",
    "built_at": "2024-11-29T18:14:13Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d63dd09692ad4800b57b54e78ef0fd5ddc5833f6",
    "build_started_at": "2024-11-29T15:39:54Z",
    "run_id": "12088872876"
  },
  {
    "hash": "d667f118d3506edf950e4b0b94de5aa40a0c52f6",
    "type": "pull_request",
    "title": "Fix `tcp_socket::type()` race",
    "author": "pwojcikdev",
    "body": "```\r\n WARNING: ThreadSanitizer: data race (pid=23151)\r\n    Read of size 4 at 0x00011479510c by thread T122075 (mutexes: write M0):\r\n      #0 nano::transport::tcp_socket::type() const tcp_socket.hpp:116 (core_test:arm64+0x10163c70c)\r\n      #1 nano::transport::tcp_socket::is_bootstrap_connection() const tcp_socket.hpp:132 (core_test:arm64+0x10163c86c)\r\n      #2 auto nano::transport::tcp_listener::bootstrap_count() const::$_7::operator()<nano::transport::tcp_listener::connection>(nano::transport::tcp_listener::connection const&) const tcp_listener.cpp:534 (core_test:arm64+0x10163c790)\r\n      #3 std::__1::iterator_traits<std::__1::__list_const_iterator<nano::transport::tcp_listener::connection, void*>>::difference_type std::__1::count_if[abi:ue170006]<std::__1::__list_const_iterator<nano::transport::tcp_listener::connection, void*>, nano::transport::tcp_listener::bootstrap_count() const::$_7>(std::__1::__list_const_iterator<nano::transport::tcp_listener::connection, void*>, std::__1::__list_const_iterator<nano::transport::tcp_listener::connection, void*>, nano::transport::tcp_listener::bootstrap_count() const::$_7) count_if.h:28 (core_test:arm64+0x10163943c)\r\n      #4 nano::transport::tcp_listener::bootstrap_count() const tcp_listener.cpp:531 (core_test:arm64+0x10163935c)\r\n      #5 nano::transport::tcp_server::to_bootstrap_connection() tcp_server.cpp:647 (core_test:arm64+0x10167e988)\r\n      #6 nano::transport::tcp_server::process_message(std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>) tcp_server.cpp:213 (core_test:arm64+0x10167e138)\r\n      #7 nano::transport::tcp_server::received_message(std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>) tcp_server.cpp:113 (core_test:arm64+0x10167dad0)\r\n      #8 nano::transport::tcp_server::receive_message()::$_1::operator()(boost::system::error_code, std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>) const tcp_server.cpp:97 (core_test:arm64+0x101689658)\r\n      #9 decltype(std::declval<nano::transport::tcp_server::receive_message()::$_1&>()(std::declval<boost::system::error_code>(), std::declval<std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>>())) std::__1::__invoke[abi:ue170006]<nano::transport::tcp_server::receive_message()::$_1&, boost::system::error_code, std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>>(nano::transport::tcp_server::receive_message()::$_1&, boost::system::error_code&&, std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>&&) invoke.h:340 (core_test:arm64+0x1016893f4)\r\n      #10 void std::__1::__invoke_void_return_wrapper<void, true>::__call[abi:ue170006]<nano::transport::tcp_server::receive_message()::$_1&, boost::system::error_code, std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>>(nano::transport::tcp_server::receive_message()::$_1&, boost::system::error_code&&, std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>&&) invoke.h:415 (core_test:arm64+0x10168930c)\r\n      #11 std::__1::__function::__alloc_func<nano::transport::tcp_server::receive_message()::$_1, std::__1::allocator<nano::transport::tcp_server::receive_message()::$_1>, void (boost::system::error_code, std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>)>::operator()[abi:ue170006](boost::system::error_code&&, std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>&&) function.h:193 (core_test:arm64+0x101689298)\r\n      #12 std::__1::__function::__func<nano::transport::tcp_server::receive_message()::$_1, std::__1::allocator<nano::transport::tcp_server::receive_message()::$_1>, void (boost::system::error_code, std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>)>::operator()(boost::system::error_code&&, std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>&&) function.h:364 (core_test:arm64+0x101686e40)\r\n      #13 std::__1::__function::__value_func<void (boost::system::error_code, std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>)>::operator()[abi:ue170006](boost::system::error_code&&, std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>&&) const function.h:518 (core_test:arm64+0x1015f5d4c)\r\n      #14 std::__1::function<void (boost::system::error_code, std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>)>::operator()(boost::system::error_code, std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>) const function.h:1169 (core_test:arm64+0x1015f082c)\r\n      #15 nano::transport::message_deserializer::received_message(nano::message_header, unsigned long, std::__1::function<void (boost::system::error_code, std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>)> const&&) message_deserializer.cpp:110 (core_test:arm64+0x1015f0a20)\r\n      #16 nano::transport::message_deserializer::received_header(std::__1::function<void (boost::system::error_code, std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>)> const&&)::$_1::operator()(boost::system::error_code const&, unsigned long) const message_deserializer.cpp:98 (core_test:arm64+0x1015fcd70)\r\n      #17 decltype(std::declval<nano::transport::message_deserializer::received_header(std::__1::function<void (boost::system::error_code, std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>)> const&&)::$_1&>()(std::declval<boost::system::error_code const&>(), std::declval<unsigned long>())) std::__1::__invoke[abi:ue170006]<nano::transport::message_deserializer::received_header(std::__1::function<void (boost::system::error_code, std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>)> const&&)::$_1&, boost::system::error_code const&, unsigned long>(nano::transport::message_deserializer::received_header(std::__1::function<void (boost::system::error_code, std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>)> const&&)::$_1&, boost::system::error_code const&, unsigned long&&) invoke.h:340 (core_test:arm64+0x1015fcbb0)\r\n      #18 void std::__1::__invoke_void_return_wrapper<void, true>::__call[abi:ue170006]<nano::transport::message_deserializer::received_header(std::__1::function<void (boost::system::error_code, std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>)> const&&)::$_1&, boost::system::error_code const&, unsigned long>(nano::transport::message_deserializer::received_header(std::__1::function<void (boost::system::error_code, std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>)> const&&)::$_1&, boost::system::error_code const&, unsigned long&&) invoke.h:415 (core_test:arm64+0x1015fcad4)\r\n      #19 std::__1::__function::__alloc_func<nano::transport::message_deserializer::received_header(std::__1::function<void (boost::system::error_code, std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>)> const&&)::$_1, std::__1::allocator<nano::transport::message_deserializer::received_header(std::__1::function<void (boost::system::error_code, std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>)> const&&)::$_1>, void (boost::system::error_code const&, unsigned long)>::operator()[abi:ue170006](boost::system::error_code const&, unsigned long&&) function.h:193 (core_test:arm64+0x1015fca60)\r\n      #20 std::__1::__function::__func<nano::transport::message_deserializer::received_header(std::__1::function<void (boost::system::error_code, std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>)> const&&)::$_1, std::__1::allocator<nano::transport::message_deserializer::received_header(std::__1::function<void (boost::system::error_code, std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>)> const&&)::$_1>, void (boost::system::error_code const&, unsigned long)>::operator()(boost::system::error_code const&, unsigned long&&) function.h:364 (core_test:arm64+0x1015fa894)\r\n      #21 std::__1::__function::__value_func<void (boost::system::error_code const&, unsigned long)>::operator()[abi:ue170006](boost::system::error_code const&, unsigned long&&) const function.h:518 (core_test:arm64+0x100678200)\r\n      #22 std::__1::function<void (boost::system::error_code const&, unsigned long)>::operator()(boost::system::error_code const&, unsigned long) const function.h:1169 (core_test:arm64+0x1006770bc)\r\n      #23 nano::transport::tcp_socket::read_impl(std::__1::shared_ptr<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> const&, unsigned long, std::__1::function<void (boost::system::error_code const&, unsigned long)>)::$_7::operator()(boost::system::error_code const&, unsigned long) const tcp_socket.cpp:343 (core_test:arm64+0x1016c0a00)\r\n      #24 decltype(std::declval<nano::transport::tcp_socket::read_impl(std::__1::shared_ptr<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> const&, unsigned long, std::__1::function<void (boost::system::error_code const&, unsigned long)>)::$_7&>()(std::declval<boost::system::error_code const&>(), std::declval<unsigned long>())) std::__1::__invoke[abi:ue170006]<nano::transport::tcp_socket::read_impl(std::__1::shared_ptr<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> const&, unsigned long, std::__1::function<void (boost::system::error_code const&, unsigned long)>)::$_7&, boost::system::error_code const&, unsigned long>(nano::transport::tcp_socket::read_impl(std::__1::shared_ptr<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> const&, unsigned long, std::__1::function<void (boost::system::error_code const&, unsigned long)>)::$_7&, boost::system::error_code const&, unsigned long&&) invoke.h:340 (core_test:arm64+0x1016c0958)\r\n      #25 void std::__1::__invoke_void_return_wrapper<void, true>::__call[abi:ue170006]<nano::transport::tcp_socket::read_impl(std::__1::shared_ptr<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> const&, unsigned long, std::__1::function<void (boost::system::error_code const&, unsigned long)>)::$_7&, boost::system::error_code const&, unsigned long>(nano::transport::tcp_socket::read_impl(std::__1::shared_ptr<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> const&, unsigned long, std::__1::function<void (boost::system::error_code const&, unsigned long)>)::$_7&, boost::system::error_code const&, unsigned long&&) invoke.h:415 (core_test:arm64+0x1016c087c)\r\n      #26 std::__1::__function::__alloc_func<nano::transport::tcp_socket::read_impl(std::__1::shared_ptr<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> const&, unsigned long, std::__1::function<void (boost::system::error_code const&, unsigned long)>)::$_7, std::__1::allocator<nano::transport::tcp_socket::read_impl(std::__1::shared_ptr<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> const&, unsigned long, std::__1::function<void (boost::system::error_code const&, unsigned long)>)::$_7>, void (boost::system::error_code const&, unsigned long)>::operator()[abi:ue170006](boost::system::error_code const&, unsigned long&&) function.h:193 (core_test:arm64+0x1016c0808)\r\n      #27 std::__1::__function::__func<nano::transport::tcp_socket::read_impl(std::__1::shared_ptr<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> const&, unsigned long, std::__1::function<void (boost::system::error_code const&, unsigned long)>)::$_7, std::__1::allocator<nano::transport::tcp_socket::read_impl(std::__1::shared_ptr<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> const&, unsigned long, std::__1::function<void (boost::system::error_code const&, unsigned long)>)::$_7>, void (boost::system::error_code const&, unsigned long)>::operator()(boost::system::error_code const&, unsigned long&&) function.h:364 (core_test:arm64+0x1016be660)\r\n      #28 std::__1::__function::__value_func<void (boost::system::error_code const&, unsigned long)>::operator()[abi:ue170006](boost::system::error_code const&, unsigned long&&) const function.h:518 (core_test:arm64+0x100678200)\r\n      #29 std::__1::function<void (boost::system::error_code const&, unsigned long)>::operator()(boost::system::error_code const&, unsigned long) const function.h:1169 (core_test:arm64+0x1006770bc)\r\n      #30 nano::transport::tcp_socket::async_read(std::__1::shared_ptr<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> const&, unsigned long, std::__1::function<void (boost::system::error_code const&, unsigned long)>)::$_1::operator()()::'lambda'(boost::system::error_code const&, unsigned long)::operator()(boost::system::error_code const&, unsigned long) const tcp_socket.cpp:127 (core_test:arm64+0x1016b09d0)\r\n      #31 boost::asio::result_of<nano::transport::tcp_socket::async_read(std::__1::shared_ptr<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> const&, unsigned long, std::__1::function<void (boost::system::error_code const&, unsigned long)>)::$_1::operator()()::'lambda'(boost::system::error_code const&, unsigned long) (boost::system::error_code const&, unsigned long const&)>::type boost::asio::executor_binder<nano::transport::tcp_socket::async_read(std::__1::shared_ptr<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> const&, unsigned long, std::__1::function<void (boost::system::error_code const&, unsigned long)>)::$_1::operator()()::'lambda'(boost::system::error_code const&, unsigned long), boost::asio::strand<boost::asio::io_context::basic_executor_type<std::__1::allocator<void>, 0ul>>>::operator()<boost::system::error_code const&, unsigned long const&>(boost::system::error_code const&, unsigned long const&) bind_executor.hpp:384 (core_test:arm64+0x1016adf70)\r\n      #32 boost::asio::detail::read_op<boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_all_t, boost::asio::executor_binder<nano::transport::tcp_socket::async_read(std::__1::shared_ptr<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> const&, unsigned long, std::__1::function<void (boost::system::error_code const&, unsigned long)>)::$_1::operator()()::'lambda'(boost::system::error_code const&, unsigned long), boost::asio::strand<boost::asio::io_context::basic_executor_type<std::__1::allocator<void>, 0ul>>>>::operator()(boost::system::error_code, unsigned long, int) read.hpp:415 (core_test:arm64+0x1016ada6c)\r\n      #33 boost::asio::detail::binder2<boost::asio::detail::read_op<boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_all_t, boost::asio::executor_binder<nano::transport::tcp_socket::async_read(std::__1::shared_ptr<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> const&, unsigned long, std::__1::function<void (boost::system::error_code const&, unsigned long)>)::$_1::operator()()::'lambda'(boost::system::error_code const&, unsigned long), boost::asio::strand<boost::asio::io_context::basic_executor_type<std::__1::allocator<void>, 0ul>>>>, boost::system::error_code, unsigned long>::operator()() bind_handler.hpp:181 (core_test:arm64+0x1016af73c)\r\n      #34 boost::asio::detail::executor_op<boost::asio::detail::binder2<boost::asio::detail::read_op<boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_all_t, boost::asio::executor_binder<nano::transport::tcp_socket::async_read(std::__1::shared_ptr<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> const&, unsigned long, std::__1::function<void (boost::system::error_code const&, unsigned long)>)::$_1::operator()()::'lambda'(boost::system::error_code const&, unsigned long), boost::asio::strand<boost::asio::io_context::basic_executor_type<std::__1::allocator<void>, 0ul>>>>, boost::system::error_code, unsigned long>, std::__1::allocator<void>, boost::asio::detail::scheduler_operation>::do_complete(void*, boost::asio::detail::scheduler_operation*, boost::system::error_code const&, unsigned long) executor_op.hpp:70 (core_test:arm64+0x1016b010c)\r\n      #35 boost::asio::detail::scheduler_operation::complete(void*, boost::system::error_code const&, unsigned long) scheduler_operation.hpp:40 (core_test:arm64+0x1000aae80)\r\n      #36 boost::asio::detail::strand_executor_service::run_ready_handlers(std::__1::shared_ptr<boost::asio::detail::strand_executor_service::strand_impl>&) strand_executor_service.ipp:150 (core_test:arm64+0x1000d6dfc)\r\n      #37 boost::asio::detail::strand_executor_service::invoker<boost::asio::io_context::basic_executor_type<std::__1::allocator<void>, 4ul> const, void>::operator()() strand_executor_service.hpp:121 (core_test:arm64+0x1000ddcc4)\r\n      #38 boost::asio::detail::executor_op<boost::asio::detail::strand_executor_service::invoker<boost::asio::io_context::basic_executor_type<std::__1::allocator<void>, 4ul> const, void>, boost::asio::detail::recycling_allocator<void, boost::asio::detail::thread_info_base::default_tag>, boost::asio::detail::scheduler_operation>::do_complete(void*, boost::asio::detail::scheduler_operation*, boost::system::error_code const&, unsigned long) executor_op.hpp:70 (core_test:arm64+0x1000de65c)\r\n      #39 boost::asio::detail::scheduler_operation::complete(void*, boost::system::error_code const&, unsigned long) scheduler_operation.hpp:40 (core_test:arm64+0x1000aae80)\r\n      #40 boost::asio::detail::scheduler::do_run_one(boost::asio::detail::conditionally_enabled_mutex::scoped_lock&, boost::asio::detail::scheduler_thread_info&, boost::system::error_code const&) scheduler.ipp:493 (core_test:arm64+0x1000aa34c)\r\n      #41 boost::asio::detail::scheduler::run(boost::system::error_code&) scheduler.ipp:210 (core_test:arm64+0x1000a9e74)\r\n      #42 boost::asio::io_context::run() io_context.ipp:64 (core_test:arm64+0x101bfabe0)\r\n      #43 nano::thread_runner::run() thread_runner.cpp:87 (core_test:arm64+0x101c1c544)\r\n      #44 nano::thread_runner::start()::$_0::operator()() const thread_runner.cpp:37 (core_test:arm64+0x101c1cfd0)\r\n      #45 boost::detail::thread_data<nano::thread_runner::start()::$_0>::run() thread.hpp:120 (core_test:arm64+0x101c1cf04)\r\n      #46 boost::(anonymous namespace)::thread_proxy(void*) thread.cpp:177 (core_test:arm64+0x1021402cc)\r\n  \r\n    Previous write of size 4 at 0x00011479510c by thread T122074:\r\n      #0 nano::transport::tcp_socket::type_set(nano::transport::socket_type) tcp_socket.hpp:120 (core_test:arm64+0x1016817e4)\r\n      #1 nano::transport::tcp_server::to_realtime_connection(nano::public_key const&) tcp_server.cpp:686 (core_test:arm64+0x10167f854)\r\n      #2 nano::transport::tcp_server::process_handshake(nano::node_id_handshake const&) tcp_server.cpp:317 (core_test:arm64+0x10167f138)\r\n      #3 nano::transport::tcp_server::handshake_message_visitor::node_id_handshake(nano::node_id_handshake const&) tcp_server.cpp:421 (core_test:arm64+0x10167fd94)\r\n      #4 nano::node_id_handshake::visit(nano::message_visitor&) const messages.cpp:1367 (core_test:arm64+0x1013ab990)\r\n      #5 nano::transport::tcp_server::process_message(std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>) tcp_server.cpp:191 (core_test:arm64+0x10167dfbc)\r\n      #6 nano::transport::tcp_server::received_message(std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>) tcp_server.cpp:113 (core_test:arm64+0x10167dad0)\r\n      #7 nano::transport::tcp_server::receive_message()::$_1::operator()(boost::system::error_code, std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>) const tcp_server.cpp:97 (core_test:arm64+0x101689658)\r\n      #8 decltype(std::declval<nano::transport::tcp_server::receive_message()::$_1&>()(std::declval<boost::system::error_code>(), std::declval<std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>>())) std::__1::__invoke[abi:ue170006]<nano::transport::tcp_server::receive_message()::$_1&, boost::system::error_code, std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>>(nano::transport::tcp_server::receive_message()::$_1&, boost::system::error_code&&, std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>&&) invoke.h:340 (core_test:arm64+0x1016893f4)\r\n      #9 void std::__1::__invoke_void_return_wrapper<void, true>::__call[abi:ue170006]<nano::transport::tcp_server::receive_message()::$_1&, boost::system::error_code, std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>>(nano::transport::tcp_server::receive_message()::$_1&, boost::system::error_code&&, std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>&&) invoke.h:415 (core_test:arm64+0x10168930c)\r\n      #10 std::__1::__function::__alloc_func<nano::transport::tcp_server::receive_message()::$_1, std::__1::allocator<nano::transport::tcp_server::receive_message()::$_1>, void (boost::system::error_code, std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>)>::operator()[abi:ue170006](boost::system::error_code&&, std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>&&) function.h:193 (core_test:arm64+0x101689298)\r\n      #11 std::__1::__function::__func<nano::transport::tcp_server::receive_message()::$_1, std::__1::allocator<nano::transport::tcp_server::receive_message()::$_1>, void (boost::system::error_code, std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>)>::operator()(boost::system::error_code&&, std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>&&) function.h:364 (core_test:arm64+0x101686e40)\r\n      #12 std::__1::__function::__value_func<void (boost::system::error_code, std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>)>::operator()[abi:ue170006](boost::system::error_code&&, std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>&&) const function.h:518 (core_test:arm64+0x1015f5d4c)\r\n      #13 std::__1::function<void (boost::system::error_code, std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>)>::operator()(boost::system::error_code, std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>) const function.h:1169 (core_test:arm64+0x1015f082c)\r\n      #14 nano::transport::message_deserializer::received_message(nano::message_header, unsigned long, std::__1::function<void (boost::system::error_code, std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>)> const&&) message_deserializer.cpp:110 (core_test:arm64+0x1015f0a20)\r\n      #15 nano::transport::message_deserializer::received_header(std::__1::function<void (boost::system::error_code, std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>)> const&&)::$_1::operator()(boost::system::error_code const&, unsigned long) const message_deserializer.cpp:98 (core_test:arm64+0x1015fcd70)\r\n      #16 decltype(std::declval<nano::transport::message_deserializer::received_header(std::__1::function<void (boost::system::error_code, std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>)> const&&)::$_1&>()(std::declval<boost::system::error_code const&>(), std::declval<unsigned long>())) std::__1::__invoke[abi:ue170006]<nano::transport::message_deserializer::received_header(std::__1::function<void (boost::system::error_code, std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>)> const&&)::$_1&, boost::system::error_code const&, unsigned long>(nano::transport::message_deserializer::received_header(std::__1::function<void (boost::system::error_code, std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>)> const&&)::$_1&, boost::system::error_code const&, unsigned long&&) invoke.h:340 (core_test:arm64+0x1015fcbb0)\r\n      #17 void std::__1::__invoke_void_return_wrapper<void, true>::__call[abi:ue170006]<nano::transport::message_deserializer::received_header(std::__1::function<void (boost::system::error_code, std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>)> const&&)::$_1&, boost::system::error_code const&, unsigned long>(nano::transport::message_deserializer::received_header(std::__1::function<void (boost::system::error_code, std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>)> const&&)::$_1&, boost::system::error_code const&, unsigned long&&) invoke.h:415 (core_test:arm64+0x1015fcad4)\r\n      #18 std::__1::__function::__alloc_func<nano::transport::message_deserializer::received_header(std::__1::function<void (boost::system::error_code, std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>)> const&&)::$_1, std::__1::allocator<nano::transport::message_deserializer::received_header(std::__1::function<void (boost::system::error_code, std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>)> const&&)::$_1>, void (boost::system::error_code const&, unsigned long)>::operator()[abi:ue170006](boost::system::error_code const&, unsigned long&&) function.h:193 (core_test:arm64+0x1015fca60)\r\n      #19 std::__1::__function::__func<nano::transport::message_deserializer::received_header(std::__1::function<void (boost::system::error_code, std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>)> const&&)::$_1, std::__1::allocator<nano::transport::message_deserializer::received_header(std::__1::function<void (boost::system::error_code, std::__1::unique_ptr<nano::message, std::__1::default_delete<nano::message>>)> const&&)::$_1>, void (boost::system::error_code const&, unsigned long)>::operator()(boost::system::error_code const&, unsigned long&&) function.h:364 (core_test:arm64+0x1015fa894)\r\n      #20 std::__1::__function::__value_func<void (boost::system::error_code const&, unsigned long)>::operator()[abi:ue170006](boost::system::error_code const&, unsigned long&&) const function.h:518 (core_test:arm64+0x100678200)\r\n      #21 std::__1::function<void (boost::system::error_code const&, unsigned long)>::operator()(boost::system::error_code const&, unsigned long) const function.h:1169 (core_test:arm64+0x1006770bc)\r\n      #22 nano::transport::tcp_socket::read_impl(std::__1::shared_ptr<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> const&, unsigned long, std::__1::function<void (boost::system::error_code const&, unsigned long)>)::$_7::operator()(boost::system::error_code const&, unsigned long) const tcp_socket.cpp:343 (core_test:arm64+0x1016c0a00)\r\n      #23 decltype(std::declval<nano::transport::tcp_socket::read_impl(std::__1::shared_ptr<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> const&, unsigned long, std::__1::function<void (boost::system::error_code const&, unsigned long)>)::$_7&>()(std::declval<boost::system::error_code const&>(), std::declval<unsigned long>())) std::__1::__invoke[abi:ue170006]<nano::transport::tcp_socket::read_impl(std::__1::shared_ptr<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> const&, unsigned long, std::__1::function<void (boost::system::error_code const&, unsigned long)>)::$_7&, boost::system::error_code const&, unsigned long>(nano::transport::tcp_socket::read_impl(std::__1::shared_ptr<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> const&, unsigned long, std::__1::function<void (boost::system::error_code const&, unsigned long)>)::$_7&, boost::system::error_code const&, unsigned long&&) invoke.h:340 (core_test:arm64+0x1016c0958)\r\n      #24 void std::__1::__invoke_void_return_wrapper<void, true>::__call[abi:ue170006]<nano::transport::tcp_socket::read_impl(std::__1::shared_ptr<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> const&, unsigned long, std::__1::function<void (boost::system::error_code const&, unsigned long)>)::$_7&, boost::system::error_code const&, unsigned long>(nano::transport::tcp_socket::read_impl(std::__1::shared_ptr<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> const&, unsigned long, std::__1::function<void (boost::system::error_code const&, unsigned long)>)::$_7&, boost::system::error_code const&, unsigned long&&) invoke.h:415 (core_test:arm64+0x1016c087c)\r\n      #25 std::__1::__function::__alloc_func<nano::transport::tcp_socket::read_impl(std::__1::shared_ptr<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> const&, unsigned long, std::__1::function<void (boost::system::error_code const&, unsigned long)>)::$_7, std::__1::allocator<nano::transport::tcp_socket::read_impl(std::__1::shared_ptr<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> const&, unsigned long, std::__1::function<void (boost::system::error_code const&, unsigned long)>)::$_7>, void (boost::system::error_code const&, unsigned long)>::operator()[abi:ue170006](boost::system::error_code const&, unsigned long&&) function.h:193 (core_test:arm64+0x1016c0808)\r\n      #26 std::__1::__function::__func<nano::transport::tcp_socket::read_impl(std::__1::shared_ptr<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> const&, unsigned long, std::__1::function<void (boost::system::error_code const&, unsigned long)>)::$_7, std::__1::allocator<nano::transport::tcp_socket::read_impl(std::__1::shared_ptr<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> const&, unsigned long, std::__1::function<void (boost::system::error_code const&, unsigned long)>)::$_7>, void (boost::system::error_code const&, unsigned long)>::operator()(boost::system::error_code const&, unsigned long&&) function.h:364 (core_test:arm64+0x1016be660)\r\n      #27 std::__1::__function::__value_func<void (boost::system::error_code const&, unsigned long)>::operator()[abi:ue170006](boost::system::error_code const&, unsigned long&&) const function.h:518 (core_test:arm64+0x100678200)\r\n      #28 std::__1::function<void (boost::system::error_code const&, unsigned long)>::operator()(boost::system::error_code const&, unsigned long) const function.h:1169 (core_test:arm64+0x1006770bc)\r\n      #29 nano::transport::tcp_socket::async_read(std::__1::shared_ptr<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> const&, unsigned long, std::__1::function<void (boost::system::error_code const&, unsigned long)>)::$_1::operator()()::'lambda'(boost::system::error_code const&, unsigned long)::operator()(boost::system::error_code const&, unsigned long) const tcp_socket.cpp:127 (core_test:arm64+0x1016b09d0)\r\n      #30 boost::asio::result_of<nano::transport::tcp_socket::async_read(std::__1::shared_ptr<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> const&, unsigned long, std::__1::function<void (boost::system::error_code const&, unsigned long)>)::$_1::operator()()::'lambda'(boost::system::error_code const&, unsigned long) (boost::system::error_code const&, unsigned long const&)>::type boost::asio::executor_binder<nano::transport::tcp_socket::async_read(std::__1::shared_ptr<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> const&, unsigned long, std::__1::function<void (boost::system::error_code const&, unsigned long)>)::$_1::operator()()::'lambda'(boost::system::error_code const&, unsigned long), boost::asio::strand<boost::asio::io_context::basic_executor_type<std::__1::allocator<void>, 0ul>>>::operator()<boost::system::error_code const&, unsigned long const&>(boost::system::error_code const&, unsigned long const&) bind_executor.hpp:384 (core_test:arm64+0x1016adf70)\r\n      #31 boost::asio::detail::read_op<boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_all_t, boost::asio::executor_binder<nano::transport::tcp_socket::async_read(std::__1::shared_ptr<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> const&, unsigned long, std::__1::function<void (boost::system::error_code const&, unsigned long)>)::$_1::operator()()::'lambda'(boost::system::error_code const&, unsigned long), boost::asio::strand<boost::asio::io_context::basic_executor_type<std::__1::allocator<void>, 0ul>>>>::operator()(boost::system::error_code, unsigned long, int) read.hpp:415 (core_test:arm64+0x1016ada6c)\r\n      #32 boost::asio::detail::binder2<boost::asio::detail::read_op<boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_all_t, boost::asio::executor_binder<nano::transport::tcp_socket::async_read(std::__1::shared_ptr<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> const&, unsigned long, std::__1::function<void (boost::system::error_code const&, unsigned long)>)::$_1::operator()()::'lambda'(boost::system::error_code const&, unsigned long), boost::asio::strand<boost::asio::io_context::basic_executor_type<std::__1::allocator<void>, 0ul>>>>, boost::system::error_code, unsigned long>::operator()() bind_handler.hpp:181 (core_test:arm64+0x1016af73c)\r\n      #33 boost::asio::detail::executor_op<boost::asio::detail::binder2<boost::asio::detail::read_op<boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_all_t, boost::asio::executor_binder<nano::transport::tcp_socket::async_read(std::__1::shared_ptr<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> const&, unsigned long, std::__1::function<void (boost::system::error_code const&, unsigned long)>)::$_1::operator()()::'lambda'(boost::system::error_code const&, unsigned long), boost::asio::strand<boost::asio::io_context::basic_executor_type<std::__1::allocator<void>, 0ul>>>>, boost::system::error_code, unsigned long>, std::__1::allocator<void>, boost::asio::detail::scheduler_operation>::do_complete(void*, boost::asio::detail::scheduler_operation*, boost::system::error_code const&, unsigned long) executor_op.hpp:70 (core_test:arm64+0x1016b010c)\r\n      #34 boost::asio::detail::scheduler_operation::complete(void*, boost::system::error_code const&, unsigned long) scheduler_operation.hpp:40 (core_test:arm64+0x1000aae80)\r\n      #35 boost::asio::detail::strand_executor_service::run_ready_handlers(std::__1::shared_ptr<boost::asio::detail::strand_executor_service::strand_impl>&) strand_executor_service.ipp:150 (core_test:arm64+0x1000d6dfc)\r\n      #36 boost::asio::detail::strand_executor_service::invoker<boost::asio::io_context::basic_executor_type<std::__1::allocator<void>, 4ul> const, void>::operator()() strand_executor_service.hpp:121 (core_test:arm64+0x1000ddcc4)\r\n      #37 void boost::asio::io_context::basic_executor_type<std::__1::allocator<void>, 4ul>::execute<boost::asio::detail::strand_executor_service::invoker<boost::asio::io_context::basic_executor_type<std::__1::allocator<void>, 4ul> const, void>>(boost::asio::detail::strand_executor_service::invoker<boost::asio::io_context::basic_executor_type<std::__1::allocator<void>, 4ul> const, void>&&) const io_context.hpp:283 (core_test:arm64+0x1000dd91c)\r\n      #38 void boost::asio::detail::strand_executor_service::do_execute<boost::asio::io_context::basic_executor_type<std::__1::allocator<void>, 4ul> const, boost::asio::detail::binder2<boost::asio::detail::read_op<boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_all_t, boost::asio::executor_binder<nano::transport::tcp_socket::async_read(std::__1::shared_ptr<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> const&, unsigned long, std::__1::function<void (boost::system::error_code const&, unsigned long)>)::$_1::operator()()::'lambda'(boost::system::error_code const&, unsigned long), boost::asio::strand<boost::asio::io_context::basic_executor_type<std::__1::allocator<void>, 0ul>>>>, boost::system::error_code, unsigned long>, std::__1::allocator<void>>(std::__1::shared_ptr<boost::asio::detail::strand_executor_service::strand_impl> const&, boost::asio::io_context::basic_executor_type<std::__1::allocator<void>, 4ul> const&, boost::asio::detail::binder2<boost::asio::detail::read_op<boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_all_t, boost::asio::executor_binder<nano::transport::tcp_socket::async_read(std::__1::shared_ptr<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> const&, unsigned long, std::__1::function<void (boost::system::error_code const&, unsigned long)>)::$_1::operator()()::'lambda'(boost::system::error_code const&, unsigned long), boost::asio::strand<boost::asio::io_context::basic_executor_type<std::__1::allocator<void>, 0ul>>>>, boost::system::error_code, unsigned long>&&, std::__1::allocator<void> const&) strand_executor_service.hpp:250 (core_test:arm64+0x1016afb68)\r\n      #39 void boost::asio::detail::strand_executor_service::execute<boost::asio::io_context::basic_executor_type<std::__1::allocator<void>, 4ul> const, boost::asio::detail::binder2<boost::asio::detail::read_op<boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_all_t, boost::asio::executor_binder<nano::transport::tcp_socket::async_read(std::__1::shared_ptr<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> const&, unsigned long, std::__1::function<void (boost::system::error_code const&, unsigned long)>)::$_1::operator()()::'lambda'(boost::system::error_code const&, unsigned long), boost::asio::strand<boost::asio::io_context::basic_executor_type<std::__1::allocator<void>, 0ul>>>>, boost::system::error_code, unsigned long>>(std::__1::shared_ptr<boost::asio::detail::strand_executor_service::strand_impl> const&, boost::asio::io_context::basic_executor_type<std::__1::allocator<void>, 4ul> const&, boost::asio::detail::binder2<boost::asio::detail::read_op<boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_all_t, boost::asio::executor_binder<nano::transport::tcp_socket::async_read(std::__1::shared_ptr<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> const&, unsigned long, std::__1::function<void (boost::system::error_code const&, unsigned long)>)::$_1::operator()()::'lambda'(boost::system::error_code const&, unsigned long), boost::asio::strand<boost::asio::io_context::basic_executor_type<std::__1::allocator<void>, 0ul>>>>, boost::system::error_code, unsigned long>&&, std::__1::enable_if<can_query<boost::asio::io_context::basic_executor_type<std::__1::allocator<void>, 4ul> const, boost::asio::execution::allocator_t<void>>::value, void>::type*) strand_executor_service.hpp:201 (core_test:arm64+0x1016af960)\r\n      #40 boost::asio::constraint<traits::execute_member<boost::asio::io_context::basic_executor_type<std::__1::allocator<void>, 4ul> const&, boost::asio::detail::binder2<boost::asio::detail::read_op<boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_all_t, boost::asio::executor_binder<nano::transport::tcp_socket::async_read(std::__1::shared_ptr<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> const&, unsigned long, std::__1::function<void (boost::system::error_code const&, unsigned long)>)::$_1::operator()()::'lambda'(boost::system::error_code const&, unsigned long), boost::asio::strand<boost::asio::io_context::basic_executor_type<std::__1::allocator<void>, 0ul>>>>, boost::system::error_code, unsigned long>>::is_valid, void>::type boost::asio::strand<boost::asio::io_context::basic_executor_type<std::__1::allocator<void>, 4ul>>::execute<boost::asio::detail::binder2<boost::asio::detail::read_op<boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_all_t, boost::asio::executor_binder<nano::transport::tcp_socket::async_read(std::__1::shared_ptr<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> const&, unsigned long, std::__1::function<void (boost::system::error_code const&, unsigned long)>)::$_1::operator()()::'lambda'(boost::system::error_code const&, unsigned long), boost::asio::strand<boost::asio::io_context::basic_executor_type<std::__1::allocator<void>, 0ul>>>>, boost::system::error_code, unsigned long>>(boost::asio::detail::binder2<boost::asio::detail::read_op<boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_all_t, boost::asio::executor_binder<nano::transport::tcp_socket::async_read(std::__1::shared_ptr<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> const&, unsigned long, std::__1::function<void (boost::system::error_code const&, unsigned long)>)::$_1::operator()()::'lambda'(boost::system::error_code const&, unsigned long), boost::asio::strand<boost::asio::io_context::basic_executor_type<std::__1::allocator<void>, 0ul>>>>, boost::system::error_code, unsigned long>&&) const strand.hpp:269 (core_test:arm64+0x1016af8ac)\r\n      #41 void boost::asio::detail::handler_work_base<boost::asio::strand<boost::asio::io_context::basic_executor_type<std::__1::allocator<void>, 0ul>>, boost::asio::any_io_executor, boost::asio::io_context, boost::asio::executor, void>::dispatch<boost::asio::detail::binder2<boost::asio::detail::read_op<boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_all_t, boost::asio::executor_binder<nano::transport::tcp_socket::async_read(std::__1::shared_ptr<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> const&, unsigned long, std::__1::function<void (boost::system::error_code const&, unsigned long)>)::$_1::operator()()::'lambda'(boost::system::error_code const&, unsigned long), boost::asio::strand<boost::asio::io_context::basic_executor_type<std::__1::allocator<void>, 0ul>>>>, boost::system::error_code, unsigned long>, boost::asio::detail::read_op<boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_all_t, boost::asio::executor_binder<nano::transport::tcp_socket::async_read(std::__1::shared_ptr<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> const&, unsigned long, std::__1::function<void (boost::system::error_code const&, unsigned long)>)::$_1::operator()()::'lambda'(boost::system::error_code const&, unsigned long), boost::asio::strand<boost::asio::io_context::basic_executor_type<std::__1::allocator<void>, 0ul>>>>>(boost::asio::detail::binder2<boost::asio::detail::read_op<boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_all_t, boost::asio::executor_binder<nano::transport::tcp_socket::async_read(std::__1::shared_ptr<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> const&, unsigned long, std::__1::function<void (boost::system::error_code const&, unsigned long)>)::$_1::operator()()::'lambda'(boost::system::error_code const&, unsigned long), boost::asio::strand<boost::asio::io_context::basic_executor_type<std::__1::allocator<void>, 0ul>>>>, boost::system::error_code, unsigned long>&, boost::asio::detail::read_op<boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_all_t, boost::asio::executor_binder<nano::transport::tcp_socket::async_read(std::__1::shared_ptr<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> const&, unsigned long, std::__1::function<void (boost::system::error_code const&, unsigned long)>)::$_1::operator()()::'lambda'(boost::system::error_code const&, unsigned long), boost::asio::strand<boost::asio::io_context::basic_executor_type<std::__1::allocator<void>, 0ul>>>>&) handler_work.hpp:92 (core_test:arm64+0x1016af7f8)\r\n      #42 void boost::asio::detail::handler_work<boost::asio::detail::read_op<boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_all_t, boost::asio::executor_binder<nano::transport::tcp_socket::async_read(std::__1::shared_ptr<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> const&, unsigned long, std::__1::function<void (boost::system::error_code const&, unsigned long)>)::$_1::operator()()::'lambda'(boost::system::error_code const&, unsigned long), boost::asio::strand<boost::asio::io_context::basic_executor_type<std::__1::allocator<void>, 0ul>>>>, boost::asio::any_io_executor, void>::complete<boost::asio::detail::binder2<boost::asio::detail::read_op<boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_all_t, boost::asio::executor_binder<nano::transport::tcp_socket::async_read(std::__1::shared_ptr<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> const&, unsigned long, std::__1::function<void (boost::system::error_code const&, unsigned long)>)::$_1::operator()()::'lambda'(boost::system::error_code const&, unsigned long), boost::asio::strand<boost::asio::io_context::basic_executor_type<std::__1::allocator<void>, 0ul>>>>, boost::system::error_code, unsigned long>>(boost::asio::detail::binder2<boost::asio::detail::read_op<boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_all_t, boost::asio::executor_binder<nano::transport::tcp_socket::async_read(std::__1::shared_ptr<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> const&, unsigned long, std::__1::function<void (boost::system::error_code const&, unsigned long)>)::$_1::operator()()::'lambda'(boost::system::error_code const&, unsigned long), boost::asio::strand<boost::asio::io_context::basic_executor_type<std::__1::allocator<void>, 0ul>>>>, boost::system::error_code, unsigned long>&, boost::asio::detail::read_op<boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_all_t, boost::asio::executor_binder<nano::transport::tcp_socket::async_read(std::__1::shared_ptr<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> const&, unsigned long, std::__1::function<void (boost::system::error_code const&, unsigned long)>)::$_1::operator()()::'lambda'(boost::system::error_code const&, unsigned long), boost::asio::strand<boost::asio::io_context::basic_executor_type<std::__1::allocator<void>, 0ul>>>>&) handler_work.hpp:437 (core_test:arm64+0x1016af3b8)\r\n      #43 boost::asio::detail::reactive_socket_recv_op<boost::asio::mutable_buffers_1, boost::asio::detail::read_op<boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_all_t, boost::asio::executor_binder<nano::transport::tcp_socket::async_read(std::__1::shared_ptr<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> const&, unsigned long, std::__1::function<void (boost::system::error_code const&, unsigned long)>)::$_1::operator()()::'lambda'(boost::system::error_code const&, unsigned long), boost::asio::strand<boost::asio::io_context::basic_executor_type<std::__1::allocator<void>, 0ul>>>>, boost::asio::any_io_executor>::do_complete(void*, boost::asio::detail::scheduler_operation*, boost::system::error_code const&, unsigned long) reactive_socket_recv_op.hpp:151 (core_test:arm64+0x1016aef78)\r\n      #44 boost::asio::detail::scheduler_operation::complete(void*, boost::system::error_code const&, unsigned long) scheduler_operation.hpp:40 (core_test:arm64+0x1000aae80)\r\n      #45 boost::asio::detail::scheduler::do_run_one(boost::asio::detail::conditionally_enabled_mutex::scoped_lock&, boost::asio::detail::scheduler_thread_info&, boost::system::error_code const&) scheduler.ipp:493 (core_test:arm64+0x1000aa34c)\r\n      #46 boost::asio::detail::scheduler::run(boost::system::error_code&) scheduler.ipp:210 (core_test:arm64+0x1000a9e74)\r\n      #47 boost::asio::io_context::run() io_context.ipp:64 (core_test:arm64+0x101bfabe0)\r\n      #48 nano::thread_runner::run() thread_runner.cpp:87 (core_test:arm64+0x101c1c544)\r\n      #49 nano::thread_runner::start()::$_0::operator()() const thread_runner.cpp:37 (core_test:arm64+0x101c1cfd0)\r\n      #50 boost::detail::thread_data<nano::thread_runner::start()::$_0>::run() thread.hpp:120 (core_test:arm64+0x101c1cf04)\r\n      #51 boost::(anonymous namespace)::thread_proxy(void*) thread.cpp:177 (core_test:arm64+0x1021402cc)\r\n  \r\n    Location is heap block of size 416 at 0x000114794f80 allocated by thread T122075:\r\n      #0 operator new(unsigned long) <null>:253742724 (libclang_rt.tsan_osx_dynamic.dylib:arm64e+0x84420)\r\n      #1 void* std::__1::__libcpp_operator_new[abi:ue170006]<unsigned long>(unsigned long) new:298 (core_test:arm64+0x100049d3c)\r\n      #2 std::__1::__libcpp_allocate[abi:ue170006](unsigned long, unsigned long) new:324 (core_test:arm64+0x100049c60)\r\n      #3 std::__1::allocator<std::__1::__shared_ptr_emplace<nano::transport::tcp_socket, std::__1::allocator<nano::transport::tcp_socket>>>::allocate[abi:ue170006](unsigned long) allocator.h:114 (core_test:arm64+0x10024ef64)\r\n      #4 std::__1::allocator_traits<std::__1::allocator<std::__1::__shared_ptr_emplace<nano::transport::tcp_socket, std::__1::allocator<nano::transport::tcp_socket>>>>::allocate[abi:ue170006](std::__1::allocator<std::__1::__shared_ptr_emplace<nano::transport::tcp_socket, std::__1::allocator<nano::transport::tcp_socket>>>&, unsigned long) allocator_traits.h:268 (core_test:arm64+0x10024ee58)\r\n      #5 std::__1::__allocation_guard<std::__1::allocator<std::__1::__shared_ptr_emplace<nano::transport::tcp_socket, std::__1::allocator<nano::transport::tcp_socket>>>>::__allocation_guard[abi:ue170006]<std::__1::allocator<nano::transport::tcp_socket>>(std::__1::allocator<nano::transport::tcp_socket>, unsigned long) allocation_guard.h:57 (core_test:arm64+0x10024ed80)\r\n      #6 std::__1::__allocation_guard<std::__1::allocator<std::__1::__shared_ptr_emplace<nano::transport::tcp_socket, std::__1::allocator<nano::transport::tcp_socket>>>>::__allocation_guard[abi:ue170006]<std::__1::allocator<nano::transport::tcp_socket>>(std::__1::allocator<nano::transport::tcp_socket>, unsigned long) allocation_guard.h:58 (core_test:arm64+0x10024e9e0)\r\n      #7 std::__1::shared_ptr<nano::transport::tcp_socket> std::__1::allocate_shared[abi:ue170006]<nano::transport::tcp_socket, std::__1::allocator<nano::transport::tcp_socket>, nano::node&, boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&, nano::transport::socket_endpoint, void>(std::__1::allocator<nano::transport::tcp_socket> const&, nano::node&, boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&, nano::transport::socket_endpoint&&) shared_ptr.h:1022 (core_test:arm64+0x101664efc)\r\n      #8 std::__1::shared_ptr<nano::transport::tcp_socket> std::__1::make_shared[abi:ue170006]<nano::transport::tcp_socket, nano::node&, boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&, nano::transport::socket_endpoint, void>(nano::node&, boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>&&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&, boost::asio::ip::basic_endpoint<boost::asio::ip::tcp> const&, nano::transport::socket_endpoint&&) shared_ptr.h:1032 (core_test:arm64+0x1016387b4)\r\n      #9 nano::transport::tcp_listener::accept_one(boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>, nano::transport::tcp_listener::connection_type) tcp_listener.cpp:408 (core_test:arm64+0x1016356a0)\r\n      #10 nano::transport::tcp_listener::run() (.resume) tcp_listener.cpp:317 (core_test:arm64+0x10166e154)\r\n      #11 std::__1::coroutine_handle<void>::resume[abi:ue170006]() const coroutine_handle.h:78 (core_test:arm64+0x1000bf7f0)\r\n      #12 boost::asio::detail::awaitable_frame_base<boost::asio::any_io_executor>::resume() awaitable.hpp:501 (core_test:arm64+0x1000bf638)\r\n      #13 boost::asio::detail::awaitable_thread<boost::asio::any_io_executor>::pump() awaitable.hpp:770 (core_test:arm64+0x1000bf31c)\r\n      #14 void boost::asio::detail::awaitable_handler<boost::asio::any_io_executor, boost::system::error_code, boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>>::operator()<boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>>(boost::system::error_code const&, boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>&&) use_awaitable.hpp:152 (core_test:arm64+0x10165be68)\r\n      #15 boost::asio::detail::move_binder2<boost::asio::detail::awaitable_handler<boost::asio::any_io_executor, boost::system::error_code, boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>>, boost::system::error_code, boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>>::operator()() bind_handler.hpp:522 (core_test:arm64+0x10165bd20)\r\n      #16 void boost::asio::detail::executor_function::complete<boost::asio::detail::move_binder2<boost::asio::detail::awaitable_handler<boost::asio::any_io_executor, boost::system::error_code, boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>>, boost::system::error_code, boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>>, std::__1::allocator<void>>(boost::asio::detail::executor_function::impl_base*, bool) executor_function.hpp:113 (core_test:arm64+0x10165caa4)\r\n      #17 boost::asio::detail::executor_function::operator()() executor_function.hpp:61 (core_test:arm64+0x1000d5a40)\r\n      #18 boost::asio::detail::executor_op<boost::asio::detail::executor_function, std::__1::allocator<void>, boost::asio::detail::scheduler_operation>::do_complete(void*, boost::asio::detail::scheduler_operation*, boost::system::error_code const&, unsigned long) executor_op.hpp:70 (core_test:arm64+0x1000d6668)\r\n      #19 boost::asio::detail::scheduler_operation::complete(void*, boost::system::error_code const&, unsigned long) scheduler_operation.hpp:40 (core_test:arm64+0x1000aae80)\r\n      #20 boost::asio::detail::strand_executor_service::run_ready_handlers(std::__1::shared_ptr<boost::asio::detail::strand_executor_service::strand_impl>&) strand_executor_service.ipp:150 (core_test:arm64+0x1000d6dfc)\r\n      #21 boost::asio::detail::strand_executor_service::invoker<boost::asio::io_context::basic_executor_type<std::__1::allocator<void>, 4ul> const, void>::operator()() strand_executor_service.hpp:121 (core_test:arm64+0x1000ddcc4)\r\n      #22 void boost::asio::io_context::basic_executor_type<std::__1::allocator<void>, 4ul>::execute<boost::asio::detail::strand_executor_service::invoker<boost::asio::io_context::basic_executor_type<std::__1::allocator<void>, 4ul> const, void>>(boost::asio::detail::strand_executor_service::invoker<boost::asio::io_context::basic_executor_type<std::__1::allocator<void>, 4ul> const, void>&&) const io_context.hpp:283 (core_test:arm64+0x1000dd91c)\r\n      #23 void boost::asio::detail::strand_executor_service::do_execute<boost::asio::io_context::basic_executor_type<std::__1::allocator<void>, 4ul> const, boost::asio::detail::executor_function, std::__1::allocator<void>>(std::__1::shared_ptr<boost::asio::detail::strand_executor_service::strand_impl> const&, boost::asio::io_context::basic_executor_type<std::__1::allocator<void>, 4ul> const&, boost::asio::detail::executor_function&&, std::__1::allocator<void> const&) strand_executor_service.hpp:250 (core_test:arm64+0x1000dd704)\r\n      #24 void boost::asio::detail::strand_executor_service::execute<boost::asio::io_context::basic_executor_type<std::__1::allocator<void>, 4ul> const, boost::asio::detail::executor_function>(std::__1::shared_ptr<boost::asio::detail::strand_executor_service::strand_impl> const&, boost::asio::io_context::basic_executor_type<std::__1::allocator<void>, 4ul> const&, boost::asio::detail::executor_function&&, std::__1::enable_if<can_query<boost::asio::io_context::basic_executor_type<std::__1::allocator<void>, 4ul> const, boost::asio::execution::allocator_t<void>>::value, void>::type*) strand_executor_service.hpp:201 (core_test:arm64+0x1000dd510)\r\n      #25 boost::asio::constraint<traits::execute_member<boost::asio::io_context::basic_executor_type<std::__1::allocator<void>, 4ul> const&, boost::asio::detail::executor_function>::is_valid, void>::type boost::asio::strand<boost::asio::io_context::basic_executor_type<std::__1::allocator<void>, 4ul>>::execute<boost::asio::detail::executor_function>(boost::asio::detail::executor_function&&) const strand.hpp:269 (core_test:arm64+0x1000dd45c)\r\n      #26 void boost::asio::execution::detail::any_executor_base::execute_ex<boost::asio::strand<boost::asio::io_context::basic_executor_type<std::__1::allocator<void>, 4ul>>>(boost::asio::execution::detail::any_executor_base const&, boost::asio::detail::executor_function&&) any_executor.hpp:900 (core_test:arm64+0x1000dd20c)\r\n      #27 void boost::asio::execution::detail::any_executor_base::execute<boost::asio::detail::move_binder2<boost::asio::detail::awaitable_handler<boost::asio::any_io_executor, boost::system::error_code, boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>>, boost::system::error_code, boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>>>(boost::asio::detail::move_binder2<boost::asio::detail::awaitable_handler<boost::asio::any_io_executor, boost::system::error_code, boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>>, boost::system::error_code, boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>>&&) const any_executor.hpp:681 (core_test:arm64+0x10165c1f8)\r\n      #28 void boost::asio::detail::handler_work_base<boost::asio::any_io_executor, boost::asio::any_io_executor, boost::asio::io_context, boost::asio::executor, void>::dispatch<boost::asio::detail::move_binder2<boost::asio::detail::awaitable_handler<boost::asio::any_io_executor, boost::system::error_code, boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>>, boost::system::error_code, boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>>, boost::asio::detail::awaitable_handler<boost::asio::any_io_executor, boost::system::error_code, boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>>>(boost::asio::detail::move_binder2<boost::asio::detail::awaitable_handler<boost::asio::any_io_executor, boost::system::error_code, boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>>, boost::system::error_code, boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>>&, boost::asio::detail::awaitable_handler<boost::asio::any_io_executor, boost::system::error_code, boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>>&) handler_work.hpp:399 (core_test:arm64+0x10165bd90)\r\n      #29 void boost::asio::detail::handler_work<boost::asio::detail::awaitable_handler<boost::asio::any_io_executor, boost::system::error_code, boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>>, boost::asio::any_io_executor, void>::complete<boost::asio::detail::move_binder2<boost::asio::detail::awaitable_handler<boost::asio::any_io_executor, boost::system::error_code, boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>>, boost::system::error_code, boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>>>(boost::asio::detail::move_binder2<boost::asio::detail::awaitable_handler<boost::asio::any_io_executor, boost::system::error_code, boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>>, boost::system::error_code, boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>>&, boost::asio::detail::awaitable_handler<boost::asio::any_io_executor, boost::system::error_code, boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>>&) handler_work.hpp:437 (core_test:arm64+0x10165b9e4)\r\n      #30 boost::asio::detail::reactive_socket_move_accept_op<boost::asio::ip::tcp, boost::asio::any_io_executor, boost::asio::detail::awaitable_handler<boost::asio::any_io_executor, boost::system::error_code, boost::asio::basic_stream_socket<boost::asio::ip::tcp, boost::asio::any_io_executor>>, boost::asio::any_io_executor>::do_complete(void*, boost::asio::detail::scheduler_operation*, boost::system::error_code const&, unsigned long) reactive_socket_accept_op.hpp:268 (core_test:arm64+0x10165b5b8)\r\n      #31 boost::asio::detail::scheduler_operation::complete(void*, boost::system::error_code const&, unsigned long) scheduler_operation.hpp:40 (core_test:arm64+0x1000aae80)\r\n      #32 boost::asio::detail::scheduler::do_run_one(boost::asio::detail::conditionally_enabled_mutex::scoped_lock&, boost::asio::detail::scheduler_thread_info&, boost::system::error_code const&) scheduler.ipp:493 (core_test:arm64+0x1000aa34c)\r\n      #33 boost::asio::detail::scheduler::run(boost::system::error_code&) scheduler.ipp:210 (core_test:arm64+0x1000a9e74)\r\n      #34 boost::asio::io_context::run() io_context.ipp:64 (core_test:arm64+0x101bfabe0)\r\n      #35 nano::thread_runner::run() thread_runner.cpp:87 (core_test:arm64+0x101c1c544)\r\n      #36 nano::thread_runner::start()::$_0::operator()() const thread_runner.cpp:37 (core_test:arm64+0x101c1cfd0)\r\n      #37 boost::detail::thread_data<nano::thread_runner::start()::$_0>::run() thread.hpp:120 (core_test:arm64+0x101c1cf04)\r\n      #38 boost::(anonymous namespace)::thread_proxy(void*) thread.cpp:177 (core_test:arm64+0x1021402cc)\r\n```",
    "draft": false,
    "pull_request": 4775,
    "label": "pwojcikdev:fix-socket-race",
    "created_at": "2024-10-28T13:44:09Z",
    "built_at": "2024-10-28T14:22:31Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d667f118d3506edf950e4b0b94de5aa40a0c52f6",
    "build_started_at": "2024-10-28T13:50:51Z",
    "run_id": "11555393856"
  },
  {
    "hash": "d668c881c864c17b789cd7a8a037ee6c940090cf",
    "type": "pull_request",
    "pull_request": 4299,
    "label": "pwojcikdev:fix-duplicate-linking",
    "created_at": "2023-09-26T23:26:50Z",
    "built_at": "2023-09-27T00:08:18Z",
    "build_status": "fail",
    "docker_tag": ""
  },
  {
    "hash": "d675df77fe47bb94f6ed6cff13a4592060aab5c3",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Rate limiter size accessor",
    "pull_request": "4785",
    "created_at": "2024-11-11T20:39:23Z",
    "built_at": "2024-11-12T10:50:35Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d675df77fe47bb94f6ed6cff13a4592060aab5c3",
    "build_started_at": "2024-11-12T09:51:50Z",
    "run_id": "11795224218"
  },
  {
    "hash": "d6815916143b0b45bcc74cc16cfb0235b006f633",
    "type": "pull_request",
    "pull_request": 4489,
    "label": "clemahieu:pending_key_sorting",
    "created_at": "2024-03-14T14:49:13Z",
    "built_at": "2024-03-14T15:15:20Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-14T14:56:00Z",
    "run_id": "8282845807"
  },
  {
    "hash": "d68da31abc288c5c39a412568cbbcadbb7c4a641",
    "type": "pull_request",
    "pull_request": 4458,
    "label": "clemahieu:ledger_block_abstraction",
    "created_at": "2024-03-05T15:26:59Z",
    "built_at": "2024-03-05T16:10:53Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d68da31abc288c5c39a412568cbbcadbb7c4a641",
    "build_started_at": "2024-03-05T15:35:05Z",
    "run_id": "8158915838"
  },
  {
    "hash": "d6998a801c30d45f1c0ce3440e5686037b8b06e5",
    "type": "pull_request",
    "pull_request": 4246,
    "label": "pwojcikdev:parallel-core-tests",
    "created_at": "2023-06-06T23:26:01Z",
    "built_at": "2023-06-07T20:56:56Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d6998a801c30d45f1c0ce3440e5686037b8b06e5"
  },
  {
    "hash": "d6bb9479f9c1dd24edda4a6ab89a9ec12037150a",
    "type": "pull_request",
    "pull_request": 4487,
    "label": "simpago:fix-optional-pending",
    "created_at": "2024-03-12T14:41:32Z",
    "built_at": "2024-03-12T15:10:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d6bb9479f9c1dd24edda4a6ab89a9ec12037150a",
    "build_started_at": "2024-03-12T14:42:20Z",
    "run_id": "8250806455"
  },
  {
    "hash": "d6cbeb009e472445c8cace2674a9e2d616c8ae33",
    "type": "pull_request",
    "title": "Replace legacy XRB ratios",
    "author": "RickiNano",
    "body": "This PR cleans up the old xrb ratios and replaces them with nano_ratio.\r\n\r\n| Existing name  | ratio | Value | New name |\r\n| ------------- | ------------- |------------- |------------- |\r\n| Gxrb_ratio  | 10^33|  1000 nano | Knano_ratio |\r\n| Mxrb_ratio | 10^30|  1 nano | nano_ratio |\r\n| kxrb_ratio | 10^27|  0.001 nano | _*removed*_ |\r\n| xrb_ratio |  10^24|  0.000001 | _*removed*_ |\r\n\r\nIdeally we would want to have only Nano and Raw ratios, but Gxrb_ratio (1000 nano) was referenced so many places in code that I kept it but renamed it to Knano_ratio. \r\n\r\nThe following deprecated RPC endpoints for conversion has been removed:\r\n- krai_from_raw\r\n- krai_to_raw\r\n- mrai_from_raw\r\n- mrai_to_raw\r\n- rai_from_raw\r\n- rai_to_raw",
    "draft": false,
    "pull_request": 4733,
    "label": "RickiNano:xrb-ratios",
    "created_at": "2024-09-23T06:46:58Z",
    "built_at": "2024-09-23T07:20:23Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d6cbeb009e472445c8cace2674a9e2d616c8ae33",
    "build_started_at": "2024-09-23T06:50:45Z",
    "run_id": "10989094247"
  },
  {
    "hash": "d6ddbc6896fde5413c8b56aa7b7b8e0c4bd19b8c",
    "type": "pull_request",
    "title": "Introduce ledger view classes to separate confirmed/unconfirmed operations on the ledger",
    "body": "The motivation for this PR is in preparation for bounded backlog changes. Currently, both confirmed and unconfirmed transactions are together on disk and the ACID properties of the ledger are encapsulated with a database transaction.\r\n\r\nWith the bounded backlog, blocks will be stored in memory so there will need to be memory synchronization in addition to database synchronization. Rather than filling the ledger class with unconfirmed/confirmed variants for each operation.\r\n\r\nThe ledger is divided in to several sets and subsets:\r\nledger::confirmed - The set of confirmed transactions\r\nledger::any - The superset of confirmed and unconfirmed transactions\r\n\r\nWhen unconfirmed blocks are held in memory the set ledger::unconfirmed will be added which holds only unconfirmed transactions.\r\n\r\nIn the future the confirming_set can be moved on to ledger which is the subset of unconfirmed blocks that are queued to be moved in to the confirmed set.",
    "draft": false,
    "pull_request": 4486,
    "label": "clemahieu:ledger_view",
    "created_at": "2024-03-12T14:33:24Z",
    "built_at": "2024-04-06T00:09:29Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-04-05T23:45:17Z",
    "run_id": "8577005009"
  },
  {
    "hash": "d6e172eb5551e5a952d57dca32de7e6bec09bbc0",
    "type": "pull_request",
    "pull_request": 4345,
    "label": "clemahieu:block_checker",
    "created_at": "2023-11-14T12:02:06Z",
    "built_at": "2024-01-24T11:04:32Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d6e172eb5551e5a952d57dca32de7e6bec09bbc0",
    "build_started_at": "2024-01-24T10:39:20Z",
    "run_id": "7638971018"
  },
  {
    "hash": "d6e4446781f39070be9a28c8cab462b9e78a51e4",
    "type": "pull_request",
    "pull_request": 4322,
    "label": "clemahieu:vote_generator_locking",
    "created_at": "2023-11-01T12:29:34Z",
    "built_at": "2023-11-05T17:08:43Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d6e4446781f39070be9a28c8cab462b9e78a51e4",
    "build_started_at": "2023-11-05T16:14:33Z",
    "run_id": "6762408119"
  },
  {
    "hash": "d6f140b2e1ac60a797fbd19650ebf39d4e816e81",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Remove telemetry data aggregation (#4684)",
    "pull_request": "4684",
    "created_at": "2024-07-19T07:29:11Z",
    "built_at": "2024-07-19T08:01:20Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d6f140b2e1ac60a797fbd19650ebf39d4e816e81",
    "build_started_at": "2024-07-19T07:34:18Z",
    "run_id": "10004368881"
  },
  {
    "hash": "d71b556aa842a34900b1ddeceaa1ead9862fb8e1",
    "type": "pull_request",
    "title": "Convert store iterators to variants rather than using polymorphism.",
    "author": "clemahieu",
    "body": "This converts the store iterators from version that use polymorphism to using std::variant.\r\n\r\nThe primary drivers for this change is to simplify and allow more complex iterators to be created where this was previously fairly difficult to do.\r\n\r\nThe iterators are separated in the 3 parts:\r\n- The base database iterators LMDB/RocksDB that use the library's native data type, MDB_val/Slice.\r\n- A variant database iterator that can hold any of the raw database iterators and adapts the native database type to std::span<uint8_t>\r\n- A strong-typed database iterator that mirrors existing iterator behavior with strong typing for key/value pairs.\r\n\r\nThe iterators are bi-directional with a sentinel value to signify end of iteration. The iterators are also circular so after reaching the end-sentinel value, further incrementing will wrap around to the beginning, or decrementing will position the iterator at the last key/value.\r\n\r\nUsing std::variant also eliminates heap allocations when constructing iterators which can improve performance in some circumstances.",
    "draft": true,
    "pull_request": 4759,
    "label": "clemahieu:store_iterator_cleanup",
    "created_at": "2024-10-20T19:24:20Z",
    "built_at": "2024-10-22T23:18:01Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-10-22T23:14:08Z",
    "run_id": "11469991960"
  },
  {
    "hash": "d72f9d75882286b5132fd310c2a4dac656ac4be1",
    "type": "pull_request",
    "title": "Overhaul of `online_reps` class",
    "author": "pwojcikdev",
    "body": "This is an overhaul of `online_reps` class:\r\n\r\n- Run periodic online weight sampling on a dedicated thread, which makes it more robust and easier to debug.\r\n- Eliminate use of `store.online_weight.count ()` and erasing entries based on their timestamps instead (2 weeks for live, 1 day for beta). \r\n- Add stats and logging to improve observability.\r\n- Add asserts to ensure data consistency.\r\n- Split and rewrite functions, so they are (subjectively) cleaner.\r\n- Ensure that `nano::online_reps::trended ()` can never return value lower than the limit configured via `online_weight_minimum`.",
    "draft": false,
    "pull_request": 4656,
    "label": "pwojcikdev:online-reps-overhaul",
    "created_at": "2024-06-26T08:29:08Z",
    "built_at": "2024-06-26T09:02:28Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d72f9d75882286b5132fd310c2a4dac656ac4be1",
    "build_started_at": "2024-06-26T08:32:34Z",
    "run_id": "9676281538"
  },
  {
    "hash": "d731e549207a81a32843f1293b7078c0fbc7183f",
    "type": "pull_request",
    "title": "Fair queuing for vote processor",
    "body": "Similar to the way it was done for block processing, this implements fair queue for vote processor. Votes are processed in round robin manner from all peers, with higher tier votes having slightly higher priority.",
    "draft": false,
    "pull_request": 4536,
    "label": "pwojcikdev:fair-queuing/vote-processor",
    "created_at": "2024-04-04T14:58:58Z",
    "built_at": "2024-04-05T21:12:40Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d731e549207a81a32843f1293b7078c0fbc7183f",
    "build_started_at": "2024-04-05T20:45:17Z",
    "run_id": "8575514036"
  },
  {
    "hash": "d7342fb3d08749c809be96db99d0deb42b5929cc",
    "type": "pull_request",
    "pull_request": 4244,
    "label": "pwojcikdev:fix-cpack",
    "created_at": "2023-06-01T12:53:34Z",
    "built_at": "2023-06-01T13:29:29Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d7342fb3d08749c809be96db99d0deb42b5929cc"
  },
  {
    "hash": "d73efd36b71a0ed00e64ac772767de45c50c4058",
    "type": "pull_request",
    "title": "Fix test logging",
    "author": "pwojcikdev",
    "body": "The `migrate_lmdb_to_rocksdb` function was changing logging format to daemon mode which is wrong because it's also being run as part of core test suite.",
    "draft": false,
    "pull_request": 4693,
    "label": "pwojcikdev:fix-logging",
    "created_at": "2024-08-05T20:46:28Z",
    "built_at": "2024-08-05T21:16:43Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d73efd36b71a0ed00e64ac772767de45c50c4058",
    "build_started_at": "2024-08-05T20:50:17Z",
    "run_id": "10255846208"
  },
  {
    "hash": "d751b38fe8d5a4c989a1862ec684507f31dbb162",
    "type": "pull_request",
    "pull_request": 4312,
    "label": "pwojcikdev:hinted-fixing-2-develop",
    "created_at": "2023-10-09T15:17:09Z",
    "built_at": "2023-10-09T19:06:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d751b38fe8d5a4c989a1862ec684507f31dbb162"
  },
  {
    "hash": "d768a8de672ad37abaaecff9860402e3bcb1cb53",
    "type": "pull_request",
    "title": "Fix bootstrap <-> blockprocessor notifications",
    "author": "pwojcikdev",
    "body": "https://github.com/nanocurrency/nano-node/pull/4463 Introduces a bug where some accounts wouldn't be unblocked if blocks came as live traffic. This fixes it and adds a few testcases to ensure we won't encounter this problem in the future.",
    "draft": false,
    "pull_request": 4663,
    "label": "pwojcikdev:bootstrap-notifications",
    "created_at": "2024-06-30T17:43:50Z",
    "built_at": "2024-07-02T11:40:12Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d768a8de672ad37abaaecff9860402e3bcb1cb53",
    "build_started_at": "2024-07-02T11:13:59Z",
    "run_id": "9759919101"
  },
  {
    "hash": "d78f53927d221ddbb4e9ab0ff16b98a6d00c5317",
    "type": "commit",
    "author": "clemahieu",
    "title": "Remove unnecessary FQNs",
    "pull_request": "4760",
    "created_at": "2024-10-10T11:19:54Z",
    "built_at": "2024-10-21T08:14:31Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d78f53927d221ddbb4e9ab0ff16b98a6d00c5317",
    "build_started_at": "2024-10-21T07:31:42Z",
    "run_id": "11435557329"
  },
  {
    "hash": "d7a6bf0726eceede03b8689c9181d1da06bfe96f",
    "type": "pull_request",
    "pull_request": 4183,
    "label": "mariomoliner:convert_boost_to_std",
    "created_at": "2023-03-15T09:38:51Z",
    "built_at": "2023-03-15T09:49:13Z",
    "build_status": "fail",
    "docker_tag": ""
  },
  {
    "hash": "d7aabcbee868ca19efee5f02113ede3597d09566",
    "type": "pull_request",
    "title": "use shared libraries",
    "author": "milahu",
    "body": "i want to link `nano-node` against shared libraries, to speed up the build process\r\n\r\nso effectively, i have reverted #4030 (and some other commits)\r\n\r\nthe build is passing, but now i get this error on runtime... ideas?\r\n\r\n```\r\n$ /nix/store/4cw51sk7va4mx1nnbcfh61vba8i5jyvv-nano-node-26.1/bin/nano_wallet\r\nAssertion (global_initialized) failed\r\nnano::logger::logger(std::string)\r\n/build/source/nano/lib/logging.cpp:220\r\nError: logging should be initialized before creating a logger\r\n\r\n 0# 0x0000000000A11F07 in /nix/store/4cw51sk7va4mx1nnbcfh61vba8i5jyvv-nano-node-26.1/bin/nano_wallet\r\n 1# 0x0000000000A09DD8 in /nix/store/4cw51sk7va4mx1nnbcfh61vba8i5jyvv-nano-node-26.1/bin/nano_wallet\r\n 2# 0x00000000009ABAB2 in /nix/store/4cw51sk7va4mx1nnbcfh61vba8i5jyvv-nano-node-26.1/bin/nano_wallet\r\n 3# 0x000000000050CAAF in /nix/store/4cw51sk7va4mx1nnbcfh61vba8i5jyvv-nano-node-26.1/bin/nano_wallet\r\n 4# __libc_start_main in /nix/store/apab5i73dqa09wx0q27b6fbhd1r18ihl-glibc-2.39-31/lib/libc.so.6\r\n 5# 0x000000000052F915 in /nix/store/4cw51sk7va4mx1nnbcfh61vba8i5jyvv-nano-node-26.1/bin/nano_wallet\r\n\r\nAborted (core dumped)\r\n```\r\n\r\nit works as expected with the [nano-node with gitmodules](https://github.com/NixOS/nixpkgs/raw/master/pkgs/applications/blockchains/nano-wallet/default.nix) build\r\n(nixpkgs has only `nano-wallet` but not the full `nano-node`, dont ask me why)\r\n\r\n```\r\nnix-shell -p nano-wallet\r\nnano_wallet\r\n```\r\n\r\nmy build script is [nano-node.nix](https://github.com/milahu/nur-packages/raw/master/pkgs/applications/blockchains/nano-node/default.nix)\r\n\r\nyou will need [nix](https://github.com/NixOS/nix) to run that build script\r\n\r\n```\r\ngit clone --depth=1 https://github.com/milahu/nur-packages\r\ncd nur-packages\r\nnix-build . -A nano-node\r\n./result/bin/nano_wallet\r\n```\r\n\r\nit seems like `nano::logger::initialize` is not called\r\n\r\n`nano::logger` was added in #4375 by @pwojcikdev\r\n\r\n<details>\r\n<summary>\r\nnano/lib/logging.cpp\r\n</summary>\r\n\r\n\r\n```cpp\r\nvoid nano::logger::initialize (nano::log_config fallback, std::optional<std::filesystem::path> data_path, std::vector<std::string> const & config_overrides)\r\n{\r\n        // Only load log config from file if data_path is available (i.e. not running in cli mode)\r\n        nano::log_config config = data_path ? nano::load_log_config (fallback, *data_path, config_overrides) : fallback;\r\n        initialize_common (config, data_path);\r\n        global_initialized = true;\r\n}\r\n```\r\n\r\nso `nano::logger::logger` fails\r\n\r\n```cpp\r\nnano::logger::logger (std::string identifier) :\r\n  identifier{ std::move (identifier) }\r\n{\r\n  release_assert (global_initialized, \"logging should be initialized before creating a logger\");\r\n}\r\n```\r\n\r\nbut `nano::logger::initialize` should be called from `nano/nano_wallet/entry.cpp`\r\n\r\n```cpp\r\nint main (int argc, char * const * argv)\r\n{\r\n  nano::set_umask (); // Make sure the process umask is set before any files are created\r\n  nano::initialize_file_descriptor_limit ();\r\n  nano::logger::initialize (nano::log_config::cli_default ());\r\n```\r\n\r\n</details>\r\n\r\n\r\n<details>\r\n<summary>\r\nbacktrace\r\n</summary>\r\n\r\n```\r\n(gdb) bt\r\n#0  0x00007ffff56e3efc in __pthread_kill_implementation () from /nix/store/apab5i73dqa09wx0q27b6fbhd1r18ihl-glibc-2.39-31/lib/libc.so.6\r\n#1  0x00007ffff5693e86 in raise () from /nix/store/apab5i73dqa09wx0q27b6fbhd1r18ihl-glibc-2.39-31/lib/libc.so.6\r\n#2  0x00007ffff567c935 in abort () from /nix/store/apab5i73dqa09wx0q27b6fbhd1r18ihl-glibc-2.39-31/lib/libc.so.6\r\n#3  0x00000000007a0769 in assert_internal (check_expr=check_expr@entry=0x8e5144 \"global_initialized\", \r\n    func=func@entry=0x903fb8 \"nano::logger::logger(std::string)\", file=file@entry=0x903f90 \"/build/source/nano/lib/logging.cpp\", line=line@entry=220, \r\n    is_release_assert=is_release_assert@entry=true, error_msg=\"logging should be initialized before creating a logger\")\r\n    at /build/source/nano/lib/utility.cpp:168\r\n#4  0x0000000000770a3f in nano::logger::logger (this=this@entry=0xb14860 <(anonymous namespace)::logger>, identifier=\"\")\r\n    at /build/source/nano/lib/logging.cpp:220\r\n#5  0x0000000000499450 in __static_initialization_and_destruction_0 () at /build/source/nano/nano_wallet/entry.cpp:28\r\n#6  0x00000000004996d1 in _GLOBAL__sub_I_entry.cpp(void) () at /build/source/nano/nano_wallet/entry.cpp:342\r\n#7  0x00007ffff567e23e in __libc_start_main_impl () from /nix/store/apab5i73dqa09wx0q27b6fbhd1r18ihl-glibc-2.39-31/lib/libc.so.6\r\n#8  0x0000000000498c35 in _start ()\r\n```\r\n\r\nso `nano::logger::logger` is called by\r\n\r\n> ```#5  0x0000000000499450 in __static_initialization_and_destruction_0 () at /build/source/nano/nano_wallet/entry.cpp:28```\r\n\r\nnano/nano_wallet/entry.cpp\r\n\r\n```cpp\r\nnamespace\r\n{\r\nnano::logger logger{ \"wallet_daemon\" };\r\n```\r\n\r\nim surprised that this works in the original version (does it?)\r\n\r\n</details>\r\n\r\n\r\n<details>\r\n<summary>\r\nldd\r\n</summary>\r\n\r\n```\r\n$ ldd result/bin/.nano_wallet-wrapped\r\n        linux-vdso.so.1 (0x00007ffccd8e9000)\r\n        libcryptopp.so.8 => /nix/store/l9x8a6mbsija15dfclyy5mh5p4ayygcc-crypto++-8.9.0/lib/libcryptopp.so.8 (0x00007f39fec9d000)\r\n        libargon2.so.1 => /nix/store/mqkwyf0j5mb7f68qdw964xx6828k6dd2-libargon2-20190702/lib/libargon2.so.1 (0x00007f39fec93000)\r\n        liblmdb.so => /nix/store/jghdj60m9gkysiar29afz8shp1y78n19-lmdb-0.9.32/lib/liblmdb.so (0x00007f39fec7c000)\r\n        libboost_filesystem.so.1.81.0 => /nix/store/r3j1ry1w4l7psklv1xxgxpg7hlsic0ir-boost-1.81.0/lib/libboost_filesystem.so.1.81.0 (0x00007f39fec54000)\r\n        libboost_thread.so.1.81.0 => /nix/store/r3j1ry1w4l7psklv1xxgxpg7hlsic0ir-boost-1.81.0/lib/libboost_thread.so.1.81.0 (0x00007f39fec37000)\r\n        libboost_chrono.so.1.81.0 => /nix/store/r3j1ry1w4l7psklv1xxgxpg7hlsic0ir-boost-1.81.0/lib/libboost_chrono.so.1.81.0 (0x00007f39fec2d000)\r\n        libboost_atomic.so.1.81.0 => /nix/store/r3j1ry1w4l7psklv1xxgxpg7hlsic0ir-boost-1.81.0/lib/libboost_atomic.so.1.81.0 (0x00007f39fec23000)\r\n        librocksdb.so.9 => /nix/store/6fgsvpkrda4i3g5b0cz8i36mgh61nq42-rocksdb-9.1.1/lib/librocksdb.so.9 (0x00007f39fdfda000)\r\n        libboost_program_options.so.1.81.0 => /nix/store/r3j1ry1w4l7psklv1xxgxpg7hlsic0ir-boost-1.81.0/lib/libboost_program_options.so.1.81.0 (0x00007f39fdf6c000)\r\n        libdl.so.2 => /nix/store/apab5i73dqa09wx0q27b6fbhd1r18ihl-glibc-2.39-31/lib/libdl.so.2 (0x00007f39fdf67000)\r\n        libspdlog.so.1.13 => /nix/store/3ri8agivq4209yqpcnd0vk4yiycjai1q-spdlog-1.13.0/lib/libspdlog.so.1.13 (0x00007f39fdef2000)\r\n        libfmt.so.10 => /nix/store/fl6ayalxs1vg121p30l8nxx1dmhs49fj-fmt-10.2.1/lib/libfmt.so.10 (0x00007f39fdecd000)\r\n        libboost_iostreams.so.1.81.0 => /nix/store/r3j1ry1w4l7psklv1xxgxpg7hlsic0ir-boost-1.81.0/lib/libboost_iostreams.so.1.81.0 (0x00007f39fdeb4000)\r\n        libboost_regex.so.1.81.0 => /nix/store/r3j1ry1w4l7psklv1xxgxpg7hlsic0ir-boost-1.81.0/lib/libboost_regex.so.1.81.0 (0x00007f39fde61000)\r\n        libboost_system.so.1.81.0 => /nix/store/r3j1ry1w4l7psklv1xxgxpg7hlsic0ir-boost-1.81.0/lib/libboost_system.so.1.81.0 (0x00007f39fde5c000)\r\n        libminiupnpc.so.17 => /nix/store/isa8z597dw3rg5ig6c91ry2qha3wdqsm-miniupnpc-2.2.6/lib/libminiupnpc.so.17 (0x00007f39fde4b000)\r\n        libQt5Widgets.so.5 => /nix/store/jiszkap5g68fiin4lg911r55970p59jb-qtbase-5.15.12/lib/libQt5Widgets.so.5 (0x00007f39fd794000)\r\n        libQt5Gui.so.5 => /nix/store/jiszkap5g68fiin4lg911r55970p59jb-qtbase-5.15.12/lib/libQt5Gui.so.5 (0x00007f39fd115000)\r\n        libQt5Core.so.5 => /nix/store/jiszkap5g68fiin4lg911r55970p59jb-qtbase-5.15.12/lib/libQt5Core.so.5 (0x00007f39fcb4e000)\r\n        libm.so.6 => /nix/store/apab5i73dqa09wx0q27b6fbhd1r18ihl-glibc-2.39-31/lib/libm.so.6 (0x00007f39fca6b000)\r\n        libc.so.6 => /nix/store/apab5i73dqa09wx0q27b6fbhd1r18ihl-glibc-2.39-31/lib/libc.so.6 (0x00007f39fc87e000)\r\n        /nix/store/apab5i73dqa09wx0q27b6fbhd1r18ihl-glibc-2.39-31/lib/ld-linux-x86-64.so.2 => /nix/store/apab5i73dqa09wx0q27b6fbhd1r18ihl-glibc-2.39-31/lib64/ld-linux-x86-64.so.2 (0x00007f39ff1ec000)\r\n        libstdc++.so.6 => /nix/store/p3ffjixpnfgkqh20nsrc13vrj3yfi0nj-gcc-13.2.0-lib/lib/libstdc++.so.6 (0x00007f39fc61c000)\r\n        libgcc_s.so.1 => /nix/store/p3ffjixpnfgkqh20nsrc13vrj3yfi0nj-gcc-13.2.0-lib/lib/libgcc_s.so.1 (0x00007f39fc5f7000)\r\n        libpthread.so.0 => /nix/store/apab5i73dqa09wx0q27b6fbhd1r18ihl-glibc-2.39-31/lib/libpthread.so.0 (0x00007f39fc5f0000)\r\n        librt.so.1 => /nix/store/apab5i73dqa09wx0q27b6fbhd1r18ihl-glibc-2.39-31/lib/librt.so.1 (0x00007f39fc5eb000)\r\n        libsnappy.so.1 => /nix/store/9m1y0bvyr6dlab6373jh7y8hmd6r0ia3-snappy-1.2.0/lib/libsnappy.so.1 (0x00007f39fc5dc000)\r\n        libz.so.1 => /nix/store/nw1bnjadmzk9hnd4nbvxmqlh074vr16j-zlib-1.3.1/lib/libz.so.1 (0x00007f39fc5bc000)\r\n        libbz2.so.1 => /nix/store/q4k8gmw2gpncglwdvz9fmqqwnynsb143-bzip2-1.0.8/lib/libbz2.so.1 (0x00007f39fc5a9000)\r\n        liblz4.so.1 => /nix/store/w7ir04z15bxny7w5kzbyvwd7bi3kfi08-lz4-1.9.4/lib/liblz4.so.1 (0x00007f39fc570000)\r\n        libzstd.so.1 => /nix/store/7mnvfrpsbivkxyfbmqczdq5pbb1n59j1-zstd-1.5.6/lib/libzstd.so.1 (0x00007f39fc49e000)\r\n        liblzma.so.5 => /nix/store/n87dnp3cw99gssql0xk9yycrhrg50gir-xz-5.4.6/lib/liblzma.so.5 (0x00007f39fc46d000)\r\n        libicudata.so.73 => /nix/store/hxfhcs6sdqang5qgzrjhhhq6qwdd7vql-icu4c-73.2/lib/libicudata.so.73 (0x00007f39fa5df000)\r\n        libicui18n.so.73 => /nix/store/hxfhcs6sdqang5qgzrjhhhq6qwdd7vql-icu4c-73.2/lib/libicui18n.so.73 (0x00007f39fa28f000)\r\n        libicuuc.so.73 => /nix/store/hxfhcs6sdqang5qgzrjhhhq6qwdd7vql-icu4c-73.2/lib/libicuuc.so.73 (0x00007f39fa083000)\r\n        libGL.so.1 => /nix/store/s2w3qaw28ch6z0ymahkbhv66fbwz8hbb-libGL-1.7.0/lib/libGL.so.1 (0x00007f39f9ff3000)\r\n        libpng16.so.16 => /nix/store/31l4c9kwx37gy2cr1xiswbbp4azsyp1n-libpng-apng-1.6.43/lib/libpng16.so.16 (0x00007f39f9fba000)\r\n        libharfbuzz.so.0 => /nix/store/3058213v7kg1r0c7hrz4qyda2impjv5a-harfbuzz-8.4.0/lib/libharfbuzz.so.0 (0x00007f39f9e89000)\r\n        libpcre2-16.so.0 => /nix/store/sik7a8dic5lxhm4cp9npibk97x9jcxwf-pcre2-10.43/lib/libpcre2-16.so.0 (0x00007f39f9df6000)\r\n        libgthread-2.0.so.0 => /nix/store/bcms6vbac6jyffwyj8y630brpy1il4ks-glib-2.80.0/lib/libgthread-2.0.so.0 (0x00007f39f9def000)\r\n        libglib-2.0.so.0 => /nix/store/bcms6vbac6jyffwyj8y630brpy1il4ks-glib-2.80.0/lib/libglib-2.0.so.0 (0x00007f39f9ca4000)\r\n        libGLX.so.0 => /nix/store/wr5abp6s0z61mp1wwyjxhwcrs6sx3jwq-libglvnd-1.7.0/lib/libGLX.so.0 (0x00007f39f9c70000)\r\n        libX11.so.6 => /nix/store/h0aal69rli3p604dmijx7mps1diwx4f3-libX11-1.8.9/lib/libX11.so.6 (0x00007f39f9b2b000)\r\n        libXext.so.6 => /nix/store/pdikq8hwkj15d1jvlv48p98xn0xnn4dx-libXext-1.3.6/lib/libXext.so.6 (0x00007f39f9b14000)\r\n        libGLdispatch.so.0 => /nix/store/wr5abp6s0z61mp1wwyjxhwcrs6sx3jwq-libglvnd-1.7.0/lib/libGLdispatch.so.0 (0x00007f39f9a5b000)\r\n        libfreetype.so.6 => /nix/store/8ilnvaa1d66z1qn866phpdx5jpam0lm7-freetype-2.13.2/lib/libfreetype.so.6 (0x00007f39f998d000)\r\n        libgraphite2.so.3 => /nix/store/ff6vzhlbnydw8n9kh7bsfwh01pi2i3qc-graphite2-1.3.14/lib/libgraphite2.so.3 (0x00007f39f9964000)\r\n        libpcre2-8.so.0 => /nix/store/sik7a8dic5lxhm4cp9npibk97x9jcxwf-pcre2-10.43/lib/libpcre2-8.so.0 (0x00007f39f98c2000)\r\n        libxcb.so.1 => /nix/store/cvbf30dc4mamggijbxwlwxaxd7q4wch1-libxcb-1.17.0/lib/libxcb.so.1 (0x00007f39f9897000)\r\n        libbrotlidec.so.1 => /nix/store/qa2j4ql5vb7n1zyi8ai5acivsjkg0l8m-brotli-1.1.0-lib/lib/libbrotlidec.so.1 (0x00007f39f9889000)\r\n        libXau.so.6 => /nix/store/mhs3ys5lbahsvrai5y0fv49q2xp4pc31-libXau-1.0.11/lib/libXau.so.6 (0x00007f39f9884000)\r\n        libXdmcp.so.6 => /nix/store/6gg4xf3abpmdpkhpqkqwx2hdvs7fmgwc-libXdmcp-1.1.5/lib/libXdmcp.so.6 (0x00007f39f987a000)\r\n        libbrotlicommon.so.1 => /nix/store/qa2j4ql5vb7n1zyi8ai5acivsjkg0l8m-brotli-1.1.0-lib/lib/libbrotlicommon.so.1 (0x00007f39f9857000)\r\n```\r\n\r\n</details>\r\n",
    "draft": true,
    "pull_request": 4679,
    "label": "milahu:shared-libs",
    "created_at": "2024-07-15T16:35:45Z",
    "built_at": null,
    "build_status": "building",
    "docker_tag": null,
    "build_started_at": "2024-07-16T17:28:24Z",
    "run_id": null
  },
  {
    "hash": "d7c09e38ff354a1d2b8a9c9905371d058c391516",
    "type": "commit",
    "created_at": "2023-10-08T12:55:21Z",
    "built_at": "2023-10-17T16:22:35Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d7c09e38ff354a1d2b8a9c9905371d058c391516"
  },
  {
    "hash": "d7d8742deda4fb4bd62761aec4fd7a677b7124e2",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Cementing fixes (#4722)\n\n* Adjust max cemented blocks per iteration\r\n\r\n* Stats\r\n\r\n* Refresh long running transactions\r\n\r\n* Graceful shutdown for `confirming_set`\r\n\r\n* Fix compilation\r\n\r\n* Fix assert",
    "pull_request": "4722",
    "created_at": "2024-09-06T14:21:35Z",
    "built_at": "2024-09-06T14:54:38Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d7d8742deda4fb4bd62761aec4fd7a677b7124e2",
    "build_started_at": "2024-09-06T14:27:18Z",
    "run_id": "10740148636"
  },
  {
    "hash": "d7f2b8e23e16683affe39632abb478868a207200",
    "type": "commit",
    "created_at": "2023-10-31T12:51:53Z",
    "built_at": "2023-10-31T14:10:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d7f2b8e23e16683affe39632abb478868a207200",
    "build_started_at": "2023-10-31T12:59:04Z",
    "run_id": "6706839487"
  },
  {
    "hash": "d80504bac700ee90300bd7029058344cac05534f",
    "type": "pull_request",
    "pull_request": 4510,
    "label": "pwojcikdev:aec-vote-map-result",
    "created_at": "2024-03-20T16:25:24Z",
    "built_at": "2024-03-21T13:58:01Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d80504bac700ee90300bd7029058344cac05534f",
    "build_started_at": "2024-03-21T13:29:50Z",
    "run_id": "8375799780"
  },
  {
    "hash": "d831937f12fd59f98cdab2401ec15237b19d6a92",
    "type": "commit",
    "author": "clemahieu",
    "title": "Extract function to create a random filename.",
    "pull_request": "4745",
    "created_at": "2024-09-16T12:27:52Z",
    "built_at": "2024-10-07T17:22:48Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d831937f12fd59f98cdab2401ec15237b19d6a92",
    "build_started_at": "2024-10-07T16:49:38Z",
    "run_id": "11220306690"
  },
  {
    "hash": "d834d933714201a9eb0b46638de35dbe7e73520b",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Use `vacancy_updated` event",
    "pull_request": "4757",
    "created_at": "2024-10-17T15:03:48Z",
    "built_at": "2024-10-18T21:53:17Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d834d933714201a9eb0b46638de35dbe7e73520b",
    "build_started_at": "2024-10-18T20:40:42Z",
    "run_id": "11411256495"
  },
  {
    "hash": "d8371cf7280edc4536def083507d4ad108572928",
    "type": "pull_request",
    "pull_request": 4323,
    "label": "clemahieu:vote_file_separation",
    "created_at": "2023-11-02T08:48:44Z",
    "built_at": "2023-11-02T09:16:03Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d8371cf7280edc4536def083507d4ad108572928",
    "build_started_at": "2023-11-02T08:49:30Z",
    "run_id": "6730255234"
  },
  {
    "hash": "d843dbb364c2a3a266d16bacd8c24b85f927a6ac",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Fix vote generator stopping (#4788)",
    "pull_request": "4788",
    "created_at": "2024-11-22T18:59:52Z",
    "built_at": "2024-11-22T19:45:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d843dbb364c2a3a266d16bacd8c24b85f927a6ac",
    "build_started_at": "2024-11-22T19:13:29Z",
    "run_id": "11978681751"
  },
  {
    "hash": "d8449caabc71c1d014278d806d781761d8e2d040",
    "type": "pull_request",
    "pull_request": 4298,
    "label": "pwojcikdev:fix-buffers-2",
    "created_at": "2023-09-26T20:10:22Z",
    "built_at": "2023-09-26T22:27:24Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d8449caabc71c1d014278d806d781761d8e2d040"
  },
  {
    "hash": "d84c995a0f5c43bb0ab9ca8bc8f70d8b4a117a63",
    "type": "commit",
    "created_at": "2023-05-10T21:06:16Z",
    "built_at": "2023-05-10T21:53:56Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d84c995a0f5c43bb0ab9ca8bc8f70d8b4a117a63"
  },
  {
    "hash": "d84ffb72194b6f4a5bd71a9230e56e58bf4fe8a3",
    "type": "commit",
    "author": "clemahieu",
    "title": "Merge pull request #4711 from clemahieu/revert_receivable_iterator\n\nPartially revert receivable iterator",
    "pull_request": "4711",
    "created_at": "2024-08-22T09:30:27Z",
    "built_at": "2024-08-22T10:38:57Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d84ffb72194b6f4a5bd71a9230e56e58bf4fe8a3",
    "build_started_at": "2024-08-22T09:33:21Z",
    "run_id": "10506119968"
  },
  {
    "hash": "d883279feb1fead5852a496c73bac9270c9730ee",
    "type": "pull_request",
    "title": "Improve unit test telemetry.basic",
    "author": "dsiganos",
    "body": "Reduce the chances of failure. The test fails frequently when telemetry changes between the first and second telemetry requests. This change reduces the chance of that happening by adding another stage.",
    "draft": false,
    "pull_request": 4589,
    "label": "dsiganos:improve_telemetry_basic_2",
    "created_at": "2024-04-27T09:00:23Z",
    "built_at": "2024-04-27T09:36:45Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d883279feb1fead5852a496c73bac9270c9730ee",
    "build_started_at": "2024-04-27T09:08:56Z",
    "run_id": "8858768995"
  },
  {
    "hash": "d886a19e2ed8fedbc070c2744a77567d7d1737cb",
    "type": "pull_request",
    "title": "Fix unit test bootstrap_processor.lazy_pruning_missing_block",
    "author": "dsiganos",
    "body": null,
    "draft": false,
    "pull_request": 4575,
    "label": "dsiganos:fix_lazy_pruning_missing_block",
    "created_at": "2024-04-18T03:21:13Z",
    "built_at": "2024-04-23T12:48:30Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d886a19e2ed8fedbc070c2744a77567d7d1737cb",
    "build_started_at": "2024-04-23T12:22:08Z",
    "run_id": "8800294263"
  },
  {
    "hash": "d8a2f4e9cefe9cc4cafb0486e2767c72220bb8db",
    "type": "commit",
    "created_at": "2023-04-19T17:01:37Z",
    "built_at": "2023-04-21T16:23:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d8a2f4e9cefe9cc4cafb0486e2767c72220bb8db"
  },
  {
    "hash": "d8c6a79129b4d70fd8373798c0e8a1f0ada8728f",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Rename to `fake_work_peer`",
    "pull_request": "4618",
    "created_at": "2024-05-12T15:17:47Z",
    "built_at": "2024-05-14T15:09:12Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d8c6a79129b4d70fd8373798c0e8a1f0ada8728f",
    "build_started_at": "2024-05-14T11:08:37Z",
    "run_id": "9081366420"
  },
  {
    "hash": "d8d4657d789f8ff5042769275654f4f478cefd2a",
    "type": "commit",
    "created_at": "2023-03-05T14:44:13Z",
    "built_at": "2023-03-15T04:04:50Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d8d4657d789f8ff5042769275654f4f478cefd2a"
  },
  {
    "hash": "d8d564bfdb79195caaf9e420a3c14f952fd6783a",
    "type": "pull_request",
    "title": "use shared libraries",
    "author": "milahu",
    "body": "i want to link `nano-node` against shared libraries, to speed up the build process\r\n\r\nso effectively, i have reverted #4030 (and some other commits)\r\n\r\nthis PR should not be merged in its current form\r\nbecause most package managers dont allow pinning dependencies like nix or guix\r\n\r\nideally, there should be a build option like `USE_SHARED_LIBS`\r\nand the `CMakeLists.txt` should have separate branches for static or shared build\r\n\r\n### Error: logging should be initialized before creating a logger\r\n\r\n<details>\r\n<summary>\r\nfixed: runtime error: Error: logging should be initialized before creating a logger\r\n</summary>\r\n\r\n\r\nthe build is passing, but now i get this error on runtime... ideas?\r\n\r\n```\r\n$ /nix/store/4cw51sk7va4mx1nnbcfh61vba8i5jyvv-nano-node-26.1/bin/nano_wallet\r\nAssertion (global_initialized) failed\r\nnano::logger::logger(std::string)\r\n/build/source/nano/lib/logging.cpp:220\r\nError: logging should be initialized before creating a logger\r\n\r\n 0# 0x0000000000A11F07 in /nix/store/4cw51sk7va4mx1nnbcfh61vba8i5jyvv-nano-node-26.1/bin/nano_wallet\r\n 1# 0x0000000000A09DD8 in /nix/store/4cw51sk7va4mx1nnbcfh61vba8i5jyvv-nano-node-26.1/bin/nano_wallet\r\n 2# 0x00000000009ABAB2 in /nix/store/4cw51sk7va4mx1nnbcfh61vba8i5jyvv-nano-node-26.1/bin/nano_wallet\r\n 3# 0x000000000050CAAF in /nix/store/4cw51sk7va4mx1nnbcfh61vba8i5jyvv-nano-node-26.1/bin/nano_wallet\r\n 4# __libc_start_main in /nix/store/apab5i73dqa09wx0q27b6fbhd1r18ihl-glibc-2.39-31/lib/libc.so.6\r\n 5# 0x000000000052F915 in /nix/store/4cw51sk7va4mx1nnbcfh61vba8i5jyvv-nano-node-26.1/bin/nano_wallet\r\n\r\nAborted (core dumped)\r\n```\r\n\r\nit works as expected with the [nano-node with gitmodules](https://github.com/NixOS/nixpkgs/raw/master/pkgs/applications/blockchains/nano-wallet/default.nix) build\r\n(nixpkgs has only `nano-wallet` but not the full `nano-node`, dont ask me why)\r\n\r\n```\r\nnix-shell -p nano-wallet\r\nnano_wallet\r\n```\r\n\r\nmy build script is [nano-node.nix](https://github.com/milahu/nur-packages/raw/master/pkgs/applications/blockchains/nano-node/default.nix)\r\n\r\nyou will need [nix](https://github.com/NixOS/nix) to run that build script\r\n\r\n```\r\ngit clone --depth=1 https://github.com/milahu/nur-packages\r\ncd nur-packages\r\nnix-build . -A nano-node\r\n./result/bin/nano_wallet\r\n```\r\n\r\nit seems like `nano::logger::initialize` is not called\r\n\r\n`nano::logger` was added in #4375 by @pwojcikdev\r\n\r\n<details>\r\n<summary>\r\nnano/lib/logging.cpp\r\n</summary>\r\n\r\n\r\n```cpp\r\nvoid nano::logger::initialize (nano::log_config fallback, std::optional<std::filesystem::path> data_path, std::vector<std::string> const & config_overrides)\r\n{\r\n        // Only load log config from file if data_path is available (i.e. not running in cli mode)\r\n        nano::log_config config = data_path ? nano::load_log_config (fallback, *data_path, config_overrides) : fallback;\r\n        initialize_common (config, data_path);\r\n        global_initialized = true;\r\n}\r\n```\r\n\r\nso `nano::logger::logger` fails\r\n\r\n```cpp\r\nnano::logger::logger (std::string identifier) :\r\n  identifier{ std::move (identifier) }\r\n{\r\n  release_assert (global_initialized, \"logging should be initialized before creating a logger\");\r\n}\r\n```\r\n\r\nbut `nano::logger::initialize` should be called from `nano/nano_wallet/entry.cpp`\r\n\r\n```cpp\r\nint main (int argc, char * const * argv)\r\n{\r\n  nano::set_umask (); // Make sure the process umask is set before any files are created\r\n  nano::initialize_file_descriptor_limit ();\r\n  nano::logger::initialize (nano::log_config::cli_default ());\r\n```\r\n\r\n</details>\r\n\r\n\r\n<details>\r\n<summary>\r\nbacktrace\r\n</summary>\r\n\r\n```\r\n(gdb) bt\r\n#0  0x00007ffff56e3efc in __pthread_kill_implementation () from /nix/store/apab5i73dqa09wx0q27b6fbhd1r18ihl-glibc-2.39-31/lib/libc.so.6\r\n#1  0x00007ffff5693e86 in raise () from /nix/store/apab5i73dqa09wx0q27b6fbhd1r18ihl-glibc-2.39-31/lib/libc.so.6\r\n#2  0x00007ffff567c935 in abort () from /nix/store/apab5i73dqa09wx0q27b6fbhd1r18ihl-glibc-2.39-31/lib/libc.so.6\r\n#3  0x00000000007a0769 in assert_internal (check_expr=check_expr@entry=0x8e5144 \"global_initialized\", \r\n    func=func@entry=0x903fb8 \"nano::logger::logger(std::string)\", file=file@entry=0x903f90 \"/build/source/nano/lib/logging.cpp\", line=line@entry=220, \r\n    is_release_assert=is_release_assert@entry=true, error_msg=\"logging should be initialized before creating a logger\")\r\n    at /build/source/nano/lib/utility.cpp:168\r\n#4  0x0000000000770a3f in nano::logger::logger (this=this@entry=0xb14860 <(anonymous namespace)::logger>, identifier=\"\")\r\n    at /build/source/nano/lib/logging.cpp:220\r\n#5  0x0000000000499450 in __static_initialization_and_destruction_0 () at /build/source/nano/nano_wallet/entry.cpp:28\r\n#6  0x00000000004996d1 in _GLOBAL__sub_I_entry.cpp(void) () at /build/source/nano/nano_wallet/entry.cpp:342\r\n#7  0x00007ffff567e23e in __libc_start_main_impl () from /nix/store/apab5i73dqa09wx0q27b6fbhd1r18ihl-glibc-2.39-31/lib/libc.so.6\r\n#8  0x0000000000498c35 in _start ()\r\n```\r\n\r\nso `nano::logger::logger` is called by\r\n\r\n> ```#5  0x0000000000499450 in __static_initialization_and_destruction_0 () at /build/source/nano/nano_wallet/entry.cpp:28```\r\n\r\nnano/nano_wallet/entry.cpp\r\n\r\n```cpp\r\nnamespace\r\n{\r\nnano::logger logger{ \"wallet_daemon\" };\r\n```\r\n\r\nim surprised that this works in the original version (does it?)\r\n\r\n</details>\r\n\r\n\r\n<details>\r\n<summary>\r\nldd\r\n</summary>\r\n\r\n```\r\n$ ldd result/bin/.nano_wallet-wrapped\r\n        linux-vdso.so.1 (0x00007ffccd8e9000)\r\n        libcryptopp.so.8 => /nix/store/l9x8a6mbsija15dfclyy5mh5p4ayygcc-crypto++-8.9.0/lib/libcryptopp.so.8 (0x00007f39fec9d000)\r\n        libargon2.so.1 => /nix/store/mqkwyf0j5mb7f68qdw964xx6828k6dd2-libargon2-20190702/lib/libargon2.so.1 (0x00007f39fec93000)\r\n        liblmdb.so => /nix/store/jghdj60m9gkysiar29afz8shp1y78n19-lmdb-0.9.32/lib/liblmdb.so (0x00007f39fec7c000)\r\n        libboost_filesystem.so.1.81.0 => /nix/store/r3j1ry1w4l7psklv1xxgxpg7hlsic0ir-boost-1.81.0/lib/libboost_filesystem.so.1.81.0 (0x00007f39fec54000)\r\n        libboost_thread.so.1.81.0 => /nix/store/r3j1ry1w4l7psklv1xxgxpg7hlsic0ir-boost-1.81.0/lib/libboost_thread.so.1.81.0 (0x00007f39fec37000)\r\n        libboost_chrono.so.1.81.0 => /nix/store/r3j1ry1w4l7psklv1xxgxpg7hlsic0ir-boost-1.81.0/lib/libboost_chrono.so.1.81.0 (0x00007f39fec2d000)\r\n        libboost_atomic.so.1.81.0 => /nix/store/r3j1ry1w4l7psklv1xxgxpg7hlsic0ir-boost-1.81.0/lib/libboost_atomic.so.1.81.0 (0x00007f39fec23000)\r\n        librocksdb.so.9 => /nix/store/6fgsvpkrda4i3g5b0cz8i36mgh61nq42-rocksdb-9.1.1/lib/librocksdb.so.9 (0x00007f39fdfda000)\r\n        libboost_program_options.so.1.81.0 => /nix/store/r3j1ry1w4l7psklv1xxgxpg7hlsic0ir-boost-1.81.0/lib/libboost_program_options.so.1.81.0 (0x00007f39fdf6c000)\r\n        libdl.so.2 => /nix/store/apab5i73dqa09wx0q27b6fbhd1r18ihl-glibc-2.39-31/lib/libdl.so.2 (0x00007f39fdf67000)\r\n        libspdlog.so.1.13 => /nix/store/3ri8agivq4209yqpcnd0vk4yiycjai1q-spdlog-1.13.0/lib/libspdlog.so.1.13 (0x00007f39fdef2000)\r\n        libfmt.so.10 => /nix/store/fl6ayalxs1vg121p30l8nxx1dmhs49fj-fmt-10.2.1/lib/libfmt.so.10 (0x00007f39fdecd000)\r\n        libboost_iostreams.so.1.81.0 => /nix/store/r3j1ry1w4l7psklv1xxgxpg7hlsic0ir-boost-1.81.0/lib/libboost_iostreams.so.1.81.0 (0x00007f39fdeb4000)\r\n        libboost_regex.so.1.81.0 => /nix/store/r3j1ry1w4l7psklv1xxgxpg7hlsic0ir-boost-1.81.0/lib/libboost_regex.so.1.81.0 (0x00007f39fde61000)\r\n        libboost_system.so.1.81.0 => /nix/store/r3j1ry1w4l7psklv1xxgxpg7hlsic0ir-boost-1.81.0/lib/libboost_system.so.1.81.0 (0x00007f39fde5c000)\r\n        libminiupnpc.so.17 => /nix/store/isa8z597dw3rg5ig6c91ry2qha3wdqsm-miniupnpc-2.2.6/lib/libminiupnpc.so.17 (0x00007f39fde4b000)\r\n        libQt5Widgets.so.5 => /nix/store/jiszkap5g68fiin4lg911r55970p59jb-qtbase-5.15.12/lib/libQt5Widgets.so.5 (0x00007f39fd794000)\r\n        libQt5Gui.so.5 => /nix/store/jiszkap5g68fiin4lg911r55970p59jb-qtbase-5.15.12/lib/libQt5Gui.so.5 (0x00007f39fd115000)\r\n        libQt5Core.so.5 => /nix/store/jiszkap5g68fiin4lg911r55970p59jb-qtbase-5.15.12/lib/libQt5Core.so.5 (0x00007f39fcb4e000)\r\n        libm.so.6 => /nix/store/apab5i73dqa09wx0q27b6fbhd1r18ihl-glibc-2.39-31/lib/libm.so.6 (0x00007f39fca6b000)\r\n        libc.so.6 => /nix/store/apab5i73dqa09wx0q27b6fbhd1r18ihl-glibc-2.39-31/lib/libc.so.6 (0x00007f39fc87e000)\r\n        /nix/store/apab5i73dqa09wx0q27b6fbhd1r18ihl-glibc-2.39-31/lib/ld-linux-x86-64.so.2 => /nix/store/apab5i73dqa09wx0q27b6fbhd1r18ihl-glibc-2.39-31/lib64/ld-linux-x86-64.so.2 (0x00007f39ff1ec000)\r\n        libstdc++.so.6 => /nix/store/p3ffjixpnfgkqh20nsrc13vrj3yfi0nj-gcc-13.2.0-lib/lib/libstdc++.so.6 (0x00007f39fc61c000)\r\n        libgcc_s.so.1 => /nix/store/p3ffjixpnfgkqh20nsrc13vrj3yfi0nj-gcc-13.2.0-lib/lib/libgcc_s.so.1 (0x00007f39fc5f7000)\r\n        libpthread.so.0 => /nix/store/apab5i73dqa09wx0q27b6fbhd1r18ihl-glibc-2.39-31/lib/libpthread.so.0 (0x00007f39fc5f0000)\r\n        librt.so.1 => /nix/store/apab5i73dqa09wx0q27b6fbhd1r18ihl-glibc-2.39-31/lib/librt.so.1 (0x00007f39fc5eb000)\r\n        libsnappy.so.1 => /nix/store/9m1y0bvyr6dlab6373jh7y8hmd6r0ia3-snappy-1.2.0/lib/libsnappy.so.1 (0x00007f39fc5dc000)\r\n        libz.so.1 => /nix/store/nw1bnjadmzk9hnd4nbvxmqlh074vr16j-zlib-1.3.1/lib/libz.so.1 (0x00007f39fc5bc000)\r\n        libbz2.so.1 => /nix/store/q4k8gmw2gpncglwdvz9fmqqwnynsb143-bzip2-1.0.8/lib/libbz2.so.1 (0x00007f39fc5a9000)\r\n        liblz4.so.1 => /nix/store/w7ir04z15bxny7w5kzbyvwd7bi3kfi08-lz4-1.9.4/lib/liblz4.so.1 (0x00007f39fc570000)\r\n        libzstd.so.1 => /nix/store/7mnvfrpsbivkxyfbmqczdq5pbb1n59j1-zstd-1.5.6/lib/libzstd.so.1 (0x00007f39fc49e000)\r\n        liblzma.so.5 => /nix/store/n87dnp3cw99gssql0xk9yycrhrg50gir-xz-5.4.6/lib/liblzma.so.5 (0x00007f39fc46d000)\r\n        libicudata.so.73 => /nix/store/hxfhcs6sdqang5qgzrjhhhq6qwdd7vql-icu4c-73.2/lib/libicudata.so.73 (0x00007f39fa5df000)\r\n        libicui18n.so.73 => /nix/store/hxfhcs6sdqang5qgzrjhhhq6qwdd7vql-icu4c-73.2/lib/libicui18n.so.73 (0x00007f39fa28f000)\r\n        libicuuc.so.73 => /nix/store/hxfhcs6sdqang5qgzrjhhhq6qwdd7vql-icu4c-73.2/lib/libicuuc.so.73 (0x00007f39fa083000)\r\n        libGL.so.1 => /nix/store/s2w3qaw28ch6z0ymahkbhv66fbwz8hbb-libGL-1.7.0/lib/libGL.so.1 (0x00007f39f9ff3000)\r\n        libpng16.so.16 => /nix/store/31l4c9kwx37gy2cr1xiswbbp4azsyp1n-libpng-apng-1.6.43/lib/libpng16.so.16 (0x00007f39f9fba000)\r\n        libharfbuzz.so.0 => /nix/store/3058213v7kg1r0c7hrz4qyda2impjv5a-harfbuzz-8.4.0/lib/libharfbuzz.so.0 (0x00007f39f9e89000)\r\n        libpcre2-16.so.0 => /nix/store/sik7a8dic5lxhm4cp9npibk97x9jcxwf-pcre2-10.43/lib/libpcre2-16.so.0 (0x00007f39f9df6000)\r\n        libgthread-2.0.so.0 => /nix/store/bcms6vbac6jyffwyj8y630brpy1il4ks-glib-2.80.0/lib/libgthread-2.0.so.0 (0x00007f39f9def000)\r\n        libglib-2.0.so.0 => /nix/store/bcms6vbac6jyffwyj8y630brpy1il4ks-glib-2.80.0/lib/libglib-2.0.so.0 (0x00007f39f9ca4000)\r\n        libGLX.so.0 => /nix/store/wr5abp6s0z61mp1wwyjxhwcrs6sx3jwq-libglvnd-1.7.0/lib/libGLX.so.0 (0x00007f39f9c70000)\r\n        libX11.so.6 => /nix/store/h0aal69rli3p604dmijx7mps1diwx4f3-libX11-1.8.9/lib/libX11.so.6 (0x00007f39f9b2b000)\r\n        libXext.so.6 => /nix/store/pdikq8hwkj15d1jvlv48p98xn0xnn4dx-libXext-1.3.6/lib/libXext.so.6 (0x00007f39f9b14000)\r\n        libGLdispatch.so.0 => /nix/store/wr5abp6s0z61mp1wwyjxhwcrs6sx3jwq-libglvnd-1.7.0/lib/libGLdispatch.so.0 (0x00007f39f9a5b000)\r\n        libfreetype.so.6 => /nix/store/8ilnvaa1d66z1qn866phpdx5jpam0lm7-freetype-2.13.2/lib/libfreetype.so.6 (0x00007f39f998d000)\r\n        libgraphite2.so.3 => /nix/store/ff6vzhlbnydw8n9kh7bsfwh01pi2i3qc-graphite2-1.3.14/lib/libgraphite2.so.3 (0x00007f39f9964000)\r\n        libpcre2-8.so.0 => /nix/store/sik7a8dic5lxhm4cp9npibk97x9jcxwf-pcre2-10.43/lib/libpcre2-8.so.0 (0x00007f39f98c2000)\r\n        libxcb.so.1 => /nix/store/cvbf30dc4mamggijbxwlwxaxd7q4wch1-libxcb-1.17.0/lib/libxcb.so.1 (0x00007f39f9897000)\r\n        libbrotlidec.so.1 => /nix/store/qa2j4ql5vb7n1zyi8ai5acivsjkg0l8m-brotli-1.1.0-lib/lib/libbrotlidec.so.1 (0x00007f39f9889000)\r\n        libXau.so.6 => /nix/store/mhs3ys5lbahsvrai5y0fv49q2xp4pc31-libXau-1.0.11/lib/libXau.so.6 (0x00007f39f9884000)\r\n        libXdmcp.so.6 => /nix/store/6gg4xf3abpmdpkhpqkqwx2hdvs7fmgwc-libXdmcp-1.1.5/lib/libXdmcp.so.6 (0x00007f39f987a000)\r\n        libbrotlicommon.so.1 => /nix/store/qa2j4ql5vb7n1zyi8ai5acivsjkg0l8m-brotli-1.1.0-lib/lib/libbrotlicommon.so.1 (0x00007f39f9857000)\r\n```\r\n\r\n</details>\r\n\r\n</details>\r\n\r\n\r\n### backport to V26.0\r\n\r\ni tried to [backport this patch to V26.0](https://github.com/milahu/nano-node/tree/shared-libs-V26.0) as a workaround for https://github.com/nanocurrency/nano-node/pull/4680#issuecomment-2231675698\r\nbut this fails to [build](https://github.com/milahu/nur-packages/raw/master/pkgs/applications/blockchains/nano-node/26.0.nix) with dynamic boost libraries\r\n\r\n```\r\nundefined reference to `boost::log::v2_mt_posix::sinks::text_file_backend::~text_file_backend()'\r\n```\r\n\r\nsee also #269\r\n\r\n`boost::log` was removed in #4030 = V26.1\r\nand without `boost::log` the build just works with dynamic boost libraries\r\n",
    "draft": true,
    "pull_request": 4679,
    "label": "milahu:shared-libs",
    "created_at": "2024-07-15T16:35:45Z",
    "built_at": null,
    "build_status": "building",
    "docker_tag": null,
    "build_started_at": "2024-07-23T09:18:17Z",
    "run_id": null
  },
  {
    "hash": "d91247f13ef48c5143287ce95e32e9492e864628",
    "type": "pull_request",
    "title": "Offload vote cache lookup to a separate thread",
    "author": "pwojcikdev",
    "body": "This moves processing of cached votes away from congested election schedulers threads.",
    "draft": false,
    "pull_request": 4631,
    "label": "pwojcikdev:vote-cache-processor",
    "created_at": "2024-05-20T10:55:51Z",
    "built_at": "2024-05-20T11:30:09Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d91247f13ef48c5143287ce95e32e9492e864628",
    "build_started_at": "2024-05-20T11:00:22Z",
    "run_id": "9157655704"
  },
  {
    "hash": "d916e142a0d3602067691a7bea1fd54f88291440",
    "type": "pull_request",
    "pull_request": 4485,
    "label": "simpago:rep-cache-min-weight",
    "created_at": "2024-03-12T13:26:39Z",
    "built_at": "2024-03-19T07:14:15Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d916e142a0d3602067691a7bea1fd54f88291440",
    "build_started_at": "2024-03-19T06:34:05Z",
    "run_id": "8338613220"
  },
  {
    "hash": "d91f5992101398f1db451d237a95fc59e3fa846b",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Forward declarations",
    "pull_request": "4584",
    "created_at": "2024-04-25T13:04:25Z",
    "built_at": "2024-04-26T23:21:56Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d91f5992101398f1db451d237a95fc59e3fa846b",
    "build_started_at": "2024-04-26T22:30:20Z",
    "run_id": "8855146462"
  },
  {
    "hash": "d937fa2bf4354c55106eb3bb3d4f932d398fab5b",
    "type": "pull_request",
    "pull_request": 4308,
    "label": "RickiNano:replace-boost-filesystem",
    "created_at": "2023-10-05T10:02:02Z",
    "built_at": "2023-10-05T16:24:07Z",
    "build_status": "fail",
    "docker_tag": ""
  },
  {
    "hash": "d975781e90c527a1583790580d104e527eb64937",
    "type": "pull_request",
    "title": "Fix correctness, sanity check, and resolve shutdown issue.",
    "author": "clemahieu",
    "body": "There was a missing mutex lock entries_mutex in unchecked_map::collect_container_info.\r\n\r\nSanity check the equality of the iterator qualified root to the item searched for.\r\n\r\nConsider stopped flag when wait-looping. Use condition_variable::wait rather than this_thread::sleep_for",
    "draft": false,
    "pull_request": 4719,
    "label": "clemahieu:tsan_fixes",
    "created_at": "2024-09-03T02:23:56Z",
    "built_at": "2024-09-03T17:55:48Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d975781e90c527a1583790580d104e527eb64937",
    "build_started_at": "2024-09-03T17:28:11Z",
    "run_id": "10687742938"
  },
  {
    "hash": "d9b8593ad12f19c48006d72aa71b1abd223184ea",
    "type": "commit",
    "author": "clemahieu",
    "title": "Fix issue where unchecked_map::entries was being accessed for container information without acquiring the entries_mutex.",
    "pull_request": "4719",
    "created_at": "2024-09-02T19:59:23Z",
    "built_at": "2024-09-05T09:23:25Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d9b8593ad12f19c48006d72aa71b1abd223184ea",
    "build_started_at": "2024-09-05T08:19:09Z",
    "run_id": "10717113472"
  },
  {
    "hash": "d9bdec707f515a70b6cef5014ecf57b2de86dfa9",
    "type": "commit",
    "author": "clemahieu",
    "title": "Use nano::test::start_election to manually start elections instead of directly calling scheduler.",
    "pull_request": "4619",
    "created_at": "2024-05-13T16:05:01Z",
    "built_at": "2024-05-14T15:15:34Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:d9bdec707f515a70b6cef5014ecf57b2de86dfa9",
    "build_started_at": "2024-05-14T11:41:17Z",
    "run_id": "9081468447"
  },
  {
    "hash": "da4e9eb66a0fd723c06d1690e17aba2601755988",
    "type": "commit",
    "created_at": "2024-03-12T11:50:33Z",
    "built_at": "2024-03-12T12:08:41Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-12T11:53:24Z",
    "run_id": "8248315120"
  },
  {
    "hash": "da5a4a808ccc3ad6ae7c4b1d9df5e379ce325e12",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Ascendboot stop",
    "pull_request": "4618",
    "created_at": "2024-05-06T14:16:30Z",
    "built_at": "2024-05-14T15:24:44Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:da5a4a808ccc3ad6ae7c4b1d9df5e379ce325e12",
    "build_started_at": "2024-05-14T11:08:37Z",
    "run_id": "9081570210"
  },
  {
    "hash": "da5b6a29c8e6818c992d980e711f514c5efcfb5c",
    "type": "commit",
    "created_at": "2023-11-06T18:18:17Z",
    "built_at": "2023-12-01T11:24:35Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:da5b6a29c8e6818c992d980e711f514c5efcfb5c",
    "build_started_at": "2023-12-01T10:08:26Z",
    "run_id": "7058588921"
  },
  {
    "hash": "da6b8db8ab456de26b41d51e9db984c33e391dfb",
    "type": "pull_request",
    "title": "Remove `node::process_confirmed (...)`",
    "author": "pwojcikdev",
    "body": "This removes the `node::process_confirmed (...)` function. Blocks queued there could briefly found themselves in a limbo state, neither part of an active election or cementing set, which was racy.",
    "draft": false,
    "pull_request": 4758,
    "label": "pwojcikdev:remove-process-confirmed",
    "created_at": "2024-10-18T16:23:32Z",
    "built_at": "2024-10-18T17:03:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:da6b8db8ab456de26b41d51e9db984c33e391dfb",
    "build_started_at": "2024-10-18T16:34:43Z",
    "run_id": "11407498578"
  },
  {
    "hash": "da7c15bd47985a9acabbe53f7f4f8ee2c83372c7",
    "type": "pull_request",
    "title": "Fix `epoch_conflict_confirm` test",
    "author": "pwojcikdev",
    "body": "Fixing this test necessitated reworking `request_aggregator::aggregate ( .. )` and the way final votes are queried - only query final votes by full qualified root.",
    "draft": false,
    "pull_request": 4779,
    "label": "pwojcikdev:fix-epoch-conflict-confirm",
    "created_at": "2024-11-03T18:57:30Z",
    "built_at": "2024-11-03T19:32:50Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:da7c15bd47985a9acabbe53f7f4f8ee2c83372c7",
    "build_started_at": "2024-11-03T19:06:31Z",
    "run_id": "11653939335"
  },
  {
    "hash": "da8a50563e222c184d502a3b0d2250b4485ca3dc",
    "type": "pull_request",
    "pull_request": 4365,
    "label": "clemahieu:search_receivable_wallet_action",
    "created_at": "2024-01-17T15:35:23Z",
    "built_at": "2024-01-17T22:34:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:da8a50563e222c184d502a3b0d2250b4485ca3dc",
    "build_started_at": "2024-01-17T22:09:49Z",
    "run_id": "7562370754"
  },
  {
    "hash": "da9cf6ac004dec6944c01f638bf70f620cc98e91",
    "type": "commit",
    "created_at": "2023-07-29T11:27:07Z",
    "built_at": "2023-07-29T12:19:01Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:da9cf6ac004dec6944c01f638bf70f620cc98e91"
  },
  {
    "hash": "dab54e774bee25b29770cee1e416e81857c20a39",
    "type": "pull_request",
    "title": "Async task helper",
    "author": "pwojcikdev",
    "body": ">Wrapper with convenience functions and safety checks for asynchronous tasks. \r\n>Aims to provide interface similar to std::thread. \r\n\r\nIt will be useful for ongoing work of moving networking code to coroutines.",
    "draft": false,
    "pull_request": 4590,
    "label": "pwojcikdev:async-task",
    "created_at": "2024-04-27T20:54:47Z",
    "built_at": "2024-04-28T08:43:09Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:dab54e774bee25b29770cee1e416e81857c20a39",
    "build_started_at": "2024-04-28T08:17:40Z",
    "run_id": "8866230988"
  },
  {
    "hash": "dacd0bea30ac893b104c7bf0556a9409baf666bd",
    "type": "commit",
    "created_at": "2023-02-14T19:03:57Z",
    "built_at": "2023-02-14T19:52:33Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:dacd0bea30ac893b104c7bf0556a9409baf666bd"
  },
  {
    "hash": "dae83142a60f2833835b55ff10dcc9a2f1a9f48e",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge pull request #4636 from pwojcikdev/revert-activate-develop\n\nOptimize election scheduler activate function",
    "pull_request": "4636",
    "created_at": "2024-05-23T07:07:25Z",
    "built_at": "2024-05-23T07:55:48Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:dae83142a60f2833835b55ff10dcc9a2f1a9f48e",
    "build_started_at": "2024-05-23T07:11:40Z",
    "run_id": "9203977264"
  },
  {
    "hash": "daf5b1e52c7e0a11be65ca0d88dc29d65175690a",
    "type": "commit",
    "created_at": "2023-09-28T16:03:00Z",
    "built_at": "2023-09-28T17:06:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:daf5b1e52c7e0a11be65ca0d88dc29d65175690a"
  },
  {
    "hash": "dafdb0237f0569349d1a68870af8979a308416e0",
    "type": "commit",
    "created_at": "2023-05-03T11:34:37Z",
    "built_at": "2023-05-03T12:14:22Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:dafdb0237f0569349d1a68870af8979a308416e0"
  },
  {
    "hash": "db26e0361e03cc87d6c1dbc5f4a5d5695fdea5a4",
    "type": "pull_request",
    "pull_request": 4192,
    "label": "clemahieu:rpc_test_pending_cleanup",
    "created_at": "2023-03-21T00:00:06Z",
    "built_at": "2023-03-21T01:12:48Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:db26e0361e03cc87d6c1dbc5f4a5d5695fdea5a4"
  },
  {
    "hash": "db2b98f5a4aedc098b8bae212be81d97c042200c",
    "type": "commit",
    "created_at": "2023-11-06T17:53:36Z",
    "built_at": "2023-12-01T11:56:12Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:db2b98f5a4aedc098b8bae212be81d97c042200c",
    "build_started_at": "2023-12-01T10:08:26Z",
    "run_id": "7058588921"
  },
  {
    "hash": "db409183640acc03423bd5c412404e65860224f4",
    "type": "commit",
    "created_at": "2024-01-31T22:25:17Z",
    "built_at": "2024-01-31T22:58:19Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:db409183640acc03423bd5c412404e65860224f4",
    "build_started_at": "2024-01-31T22:26:16Z",
    "run_id": "7733191695"
  },
  {
    "hash": "db4e89075ce7fcf94680646865b1c5ca88ea74ea",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Avoid creating temporary inproc channels",
    "pull_request": "4625",
    "created_at": "2024-05-15T14:29:52Z",
    "built_at": "2024-05-16T15:20:16Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:db4e89075ce7fcf94680646865b1c5ca88ea74ea",
    "build_started_at": "2024-05-16T14:50:43Z",
    "run_id": "9113942794"
  },
  {
    "hash": "db7405f580af21b6ad98741430054ee04419b453",
    "type": "commit",
    "author": "clemahieu",
    "title": "This adds strong typing via std::variant to extracting internals via transaction->GetHandle()\n\nReturning either Transaction * or ReadOptions * seems dubious, the intent of this commit is to retain 1-to-1 compatibility while adding strong typing.",
    "pull_request": "4759",
    "created_at": "2024-09-30T10:44:50Z",
    "built_at": "2024-10-27T09:23:22Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:db7405f580af21b6ad98741430054ee04419b453",
    "build_started_at": "2024-10-27T08:45:28Z",
    "run_id": "11539109799"
  },
  {
    "hash": "db90344f36cc50cc18c4d21525b3d6f83b81ea21",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Tests #3",
    "pull_request": "4735",
    "created_at": "2024-09-24T17:55:42Z",
    "built_at": "2024-09-25T16:45:47Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:db90344f36cc50cc18c4d21525b3d6f83b81ea21",
    "build_started_at": "2024-09-25T13:41:38Z",
    "run_id": "11037071994"
  },
  {
    "hash": "dbb17515f6a09a0340759ab74e90ac2352e23d89",
    "type": "pull_request",
    "title": "Incremental backoff for `local_block_broadcaster`",
    "author": "pwojcikdev",
    "body": "This implements incremental backoff for block rebroadcasting. Previously block rebroadcasts happened every 60 seconds. This changes it, so that early on rebroadcasts happen more frequently, with 3 second interval increase. Ie. first rebroadcast happens after 3 seconds, second after 9, third after 18 etc.\r\n\r\nAdditionally there are improvements that were necessary to implement the above: avoiding unnecessary locking and config cleanup.",
    "draft": false,
    "pull_request": 4662,
    "label": "pwojcikdev:aggressive-block-broadcasts",
    "created_at": "2024-06-29T16:22:17Z",
    "built_at": "2024-06-29T18:14:01Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:dbb17515f6a09a0340759ab74e90ac2352e23d89",
    "build_started_at": "2024-06-29T17:46:48Z",
    "run_id": "9725884570"
  },
  {
    "hash": "dbcb512d30d4c00c4f0df2495a57bf807c9d7f6d",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Logs",
    "pull_request": "N/A",
    "created_at": "2024-04-27T13:04:54Z",
    "built_at": "2024-05-04T12:18:20Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:dbcb512d30d4c00c4f0df2495a57bf807c9d7f6d",
    "build_started_at": "2024-05-04T09:36:39Z",
    "run_id": "8950263923"
  },
  {
    "hash": "dbdf1b1e03a8a0400e8b12b08578a573d028c012",
    "type": "pull_request",
    "title": "Rocksdb tx cleanup",
    "author": "clemahieu",
    "body": "This cleans up a number of things related to rocksdb transaction handling.\r\n\r\nRemoves write_queue::use_noops. This flag was apparently only used in testing to disable the write queue functionality though no tests seemed impacted by its removal.\r\n\r\nRemoves individual table lock mutexes as the write_queue enforces write transaction serialisation.\r\n\r\nRemoves table locking arguments from write transaction functions since all write transactions are serialised.",
    "draft": false,
    "pull_request": 4737,
    "label": "clemahieu:rocksdb_tx_cleanup",
    "created_at": "2024-09-27T19:04:04Z",
    "built_at": "2024-09-27T19:38:52Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:dbdf1b1e03a8a0400e8b12b08578a573d028c012",
    "build_started_at": "2024-09-27T19:12:08Z",
    "run_id": "11076384658"
  },
  {
    "hash": "dbeea3a9b49e6c21a888c10c04c694d7970a82e8",
    "type": "pull_request",
    "pull_request": 4100,
    "label": "dsiganos:introduce_system_start_election",
    "created_at": "2023-02-03T01:41:02Z",
    "built_at": "2023-02-05T06:17:01Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:dbeea3a9b49e6c21a888c10c04c694d7970a82e8"
  },
  {
    "hash": "dc039ab53ce81f34f323e097d70b1d7e925e0ba4",
    "type": "pull_request",
    "pull_request": 4133,
    "label": "clemahieu:election_occupancy",
    "created_at": "2023-02-15T18:23:49Z",
    "built_at": "2023-02-20T18:18:25Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:dc039ab53ce81f34f323e097d70b1d7e925e0ba4"
  },
  {
    "hash": "dc3ff664dafaff3b512967c70f35b3f8d8dc5448",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Rewrite ledger random block sampling",
    "pull_request": "4792",
    "created_at": "2024-11-16T22:48:19Z",
    "built_at": "2024-11-26T16:13:44Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:dc3ff664dafaff3b512967c70f35b3f8d8dc5448",
    "build_started_at": "2024-11-26T15:12:14Z",
    "run_id": "12034114658"
  },
  {
    "hash": "dc536b93a6cbbd77df9e6722f9165427b36bd624",
    "type": "pull_request",
    "pull_request": 4267,
    "label": "clemahieu:remove_signature_threads",
    "created_at": "2023-08-22T12:30:21Z",
    "built_at": "2023-11-06T12:35:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:dc536b93a6cbbd77df9e6722f9165427b36bd624",
    "build_started_at": "2023-11-06T12:09:26Z",
    "run_id": "6770505053"
  },
  {
    "hash": "dc69e54751214f3af45d5bce903bb6a33036a2ac",
    "type": "commit",
    "author": "clemahieu",
    "title": "Removing unused channel header.",
    "pull_request": "N/A",
    "created_at": "2024-10-28T20:51:22Z",
    "built_at": "2024-10-31T07:55:02Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-10-31T03:33:18Z",
    "run_id": "11607902372"
  },
  {
    "hash": "dc6da9365519563013c9b3d07a4c9d7ddb3fd2bd",
    "type": "pull_request",
    "title": "Move write database queue",
    "body": "This renames write_database_queue to write_queue and moves the class into the nano::store library. It also moves the object from nano::node to nano::store::component.\r\n\r\nThis is a more natural place for this class/object to be placed and also preps for confirming_set to be moved on to the ledger class which would otherwise have a cyclic dependency secure -> store -> node -> secure",
    "draft": false,
    "pull_request": 4535,
    "label": "clemahieu:move_write_database_queue",
    "created_at": "2024-04-04T11:07:35Z",
    "built_at": "2024-04-04T11:43:26Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:dc6da9365519563013c9b3d07a4c9d7ddb3fd2bd",
    "build_started_at": "2024-04-04T11:17:36Z",
    "run_id": "8553742917"
  },
  {
    "hash": "dc783a79716682ee52bbc7050387d2b490970bbc",
    "type": "commit",
    "created_at": "2024-03-12T12:32:49Z",
    "built_at": "2024-03-22T19:13:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:dc783a79716682ee52bbc7050387d2b490970bbc",
    "build_started_at": "2024-03-22T17:19:57Z",
    "run_id": "8394068316"
  },
  {
    "hash": "dc7b75a7b300177c5436b02e85a4eec98d96a7ee",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Memory bound block cementing",
    "pull_request": "N/A",
    "created_at": "2024-06-23T19:16:21Z",
    "built_at": "2024-07-09T19:04:03Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:dc7b75a7b300177c5436b02e85a4eec98d96a7ee",
    "build_started_at": "2024-07-09T16:43:44Z",
    "run_id": "9862382260"
  },
  {
    "hash": "dc7d2db4aeafe7d11a551aa311b3ebc6db435bc3",
    "type": "pull_request",
    "pull_request": 4341,
    "label": "pwojcikdev:confirm-req-remove-block",
    "created_at": "2023-11-10T23:32:07Z",
    "built_at": "2023-11-11T00:18:09Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:dc7d2db4aeafe7d11a551aa311b3ebc6db435bc3",
    "build_started_at": "2023-11-10T23:33:52Z",
    "run_id": "6830623549"
  },
  {
    "hash": "dc7d89f0175cc223cff92b8ff1ceb7b6494fc758",
    "type": "pull_request",
    "title": "Adjust `tcp_listener` logging verbosity",
    "author": "pwojcikdev",
    "body": null,
    "draft": false,
    "pull_request": 4674,
    "label": "pwojcikdev:tcp-listener-log-verbosity",
    "created_at": "2024-07-07T13:11:14Z",
    "built_at": "2024-07-07T13:44:34Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:dc7d89f0175cc223cff92b8ff1ceb7b6494fc758",
    "build_started_at": "2024-07-07T13:15:58Z",
    "run_id": "9827613662"
  },
  {
    "hash": "dcaf4521826b5034b94de494f0b69465de253c32",
    "type": "pull_request",
    "pull_request": 4167,
    "label": "clemahieu:block_origin_remove",
    "created_at": "2023-03-03T03:40:11Z",
    "built_at": "2023-03-03T04:46:51Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:dcaf4521826b5034b94de494f0b69465de253c32"
  },
  {
    "hash": "dcb4dbc34b17016d473397ccd4f48bbe6a2c38b9",
    "type": "commit",
    "created_at": "2023-09-14T12:26:14Z",
    "built_at": "2023-09-15T17:05:53Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:dcb4dbc34b17016d473397ccd4f48bbe6a2c38b9"
  },
  {
    "hash": "dcbb9858535f609116133ec940284cb1d4050a38",
    "type": "pull_request",
    "title": "Optimize cemented callbacks",
    "author": "pwojcikdev",
    "body": "This attempts to optimize the election cementing callbacks. It often takes as long or even longer to cement a confirmed election as it takes to get it confirmed in the first place. This is not a complete solution, there is still a delay, but I hope it's a step in the right direction. \r\nWe're debugging this together with @gr0vity-dev who really is doing incredible work to dig deep into this issue.\r\n\r\n![image](https://github.com/nanocurrency/nano-node/assets/3044353/006a4fc1-d499-478a-a372-7b5240b7ef01)\r\n",
    "draft": false,
    "pull_request": 4642,
    "label": "pwojcikdev:cemented-observers-optimize",
    "created_at": "2024-05-24T13:34:30Z",
    "built_at": "2024-05-24T14:27:49Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:dcbb9858535f609116133ec940284cb1d4050a38",
    "build_started_at": "2024-05-24T13:56:05Z",
    "run_id": "9225114660"
  },
  {
    "hash": "dcf214c9580ee9212f6dd72678056c24b08f4298",
    "type": "pull_request",
    "title": "Fair queuing for vote processor",
    "body": "Similar to the way it was done for block processing, this implements fair queue for vote processor. Votes are processed in round robin manner from all peers, with higher tier votes having slightly higher priority.",
    "draft": false,
    "pull_request": 4536,
    "label": "pwojcikdev:fair-queuing/vote-processor",
    "created_at": "2024-04-04T14:58:58Z",
    "built_at": "2024-04-05T21:19:56Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:dcf214c9580ee9212f6dd72678056c24b08f4298",
    "build_started_at": "2024-04-05T20:52:38Z",
    "run_id": "8575580348"
  },
  {
    "hash": "dd07e26de9cb9702fc5fb99ae8edb5f7971af03d",
    "type": "pull_request",
    "title": "RPC endpoint for election statistics",
    "body": "This pull request adds a new election_statistics RPC endpoint to help identify bottlenecks within the AEC.\r\nThe endpoint will respond with the number of active elections for each electiontype. It will also return the percentage of AEC slots in use.\r\nIf this is merged, I intend to expand the dataset with the average and max election age.\r\n\r\nRequest:\r\n`{\r\n  \"action\": \"election_statistics\"\r\n}`\r\n\r\nResponse example:\r\n`{\r\n    \"normal\": \"1595\",\r\n    \"hinted\": \"70\",\r\n    \"optimistic\": \"222\",\r\n    \"total\": \"1887\",\r\n    \"aec_utilization_percentage\": \"37.74\"\r\n}`",
    "draft": false,
    "pull_request": 4533,
    "label": "RickiNano:aec-statistics",
    "created_at": "2024-04-03T17:29:00Z",
    "built_at": "2024-04-03T17:55:33Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:dd07e26de9cb9702fc5fb99ae8edb5f7971af03d",
    "build_started_at": "2024-04-03T17:30:12Z",
    "run_id": "8543006467"
  },
  {
    "hash": "dd08220e2ccdc3092b4594bcc37aecda2007d1c1",
    "type": "pull_request",
    "title": "Simplify vote generator",
    "author": "RickiNano",
    "body": "This PR removes the vote_generator_threshold that generates an additional wait to bundle more votes into each message. That wait period adds voting latency.\r\nThe logic that handles processing of requests and candidates have also been simplified. There was also a bug that request would only process when candidates were empty.\r\nBob has performance tested this branch and found no performance improvement nor degredatation\r\n![screenshot_2024-10-08_at_08 18 29](https://github.com/user-attachments/assets/f061f655-319f-45de-8cfb-76e0cd50a0fe)\r\n\r\nAn interesting side effect is that the amount of active election timeouts dropped with this branch\r\n![screenshot_2024-10-08_at_08 21 18](https://github.com/user-attachments/assets/41cd50a5-727a-4e40-bf71-96cb8d2d5626)\r\n\r\nHere is some testing on the NanoTicker node on live network. The screenshots are taken right after the daily saturation test. \r\n![image](https://github.com/user-attachments/assets/753dcaef-bb83-40fc-85a3-8c6b1c5e37e1)\r\n",
    "draft": false,
    "pull_request": 4748,
    "label": "RickiNano:Vote-wait",
    "created_at": "2024-10-08T10:50:59Z",
    "built_at": "2024-10-21T14:58:21Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:dd08220e2ccdc3092b4594bcc37aecda2007d1c1",
    "build_started_at": "2024-10-21T14:29:40Z",
    "run_id": "11442366931"
  },
  {
    "hash": "dd121a84db6329bd428ea89a7cea9c575d8c4b62",
    "type": "commit",
    "created_at": "2023-11-06T10:33:58Z",
    "built_at": "2023-11-06T16:26:38Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:dd121a84db6329bd428ea89a7cea9c575d8c4b62",
    "build_started_at": "2023-11-06T15:27:16Z",
    "run_id": "6772887815"
  },
  {
    "hash": "dd3da51a9b2164865f06c5a37aef518b936aeebb",
    "type": "pull_request",
    "pull_request": 4504,
    "label": "pwojcikdev:networking-fixes/handshake-refactor",
    "created_at": "2024-03-19T09:24:42Z",
    "built_at": "2024-03-19T19:32:03Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:dd3da51a9b2164865f06c5a37aef518b936aeebb",
    "build_started_at": "2024-03-19T19:07:32Z",
    "run_id": "8348759365"
  },
  {
    "hash": "dd4b4f57b0dc95512c7249499d3b5b2d9ecf8c3f",
    "type": "pull_request",
    "title": "Fix `node.block_confirm` test",
    "author": "pwojcikdev",
    "body": null,
    "draft": false,
    "pull_request": 4666,
    "label": "pwojcikdev:fix-node-block-confirm",
    "created_at": "2024-07-02T12:22:26Z",
    "built_at": "2024-07-02T12:57:23Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:dd4b4f57b0dc95512c7249499d3b5b2d9ecf8c3f",
    "build_started_at": "2024-07-02T12:31:15Z",
    "run_id": "9760983124"
  },
  {
    "hash": "dd5073944f78523ceff082f3bfe3bde06257a1d9",
    "type": "commit",
    "author": "clemahieu",
    "title": "Forward declare block_type.",
    "pull_request": "N/A",
    "created_at": "2024-10-27T16:56:57Z",
    "built_at": "2024-10-31T08:13:15Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:dd5073944f78523ceff082f3bfe3bde06257a1d9",
    "build_started_at": "2024-10-31T03:33:18Z",
    "run_id": "11607976079"
  },
  {
    "hash": "dd5a00c1d3359bc27d9a75d369d4e1f7b70f6724",
    "type": "commit",
    "created_at": "2024-02-14T12:32:23Z",
    "built_at": "2024-02-14T13:21:01Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:dd5a00c1d3359bc27d9a75d369d4e1f7b70f6724",
    "build_started_at": "2024-02-14T12:44:27Z",
    "run_id": "7901382013"
  },
  {
    "hash": "dd668ad1880e5b1d90b16f0db429384ec77e4771",
    "type": "pull_request",
    "title": "Modify `observer_set` to only accept and pass const ref arguments",
    "author": "pwojcikdev",
    "body": "This avoids copying parameters when notifying observers. \r\nIt's the first part of the refactoring, the second will be dropping redundant `const &` qualifications from observer set events, eg: `nano::observer_set<processed_batch_t const &> batch_processed;` to just `nano::observer_set<processed_batch_t> batch_processed;` should be fine now, the batch will be passed by reference by default. I'll do this refactoring after bounded backlog changes as it will mess a lot of existing commits.",
    "draft": false,
    "pull_request": 4768,
    "label": "pwojcikdev:observer-set-const-refs",
    "created_at": "2024-10-27T10:39:37Z",
    "built_at": "2024-10-27T11:11:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:dd668ad1880e5b1d90b16f0db429384ec77e4771",
    "build_started_at": "2024-10-27T10:42:01Z",
    "run_id": "11539816318"
  },
  {
    "hash": "dd7a4e11b91635fe4a5633644cb2ad54d4cdbaff",
    "type": "commit",
    "created_at": "2023-08-22T11:41:49Z",
    "built_at": "2023-11-06T16:11:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:dd7a4e11b91635fe4a5633644cb2ad54d4cdbaff",
    "build_started_at": "2023-11-06T15:27:16Z",
    "run_id": "6772887815"
  },
  {
    "hash": "ddb3cf55623b0be9c99b94052de353497dc1c22b",
    "type": "commit",
    "created_at": "2024-03-23T13:52:55Z",
    "built_at": null,
    "build_status": "building",
    "docker_tag": null,
    "build_started_at": "2024-03-25T13:29:30Z",
    "run_id": "8420893800"
  },
  {
    "hash": "ddf34f1b34791c514a8e0396a493c26c2cc0a124",
    "type": "pull_request",
    "title": "Cementing fixes",
    "author": "pwojcikdev",
    "body": "Builds on https://github.com/nanocurrency/nano-node/pull/4720",
    "draft": false,
    "pull_request": 4722,
    "label": "pwojcikdev:fix-cementing",
    "created_at": "2024-09-05T15:25:12Z",
    "built_at": "2024-09-05T18:20:07Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ddf34f1b34791c514a8e0396a493c26c2cc0a124",
    "build_started_at": "2024-09-05T17:51:59Z",
    "run_id": "10725580463"
  },
  {
    "hash": "de0d259b2b5d2919250272c25a279818afbb3b29",
    "type": "pull_request",
    "pull_request": 4444,
    "label": "clemahieu:node_rep_block_remove",
    "created_at": "2024-02-20T19:41:39Z",
    "built_at": "2024-02-20T20:09:45Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:de0d259b2b5d2919250272c25a279818afbb3b29",
    "build_started_at": "2024-02-20T19:43:23Z",
    "run_id": "7979094956"
  },
  {
    "hash": "de3b0143e185ef9845566fad3d2c07eeb7713b9e",
    "type": "pull_request",
    "pull_request": 4486,
    "label": "clemahieu:ledger_view",
    "created_at": "2024-03-12T14:33:24Z",
    "built_at": "2024-03-18T19:03:50Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-18T18:19:31Z",
    "run_id": "8331690328"
  },
  {
    "hash": "de6918560b8210fbe4fbb0b9ed68321d20326051",
    "type": "pull_request",
    "title": "migrate_database_lmdb_to_rocksdb improvements",
    "author": "RickiNano",
    "body": "The `migrate_database_lmdb_to_rocksdb` option is running for a very long time with the current ledger size (almost 200 million blocks). On my local machine it took 65 minutes to complete. Nothing is written on screen during this process and users may think the process has stalled.\r\nThis PR adds some progress feedback. One update for each of the 7 tables that are migrated.\r\nIt also adds a simple disk space check to warn users if they might not have enough space to complete the migration.\r\n~~The current converted RocksDb database is 73 GB, and the warning is given if the system has less than 75GB available.~~\r\nThe warning is given based on the size of the LMDB database that is being migrated. The final RocksDb size is approximately 65% of the LMDB space.",
    "draft": false,
    "pull_request": 4647,
    "label": "RickiNano:lmdb-to-rocksdb",
    "created_at": "2024-06-13T10:47:31Z",
    "built_at": "2024-06-23T19:08:59Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:de6918560b8210fbe4fbb0b9ed68321d20326051",
    "build_started_at": "2024-06-23T18:43:09Z",
    "run_id": "9635669356"
  },
  {
    "hash": "de890546426a76e1fa5e29e7eb466e1702777653",
    "type": "pull_request",
    "pull_request": 4232,
    "label": "clemahieu:docker_build_timeout_60",
    "created_at": "2023-05-15T15:45:53Z",
    "built_at": "2023-05-15T16:32:47Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:de890546426a76e1fa5e29e7eb466e1702777653"
  },
  {
    "hash": "de9b40b6440f937c68f53aafe5c988d663ec35ec",
    "type": "commit",
    "author": "clemahieu",
    "title": "Removing include of rep_weights from common.hpp",
    "pull_request": "4776",
    "created_at": "2024-10-28T22:41:39Z",
    "built_at": "2024-10-31T08:09:35Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-10-31T03:33:18Z",
    "run_id": "11608056484"
  },
  {
    "hash": "deb7451e63aef4fa68b8030a74ba30cb7fa36c7d",
    "type": "pull_request",
    "title": "use shared libraries",
    "author": "milahu",
    "body": "i want to link `nano-node` against shared libraries, to speed up the build process\r\n\r\nso effectively, i have reverted #4030 (and some other commits)\r\n\r\nthe build is passing, but now i get this error on runtime... ideas?\r\n\r\n```\r\n$ /nix/store/4cw51sk7va4mx1nnbcfh61vba8i5jyvv-nano-node-26.1/bin/nano_wallet\r\nAssertion (global_initialized) failed\r\nnano::logger::logger(std::string)\r\n/build/source/nano/lib/logging.cpp:220\r\nError: logging should be initialized before creating a logger\r\n\r\n 0# 0x0000000000A11F07 in /nix/store/4cw51sk7va4mx1nnbcfh61vba8i5jyvv-nano-node-26.1/bin/nano_wallet\r\n 1# 0x0000000000A09DD8 in /nix/store/4cw51sk7va4mx1nnbcfh61vba8i5jyvv-nano-node-26.1/bin/nano_wallet\r\n 2# 0x00000000009ABAB2 in /nix/store/4cw51sk7va4mx1nnbcfh61vba8i5jyvv-nano-node-26.1/bin/nano_wallet\r\n 3# 0x000000000050CAAF in /nix/store/4cw51sk7va4mx1nnbcfh61vba8i5jyvv-nano-node-26.1/bin/nano_wallet\r\n 4# __libc_start_main in /nix/store/apab5i73dqa09wx0q27b6fbhd1r18ihl-glibc-2.39-31/lib/libc.so.6\r\n 5# 0x000000000052F915 in /nix/store/4cw51sk7va4mx1nnbcfh61vba8i5jyvv-nano-node-26.1/bin/nano_wallet\r\n\r\nAborted (core dumped)\r\n```\r\n\r\nit works as expected with the [nano-node with gitmodules](https://github.com/NixOS/nixpkgs/raw/master/pkgs/applications/blockchains/nano-wallet/default.nix) build\r\n(nixpkgs has only `nano-wallet` but not the full `nano-node`, dont ask me why)\r\n\r\n```\r\nnix-shell -p nano-wallet\r\nnano_wallet\r\n```\r\n\r\nmy build script is [nano-node.nix](https://github.com/milahu/nur-packages/raw/master/pkgs/applications/blockchains/nano-node/default.nix)\r\n\r\nyou will need [nix](https://github.com/NixOS/nix) to run that build script\r\n\r\n```\r\ngit clone --depth=1 https://github.com/milahu/nur-packages\r\ncd nur-packages\r\nnix-build . -A nano-node\r\n./result/bin/nano_wallet\r\n```\r\n\r\nit seems like `nano::logger::initialize` is not called\r\n\r\nnano/lib/logging.cpp\r\n\r\n```cpp\r\nvoid nano::logger::initialize (nano::log_config fallback, std::optional<std::filesystem::path> data_path, std::vector<std::string> const & config_overrides)\r\n{\r\n        // Only load log config from file if data_path is available (i.e. not running in cli mode)\r\n        nano::log_config config = data_path ? nano::load_log_config (fallback, *data_path, config_overrides) : fallback;\r\n        initialize_common (config, data_path);\r\n        global_initialized = true;\r\n}\r\n```\r\n\r\nso `nano::logger::logger` fails\r\n\r\n```cpp\r\nnano::logger::logger (std::string identifier) :\r\n  identifier{ std::move (identifier) }\r\n{\r\n  release_assert (global_initialized, \"logging should be initialized before creating a logger\");\r\n}\r\n```\r\n\r\n",
    "draft": true,
    "pull_request": 4679,
    "label": "milahu:shared-libs",
    "created_at": "2024-07-15T16:35:45Z",
    "built_at": null,
    "build_status": "building",
    "docker_tag": null,
    "build_started_at": "2024-07-15T16:43:24Z",
    "run_id": null
  },
  {
    "hash": "dece1bcb10eb084908b682a5f299291197199e51",
    "type": "commit",
    "created_at": "2024-03-08T00:32:17Z",
    "built_at": "2024-03-09T13:52:11Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:dece1bcb10eb084908b682a5f299291197199e51",
    "build_started_at": "2024-03-09T12:18:32Z",
    "run_id": "8214449124"
  },
  {
    "hash": "ded11cf5593a5ee6e2e0016d1bdbc7c6a4726f60",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge pull request #4806 from pwojcikdev/bootstrap-tuning-5\n\nBootstrap tuning",
    "pull_request": "4806",
    "created_at": "2024-12-10T18:39:27Z",
    "built_at": "2024-12-10T20:20:13Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ded11cf5593a5ee6e2e0016d1bdbc7c6a4726f60",
    "build_started_at": "2024-12-10T18:42:47Z",
    "run_id": "12263622625"
  },
  {
    "hash": "ded54b2f7bd32fd16ebc1dee3b94b2c8f1cc06e0",
    "type": "pull_request",
    "title": "Documentation for pending key and info classes and some other improvements whilst investigating",
    "author": "dsiganos",
    "body": "The motivation for this PR was a desire to document pending_key and pending_info classes.\r\nHowever, before I could document them, I needed to understand them.\r\nI created a test case for pending table to help me understand it.\r\nI created a function to print the pending table for learning and debugging purposes.\r\nAnd whilst creating that test case, I noticed that they were refactoring improvements that could be made.",
    "draft": false,
    "pull_request": 4553,
    "label": "dsiganos:pending_key_info_improvements",
    "created_at": "2024-04-12T17:24:23Z",
    "built_at": "2024-04-12T18:03:00Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ded54b2f7bd32fd16ebc1dee3b94b2c8f1cc06e0",
    "build_started_at": "2024-04-12T17:35:21Z",
    "run_id": "8665855787"
  },
  {
    "hash": "deebb3d1a9e4fdaa93488e0ef466665be23bf357",
    "type": "pull_request",
    "pull_request": 4199,
    "label": "thsfs:add_cmake_for_submodules",
    "created_at": "2023-03-22T19:51:02Z",
    "built_at": "2023-03-23T18:05:45Z",
    "build_status": "fail",
    "docker_tag": ""
  },
  {
    "hash": "deecc96168e0ccfa8ed6187625b1331251d17e37",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Logging",
    "pull_request": "4690",
    "created_at": "2024-08-03T11:38:52Z",
    "built_at": "2024-08-11T19:28:17Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:deecc96168e0ccfa8ed6187625b1331251d17e37",
    "build_started_at": "2024-08-11T18:19:33Z",
    "run_id": "10342056805"
  },
  {
    "hash": "def7f0b7489f5d302da94cee9c4634bf948ffc79",
    "type": "commit",
    "author": "clemahieu",
    "title": "Remove manual election activation and confirmation height checking from rpc.account_representative_set_epoch_2_insufficient_work\n\nComment about slow confirmation seems out of date as there is no performance difference simply checking confirmed status.",
    "pull_request": "4619",
    "created_at": "2024-05-13T16:48:45Z",
    "built_at": "2024-05-14T16:03:34Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:def7f0b7489f5d302da94cee9c4634bf948ffc79",
    "build_started_at": "2024-05-14T11:41:17Z",
    "run_id": "9082177072"
  },
  {
    "hash": "df1416db1f8ee20bee01bb977dba8b4d554f7997",
    "type": "pull_request",
    "pull_request": 4173,
    "label": "clemahieu:flatbuffer_version_bump",
    "created_at": "2023-03-06T11:18:55Z",
    "built_at": "2023-03-06T22:38:18Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:df1416db1f8ee20bee01bb977dba8b4d554f7997"
  },
  {
    "hash": "df24921bcbde397e9da6c731e028087b8185c001",
    "type": "pull_request",
    "pull_request": 4368,
    "label": "clemahieu:bootstrap_test_add_node",
    "created_at": "2024-01-18T01:32:57Z",
    "built_at": "2024-01-18T03:06:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:df24921bcbde397e9da6c731e028087b8185c001",
    "build_started_at": "2024-01-18T02:18:48Z",
    "run_id": "7564443267"
  },
  {
    "hash": "df2f06dc0685718fe0a1e08858d59bbf0c917a84",
    "type": "commit",
    "author": "clemahieu",
    "title": "Revert \"Rewrite wallet::search_receivable in terms of receivable iterators\"\n\nThis reverts commit 30a3cc2462a7083c710f7314dfdaed5c3915312d.\n\n# Conflicts:\n#\tnano/node/wallet.cpp",
    "pull_request": "4711",
    "created_at": "2024-08-21T13:39:24Z",
    "built_at": "2024-08-22T11:01:00Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:df2f06dc0685718fe0a1e08858d59bbf0c917a84",
    "build_started_at": "2024-08-22T09:33:21Z",
    "run_id": "10506412356"
  },
  {
    "hash": "df43cb28e3db873f8191d805d50ff2545d3acbb5",
    "type": "commit",
    "title": "Fix intermittent failure of request_aggregator.split by directly confirming setup blocks instead of using an election. (#4546)",
    "pull_request": "4546",
    "created_at": "2024-04-09T19:42:39Z",
    "built_at": "2024-04-09T20:08:58Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:df43cb28e3db873f8191d805d50ff2545d3acbb5",
    "build_started_at": "2024-04-09T19:43:42Z",
    "run_id": "8621375857"
  },
  {
    "hash": "df590413b96fa2dd9b807df9c09f0c87d7fef43f",
    "type": "pull_request",
    "pull_request": 4111,
    "label": "pwojcikdev:optimistic-elections-2-rebased",
    "created_at": "2023-02-08T18:34:22Z",
    "built_at": "2023-02-08T19:44:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:df590413b96fa2dd9b807df9c09f0c87d7fef43f"
  },
  {
    "hash": "dfc36690077bd368dd0e5157afdffed7dbf0c364",
    "type": "pull_request",
    "title": "Traffic shaping",
    "author": "pwojcikdev",
    "body": "This is a draft PR for an ongoing work that overhauls how outgoing traffic is handled and prioritized. This will significantly improve how the node handles network congestion, which is extremely important during spam.\r\n\r\nDepends on PRs:\r\nhttps://github.com/nanocurrency/nano-node/pull/4784",
    "draft": true,
    "pull_request": 4786,
    "label": "pwojcikdev:traffic-shaping-pr",
    "created_at": "2024-11-18T19:43:02Z",
    "built_at": "2024-12-11T22:09:19Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:dfc36690077bd368dd0e5157afdffed7dbf0c364",
    "build_started_at": "2024-12-11T21:40:51Z",
    "run_id": "12285375657"
  },
  {
    "hash": "dfcc159c7b6085c279cafcaa973413840ce560a6",
    "type": "pull_request",
    "pull_request": 4521,
    "label": "RickiNano:update-config",
    "created_at": "2024-03-24T14:43:23Z",
    "built_at": "2024-03-24T15:09:24Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:dfcc159c7b6085c279cafcaa973413840ce560a6",
    "build_started_at": "2024-03-24T14:44:10Z",
    "run_id": "8410090613"
  },
  {
    "hash": "dfdbc35693b61684bd6d4e222bb049e434cac559",
    "type": "pull_request",
    "pull_request": 4459,
    "label": "dsiganos:remove_possible_private_key_access",
    "created_at": "2024-03-05T15:32:08Z",
    "built_at": "2024-03-05T17:39:10Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:dfdbc35693b61684bd6d4e222bb049e434cac559",
    "build_started_at": "2024-03-05T17:12:52Z",
    "run_id": "8160251067"
  },
  {
    "hash": "dfe116e60f380829694def2b68021ee883081aec",
    "type": "pull_request",
    "title": "Bounded backlog",
    "author": "pwojcikdev",
    "body": "This is ongoing work for bounded backlog. This limits the number of unconfirmed blocks that the node needs to store. The implementation of this mechanism is nontrivial because the node relies heavily on the fact that unconfirmed blocks are present in the ledger.\r\n\r\nDepends on PRs:\r\nhttps://github.com/nanocurrency/nano-node/pull/4758",
    "draft": true,
    "pull_request": 4787,
    "label": "pwojcikdev:bounded-backlog-pr",
    "created_at": "2024-11-18T20:36:19Z",
    "built_at": "2024-11-18T23:27:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:dfe116e60f380829694def2b68021ee883081aec",
    "build_started_at": "2024-11-18T22:31:26Z",
    "run_id": "11902560243"
  },
  {
    "hash": "dfefc926d4fd9a6ffb17d6a10051f3f2a42d43c5",
    "type": "pull_request",
    "pull_request": 4238,
    "label": "clemahieu:scheduling_limiter",
    "created_at": "2023-05-19T01:07:22Z",
    "built_at": "2023-09-03T18:29:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:dfefc926d4fd9a6ffb17d6a10051f3f2a42d43c5"
  },
  {
    "hash": "dff18bf42704abf35a13dbc79a56e1eecbc2e148",
    "type": "pull_request",
    "title": "Cementing rate limiter",
    "author": "pwojcikdev",
    "body": "Part of bounded backlog PR https://github.com/nanocurrency/nano-node/pull/4787 that adds cementing rate limiter. This is not expected to be exposed to end-users but is necessary for inducing backlog during testing to test the bounded backlog behavior.",
    "draft": false,
    "pull_request": 4789,
    "label": "pwojcikdev:cementing-rate-limiter-pr",
    "created_at": "2024-11-25T15:55:20Z",
    "built_at": "2024-11-27T12:58:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:dff18bf42704abf35a13dbc79a56e1eecbc2e148",
    "build_started_at": "2024-11-27T12:30:26Z",
    "run_id": "12050324073"
  },
  {
    "hash": "dff65640d3490ba14540530de96fb121c4676c29",
    "type": "pull_request",
    "pull_request": 4268,
    "label": "prodevancecoin:prodano-master",
    "created_at": "2023-08-23T09:17:07Z",
    "built_at": null,
    "build_status": "building",
    "docker_tag": null
  },
  {
    "hash": "e022d42af0c668877db0bbbbff2ddb13402a6ae7",
    "type": "pull_request",
    "pull_request": 4371,
    "label": "dsiganos:fix_active_transaction_fifo",
    "created_at": "2024-01-18T10:30:43Z",
    "built_at": "2024-01-18T11:04:00Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e022d42af0c668877db0bbbbff2ddb13402a6ae7",
    "build_started_at": "2024-01-18T10:39:05Z",
    "run_id": "7568750826"
  },
  {
    "hash": "e030ebc3b09ef5e75b61999f5ef180e999c6e88b",
    "type": "pull_request",
    "title": "Make max votes static again",
    "author": "RickiNano",
    "body": "Make `confirm_req_hashes_max` and `confirm_ack_hashes_max` static and set to 255. \r\nRemoved `disable_large_votes` flag",
    "draft": false,
    "pull_request": 4741,
    "label": "RickiNano:Static-max-votes",
    "created_at": "2024-10-01T06:10:36Z",
    "built_at": "2024-10-01T06:47:01Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e030ebc3b09ef5e75b61999f5ef180e999c6e88b",
    "build_started_at": "2024-10-01T06:21:36Z",
    "run_id": "11119776764"
  },
  {
    "hash": "e030f0d2398fefff430672b1d4fbed2bf0ad23ff",
    "type": "pull_request",
    "title": "Introduce ledger view classes to separate confirmed/unconfirmed operations on the ledger",
    "body": "The motivation for this PR is in preparation for bounded backlog changes. Currently, both confirmed and unconfirmed transactions are together on disk and the ACID properties of the ledger are encapsulated with a database transaction.\r\n\r\nWith the bounded backlog, blocks will be stored in memory so there will need to be memory synchronization in addition to database synchronization. Rather than filling the ledger class with unconfirmed/confirmed variants for each operation.\r\n\r\nThe ledger is divided in to several sets and subsets:\r\nledger::confirmed - The set of confirmed transactions\r\nledger::any - The superset of confirmed and unconfirmed transactions\r\n\r\nWhen unconfirmed blocks are held in memory the set ledger::unconfirmed will be added which holds only unconfirmed transactions.\r\n\r\nIn the future the confirming_set can be moved on to ledger which is the subset of unconfirmed blocks that are queued to be moved in to the confirmed set.",
    "draft": false,
    "pull_request": 4486,
    "label": "clemahieu:ledger_view",
    "created_at": "2024-03-12T14:33:24Z",
    "built_at": "2024-04-08T18:55:24Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e030f0d2398fefff430672b1d4fbed2bf0ad23ff",
    "build_started_at": "2024-04-08T18:28:25Z",
    "run_id": "8604937785"
  },
  {
    "hash": "e0518c38e25221cc0424c820bf97c270f6738b71",
    "type": "pull_request",
    "title": "Remove `node::process_confirmed (...)`",
    "author": "pwojcikdev",
    "body": "This removes the `node::process_confirmed (...)` function. Blocks queued there could briefly find themselves in a limbo state, neither part of an active election or cementing set, which was racy.",
    "draft": false,
    "pull_request": 4758,
    "label": "pwojcikdev:remove-process-confirmed",
    "created_at": "2024-10-18T16:23:32Z",
    "built_at": "2024-10-28T13:04:30Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e0518c38e25221cc0424c820bf97c270f6738b71",
    "build_started_at": "2024-10-28T12:36:31Z",
    "run_id": "11554057622"
  },
  {
    "hash": "e0a4194cd18c7394ae822a44d105a70555a7eca7",
    "type": "pull_request",
    "pull_request": 4258,
    "label": "gr0vity-dev:prs/update_code_sanitizers",
    "created_at": "2023-07-15T12:11:28Z",
    "built_at": "2023-08-18T17:18:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e0a4194cd18c7394ae822a44d105a70555a7eca7"
  },
  {
    "hash": "e0a4fd86b9c07af59149a6378e61fd0bdea83501",
    "type": "commit",
    "created_at": "2024-02-22T16:46:22Z",
    "built_at": "2024-02-22T17:12:11Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e0a4fd86b9c07af59149a6378e61fd0bdea83501",
    "build_started_at": "2024-02-22T16:46:44Z",
    "run_id": "8008016327"
  },
  {
    "hash": "e0c5c95b9e0520593f77276beb4b9069399dfadf",
    "type": "pull_request",
    "pull_request": 4314,
    "label": "clemahieu:ledger_file_exception",
    "created_at": "2023-10-16T15:57:18Z",
    "built_at": "2023-10-16T17:38:20Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e0c5c95b9e0520593f77276beb4b9069399dfadf"
  },
  {
    "hash": "e11ecb70d8bf0a95fbaab5a271ab23217037b7de",
    "type": "commit",
    "author": "clemahieu",
    "title": "Extracting epochs class to its own file and reducing epoch.hpp",
    "pull_request": "N/A",
    "created_at": "2024-10-27T18:08:13Z",
    "built_at": "2024-10-31T08:29:53Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e11ecb70d8bf0a95fbaab5a271ab23217037b7de",
    "build_started_at": "2024-10-31T03:33:18Z",
    "run_id": "11608130201"
  },
  {
    "hash": "e11ffcfb3d48123c4899bc64a934268e374e3abe",
    "type": "commit",
    "author": "clemahieu",
    "title": "Merge pull request #4760 from clemahieu/store_cleanup",
    "pull_request": "4760",
    "created_at": "2024-10-21T07:29:19Z",
    "built_at": "2024-10-21T08:22:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e11ffcfb3d48123c4899bc64a934268e374e3abe",
    "build_started_at": "2024-10-21T07:31:42Z",
    "run_id": "11435662421"
  },
  {
    "hash": "e152bf2c29931b6031e2097be29a6a619006eba8",
    "type": "pull_request",
    "title": "Final vote requests/replies only",
    "author": "pwojcikdev",
    "body": "There are two main changes:  \r\n- We are only replying with final votes, for blocks that are either confirmed or marked as final.\r\n- We are not using cached votes for replies.\r\n\r\nDuring testing it was shown that the above changes reduce vote traffic by an order of magnitude.\r\n\r\nThe rationale for abandoning replies from vote cache is that it causes excessive bandwidth usage. A vote request might contain 12 hashes (255 hashes after upcoming network upgrade) and the chance that a vote with exactly these hashes is already cached is low. This in turn requires replying with multiple votes, which is incredibly inefficient. Pessimistic bandwidth usage in such scenario is number of hashes squared.\r\n\r\n",
    "draft": false,
    "pull_request": 4648,
    "label": "pwojcikdev:final-replies-only",
    "created_at": "2024-06-14T19:32:55Z",
    "built_at": "2024-07-04T18:18:50Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e152bf2c29931b6031e2097be29a6a619006eba8",
    "build_started_at": "2024-07-04T17:52:35Z",
    "run_id": "9798309558"
  },
  {
    "hash": "e15aad282694b7aa1b35f86fcae424c63f596a93",
    "type": "pull_request",
    "pull_request": 4138,
    "label": "dsiganos:fix_node_deferred_dependent_elections",
    "created_at": "2023-02-16T16:55:08Z",
    "built_at": "2023-02-16T18:21:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e15aad282694b7aa1b35f86fcae424c63f596a93"
  },
  {
    "hash": "e1695d49f1fd01f7dd6636d7d63e871c86b581cb",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Keep track of transaction epoch",
    "pull_request": "4713",
    "created_at": "2024-08-22T15:08:18Z",
    "built_at": "2024-08-27T17:59:15Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e1695d49f1fd01f7dd6636d7d63e871c86b581cb",
    "build_started_at": "2024-08-27T15:42:11Z",
    "run_id": "10582949035"
  },
  {
    "hash": "e16edb663a75824266ea8a2de291facfe386593e",
    "type": "pull_request",
    "title": "Bootstrap weights in plain text",
    "author": "RickiNano",
    "body": "Replaces the binary file with embedded bootstrap weight in plain text.\r\nThe weight values and max block counts in this PR are from 14-08-2024",
    "draft": false,
    "pull_request": 4703,
    "label": "RickiNano:bootstrap-weights",
    "created_at": "2024-08-14T16:45:07Z",
    "built_at": "2024-10-25T20:26:44Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e16edb663a75824266ea8a2de291facfe386593e",
    "build_started_at": "2024-10-25T19:56:59Z",
    "run_id": "11524585525"
  },
  {
    "hash": "e174edf18c4acbe487db9fd089bfb7232ca64772",
    "type": "pull_request",
    "pull_request": 4318,
    "label": "clemahieu:election_state_mutex",
    "created_at": "2023-10-26T14:21:12Z",
    "built_at": "2023-11-07T13:28:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e174edf18c4acbe487db9fd089bfb7232ca64772",
    "build_started_at": "2023-11-07T12:44:02Z",
    "run_id": "6784644337"
  },
  {
    "hash": "e1a4fcbec52448c92452d4fc5bb12fc6f8b36be3",
    "type": "commit",
    "author": "gr0vity-dev",
    "title": "Optimize vote distribution between PRs and non-PRs (#4766)\n\n* Publish votes to all PRs and a subset of non PRs\r\n\r\nThis avoids potential duplicate votes to PRs and better confirmation times for non PRs\r\n\r\n* small optimisation for list_non_pr\r\n\r\n---------\r\n\r\nCo-authored-by: gr0vity-dev <homebot@users.noreply.github.com>",
    "pull_request": "4766",
    "created_at": "2024-10-25T12:23:34Z",
    "built_at": "2024-10-25T13:01:00Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e1a4fcbec52448c92452d4fc5bb12fc6f8b36be3",
    "build_started_at": "2024-10-25T12:29:12Z",
    "run_id": "11518222457"
  },
  {
    "hash": "e1beda4d95f143e5f519862497c631e6cd5e54aa",
    "type": "pull_request",
    "pull_request": 4306,
    "label": "gr0vity-dev:prs/refactor_act_tx_cemented-cb",
    "created_at": "2023-10-02T19:22:43Z",
    "built_at": "2023-10-04T07:32:31Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e1beda4d95f143e5f519862497c631e6cd5e54aa"
  },
  {
    "hash": "e1c893b7dcbcfd9cf53eb1b0239e9febc62bb508",
    "type": "commit",
    "created_at": "2023-02-23T15:36:10Z",
    "built_at": "2023-02-23T16:25:43Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e1c893b7dcbcfd9cf53eb1b0239e9febc62bb508"
  },
  {
    "hash": "e1c9c978b8423bb5d51b128f3f5a041a347e3b09",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Use single threaded io context in tests",
    "pull_request": "4523",
    "created_at": "2024-04-19T15:54:56Z",
    "built_at": "2024-04-22T11:07:19Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e1c9c978b8423bb5d51b128f3f5a041a347e3b09",
    "build_started_at": "2024-04-22T10:18:03Z",
    "run_id": "8782662921"
  },
  {
    "hash": "e1cabb31e26e0dfc39d2ad83fc51a111f37c0ac0",
    "type": "pull_request",
    "title": "Clean up and remove recursive transaction usage",
    "author": "clemahieu",
    "body": "Recursive transactions are generally unnecessary and will deadlock when mutually exclusive memory protection is needed/added to ledger transactions.\r\n\r\nUse enclosing transaction within scheduler::optimistic::run_one rather than opening a new one. This seems like a typo since the existing transaction is readily available.\r\n\r\nIn the epoch upgrade algorithm, the receivable_iterator was not incremented so the transaction stored in the iterator was not used. The outer loop already re-opens the transaction to get an up-to-date view of the ledger so I didn't identify any necessity for the algorithm to have a consistent ledger view as it's running.",
    "draft": false,
    "pull_request": 4559,
    "label": "clemahieu:recursive_transaction_cleanup",
    "created_at": "2024-04-14T09:46:11Z",
    "built_at": "2024-04-14T14:57:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e1cabb31e26e0dfc39d2ad83fc51a111f37c0ac0",
    "build_started_at": "2024-04-14T11:13:16Z",
    "run_id": "8680094042"
  },
  {
    "hash": "e1d1517ab841ec23358218ec0f277836ff481f7a",
    "type": "commit",
    "created_at": "2024-03-14T18:21:47Z",
    "built_at": "2024-03-15T16:57:57Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e1d1517ab841ec23358218ec0f277836ff481f7a",
    "build_started_at": "2024-03-15T15:29:42Z",
    "run_id": "8298619683"
  },
  {
    "hash": "e246aa4e40da715b27d76564dad431ec3255773d",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Keep commonly used functions inline",
    "pull_request": "4767",
    "created_at": "2024-10-24T21:18:46Z",
    "built_at": "2024-10-26T01:31:47Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-10-25T22:56:00Z",
    "run_id": "11527633893"
  },
  {
    "hash": "e248e2d4a8a9aac40600a99f792f08b7334d791f",
    "type": "pull_request",
    "pull_request": 4179,
    "label": "clemahieu:bootstrap_peer_protocol",
    "created_at": "2023-03-09T14:20:59Z",
    "built_at": "2023-03-09T14:56:56Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e248e2d4a8a9aac40600a99f792f08b7334d791f"
  },
  {
    "hash": "e24e8f1400da835e0ca85dd8743320e5fd19ce3b",
    "type": "pull_request",
    "pull_request": 4134,
    "label": "dsiganos:possible_fix_for_peer_container_list_fanout",
    "created_at": "2023-02-15T19:32:31Z",
    "built_at": "2023-02-15T23:53:43Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e24e8f1400da835e0ca85dd8743320e5fd19ce3b"
  },
  {
    "hash": "e258b8f4bf43a1c26efe3cd7a751128cd506069e",
    "type": "pull_request",
    "title": "Introduce ledger confirmed_set/any_set classes to separate confirmed-only and confirmed/unconfirmed operations on the ledger",
    "author": "clemahieu",
    "body": "The motivation for this PR is in preparation for bounded backlog changes. Currently, both confirmed and unconfirmed transactions are together on disk and the ACID properties of the ledger are encapsulated with a database transaction.\r\n\r\nWith the bounded backlog, blocks will be stored in memory so there will need to be memory synchronization in addition to database synchronization. Rather than filling the ledger class with unconfirmed/confirmed variants for each operation.\r\n\r\nThe ledger is divided in to several sets and subsets:\r\nledger::confirmed - The set of confirmed transactions\r\nledger::any - The superset of confirmed and unconfirmed transactions\r\n\r\nWhen unconfirmed blocks are held in memory the set ledger::unconfirmed will be added which holds only unconfirmed transactions.\r\n\r\nIn the future the confirming_set can be moved on to ledger which is the subset of unconfirmed blocks that are queued to be moved in to the confirmed set.",
    "draft": false,
    "pull_request": 4486,
    "label": "clemahieu:ledger_view",
    "created_at": "2024-03-12T14:33:24Z",
    "built_at": "2024-04-16T14:05:25Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e258b8f4bf43a1c26efe3cd7a751128cd506069e",
    "build_started_at": "2024-04-16T13:37:28Z",
    "run_id": "8706658082"
  },
  {
    "hash": "e2c76ca44a96586be922ef92b64a738aef08a7fd",
    "type": "commit",
    "author": "dsiganos",
    "title": "Fix race condition in test election_scheduler.no_vacancy\n\nBlocks send and receive are not confirmed for sure since nothing waits for\ntheir confirmation. If they do not confirm in time, then one of the blocks\nsend or receive will take the only available place in the AEC and not\nblock2 as expected.",
    "pull_request": "4570",
    "created_at": "2024-04-17T05:02:11Z",
    "built_at": "2024-04-17T10:13:37Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e2c76ca44a96586be922ef92b64a738aef08a7fd",
    "build_started_at": "2024-04-17T09:31:34Z",
    "run_id": "8719789502"
  },
  {
    "hash": "e2d59b36fc711d477dc8fc50e3b4cac0f388e86b",
    "type": "pull_request",
    "pull_request": 4524,
    "label": "clemahieu:logger_header",
    "created_at": "2024-03-26T10:39:49Z",
    "built_at": "2024-03-26T11:08:44Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e2d59b36fc711d477dc8fc50e3b4cac0f388e86b",
    "build_started_at": "2024-03-26T10:44:01Z",
    "run_id": "8434660739"
  },
  {
    "hash": "e362de41963ea790291f88ef6eba5a5f2aa91df4",
    "type": "commit",
    "author": "clemahieu",
    "title": "Encapsulate bucket setup.",
    "pull_request": "4632",
    "created_at": "2024-05-20T20:57:02Z",
    "built_at": "2024-05-21T10:19:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e362de41963ea790291f88ef6eba5a5f2aa91df4",
    "build_started_at": "2024-05-21T09:45:29Z",
    "run_id": "9172636825"
  },
  {
    "hash": "e3b3012123a58819c0a741612912264ba4fc440b",
    "type": "pull_request",
    "pull_request": 4229,
    "label": "clemahieu:rep_weight_update",
    "created_at": "2023-05-10T14:03:04Z",
    "built_at": "2023-05-10T14:55:23Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e3b3012123a58819c0a741612912264ba4fc440b"
  },
  {
    "hash": "e41498221c0e092867870c46a943096151dcfc4e",
    "type": "commit",
    "title": "Use ledger::confirm (#4531)\n\n* Use ledger::confirm instead of modifying confirmation_height_store\r\n\r\n* Remove usages of confirmation_height_store where results are unused.",
    "pull_request": "4531",
    "created_at": "2024-04-01T15:40:14Z",
    "built_at": "2024-04-01T16:19:13Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e41498221c0e092867870c46a943096151dcfc4e",
    "build_started_at": "2024-04-01T15:45:51Z",
    "run_id": "8510251398"
  },
  {
    "hash": "e456b2282b14686687a659989bc81f96d60ffb2c",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Remove `election_winner_details`",
    "pull_request": "4755",
    "created_at": "2024-10-15T15:30:57Z",
    "built_at": null,
    "build_status": "building",
    "docker_tag": null,
    "build_started_at": "2024-10-18T08:49:46Z",
    "run_id": null
  },
  {
    "hash": "e4901db140e43dd11d9d09f7f26b147bbcabc382",
    "type": "commit",
    "author": "RickiNano",
    "title": "Fixed three compiler warnings (C26498) (#4617)",
    "pull_request": "4617",
    "created_at": "2024-05-13T07:47:43Z",
    "built_at": "2024-05-13T08:16:28Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e4901db140e43dd11d9d09f7f26b147bbcabc382",
    "build_started_at": "2024-05-13T07:49:25Z",
    "run_id": "9059188212"
  },
  {
    "hash": "e4b39f780d467d6230fec5574195327893c6504a",
    "type": "commit",
    "created_at": "2023-02-03T19:40:41Z",
    "built_at": "2023-02-06T23:52:18Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e4b39f780d467d6230fec5574195327893c6504a"
  },
  {
    "hash": "e4b491754ac098ddfc9295c982a41b7a163d8268",
    "type": "pull_request",
    "pull_request": 4508,
    "label": "clemahieu:block_cemented_callback_simplify",
    "created_at": "2024-03-20T11:31:54Z",
    "built_at": "2024-03-20T12:00:19Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e4b491754ac098ddfc9295c982a41b7a163d8268",
    "build_started_at": "2024-03-20T11:32:56Z",
    "run_id": "8358195912"
  },
  {
    "hash": "e4b8d93f899e9036216164760542b8fa708dffdc",
    "type": "pull_request",
    "pull_request": 4486,
    "label": "clemahieu:ledger_view",
    "created_at": "2024-03-12T14:33:24Z",
    "built_at": "2024-03-14T15:47:48Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-14T15:29:16Z",
    "run_id": "8283367887"
  },
  {
    "hash": "e4d01c648acf197f04f51c584c60bb9214745d03",
    "type": "pull_request",
    "pull_request": 4399,
    "label": "dsiganos:github_build_cache",
    "created_at": "2024-01-26T09:52:34Z",
    "built_at": "2024-01-26T10:24:19Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e4d01c648acf197f04f51c584c60bb9214745d03",
    "build_started_at": "2024-01-26T09:59:11Z",
    "run_id": "7666558384"
  },
  {
    "hash": "e4d98f34976cd963a5398d96c109d573902e342a",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge pull request #4646 from pwojcikdev/remove-tls-rpc\n\nRemove tls support",
    "pull_request": "4646",
    "created_at": "2024-06-12T14:31:48Z",
    "built_at": "2024-06-12T15:02:40Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e4d98f34976cd963a5398d96c109d573902e342a",
    "build_started_at": "2024-06-12T14:35:20Z",
    "run_id": "9484584706"
  },
  {
    "hash": "e4e409e7f60bb6da0a6c9cc59ac9573d02fa8b0b",
    "type": "pull_request",
    "pull_request": 4370,
    "label": "dsiganos:refactor_rpc_context_and_test_response",
    "created_at": "2024-01-18T09:56:54Z",
    "built_at": "2024-01-18T10:37:26Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e4e409e7f60bb6da0a6c9cc59ac9573d02fa8b0b",
    "build_started_at": "2024-01-18T10:09:31Z",
    "run_id": "7568391458"
  },
  {
    "hash": "e4ed55c7ca821cd9730d4637af1afaa40ed69b8b",
    "type": "pull_request",
    "pull_request": 4148,
    "label": "clemahieu:unchecked_map_stats",
    "created_at": "2023-02-22T02:46:45Z",
    "built_at": "2023-02-22T04:02:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e4ed55c7ca821cd9730d4637af1afaa40ed69b8b"
  },
  {
    "hash": "e4f0029443d1ad446b31efbc2f962ab2c4c25d36",
    "type": "commit",
    "created_at": "2024-02-19T20:08:45Z",
    "built_at": "2024-02-23T11:16:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e4f0029443d1ad446b31efbc2f962ab2c4c25d36",
    "build_started_at": "2024-02-23T10:36:25Z",
    "run_id": "8017972262"
  },
  {
    "hash": "e50552eefd9839da0fe1aa5bcd454855d20ee7f3",
    "type": "pull_request",
    "pull_request": 4283,
    "label": "clemahieu:rocksdb_8_5_3",
    "created_at": "2023-09-13T01:02:43Z",
    "built_at": "2023-09-13T01:51:03Z",
    "build_status": "fail",
    "docker_tag": ""
  },
  {
    "hash": "e51108f63aaa5499ed68c091d53518309c009df9",
    "type": "pull_request",
    "title": "Exit migration if existing rocksdb ledger found",
    "author": "RickiNano",
    "body": "Halt migration if rocksdb folder already exists instead of deleting it.",
    "draft": false,
    "pull_request": 4778,
    "label": "RickiNano:migration-fix",
    "created_at": "2024-11-02T18:50:07Z",
    "built_at": "2024-11-03T00:03:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e51108f63aaa5499ed68c091d53518309c009df9",
    "build_started_at": "2024-11-02T23:27:41Z",
    "run_id": "11646657527"
  },
  {
    "hash": "e518551bf076529b469c97b04230d1d9ad16cf4d",
    "type": "commit",
    "created_at": "2024-01-27T08:14:20Z",
    "built_at": "2024-01-27T08:50:09Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e518551bf076529b469c97b04230d1d9ad16cf4d",
    "build_started_at": "2024-01-27T08:24:41Z",
    "run_id": "7677452067"
  },
  {
    "hash": "e51b2769362e60a07999823b724b85600863837d",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Start/stop pattern for `unchecked_map` (#4577)\n\n* Start/stop pattern for `unchecked_map`\r\n\r\n* Remove flush function",
    "pull_request": "4577",
    "created_at": "2024-04-18T12:16:35Z",
    "built_at": "2024-04-18T12:45:26Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e51b2769362e60a07999823b724b85600863837d",
    "build_started_at": "2024-04-18T12:19:31Z",
    "run_id": "8737748373"
  },
  {
    "hash": "e536ca4cce0d484115e6a92004b92453779be569",
    "type": "pull_request",
    "title": "Log improvements",
    "author": "pwojcikdev",
    "body": "This contains several logging improvements that I found helpful when debugging unit tests.",
    "draft": false,
    "pull_request": 4580,
    "label": "pwojcikdev:log-improvements",
    "created_at": "2024-04-22T13:33:03Z",
    "built_at": "2024-04-22T14:02:40Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e536ca4cce0d484115e6a92004b92453779be569",
    "build_started_at": "2024-04-22T13:37:39Z",
    "run_id": "8785058957"
  },
  {
    "hash": "e5aa2be32c15a2ed0537257df4d18ffaa68fa298",
    "type": "pull_request",
    "title": "chore: update message_processor.cpp",
    "author": "eltociear",
    "body": "initally -> initially",
    "draft": false,
    "pull_request": 4701,
    "label": "eltociear:patch-1",
    "created_at": "2024-08-11T18:42:49Z",
    "built_at": "2024-08-11T19:40:25Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e5aa2be32c15a2ed0537257df4d18ffaa68fa298",
    "build_started_at": "2024-08-11T18:43:47Z",
    "run_id": "10342143571"
  },
  {
    "hash": "e5d0428428b34d684a8d4fa8de23efd79d91ea29",
    "type": "pull_request",
    "pull_request": 4424,
    "label": "pwojcikdev:blockprocessor-context",
    "created_at": "2024-02-08T18:03:48Z",
    "built_at": "2024-02-09T17:55:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e5d0428428b34d684a8d4fa8de23efd79d91ea29",
    "build_started_at": "2024-02-09T17:23:36Z",
    "run_id": "7847459261"
  },
  {
    "hash": "e6176f0502c153ecb610b3e00f7251e0aff94a4e",
    "type": "pull_request",
    "title": "Add database information to telemetry data",
    "author": "RickiNano",
    "body": "Adds telemetry information about the type of database backend the node is using.\r\nThe telemetry RPC function reports both individual database backend information or consolidated (average). The reported database backend for each node will be either 'RocksDb' , 'LMDB' or \"Unknown\". \r\n'Unknown' is for nodes running v26.1 or earlier that does not send any database information in telemetry data.",
    "draft": false,
    "pull_request": 4675,
    "label": "RickiNano:Telemetry-db-backend",
    "created_at": "2024-07-08T18:09:12Z",
    "built_at": "2024-07-09T15:54:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e6176f0502c153ecb610b3e00f7251e0aff94a4e",
    "build_started_at": "2024-07-09T15:15:04Z",
    "run_id": "9859887759"
  },
  {
    "hash": "e62602cc4ba478aba4c4cf65874bdd14b6e15ae6",
    "type": "pull_request",
    "pull_request": 4471,
    "label": "pwojcikdev:vote-processor-tiers",
    "created_at": "2024-03-08T11:10:27Z",
    "built_at": "2024-03-09T11:44:26Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e62602cc4ba478aba4c4cf65874bdd14b6e15ae6",
    "build_started_at": "2024-03-09T11:12:06Z",
    "run_id": "8214107450"
  },
  {
    "hash": "e6512cfd8dd66eb506d7d7a5699340b61bbb3920",
    "type": "pull_request",
    "pull_request": 4483,
    "label": "simpago:store-rep-weights-on-disk",
    "created_at": "2024-03-12T10:24:20Z",
    "built_at": "2024-03-19T07:21:18Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e6512cfd8dd66eb506d7d7a5699340b61bbb3920",
    "build_started_at": "2024-03-19T06:12:09Z",
    "run_id": "8338402619"
  },
  {
    "hash": "e66683fa60930f1ebc42b46a60ee48199c1dedbe",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Rework backlog population config",
    "pull_request": "N/A",
    "created_at": "2024-09-02T19:24:03Z",
    "built_at": "2024-09-17T11:50:57Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e66683fa60930f1ebc42b46a60ee48199c1dedbe",
    "build_started_at": "2024-09-17T09:35:37Z",
    "run_id": "10902041850"
  },
  {
    "hash": "e66ca8febe3963de70ab4a783e5e13c6310c6708",
    "type": "pull_request",
    "title": "Wait until fair queue source drains before removal",
    "author": "pwojcikdev",
    "body": "The previous behavior o closing queues with pending entries was causing too much confusion during performance testing.",
    "draft": false,
    "pull_request": 4597,
    "label": "pwojcikdev:fair-queue-drain",
    "created_at": "2024-05-02T16:52:57Z",
    "built_at": "2024-05-02T17:29:13Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e66ca8febe3963de70ab4a783e5e13c6310c6708",
    "build_started_at": "2024-05-02T16:53:09Z",
    "run_id": "8927609992"
  },
  {
    "hash": "e69f9f1084639969f4b6f5e9980672db73752a94",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Prettify ledger constants (#4793)",
    "pull_request": "4793",
    "created_at": "2024-11-26T10:55:19Z",
    "built_at": "2024-11-26T11:26:42Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e69f9f1084639969f4b6f5e9980672db73752a94",
    "build_started_at": "2024-11-26T10:57:32Z",
    "run_id": "12029125831"
  },
  {
    "hash": "e6d115ecf854a3d2bfdc9274480deac08d4068d2",
    "type": "pull_request",
    "pull_request": 4256,
    "label": "gr0vity-dev:prs/unified_artifacts_worflow",
    "created_at": "2023-07-03T18:42:25Z",
    "built_at": "2023-07-11T21:30:10Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e6d115ecf854a3d2bfdc9274480deac08d4068d2"
  },
  {
    "hash": "e6f454e589c556d4a95451249c49d45eb1079405",
    "type": "pull_request",
    "pull_request": 4250,
    "label": "gr0vity-dev:wip/unified_artifacts_worflow",
    "created_at": "2023-06-22T15:06:28Z",
    "built_at": "2023-06-29T16:52:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e6f454e589c556d4a95451249c49d45eb1079405"
  },
  {
    "hash": "e72a999e4ccce29c64c23a1b5d3587521f6627c5",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge pull request #4739 from pwojcikdev/frontier-scan-5\n\nFrontier scan client",
    "pull_request": "4739",
    "created_at": "2024-10-31T10:32:03Z",
    "built_at": "2024-10-31T11:05:27Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e72a999e4ccce29c64c23a1b5d3587521f6627c5",
    "build_started_at": "2024-10-31T10:37:32Z",
    "run_id": "11610372699"
  },
  {
    "hash": "e730fd99fcce5fe597038a0be43af9e0e6e592c0",
    "type": "pull_request",
    "pull_request": 4331,
    "label": "clemahieu:store_reopen",
    "created_at": "2023-11-06T18:00:47Z",
    "built_at": "2023-11-06T19:25:35Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e730fd99fcce5fe597038a0be43af9e0e6e592c0",
    "build_started_at": "2023-11-06T18:10:07Z",
    "run_id": "6774783098"
  },
  {
    "hash": "e7352730407349024003fdddc85797e2ebc5eb82",
    "type": "pull_request",
    "title": "QT wallet: proper display of state open block in GUI history",
    "author": "SergiySW",
    "body": "State open block should be marked as \"Receive\".\r\nFor open blocks `previous` == 0 and function `nano::ledger_set_any::block_balance ()` will return `std::nullopt` resulting in displaying \"Unknown\" block type.",
    "draft": false,
    "pull_request": 4744,
    "label": "SergiySW:qt_state_open",
    "created_at": "2024-10-06T20:20:47Z",
    "built_at": null,
    "build_status": "building",
    "docker_tag": null,
    "build_started_at": "2024-10-25T15:27:29Z",
    "run_id": null
  },
  {
    "hash": "e73f914bdb85e7bf3d0493429b5ab1754adc347e",
    "type": "pull_request",
    "title": "Do not wait for cancellation signal",
    "author": "pwojcikdev",
    "body": "Waiting for cancellation signal is unnecessary and was causing a deadlock in `tcp_listener` class.\r\n\r\n```\r\nThread 37 (LWP 25214):\r\n#0  0x00007fa2b77c388d in syscall () from target:/lib/x86_64-linux-gnu/libc.so.6\r\n#1  0x000055dc7f386491 in std::__atomic_futex_unsigned_base::_M_futex_wait_until(unsigned int*, unsigned int, bool, std::chrono::duration<long, std::ratio<1l, 1l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> >) ()\r\n#2  0x000055dc7e9d1175 in std::__atomic_futex_unsigned<2147483648u>::_M_load_and_test_until (__ns=..., __s=..., __has_timeout=<optimized out>, __mo=<optimized out>, __equal=<optimized out>, __operand=<optimized out>, __assumed=<optimized out>, this=<optimized out>) at /tmp/src/submodules/boost/libs/asio/include/boost/asio/scheduler.hpp:646\r\n#3  std::__atomic_futex_unsigned<2147483648u>::_M_load_and_test (__mo=<optimized out>, __equal=<optimized out>, __operand=<optimized out>, __assumed=<optimized out>, this=<optimized out>) at /usr/include/x86_64-linux-gnu/bits/gthr-default.h:159\r\n#4  std::__atomic_futex_unsigned<2147483648u>::_M_load_when_equal (__mo=<error reading variable: dwarf2_find_location_expression: Corrupted DWARF expression.>, __val=<error reading variable: dwarf2_find_location_expression: Corrupted DWARF expression.>, this=<error reading variable: dwarf2_find_location_expression: Corrupted DWARF expression.>) at /usr/include/x86_64-linux-gnu/bits/gthr-default.h:213\r\n#5  std::__future_base::_State_baseV2::wait (this=<error reading variable: dwarf2_find_location_expression: Corrupted DWARF expression.>) at /tmp/src/submodules/boost/libs/asio/include/boost/asio/execution/impl/bad_address_cast.hpp:336\r\n#6  std::__basic_future<void>::wait (this=0x7fa23cff73b0, this@entry=<error reading variable: dwarf2_find_location_expression: Corrupted DWARF expression.>) at /tmp/src/submodules/boost/libs/asio/include/boost/asio/execution/impl/bad_address_cast.hpp:694\r\n#7  nano::async::cancellation::emit (type=boost::asio::cancellation_type::all, type@entry=<error reading variable: dwarf2_find_location_expression: Corrupted DWARF expression.>, this=0x7fa1e0074838, this@entry=<error reading variable: dwarf2_find_location_expression: Corrupted DWARF expression.>) at /tmp/src/submodules/boost/libs/asio/include/boost/asio/detail/atomic_futex.h:57\r\n#8  nano::async::task::cancel (this=0x7fa1e0074820, this@entry=<error reading variable: dwarf2_find_location_expression: Corrupted DWARF expression.>) at /tmp/src/submodules/boost/libs/asio/include/boost/asio/detail/atomic_futex.h:143\r\n#9  nano::transport::tcp_listener::timeout() () at /tmp/src/submodules/boost/libs/asio/include/boost/asio/ip/string_view:212\r\n#10 0x000055dc7e9d1369 in nano::transport::tcp_listener::run_cleanup() () at /tmp/src/submodules/boost/libs/asio/include/boost/asio/ip/string_view:171\r\n#11 0x000055dc7f3b89f4 in execute_native_thread_routine ()\r\n#12 0x00007fa2b7739ac3 in ?? () from target:/lib/x86_64-linux-gnu/libc.so.6\r\n#13 0x00007fa2b77caa04 in clone () from target:/lib/x86_64-linux-gnu/libc.so.6\r\n\r\nThread 35 (LWP 25212):\r\n#0  0x00007fa2b77362c0 in ?? () from target:/lib/x86_64-linux-gnu/libc.so.6\r\n#1  0x00007fa2b773d002 in pthread_mutex_lock () from target:/lib/x86_64-linux-gnu/libc.so.6\r\n#2  0x000055dc7e9d00d0 in __gthread_mutex_lock (__mutex=0x55dc847a67e8) at /tmp/src/submodules/boost/libs/asio/include/boost/asio/socket_holder.hpp:749\r\n#3  std::mutex::lock (this=0x55dc847a67e8) at /tmp/src/build/nano/node/tcp_listener.cpp:100\r\n#4  nano::mutex::lock (this=0x55dc847a67e8) at /tmp/src/submodules/boost/libs/asio/include/boost/asio/detail/std_mutex.h:77\r\n#5  std::unique_lock<nano::mutex>::lock (this=0x7fa23dff8be0) at /tmp/src/submodules/boost/libs/system/include/boost/system/detail/use_awaitable.hpp:139\r\n#6  std::unique_lock<nano::mutex>::unique_lock (__m=..., this=0x7fa23dff8be0) at /tmp/src/submodules/boost/libs/system/include/boost/system/detail/use_awaitable.hpp:69\r\n#7  nano::transport::tcp_listener::connect(boost::asio::ip::address, unsigned short) () at /tmp/src/submodules/boost/libs/asio/include/boost/asio/ip/string_view:223\r\n#8  0x000055dc7e9badc2 in nano::transport::tcp_channels::start_tcp (this=<optimized out>, endpoint=...) at /usr/include/x86_64-linux-gnu/bits/socket_ops.ipp:60\r\n#9  0x000055dc7e919cda in nano::network::merge_peer (peer_a=..., this=<optimized out>) at /tmp/src/submodules/boost/libs/asio/include/boost/asio/detail/unordered_map.h:334\r\n#10 nano::network::merge_peer (this=<optimized out>, peer_a=...) at /tmp/src/submodules/boost/libs/asio/include/boost/asio/detail/unordered_map.h:328\r\n#11 0x000055dc7eaf6d65 in (anonymous namespace)::process_visitor::keepalive (this=0x7fa23dff8e20, message=...) at /tmp/src/build/nano/node/messages.hpp:177\r\n#12 0x000055dc7eaf72c5 in nano::message_processor::process(nano::message const&, std::shared_ptr<nano::transport::channel> const&) () at /tmp/src/build/nano/node/messages.hpp:287\r\n#13 0x000055dc7eaf8d45 in nano::message_processor::run_batch(std::unique_lock<nano::mutex>&) () at /tmp/src/build/nano/node/messages.hpp:146\r\n#14 0x000055dc7eaf91c2 in nano::message_processor::run() () at /tmp/src/build/nano/node/messages.hpp:115\r\n#15 0x000055dc7eaf92bd in operator() (__closure=0x55dc8036a388) at /tmp/src/build/nano/node/messages.hpp:35\r\n#16 std::__invoke_impl<void, nano::message_processor::start()::<lambda()> > (__f=...) at /tmp/src/nano/lib/std_function.h:61\r\n#17 std::__invoke<nano::message_processor::start()::<lambda()> > (__fn=...) at /tmp/src/nano/lib/std_function.h:96\r\n#18 std::thread::_Invoker<std::tuple<nano::message_processor::start()::<lambda()> > >::_M_invoke<0> (this=0x55dc8036a388) at /usr/include/c++/11/exception_implementation.hpp:259\r\n#19 std::thread::_Invoker<std::tuple<nano::message_processor::start()::<lambda()> > >::operator() (this=0x55dc8036a388) at /usr/include/c++/11/exception_implementation.hpp:266\r\n#20 std::thread::_State_impl<std::thread::_Invoker<std::tuple<nano::message_processor::start()::{lambda()#1}> > >::_M_run() () at /usr/include/c++/11/exception_implementation.hpp:211\r\n#21 0x000055dc7f3b89f4 in execute_native_thread_routine ()\r\n#22 0x00007fa2b7739ac3 in ?? () from target:/lib/x86_64-linux-gnu/libc.so.6\r\n#23 0x00007fa2b77caa04 in clone () from target:/lib/x86_64-linux-gnu/libc.so.6\r\n\r\n// More IO threads with the same stacktrace\r\n// ....\r\n```",
    "draft": false,
    "pull_request": 4664,
    "label": "pwojcikdev:aysnc-cancelation-do-not-wait",
    "created_at": "2024-07-01T08:22:35Z",
    "built_at": "2024-07-01T13:20:33Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e73f914bdb85e7bf3d0493429b5ab1754adc347e",
    "build_started_at": "2024-07-01T12:53:13Z",
    "run_id": "9744587298"
  },
  {
    "hash": "e73f9299dc3955671d54b96e1f3fedcca206fff8",
    "type": "pull_request",
    "title": "Block checker",
    "author": "clemahieu",
    "body": "Rewrite of https://github.com/nanocurrency/nano-node/pull/3727 with functional style checking rather than a pipeline",
    "draft": true,
    "pull_request": 4345,
    "label": "clemahieu:block_checker",
    "created_at": "2023-11-14T12:02:06Z",
    "built_at": "2024-09-30T17:41:44Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-09-30T17:17:57Z",
    "run_id": "11110989034"
  },
  {
    "hash": "e749f4b80701e52c1ab2dc7cc807a4a043c93701",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Fix `socket.max_connections` test",
    "pull_request": "4618",
    "created_at": "2024-05-12T21:24:41Z",
    "built_at": "2024-05-14T16:10:18Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e749f4b80701e52c1ab2dc7cc807a4a043c93701",
    "build_started_at": "2024-05-14T11:08:37Z",
    "run_id": "9082277092"
  },
  {
    "hash": "e74e5eb4ed311019403ba00f3a770a6dfe0db9be",
    "type": "pull_request",
    "pull_request": 4273,
    "label": "clemahieu:gap_bootstrap_fix",
    "created_at": "2023-09-01T10:39:41Z",
    "built_at": "2023-09-01T11:20:20Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e74e5eb4ed311019403ba00f3a770a6dfe0db9be"
  },
  {
    "hash": "e758218bec4d8421ed03b5570d129916a8d1a5c6",
    "type": "commit",
    "created_at": "2023-09-17T19:45:14Z",
    "built_at": "2023-09-20T20:09:26Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e758218bec4d8421ed03b5570d129916a8d1a5c6"
  },
  {
    "hash": "e75fb68b05de3cee9cc7156be46383c1bb79e8c4",
    "type": "commit",
    "created_at": "2024-03-08T10:17:43Z",
    "built_at": "2024-03-09T14:00:02Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e75fb68b05de3cee9cc7156be46383c1bb79e8c4",
    "build_started_at": "2024-03-09T12:18:32Z",
    "run_id": "8214449124"
  },
  {
    "hash": "e773fa8d79ed44dd6ced1a1c1c2ad3d6d0c7e67c",
    "type": "commit",
    "created_at": "2023-03-03T02:29:39Z",
    "built_at": "2023-03-05T04:59:37Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e773fa8d79ed44dd6ced1a1c1c2ad3d6d0c7e67c"
  },
  {
    "hash": "e77aa4ed508d83597837b01bd1f5f1d9485c0164",
    "type": "pull_request",
    "title": "Move assert to a dedicated header",
    "author": "pwojcikdev",
    "body": null,
    "draft": false,
    "pull_request": 4773,
    "label": "pwojcikdev:assert-header",
    "created_at": "2024-10-27T18:14:57Z",
    "built_at": "2024-11-02T19:49:50Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-11-02T19:16:03Z",
    "run_id": "11645302127"
  },
  {
    "hash": "e7810db8d02845100aa27e81f5ceb66c4db7db56",
    "type": "pull_request",
    "title": "Rework configs for backlog, telemetry and bandwidth limiter",
    "author": "pwojcikdev",
    "body": "This refactors configuration files for backlog, telemetry and bandwidth limiter to use `<component_name>_config` pattern. There are also some smaller improvements that I noticed.",
    "draft": false,
    "pull_request": 4728,
    "label": "pwojcikdev:configs-rework",
    "created_at": "2024-09-11T11:24:13Z",
    "built_at": "2024-09-15T17:17:00Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e7810db8d02845100aa27e81f5ceb66c4db7db56",
    "build_started_at": "2024-09-15T16:46:47Z",
    "run_id": "10872691126"
  },
  {
    "hash": "e7f28c6a92a5d6f4dc5321b995f38c2bce394608",
    "type": "commit",
    "created_at": "2024-03-07T13:44:32Z",
    "built_at": "2024-03-08T21:00:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e7f28c6a92a5d6f4dc5321b995f38c2bce394608",
    "build_started_at": "2024-03-08T20:19:22Z",
    "run_id": "8208601453"
  },
  {
    "hash": "e8059be46ea68a4153ff668628e386f852249c07",
    "type": "pull_request",
    "pull_request": 4486,
    "label": "clemahieu:ledger_view",
    "created_at": "2024-03-12T14:33:24Z",
    "built_at": "2024-03-20T15:40:19Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-20T15:19:05Z",
    "run_id": "8361426619"
  },
  {
    "hash": "e821dd4e94b4e646f046986286742d309fc86f21",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Log hashes of executables as notice messages",
    "pull_request": "4756",
    "created_at": "2024-10-10T13:00:59Z",
    "built_at": "2024-10-17T10:43:15Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e821dd4e94b4e646f046986286742d309fc86f21",
    "build_started_at": "2024-10-17T09:18:10Z",
    "run_id": "11382896670"
  },
  {
    "hash": "e82f8f490ba121f583fff0ea0f18db876fbf6a42",
    "type": "pull_request",
    "title": "Fix channel lifetimes",
    "author": "pwojcikdev",
    "body": "This adds asserts to ensure that channel lifetimes won't exceed the node. All channels should be closed and destroyed before during the `node.stop ()` execution. Doing this required cleaning up several components.",
    "draft": false,
    "pull_request": 4747,
    "label": "pwojcikdev:channel-lifetimes",
    "created_at": "2024-10-07T21:34:26Z",
    "built_at": "2024-10-07T22:02:32Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e82f8f490ba121f583fff0ea0f18db876fbf6a42",
    "build_started_at": "2024-10-07T21:35:28Z",
    "run_id": "11224368667"
  },
  {
    "hash": "e86299db384485f236f7f883b0534482680c8971",
    "type": "pull_request",
    "pull_request": 4326,
    "label": "clemahieu:fix_block_uniquer_linear_scan",
    "created_at": "2023-11-04T23:13:22Z",
    "built_at": "2023-11-05T15:14:38Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e86299db384485f236f7f883b0534482680c8971",
    "build_started_at": "2023-11-05T14:36:59Z",
    "run_id": "6761964042"
  },
  {
    "hash": "e868aa95da3b501955940d89b6d3edfa9a0439ba",
    "type": "pull_request",
    "pull_request": 4246,
    "label": "pwojcikdev:parallel-core-tests",
    "created_at": "2023-06-06T23:26:01Z",
    "built_at": "2023-06-07T11:14:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e868aa95da3b501955940d89b6d3edfa9a0439ba"
  },
  {
    "hash": "e877de187bc37449fd43ff17a30ce336276768c9",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Limit legacy bootstrap serving threads (#4668)",
    "pull_request": "4668",
    "created_at": "2024-07-16T08:57:39Z",
    "built_at": "2024-07-16T09:39:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e877de187bc37449fd43ff17a30ce336276768c9",
    "build_started_at": "2024-07-16T09:12:50Z",
    "run_id": "9954041711"
  },
  {
    "hash": "e8a8bb8d3c30dd6df7e92ac5ae5c6df94910b12d",
    "type": "pull_request",
    "title": "Perform ledger upgrade in batches",
    "author": "pwojcikdev",
    "body": "There was a problem with ledger upgrade process where due to a large number of new rep weight entires, nodes with low ram (2-4GB) were having trouble upgrading and were crashing due to out of memory errors. This should fix it.\r\n\r\nThis builds on https://github.com/nanocurrency/nano-node/pull/4713 and disables prunning unit tests, which were failing.",
    "draft": false,
    "pull_request": 4714,
    "label": "pwojcikdev:batched-ledger-upgrade",
    "created_at": "2024-08-27T08:55:51Z",
    "built_at": "2024-08-27T09:51:18Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e8a8bb8d3c30dd6df7e92ac5ae5c6df94910b12d",
    "build_started_at": "2024-08-27T09:06:41Z",
    "run_id": "10575398999"
  },
  {
    "hash": "e8ba8ba58d175a76f1845f9fdd0bc59648520abc",
    "type": "pull_request",
    "title": "migrate_database_lmdb_to_rocksdb improvements",
    "author": "RickiNano",
    "body": "The `migrate_database_lmdb_to_rocksdb` option is running for a very long time with the current ledger size (almost 200 million blocks). On my local machine it took 65 minutes to complete. Nothing is written on screen during this process and users may think the process has stalled.\r\nThis PR adds some progress feedback. One update for each of the 7 tables that are migrated.\r\nIt also adds a simple disk space check to warn users if they might not have enough space to complete the migration.\r\n~~The current converted RocksDb database is 73 GB, and the warning is given if the system has less than 75GB available.~~\r\nThe warning is given based on the size of the LMDB database that is being migrated. The final RocksDb size is approximately 65% of the LMDB space.",
    "draft": false,
    "pull_request": 4647,
    "label": "RickiNano:lmdb-to-rocksdb",
    "created_at": "2024-06-13T10:47:31Z",
    "built_at": "2024-06-26T07:56:39Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e8ba8ba58d175a76f1845f9fdd0bc59648520abc",
    "build_started_at": "2024-06-26T07:29:32Z",
    "run_id": "9675387639"
  },
  {
    "hash": "e8beaa8f89702d90ef429e735d5226eb7b5f503c",
    "type": "commit",
    "created_at": "2024-03-21T10:52:58Z",
    "built_at": "2024-03-21T12:04:32Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e8beaa8f89702d90ef429e735d5226eb7b5f503c",
    "build_started_at": "2024-03-21T10:56:10Z",
    "run_id": "8373770720"
  },
  {
    "hash": "e8d125877ec591ff9d0d83a9f307de5e226717de",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Rework telemetry config",
    "pull_request": "4728",
    "created_at": "2024-09-09T20:38:41Z",
    "built_at": "2024-09-17T11:58:34Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e8d125877ec591ff9d0d83a9f307de5e226717de",
    "build_started_at": "2024-09-17T09:35:37Z",
    "run_id": "10902150450"
  },
  {
    "hash": "e8ddd831dbe85a047eda36cf27ed10c273b074ca",
    "type": "commit",
    "created_at": "2023-03-20T13:17:01Z",
    "built_at": "2023-03-20T14:00:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e8ddd831dbe85a047eda36cf27ed10c273b074ca"
  },
  {
    "hash": "e8df19506783a8217d7c25435c93866e1aee8f23",
    "type": "pull_request",
    "pull_request": 4342,
    "label": "RickiNano:configurable-unchecked-blocks",
    "created_at": "2023-11-12T21:33:37Z",
    "built_at": "2024-01-26T15:20:22Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e8df19506783a8217d7c25435c93866e1aee8f23",
    "build_started_at": "2024-01-26T14:54:14Z",
    "run_id": "7669629293"
  },
  {
    "hash": "e902b698848eb5317ad413f27279b2c5a0542610",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Bandwidth limiter container info",
    "pull_request": "4785",
    "created_at": "2024-11-11T18:40:17Z",
    "built_at": "2024-11-12T11:07:16Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e902b698848eb5317ad413f27279b2c5a0542610",
    "build_started_at": "2024-11-12T09:51:50Z",
    "run_id": "11795521396"
  },
  {
    "hash": "e926ccd6f50316d3a34a62cdb8ceab8a91c51bea",
    "type": "pull_request",
    "pull_request": 4484,
    "label": "clemahieu:ledger_successor_simplify",
    "created_at": "2024-03-12T12:33:19Z",
    "built_at": "2024-03-12T12:54:42Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-12T12:36:12Z",
    "run_id": "8248894538"
  },
  {
    "hash": "e93f2437c767d9d26cb77d54506cf8449cd5b6f1",
    "type": "pull_request",
    "title": "Use a dedicated thread for tcp listener",
    "author": "pwojcikdev",
    "body": "While I'm not aware of any problems with previous implementation, the async way of implementing `tcp_listener` was generally harder to understand and to evolve over time. It was especially problematic when making changes to other aspects of networking code. Given that our connections are long-lived and relatively infrequent, there is very little need for tcp acceptor code to be focused on performance and instead we should prioritize readability and maintainability. This modifies it to instead run on a single, dedicated thread and use blocking IO operations.",
    "draft": false,
    "pull_request": 4523,
    "label": "pwojcikdev:networking-fixes/tcp-listener-2",
    "created_at": "2024-03-25T16:06:32Z",
    "built_at": "2024-04-22T09:05:24Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e93f2437c767d9d26cb77d54506cf8449cd5b6f1",
    "build_started_at": "2024-04-22T08:39:45Z",
    "run_id": "8781089879"
  },
  {
    "hash": "e9608c89e530b0d2647610ba0f6f1d90fa965ddc",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Track fails",
    "pull_request": "N/A",
    "created_at": "2024-11-03T09:30:52Z",
    "built_at": "2024-11-23T05:19:19Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e9608c89e530b0d2647610ba0f6f1d90fa965ddc",
    "build_started_at": "2024-11-22T23:40:48Z",
    "run_id": "11984260775"
  },
  {
    "hash": "e97067ffdab8b1ae6a090b87d378b172be533af2",
    "type": "pull_request",
    "pull_request": 4520,
    "label": "simpago:fix-accounts-receivable-count",
    "created_at": "2024-03-24T05:54:03Z",
    "built_at": "2024-03-24T06:31:23Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e97067ffdab8b1ae6a090b87d378b172be533af2",
    "build_started_at": "2024-03-24T06:06:55Z",
    "run_id": "8407326927"
  },
  {
    "hash": "e98d99ea1cdf896a7d909da9cba68299e3f39b3a",
    "type": "pull_request",
    "pull_request": 4223,
    "label": "pwojcikdev:rpc-errors-improvements",
    "created_at": "2023-05-03T19:44:17Z",
    "built_at": "2023-05-03T20:21:24Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e98d99ea1cdf896a7d909da9cba68299e3f39b3a"
  },
  {
    "hash": "e9a8588aea293cfa609a04a3deedbd5c14a77842",
    "type": "pull_request",
    "title": "migrate_database_lmdb_to_rocksdb improvements",
    "author": "RickiNano",
    "body": "The `migrate_database_lmdb_to_rocksdb` option is running for a very long time with the current ledger size (almost 200 million blocks). On my local machine it took 65 minutes to complete. Nothing is written on screen during this process and users may think the process has stalled.\r\nThis PR adds some progress feedback. One update for each of the 7 tables that are migrated.\r\nIt also adds a simple disk space check to warn users if they might not have enough space to complete the migration.\r\n~~The current converted RocksDb database is 73 GB, and the warning is given if the system has less than 75GB available.~~\r\nThe warning is given based on the size of the LMDB database that is being migrated. The final RocksDb size is approximately 65% of the LMDB space.",
    "draft": false,
    "pull_request": 4647,
    "label": "RickiNano:lmdb-to-rocksdb",
    "created_at": "2024-06-13T10:47:31Z",
    "built_at": "2024-06-13T14:45:47Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e9a8588aea293cfa609a04a3deedbd5c14a77842",
    "build_started_at": "2024-06-13T14:11:14Z",
    "run_id": "9501225869"
  },
  {
    "hash": "e9adb744b881af113d94472cf9d34020110b0319",
    "type": "commit",
    "author": "clemahieu",
    "title": "Use deque rather than vector to support large initialization sequences (#4641)",
    "pull_request": "4641",
    "created_at": "2024-05-23T12:54:28Z",
    "built_at": "2024-05-23T14:04:27Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e9adb744b881af113d94472cf9d34020110b0319",
    "build_started_at": "2024-05-23T12:59:16Z",
    "run_id": "9209013470"
  },
  {
    "hash": "e9b07516ff1dba1df2acdf661c38c1bc1cccb386",
    "type": "pull_request",
    "title": "Rework `nano::thread_pool`",
    "author": "pwojcikdev",
    "body": "The main issue with previous code was that it copied queued functions, which was inefficient and prevented using move-only function handlers. This also does some cleanup.",
    "draft": false,
    "pull_request": 4762,
    "label": "pwojcikdev:thread-pool-work",
    "created_at": "2024-10-22T15:39:25Z",
    "built_at": "2024-10-23T11:03:30Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e9b07516ff1dba1df2acdf661c38c1bc1cccb386",
    "build_started_at": "2024-10-23T10:30:32Z",
    "run_id": "11478051589"
  },
  {
    "hash": "e9c26c9fbb29948ab36e5d256f6a4a3ecfc13912",
    "type": "commit",
    "created_at": "2023-09-01T11:43:35Z",
    "built_at": "2023-09-01T12:22:53Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e9c26c9fbb29948ab36e5d256f6a4a3ecfc13912"
  },
  {
    "hash": "e9eaaef66ad6e7256cc5cebed4ce8ea11c50ec36",
    "type": "commit",
    "author": "RickiNano",
    "title": "Indented toml config files for improved legibility (#4558)",
    "pull_request": "4558",
    "created_at": "2024-04-16T20:30:16Z",
    "built_at": "2024-04-16T21:03:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:e9eaaef66ad6e7256cc5cebed4ce8ea11c50ec36",
    "build_started_at": "2024-04-16T20:31:15Z",
    "run_id": "8712224686"
  },
  {
    "hash": "ea0721138a4cf9fa51a714818dc3e23dc3633342",
    "type": "commit",
    "created_at": "2023-09-20T14:57:06Z",
    "built_at": "2023-09-20T20:16:42Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ea0721138a4cf9fa51a714818dc3e23dc3633342"
  },
  {
    "hash": "ea4608197d372f22f9def1c582c5f121ee82f726",
    "type": "pull_request",
    "title": "Remove temporary channels",
    "author": "pwojcikdev",
    "body": "Our current networking design is strange in this aspect, that we treat connections accepted by our node (temporary channels) differently to connections that are initiated by our node. There is no fundamental reason for such behavior, TCP allows for bidirectional communication and doing so may lead to more robust network, since some peers aren't directly reachable (NAT, firewalls).\r\n\r\nThe logic for handling those temporary channels was also not great, it created a new channel for each processed message which led to inefficiencies, especially when paired with fair queuing. Look at `nano::transport::tcp_channels::process_message (...)`. It also used node id for channel lookup when processing messages. Here I'm associating each realtime connection with a single channel, without relying on node id, which is simpler and more robust approach.\r\n\r\nThis PR moves management of lower-level connections fully to `tcp_listener` and implements them using coroutines. Each connection attempt is given a timeout (by default 60 seconds) and node id conflicts are only rejected for same IP addresses.\r\n\r\nPrevious attempt to fix this issue was https://github.com/nanocurrency/nano-node/pull/3928",
    "draft": false,
    "pull_request": 4595,
    "label": "pwojcikdev:networking-fixes/connecting-4",
    "created_at": "2024-04-30T18:06:51Z",
    "built_at": "2024-04-30T18:55:15Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ea4608197d372f22f9def1c582c5f121ee82f726",
    "build_started_at": "2024-04-30T18:10:18Z",
    "run_id": "8899586418"
  },
  {
    "hash": "ea56d1006c3d49d391432a7b37246d48e6e0752a",
    "type": "pull_request",
    "title": "Telemetry database backend",
    "author": "pwojcikdev",
    "body": "Improved version of stalled #4675 that should be backward compatible.",
    "draft": false,
    "pull_request": 4694,
    "label": "pwojcikdev:telemetry-database-backend",
    "created_at": "2024-08-06T09:24:05Z",
    "built_at": "2024-08-06T09:54:46Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ea56d1006c3d49d391432a7b37246d48e6e0752a",
    "build_started_at": "2024-08-06T09:26:59Z",
    "run_id": "10263925674"
  },
  {
    "hash": "ea579c76c06ecaa567b58ee581b8ce447d85cb1f",
    "type": "commit",
    "created_at": "2024-03-16T15:44:40Z",
    "built_at": "2024-03-16T16:22:34Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ea579c76c06ecaa567b58ee581b8ce447d85cb1f",
    "build_started_at": "2024-03-16T15:50:37Z",
    "run_id": "8308846648"
  },
  {
    "hash": "ea6557d8c40e4a922ced618ea6af46c7536df6e5",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Peer cache (#4574)\n\n* Headers for forward declarations\r\n\r\n* Conversions for endpoint_key\r\n\r\n* Time helpers\r\n\r\n* Store timestamps in peer store\r\n\r\n* Introduce `peer_cache`\r\n\r\n* Tests for peer cache\r\n\r\n* Reach out to cached peers\r\n\r\n* Test reconnecting to cached peers\r\n\r\n* Fixes\r\n\r\n* Rename to `peer_history`",
    "pull_request": "4574",
    "created_at": "2024-04-22T19:55:41Z",
    "built_at": "2024-04-22T20:25:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ea6557d8c40e4a922ced618ea6af46c7536df6e5",
    "build_started_at": "2024-04-22T19:58:10Z",
    "run_id": "8790091744"
  },
  {
    "hash": "ea7713aaca3bc604ef3aa9c65f91ff1130a9ab9b",
    "type": "commit",
    "created_at": "2023-09-20T18:48:48Z",
    "built_at": "2023-09-20T20:34:12Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ea7713aaca3bc604ef3aa9c65f91ff1130a9ab9b"
  },
  {
    "hash": "ea79e5bd142043d517aae569e269c66f7d8d42b8",
    "type": "pull_request",
    "title": "Revert \"Rewrite json_handler::unopened in terms of receivable iterators\"",
    "author": "clemahieu",
    "body": null,
    "draft": false,
    "pull_request": 4707,
    "label": "clemahieu:rpc_unopened_seek",
    "created_at": "2024-08-19T14:42:33Z",
    "built_at": "2024-08-19T15:14:49Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ea79e5bd142043d517aae569e269c66f7d8d42b8",
    "build_started_at": "2024-08-19T14:48:19Z",
    "run_id": "10455638107"
  },
  {
    "hash": "ea84af93169a20e7df3cebd4d37d6fe4fcd2d32d",
    "type": "pull_request",
    "title": "Optimize cemented callbacks",
    "author": "pwojcikdev",
    "body": "This attempts to optimize the election cementing callbacks. It often takes as long or even longer to cement a confirmed election as it takes to get it confirmed in the first place. This is not a complete solution, there is still a delay, but I hope it's a step in the right direction. \r\nWe're debugging this together with @gr0vity-dev who really is doing incredible work to dig deep into this issue.\r\n\r\n![image](https://github.com/nanocurrency/nano-node/assets/3044353/006a4fc1-d499-478a-a372-7b5240b7ef01)\r\n",
    "draft": false,
    "pull_request": 4642,
    "label": "pwojcikdev:cemented-observers-optimize",
    "created_at": "2024-05-24T13:34:30Z",
    "built_at": "2024-06-02T11:24:16Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ea84af93169a20e7df3cebd4d37d6fe4fcd2d32d",
    "build_started_at": "2024-06-02T10:57:43Z",
    "run_id": "9337718863"
  },
  {
    "hash": "eac27803acbb7dec9ef15ff72874c8bef07871c7",
    "type": "pull_request",
    "pull_request": 4345,
    "label": "clemahieu:block_checker",
    "created_at": "2023-11-14T12:02:06Z",
    "built_at": "2024-03-05T13:21:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:eac27803acbb7dec9ef15ff72874c8bef07871c7",
    "build_started_at": "2024-03-05T12:24:43Z",
    "run_id": "8156183169"
  },
  {
    "hash": "eac55321425f89a875c013b1d268b38820d77121",
    "type": "pull_request",
    "pull_request": 4294,
    "label": "clemahieu:remove_incorrect_tx_declarations",
    "created_at": "2023-09-25T15:06:04Z",
    "built_at": "2023-09-25T16:04:01Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:eac55321425f89a875c013b1d268b38820d77121"
  },
  {
    "hash": "eaf5c3c69601b0b886d206d4a654586b80522132",
    "type": "pull_request",
    "pull_request": 4388,
    "label": "dsiganos:simplify_get_available_port",
    "created_at": "2024-01-23T02:44:34Z",
    "built_at": "2024-01-23T03:12:03Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:eaf5c3c69601b0b886d206d4a654586b80522132",
    "build_started_at": "2024-01-23T02:46:17Z",
    "run_id": "7620347049"
  },
  {
    "hash": "eb034ae04df72b28b868f8fadea0374b039770f1",
    "type": "pull_request",
    "title": "Rework `broadcast_block_on_arrival` test",
    "author": "pwojcikdev",
    "body": "The previous version of `broadcast_block_on_arrival` test was testing behavior that is no longer present. Blocks are only broadcasted for active elections.",
    "draft": false,
    "pull_request": 4723,
    "label": "pwojcikdev:fix-test-broadcast-block",
    "created_at": "2024-09-05T17:31:00Z",
    "built_at": "2024-09-05T18:03:53Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:eb034ae04df72b28b868f8fadea0374b039770f1",
    "build_started_at": "2024-09-05T17:37:17Z",
    "run_id": "10725390973"
  },
  {
    "hash": "eb141ba94069dd702d398e929aba9467e03d79b6",
    "type": "commit",
    "author": "gr0vity-dev",
    "title": "add gr0vity continuous results (#4635)\n\nCo-authored-by: gr0vity-dev <homebot@users.noreply.github.com>",
    "pull_request": "4635",
    "created_at": "2024-05-21T23:12:04Z",
    "built_at": "2024-05-21T23:53:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:eb141ba94069dd702d398e929aba9467e03d79b6",
    "build_started_at": "2024-05-21T23:24:19Z",
    "run_id": "9182502651"
  },
  {
    "hash": "eb15699d0e220ae518a119eb2e3e19a086b4f6ae",
    "type": "pull_request",
    "pull_request": 4211,
    "label": "clemahieu:bootstrap_channel_scoring",
    "created_at": "2023-04-05T17:07:44Z",
    "built_at": "2023-04-13T17:03:21Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:eb15699d0e220ae518a119eb2e3e19a086b4f6ae"
  },
  {
    "hash": "eb170316b1b800c70f95bc39623cd9c1fb92da32",
    "type": "commit",
    "created_at": "2023-02-08T18:35:51Z",
    "built_at": "2023-02-08T19:21:24Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:eb170316b1b800c70f95bc39623cd9c1fb92da32"
  },
  {
    "hash": "eb23460aafe8cf298502bd3170d04457104db5d0",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Friendly job names in build & deploy workflow",
    "pull_request": "4756",
    "created_at": "2024-10-03T16:32:26Z",
    "built_at": "2024-10-17T11:08:16Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:eb23460aafe8cf298502bd3170d04457104db5d0",
    "build_started_at": "2024-10-17T09:18:10Z",
    "run_id": "11383204801"
  },
  {
    "hash": "eb458593fe2c55aca0ed650a8af8628852d3261a",
    "type": "pull_request",
    "pull_request": 4291,
    "label": "clemahieu:move_lmdb_version",
    "created_at": "2023-09-22T11:51:47Z",
    "built_at": "2023-09-22T12:33:25Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:eb458593fe2c55aca0ed650a8af8628852d3261a"
  },
  {
    "hash": "eb55b98ad74aa0b746d598f5f71866797da8d7c6",
    "type": "commit",
    "created_at": "2024-03-07T13:58:35Z",
    "built_at": "2024-03-08T21:05:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:eb55b98ad74aa0b746d598f5f71866797da8d7c6",
    "build_started_at": "2024-03-08T20:19:22Z",
    "run_id": "8208601453"
  },
  {
    "hash": "eb842716a6899f1281b10c81436dddc8a2bbd7ec",
    "type": "pull_request",
    "pull_request": 4389,
    "label": "dsiganos:comment_about_socket_timeout_connect",
    "created_at": "2024-01-23T07:28:06Z",
    "built_at": "2024-01-23T07:59:49Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:eb842716a6899f1281b10c81436dddc8a2bbd7ec",
    "build_started_at": "2024-01-23T07:34:51Z",
    "run_id": "7622453331"
  },
  {
    "hash": "ebbc881ebbd9a1599afee35aeaf8893486c32563",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Avoid bootstrap notifications from live traffic (#4463)",
    "pull_request": "4463",
    "created_at": "2024-06-27T18:29:34Z",
    "built_at": "2024-06-27T18:58:13Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ebbc881ebbd9a1599afee35aeaf8893486c32563",
    "build_started_at": "2024-06-27T18:32:18Z",
    "run_id": "9701797697"
  },
  {
    "hash": "ebe67dd482e1fe6e412a6308e36a026277a93ec5",
    "type": "pull_request",
    "title": "Introduce ledger view classes to separate confirmed/unconfirmed operations on the ledger",
    "body": "The motivation for this PR is in preparation for bounded backlog changes. Currently, both confirmed and unconfirmed transactions are together on disk and the ACID properties of the ledger are encapsulated with a database transaction.\r\n\r\nWith the bounded backlog, blocks will be stored in memory so there will need to be memory synchronization in addition to database synchronization. Rather than filling the ledger class with unconfirmed/confirmed variants for each operation.\r\n\r\nThere are two views of the ledger:\r\nledger::confirmed () - Gives the view of the ledger only containing confirmed information\r\nledger::unconfirmed () - Gives a view of the ledger including unconfirmed information\r\nledger::operator->() - Syntax sugar to access unconfirmed view so calls that were previously of the form `ledger.get (...)` and would otherwise become `ledger.unconfirmed ().get (...)` can be written as `ledger->get (...)`",
    "draft": false,
    "pull_request": 4486,
    "label": "clemahieu:ledger_view",
    "created_at": "2024-03-12T14:33:24Z",
    "built_at": "2024-04-04T14:26:13Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-04-04T14:09:08Z",
    "run_id": "8556080717"
  },
  {
    "hash": "ebea02d94ae2a99bdac86df2f052a4053abb87d1",
    "type": "commit",
    "author": "clemahieu",
    "title": "Remove this_thread::sleep_for and instead use condition_variable::wait.\n\nFixes checking whether the component is stopped.",
    "pull_request": "4719",
    "created_at": "2024-09-03T00:43:28Z",
    "built_at": "2024-09-05T09:26:29Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ebea02d94ae2a99bdac86df2f052a4053abb87d1",
    "build_started_at": "2024-09-05T08:19:09Z",
    "run_id": "10717213138"
  },
  {
    "hash": "ebfda269310757f64aa8830d373c71431286bf8e",
    "type": "pull_request",
    "title": "Fix windows tests",
    "author": "RickiNano",
    "body": "The timeout command behaves differently in windows than linux and mac. In windows it will pause for the specified value before continuing the script.\r\nThis PR enables windows system tests to be launched from a native Windows command prompt instead of the bash and use the build in timeout function (in milliseconds)",
    "draft": false,
    "pull_request": 4571,
    "label": "RickiNano:fix-windows-tests",
    "created_at": "2024-04-17T09:21:55Z",
    "built_at": "2024-04-17T10:18:51Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ebfda269310757f64aa8830d373c71431286bf8e",
    "build_started_at": "2024-04-17T09:24:09Z",
    "run_id": "8719881726"
  },
  {
    "hash": "ec45ff4eaece4cad0a1322647f9c3289d2b24686",
    "type": "pull_request",
    "title": "Improve `nano::test::system::add_node (...)`",
    "author": "pwojcikdev",
    "body": "I encountered a problem where `nano::test::system::add_node (...)` wouldn't properly connect all nodes. I simplified the code, removing legacy bootstrap waits, and it seems to work fine. Additionally I extended the initialization blocks list to\r\n```\r\nvoid set_initialization_blocks (std::deque<std::shared_ptr<nano::block>> blocks);\r\nvoid set_cemented_initialization_blocks (std::deque<std::shared_ptr<nano::block>> blocks);\r\n```\r\nin order to simplify setting up multiple nodes with the same set of blocks.",
    "draft": false,
    "pull_request": 4731,
    "label": "pwojcikdev:system-connect-node-fixes",
    "created_at": "2024-09-20T16:19:49Z",
    "built_at": "2024-09-20T17:03:26Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ec45ff4eaece4cad0a1322647f9c3289d2b24686",
    "build_started_at": "2024-09-20T16:34:19Z",
    "run_id": "10962955886"
  },
  {
    "hash": "ec4706afc9c0f832595f00ea5eea41465319554d",
    "type": "pull_request",
    "pull_request": 4465,
    "label": "clemahieu:block_fields",
    "created_at": "2024-03-06T17:58:47Z",
    "built_at": "2024-03-08T01:29:10Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ec4706afc9c0f832595f00ea5eea41465319554d",
    "build_started_at": "2024-03-08T01:03:10Z",
    "run_id": "8197109775"
  },
  {
    "hash": "ec5ed07710c19a4803873c28c0cb23148a352031",
    "type": "commit",
    "created_at": "2023-06-02T12:58:46Z",
    "built_at": "2023-06-02T13:42:02Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ec5ed07710c19a4803873c28c0cb23148a352031"
  },
  {
    "hash": "ec6207f435aaae6040b0a663881cf4b08e2faa01",
    "type": "commit",
    "title": "Merge pull request #4476 from pwojcikdev/fair-queuing-3\n\nFair queuing for block processor",
    "pull_request": "4476",
    "created_at": "2024-04-04T10:08:51Z",
    "built_at": "2024-04-12T11:37:36Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ec6207f435aaae6040b0a663881cf4b08e2faa01",
    "build_started_at": "2024-04-12T09:48:30Z",
    "run_id": "8661163529"
  },
  {
    "hash": "ec636fa9f4e35861e06b7d708e813ee4c775e7e4",
    "type": "commit",
    "author": "clemahieu",
    "title": "Style fix, pass transaction as first argument. (#4592)",
    "pull_request": "4592",
    "created_at": "2024-04-30T14:32:06Z",
    "built_at": "2024-04-30T18:22:07Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ec636fa9f4e35861e06b7d708e813ee4c775e7e4",
    "build_started_at": "2024-04-30T14:39:22Z",
    "run_id": "8899398135"
  },
  {
    "hash": "ec6af1335f67d8ebb0fe37283b00b81f0d25d9d4",
    "type": "pull_request",
    "pull_request": 4140,
    "label": "thsfs:load_test_fix",
    "created_at": "2023-02-16T21:02:51Z",
    "built_at": "2023-02-16T21:54:42Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ec6af1335f67d8ebb0fe37283b00b81f0d25d9d4"
  },
  {
    "hash": "ec76351447559e326850367e2e640bdd0bbf091b",
    "type": "pull_request",
    "title": "Minor fixes",
    "author": "dsiganos",
    "body": null,
    "draft": false,
    "pull_request": 4594,
    "label": "dsiganos:minor_fixes",
    "created_at": "2024-04-30T13:55:10Z",
    "built_at": null,
    "build_status": "building",
    "docker_tag": null,
    "build_started_at": "2024-04-30T13:56:39Z",
    "run_id": null
  },
  {
    "hash": "ec8f324a3f144723eb2a3c5ba4c5b814a50b1363",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Confirming set background",
    "pull_request": "N/A",
    "created_at": "2024-05-20T16:39:45Z",
    "built_at": "2024-06-18T16:18:46Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ec8f324a3f144723eb2a3c5ba4c5b814a50b1363",
    "build_started_at": "2024-06-18T14:35:34Z",
    "run_id": "9568195704"
  },
  {
    "hash": "ec9ff1b0f326de17adfa94a06a194e85556174c4",
    "type": "pull_request",
    "pull_request": 4222,
    "label": "clemahieu:thread_pool_test_race",
    "created_at": "2023-05-03T09:47:55Z",
    "built_at": "2023-05-03T10:37:07Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ec9ff1b0f326de17adfa94a06a194e85556174c4"
  },
  {
    "hash": "ecd1f0338a1a4cbc215be55530aee3acb1687ef0",
    "type": "pull_request",
    "pull_request": 4131,
    "label": "simpago:clear-unchecked-table",
    "created_at": "2023-02-15T13:24:53Z",
    "built_at": "2023-04-25T21:24:51Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ecd1f0338a1a4cbc215be55530aee3acb1687ef0"
  },
  {
    "hash": "ecdbcdd60b42f0c59d8549c998d128bf1cfe2bf3",
    "type": "pull_request",
    "title": "Redesign the priority scheduler to maintain a 1-to-1 link with running elections",
    "author": "clemahieu",
    "body": "This change appropriately prioritises elections by bucket and then by LRU account. Overfilled buckets have the lowest priority block election cancelled and rolled back.",
    "draft": true,
    "pull_request": 4593,
    "label": "clemahieu:priority_limiter",
    "created_at": "2024-04-30T12:53:50Z",
    "built_at": "2024-05-04T09:38:57Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ecdbcdd60b42f0c59d8549c998d128bf1cfe2bf3",
    "build_started_at": "2024-05-04T09:09:56Z",
    "run_id": "8949441354"
  },
  {
    "hash": "ece1cfd6db9fa630bc591ca2b43f1b31764ab610",
    "type": "commit",
    "created_at": "2024-03-06T17:40:18Z",
    "built_at": "2024-03-06T19:02:16Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ece1cfd6db9fa630bc591ca2b43f1b31764ab610",
    "build_started_at": "2024-03-06T17:44:51Z",
    "run_id": "8176435828"
  },
  {
    "hash": "ece2eafd11a16e7a8df47479baeb6dea8ab89bd6",
    "type": "pull_request",
    "pull_request": 4453,
    "label": "dsiganos:merge_v26_1",
    "created_at": "2024-03-04T11:35:45Z",
    "built_at": "2024-03-04T12:17:15Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ece2eafd11a16e7a8df47479baeb6dea8ab89bd6",
    "build_started_at": "2024-03-04T11:51:29Z",
    "run_id": "8139655391"
  },
  {
    "hash": "ece73c360575cc41bf3f386b1c8d3bbb856b7ba5",
    "type": "commit",
    "created_at": "2023-09-18T20:38:11Z",
    "built_at": "2023-09-20T20:29:58Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ece73c360575cc41bf3f386b1c8d3bbb856b7ba5"
  },
  {
    "hash": "ece7c3b7dc34e9da0886976e423914ca6778a011",
    "type": "pull_request",
    "pull_request": 4184,
    "label": "clemahieu:rpc_test_check_fix",
    "created_at": "2023-03-16T12:58:10Z",
    "built_at": "2023-03-16T14:45:04Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ece7c3b7dc34e9da0886976e423914ca6778a011"
  },
  {
    "hash": "ed0fe0bbdb9ccfdbc7c99f47f68aa48cfd195b0a",
    "type": "commit",
    "created_at": "2023-03-02T22:55:17Z",
    "built_at": "2023-03-05T05:19:45Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ed0fe0bbdb9ccfdbc7c99f47f68aa48cfd195b0a"
  },
  {
    "hash": "ed11b943930ffb4363a73412a5e5f1b21d6b6471",
    "type": "pull_request",
    "title": "Fix regression account history when querying open state blocks",
    "author": "clemahieu",
    "body": "This regression was identified when querying the history of open state blocks https://github.com/nanocurrency/nano-node/pull/4708.  The issue was introduced when cleaning up the semantics related to querying block balances https://github.com/nanocurrency/nano-node/pull/4461/commits/4bac9419795f8a2789c240e25fae8fad55c3b671\r\n\r\nA test was added to ensure no future regression.",
    "draft": false,
    "pull_request": 4709,
    "label": "clemahieu:state_open_account_history",
    "created_at": "2024-08-20T11:48:04Z",
    "built_at": "2024-08-20T12:22:59Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ed11b943930ffb4363a73412a5e5f1b21d6b6471",
    "build_started_at": "2024-08-20T11:54:41Z",
    "run_id": "10471019647"
  },
  {
    "hash": "ed3856717aed9d4949dc83eed30187563f6b6b44",
    "type": "commit",
    "title": "Remove conditional compiling. (#4544)",
    "pull_request": "4544",
    "created_at": "2024-04-08T18:19:50Z",
    "built_at": "2024-04-08T19:09:34Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ed3856717aed9d4949dc83eed30187563f6b6b44",
    "build_started_at": "2024-04-08T18:28:25Z",
    "run_id": "8605042820"
  },
  {
    "hash": "ed4c175f949b854f5e8858fb71f98ca58694ae7e",
    "type": "pull_request",
    "title": "Frontier scan client",
    "author": "pwojcikdev",
    "body": "This implements frontier scan client for the new bootstrapper. It should be the last missing piece blocking removal of legacy bootstrap code.\r\n\r\nBuilds on top of https://github.com/nanocurrency/nano-node/pull/4734\r\n\r\nHere are some initial test results from @gr0vity-dev showing that there are no obvious problems.\r\n\r\n![image](https://github.com/user-attachments/assets/50ebf35e-aedc-4cdf-a1ea-eea0c699e332)\r\n",
    "draft": false,
    "pull_request": 4739,
    "label": "pwojcikdev:frontier-scan-5",
    "created_at": "2024-09-28T13:10:19Z",
    "built_at": "2024-09-30T14:27:25Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ed4c175f949b854f5e8858fb71f98ca58694ae7e",
    "build_started_at": "2024-09-30T13:58:22Z",
    "run_id": "11107670772"
  },
  {
    "hash": "ed56607eb5d57c17c01006327aa8784d5eea3e20",
    "type": "pull_request",
    "pull_request": 4408,
    "label": "dsiganos:fix_node_search_receivable_confirmed",
    "created_at": "2024-01-27T08:04:19Z",
    "built_at": "2024-01-27T08:57:33Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ed56607eb5d57c17c01006327aa8784d5eea3e20",
    "build_started_at": "2024-01-27T08:13:39Z",
    "run_id": "7677390855"
  },
  {
    "hash": "ed5eb8a83adb487d9338863ff031d3d66ff49cc4",
    "type": "pull_request",
    "title": "Build fixes.",
    "author": "clemahieu",
    "body": "Fixes build errors on GCC 13.2\r\n\r\nnano-node.src/submodules/gtest/googletest/include/gtest/gtest.h:1379:11: error: no match for ‘operator==’ (operand types are ‘const int’ and ‘const std::optional<nano::amount>’)\r\n",
    "draft": false,
    "pull_request": 4602,
    "label": "clemahieu:build_fix_amount",
    "created_at": "2024-05-05T12:32:36Z",
    "built_at": "2024-05-05T13:06:23Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ed5eb8a83adb487d9338863ff031d3d66ff49cc4",
    "build_started_at": "2024-05-05T12:39:26Z",
    "run_id": "8958296361"
  },
  {
    "hash": "ed60faf7217fca059852b840f4cf585e14ceea79",
    "type": "pull_request",
    "pull_request": 4412,
    "label": "pwojcikdev:tracing-4-develop",
    "created_at": "2024-01-30T17:15:41Z",
    "built_at": "2024-02-05T21:00:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ed60faf7217fca059852b840f4cf585e14ceea79",
    "build_started_at": "2024-02-05T20:34:37Z",
    "run_id": "7790520735"
  },
  {
    "hash": "ed66b2c8ca24a7869157e42994bea0aefae112c6",
    "type": "commit",
    "created_at": "2023-03-21T11:27:11Z",
    "built_at": "2023-03-21T12:54:30Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ed66b2c8ca24a7869157e42994bea0aefae112c6"
  },
  {
    "hash": "ed85b37dd07b365b6e0196ecec29c167494d9057",
    "type": "commit",
    "created_at": "2023-02-16T15:18:05Z",
    "built_at": "2023-02-16T16:07:47Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ed85b37dd07b365b6e0196ecec29c167494d9057"
  },
  {
    "hash": "ee0c51d13f8dcab72455796de59967373b8a7439",
    "type": "pull_request",
    "pull_request": 4373,
    "label": "clemahieu:thread_runner_handler_tracking_build",
    "created_at": "2024-01-18T13:40:38Z",
    "built_at": "2024-01-18T14:08:09Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ee0c51d13f8dcab72455796de59967373b8a7439",
    "build_started_at": "2024-01-18T13:42:09Z",
    "run_id": "7570872419"
  },
  {
    "hash": "ee223299cf59028235b03aef4720692879c9a2ea",
    "type": "commit",
    "created_at": "2023-11-07T17:29:43Z",
    "built_at": "2023-11-08T15:12:53Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ee223299cf59028235b03aef4720692879c9a2ea",
    "build_started_at": "2023-11-08T14:25:03Z",
    "run_id": "6799598907"
  },
  {
    "hash": "ee519c659849c23b0573756e37087bf2e6177400",
    "type": "pull_request",
    "title": "Directly confirm blocks within unit tests rather than starting/forcing elections",
    "author": "clemahieu",
    "body": "Replaces nano::test::force_confirm with nano::test::confirm and overrides. The action was renamed to test::confirm because the action is to confirm.  election::force_confirm is an action specific to an election where the normal path causes confirmation after the vote tally has quorum and force_confirm simulates this.\r\n\r\nWhile this doesn't fix any test specifically it should help with general unit test reliability by not running election functionality when setting up tests.",
    "draft": false,
    "pull_request": 4605,
    "label": "clemahieu:testing_direct_confirmation",
    "created_at": "2024-05-06T22:14:55Z",
    "built_at": "2024-05-06T22:55:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ee519c659849c23b0573756e37087bf2e6177400",
    "build_started_at": "2024-05-06T22:26:25Z",
    "run_id": "8976616611"
  },
  {
    "hash": "ee548a306f40f2d180282262733a0fb0f79906a6",
    "type": "pull_request",
    "pull_request": 4246,
    "label": "pwojcikdev:parallel-core-tests",
    "created_at": "2023-06-06T23:26:01Z",
    "built_at": "2023-06-07T00:04:29Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ee548a306f40f2d180282262733a0fb0f79906a6"
  },
  {
    "hash": "ee5dc3177ada10ad0e11984bb3b735abcf639c52",
    "type": "pull_request",
    "pull_request": 4243,
    "label": "pwojcikdev:logging-artifact-hashes",
    "created_at": "2023-05-31T22:33:24Z",
    "built_at": "2023-06-01T20:21:15Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ee5dc3177ada10ad0e11984bb3b735abcf639c52"
  },
  {
    "hash": "ee6ca162bac88c007341438a224818209cc11abd",
    "type": "commit",
    "author": "clemahieu",
    "title": "Add vote_router class",
    "pull_request": "4607",
    "created_at": "2024-05-07T00:23:11Z",
    "built_at": "2024-05-08T07:34:22Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ee6ca162bac88c007341438a224818209cc11abd",
    "build_started_at": "2024-05-08T06:53:59Z",
    "run_id": "8997741847"
  },
  {
    "hash": "ee74efb900df98d6b223fbb0852529203e83a00e",
    "type": "commit",
    "author": "gr0vity-dev",
    "title": "feat: add  to Dockerfile to allow docker images with tracing enabled via build-args (#4603)\n\nCo-authored-by: gr0vity <gr0vity.dev@gmail.com>",
    "pull_request": "4603",
    "created_at": "2024-05-06T08:59:15Z",
    "built_at": "2024-05-06T09:29:34Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ee74efb900df98d6b223fbb0852529203e83a00e",
    "build_started_at": "2024-05-06T09:00:25Z",
    "run_id": "8966608662"
  },
  {
    "hash": "ee85b5da9df7a6b60d843919407e11ddf982713a",
    "type": "pull_request",
    "pull_request": 4412,
    "label": "pwojcikdev:tracing-4-develop",
    "created_at": "2024-01-30T17:15:41Z",
    "built_at": "2024-02-01T16:41:50Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ee85b5da9df7a6b60d843919407e11ddf982713a",
    "build_started_at": "2024-02-01T16:12:59Z",
    "run_id": "7744236269"
  },
  {
    "hash": "ee9169ab7e2a2cc7fd5ae2a9f878666d6113b7a7",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Legacy bootstrap throttling (#4669)\n\n* Proper block processor queue size check\r\n\r\n* Remove full and half_full queries\r\n\r\n* Iterate frontiers on bootstrap workers thread",
    "pull_request": "4669",
    "created_at": "2024-07-04T17:26:25Z",
    "built_at": "2024-07-04T18:05:21Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ee9169ab7e2a2cc7fd5ae2a9f878666d6113b7a7",
    "build_started_at": "2024-07-04T17:30:43Z",
    "run_id": "9798197134"
  },
  {
    "hash": "eec24a30fb2f4d7ede106272bff158f935ca7ba0",
    "type": "pull_request",
    "title": "Bootstrap tuning",
    "author": "pwojcikdev",
    "body": "This contains a few bootstrap improvements that should prevent edge case stalls. The main fix is giving accounts inserted from frontier / database scan the lowest possible priority, so that they cannot preempt existing priority accounts.",
    "draft": false,
    "pull_request": 4784,
    "label": "pwojcikdev:bootstrap-tuning-3",
    "created_at": "2024-11-11T20:51:52Z",
    "built_at": "2024-11-12T01:07:29Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:eec24a30fb2f4d7ede106272bff158f935ca7ba0",
    "build_started_at": "2024-11-11T23:46:33Z",
    "run_id": "11788520253"
  },
  {
    "hash": "eec74af01dfc95db60a1dd5051db87f70f49e1ac",
    "type": "pull_request",
    "pull_request": 4483,
    "label": "simpago:store-rep-weights-on-disk",
    "created_at": "2024-03-12T10:24:20Z",
    "built_at": "2024-03-12T14:19:06Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-12T13:53:15Z",
    "run_id": "8250016028"
  },
  {
    "hash": "eedb4f81bba12a16bd4d54f1066013c61233767a",
    "type": "pull_request",
    "title": "Fixes for `port_mapping`",
    "author": "pwojcikdev",
    "body": "This fixes a few issues I noticed in `port_mapping` class.",
    "draft": false,
    "pull_request": 4690,
    "label": "pwojcikdev:fix-upnp",
    "created_at": "2024-08-03T11:58:36Z",
    "built_at": "2024-08-03T12:51:49Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:eedb4f81bba12a16bd4d54f1066013c61233767a",
    "build_started_at": "2024-08-03T12:24:35Z",
    "run_id": "10227957837"
  },
  {
    "hash": "eede334203bb93c8fcebb5db70614d2717e4f46b",
    "type": "commit",
    "created_at": "2023-12-19T12:41:30Z",
    "built_at": "2023-12-19T13:09:30Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:eede334203bb93c8fcebb5db70614d2717e4f46b",
    "build_started_at": "2023-12-19T12:44:17Z",
    "run_id": "7261985761"
  },
  {
    "hash": "eef0fca53ed1c2733fc7fcd4c3b5c3b5cf94ece1",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Periodically update network publish filter",
    "pull_request": "4735",
    "created_at": "2024-09-24T17:20:40Z",
    "built_at": "2024-09-25T17:08:16Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:eef0fca53ed1c2733fc7fcd4c3b5c3b5cf94ece1",
    "build_started_at": "2024-09-25T13:41:38Z",
    "run_id": "11037421867"
  },
  {
    "hash": "ef0268d3f9c72da75c550d979153e48d8ced587d",
    "type": "pull_request",
    "title": "Limit number of rocksdb background threads",
    "author": "pwojcikdev",
    "body": "It seems like rocksdb has a tendency for higher CPU usage compared to lmdb. This modifies the default limit to use half the available CPU threads.",
    "draft": false,
    "pull_request": 4660,
    "label": "pwojcikdev:rocksdb-threads-config",
    "created_at": "2024-06-27T10:50:03Z",
    "built_at": "2024-06-27T11:22:15Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ef0268d3f9c72da75c550d979153e48d8ced587d",
    "build_started_at": "2024-06-27T10:55:01Z",
    "run_id": "9695300760"
  },
  {
    "hash": "ef0dde689ea7c585787f5f721573e357b465c3dc",
    "type": "commit",
    "created_at": "2023-11-06T15:21:18Z",
    "built_at": "2023-11-06T16:18:48Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ef0dde689ea7c585787f5f721573e357b465c3dc",
    "build_started_at": "2023-11-06T15:27:16Z",
    "run_id": "6772887815"
  },
  {
    "hash": "ef10ef7ad546a67706b46dbaa8971ede9b354c84",
    "type": "commit",
    "created_at": "2024-01-19T10:53:12Z",
    "built_at": "2024-01-19T11:27:43Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ef10ef7ad546a67706b46dbaa8971ede9b354c84",
    "build_started_at": "2024-01-19T10:59:56Z",
    "run_id": "7582867790"
  },
  {
    "hash": "ef25ca696a14136f63ef1172fa6f8d71b958b402",
    "type": "commit",
    "created_at": "2024-02-06T15:56:55Z",
    "built_at": "2024-02-06T16:38:42Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ef25ca696a14136f63ef1172fa6f8d71b958b402",
    "build_started_at": "2024-02-06T16:13:03Z",
    "run_id": "7802692835"
  },
  {
    "hash": "ef3167a2360cfa0fb61da778c6d1bc586e63db19",
    "type": "commit",
    "created_at": "2023-09-08T09:35:43Z",
    "built_at": "2023-09-09T00:04:45Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ef3167a2360cfa0fb61da778c6d1bc586e63db19"
  },
  {
    "hash": "ef48944aa54e4ae15f58890d2ae2d0a49ae03032",
    "type": "pull_request",
    "title": "Use a dedicated thread for tcp listener",
    "body": "While I'm not aware of any problems with previous implementation, the async way of implementing `tcp_listener` was generally harder to understand and to evolve over time. It was especially problematic when making changes to other aspects of networking code. Given that our connections are long-lived and relatively infrequent, there is very little need for tcp acceptor code to be focused on performance and instead we should prioritize readability and maintainability. This modifies it to instead run on a single, dedicated thread and use blocking IO operations.",
    "draft": false,
    "pull_request": 4523,
    "label": "pwojcikdev:networking-fixes/tcp-listener-2",
    "created_at": "2024-03-25T16:06:32Z",
    "built_at": "2024-04-01T09:21:52Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ef48944aa54e4ae15f58890d2ae2d0a49ae03032",
    "build_started_at": "2024-04-01T08:54:36Z",
    "run_id": "8506072814"
  },
  {
    "hash": "ef48d4fddd7d0d8a54bea4262eefed1bbbd199c0",
    "type": "pull_request",
    "title": "Changed logo",
    "author": "darkod77",
    "body": null,
    "draft": false,
    "pull_request": 4782,
    "label": "darkod77:feature/logo",
    "created_at": "2024-11-10T17:04:24Z",
    "built_at": null,
    "build_status": "building",
    "docker_tag": null,
    "build_started_at": "2024-11-10T17:12:00Z",
    "run_id": null
  },
  {
    "hash": "ef49f99b23cf96109224050e804e2894726d1a04",
    "type": "commit",
    "created_at": "2023-02-18T00:07:03Z",
    "built_at": "2023-02-18T14:19:11Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ef49f99b23cf96109224050e804e2894726d1a04"
  },
  {
    "hash": "ef64ecb799d131ce5bd2532a2f809799234805a7",
    "type": "pull_request",
    "pull_request": 4483,
    "label": "simpago:store-rep-weights-on-disk",
    "created_at": "2024-03-12T10:24:20Z",
    "built_at": "2024-03-22T13:31:34Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ef64ecb799d131ce5bd2532a2f809799234805a7",
    "build_started_at": "2024-03-22T13:03:40Z",
    "run_id": "8390754837"
  },
  {
    "hash": "ef9268df65f61cadae31caec836c1bdc19319a9a",
    "type": "pull_request",
    "pull_request": 4447,
    "label": "clemahieu:connection_cleanup",
    "created_at": "2024-02-23T15:42:23Z",
    "built_at": "2024-02-23T16:12:07Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ef9268df65f61cadae31caec836c1bdc19319a9a",
    "build_started_at": "2024-02-23T15:47:01Z",
    "run_id": "8021633772"
  },
  {
    "hash": "ef985e3cf1dcd026ba8a6df1e6f3f685934e1be9",
    "type": "commit",
    "created_at": "2024-03-15T16:42:52Z",
    "built_at": "2024-03-15T17:12:33Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ef985e3cf1dcd026ba8a6df1e6f3f685934e1be9",
    "build_started_at": "2024-03-15T16:46:31Z",
    "run_id": "8299575737"
  },
  {
    "hash": "ef9e02a6cef29015c758905fa790c14ee24c8f54",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge pull request #4584 from pwojcikdev/fair-queuing/bootstrap-server\n\nFair queuing for bootstrap server",
    "pull_request": "4584",
    "created_at": "2024-04-26T22:28:25Z",
    "built_at": "2024-04-26T23:25:28Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ef9e02a6cef29015c758905fa790c14ee24c8f54",
    "build_started_at": "2024-04-26T22:30:20Z",
    "run_id": "8855192559"
  },
  {
    "hash": "efa72aaab4d9ad6adfd247bfdacae401bf1859df",
    "type": "pull_request",
    "title": "Increase beta network connection limits",
    "author": "pwojcikdev",
    "body": "This makes it easier to test beta network.",
    "draft": false,
    "pull_request": 4657,
    "label": "pwojcikdev:connection-limits-beta",
    "created_at": "2024-06-26T09:45:50Z",
    "built_at": "2024-06-26T10:15:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:efa72aaab4d9ad6adfd247bfdacae401bf1859df",
    "build_started_at": "2024-06-26T09:50:00Z",
    "run_id": "9677456766"
  },
  {
    "hash": "efc1dd5c3f146a159351f65af371d3e5a9fc23cf",
    "type": "pull_request",
    "pull_request": 4309,
    "label": "RickiNano:use-c++-std-filesystem",
    "created_at": "2023-10-08T18:57:37Z",
    "built_at": "2023-10-18T19:13:58Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:efc1dd5c3f146a159351f65af371d3e5a9fc23cf"
  },
  {
    "hash": "efcaac104772e9a18cc7d9d925c1d071e0061c56",
    "type": "pull_request",
    "pull_request": 4123,
    "label": "dsiganos:fix_peering_port_generate_config",
    "created_at": "2023-02-13T23:50:34Z",
    "built_at": "2023-02-14T00:18:34Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:efcaac104772e9a18cc7d9d925c1d071e0061c56"
  },
  {
    "hash": "efcb5284de344284b901b5d2ad3f3d723de672dd",
    "type": "pull_request",
    "pull_request": 4242,
    "label": "thsfs:bump-qt-for-windows-dep",
    "created_at": "2023-05-31T20:55:28Z",
    "built_at": "2023-05-31T21:26:56Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:efcb5284de344284b901b5d2ad3f3d723de672dd"
  },
  {
    "hash": "efe41eea131234bf3c035c65b9d3114614b383c3",
    "type": "commit",
    "created_at": "2024-01-26T10:54:02Z",
    "built_at": "2024-01-26T11:24:50Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:efe41eea131234bf3c035c65b9d3114614b383c3",
    "build_started_at": "2024-01-26T11:00:22Z",
    "run_id": "7667185281"
  },
  {
    "hash": "efe436929fe5460c58d51aa433edfd2249203236",
    "type": "pull_request",
    "title": "Peer cache",
    "author": "pwojcikdev",
    "body": "This introduces a new `peer_cache` component that is responsible for managing cached peers. Previously storing peers was done by `tcp_channels` and loading by `node`, which is not the core responsibility of these classes.\r\nPrevious behavior was that only the latest set of peers was stored (ie. cache was cleared before every write). Now the cache keeps track of peers up to a certain cutoff age (by default 1 hour).\r\nAnother behavior change is that network reachout thread tries to contact cached peers. Previously this was only done once, on node startup. This should help with resiliency if for some reason node temporarily loses connection to a peer (eg. due to network outage).",
    "draft": false,
    "pull_request": 4574,
    "label": "pwojcikdev:cached-peers-2",
    "created_at": "2024-04-17T11:34:31Z",
    "built_at": "2024-04-17T12:23:36Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:efe436929fe5460c58d51aa433edfd2249203236",
    "build_started_at": "2024-04-17T11:54:22Z",
    "run_id": "8721393276"
  },
  {
    "hash": "efecf2c0103a9a6210d0238066f2478f6a5550b5",
    "type": "pull_request",
    "pull_request": 4485,
    "label": "simpago:rep-cache-min-weight",
    "created_at": "2024-03-12T13:26:39Z",
    "built_at": "2024-03-15T08:07:21Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-15T07:51:43Z",
    "run_id": "8292951358"
  },
  {
    "hash": "f016d6207837926ad8d0c648d72cf7e389de983e",
    "type": "pull_request",
    "pull_request": 4483,
    "label": "simpago:store-rep-weights-on-disk",
    "created_at": "2024-03-12T10:24:20Z",
    "built_at": "2024-03-12T12:25:03Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-12T12:09:19Z",
    "run_id": "8248523726"
  },
  {
    "hash": "f029329ba50abb9b26b812fc923b1141dc4a5e34",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Bootstrap config tuning (#4698)\n\n* Reduce database rate limit\r\n\r\n* Reduce max requests\r\n\r\n* Config for max_pull_count\r\n\r\n* Rename config to `block_processor_threshold`\r\n\r\n* Rename config to `channel_limit`\r\n\r\n* Serialization\r\n\r\n* Adjust channel limit",
    "pull_request": "4698",
    "created_at": "2024-08-11T12:03:49Z",
    "built_at": "2024-08-11T12:54:27Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f029329ba50abb9b26b812fc923b1141dc4a5e34",
    "build_started_at": "2024-08-11T12:24:45Z",
    "run_id": "10339716639"
  },
  {
    "hash": "f029fb7c60df64f3247e851cff3dc2e4fa9f54e5",
    "type": "commit",
    "created_at": "2023-02-03T01:26:45Z",
    "built_at": "2023-02-06T21:50:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f029fb7c60df64f3247e851cff3dc2e4fa9f54e5"
  },
  {
    "hash": "f02cee1da878a569138192154dafcfb00861a06b",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Remove tls rpc",
    "pull_request": "4646",
    "created_at": "2024-05-25T10:39:09Z",
    "built_at": "2024-06-12T15:13:04Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f02cee1da878a569138192154dafcfb00861a06b",
    "build_started_at": "2024-06-12T14:35:20Z",
    "run_id": "9484699029"
  },
  {
    "hash": "f040f7c79c06302789d740a1750e33b9490b7279",
    "type": "pull_request",
    "pull_request": 4404,
    "label": "clemahieu:block_processor_flush_remove",
    "created_at": "2024-01-26T18:37:48Z",
    "built_at": "2024-01-29T16:03:07Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f040f7c79c06302789d740a1750e33b9490b7279",
    "build_started_at": "2024-01-29T15:37:01Z",
    "run_id": "7698577432"
  },
  {
    "hash": "f0677e4129769b35f348330596367e41f359fcc0",
    "type": "pull_request",
    "title": "Block checker",
    "body": "Rewrite of https://github.com/nanocurrency/nano-node/pull/3727 with functional style checking rather than a pipeline",
    "draft": true,
    "pull_request": 4345,
    "label": "clemahieu:block_checker",
    "created_at": "2023-11-14T12:02:06Z",
    "built_at": "2024-04-05T23:09:04Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f0677e4129769b35f348330596367e41f359fcc0",
    "build_started_at": "2024-04-05T22:40:23Z",
    "run_id": "8576519774"
  },
  {
    "hash": "f069345a00ef318dbc6aab5ec34323bd41061fcb",
    "type": "pull_request",
    "pull_request": 4483,
    "label": "simpago:store-rep-weights-on-disk",
    "created_at": "2024-03-12T10:24:20Z",
    "built_at": "2024-03-13T09:04:42Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-13T08:42:04Z",
    "run_id": "8261764682"
  },
  {
    "hash": "f07731b199045a86430680f8571f21077eada68a",
    "type": "pull_request",
    "title": "Add `is_originator` flag to publish messages",
    "author": "pwojcikdev",
    "body": "This adds a new flag to `publish` messages that indicates whether a block is coming from a node that performed initial flooding. This helps avoid a situation when under a high load, a legitimate block is dropped because blockprocessor queue for a peer is full of rebroadcasted blocks. However, the potential for exploiting this is limited, as both rebroadcasted and originator queues have the same max size and priority, so effectively this gives each peer two queues to spam the network - which is not much, but should be plenty for legitimate traffic.\r\n\r\nFormat of extended publish message:\r\n```\r\n/*\r\n * Binary Format:\r\n * [message_header] Common message header\r\n * [variable] Block (serialized according to the block type specified in the header)\r\n *\r\n * Header extensions:\r\n * - [0x0f00] Block type: Identifies the specific type of the block.\r\n * - [0x0004] Originator flag\r\n */\r\n```",
    "draft": false,
    "pull_request": 4654,
    "label": "pwojcikdev:publish-originator",
    "created_at": "2024-06-23T16:07:14Z",
    "built_at": "2024-07-04T18:11:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f07731b199045a86430680f8571f21077eada68a",
    "build_started_at": "2024-07-04T17:38:02Z",
    "run_id": "9798251574"
  },
  {
    "hash": "f0a8deae483f9fc5500fc10259a25acb7fea0c02",
    "type": "commit",
    "author": "clemahieu",
    "title": "Remove default nano::election_behavior arguments",
    "pull_request": "4611",
    "created_at": "2024-05-10T08:58:22Z",
    "built_at": "2024-05-13T11:30:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f0a8deae483f9fc5500fc10259a25acb7fea0c02",
    "build_started_at": "2024-05-13T10:46:03Z",
    "run_id": "9061738560"
  },
  {
    "hash": "f0fcfecccd26f9be2c2d9f4b211d91f0d83156b0",
    "type": "commit",
    "created_at": "2024-03-13T19:17:04Z",
    "built_at": "2024-03-15T17:05:46Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f0fcfecccd26f9be2c2d9f4b211d91f0d83156b0",
    "build_started_at": "2024-03-15T15:29:42Z",
    "run_id": "8298619683"
  },
  {
    "hash": "f109cb1ee910eaf631cb643df87fda4d2829e7c0",
    "type": "commit",
    "created_at": "2024-03-14T16:28:54Z",
    "built_at": "2024-03-14T17:30:48Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f109cb1ee910eaf631cb643df87fda4d2829e7c0",
    "build_started_at": "2024-03-14T16:29:57Z",
    "run_id": "8284072067"
  },
  {
    "hash": "f14154507ea9c824aa4bd43525288f2831ed347d",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Cleanup",
    "pull_request": "N/A",
    "created_at": "2024-11-04T19:36:03Z",
    "built_at": "2024-11-23T05:42:12Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f14154507ea9c824aa4bd43525288f2831ed347d",
    "build_started_at": "2024-11-22T23:40:48Z",
    "run_id": "11984424201"
  },
  {
    "hash": "f150aab1b1507631bf393ef56ef2e6499b24abbc",
    "type": "pull_request",
    "pull_request": 4267,
    "label": "clemahieu:remove_signature_threads",
    "created_at": "2023-08-22T12:30:21Z",
    "built_at": "2023-11-06T01:21:10Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f150aab1b1507631bf393ef56ef2e6499b24abbc",
    "build_started_at": "2023-11-06T00:56:11Z",
    "run_id": "6764928496"
  },
  {
    "hash": "f16c65b4920542439a0ce82b06b8e8f18ffc17e7",
    "type": "pull_request",
    "title": "Redesign the priority scheduler to maintain a 1-to-1 link with running elections",
    "author": "clemahieu",
    "body": "This change appropriately prioritises elections by bucket and then by LRU account. Overfilled buckets have the lowest priority block election cancelled and rolled back.",
    "draft": true,
    "pull_request": 4593,
    "label": "clemahieu:priority_limiter",
    "created_at": "2024-04-30T12:53:50Z",
    "built_at": "2024-05-10T12:19:36Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f16c65b4920542439a0ce82b06b8e8f18ffc17e7",
    "build_started_at": "2024-05-10T11:50:13Z",
    "run_id": "9031768090"
  },
  {
    "hash": "f189f66152407a402a27aefb0ed2471db241abd8",
    "type": "commit",
    "created_at": "2023-02-18T20:13:59Z",
    "built_at": "2023-02-18T20:52:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f189f66152407a402a27aefb0ed2471db241abd8"
  },
  {
    "hash": "f198c8dd772245633f5661380e086a6c0d7b5c17",
    "type": "pull_request",
    "pull_request": 4296,
    "label": "clemahieu:sucessor_table",
    "created_at": "2023-09-26T13:49:26Z",
    "built_at": "2024-02-14T16:05:44Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f198c8dd772245633f5661380e086a6c0d7b5c17",
    "build_started_at": "2024-02-14T15:27:25Z",
    "run_id": "7903508150"
  },
  {
    "hash": "f1b247f54e059fa5c3f71e8d44ef2be6ae301317",
    "type": "pull_request",
    "pull_request": 4405,
    "label": "Napetrou:develop",
    "created_at": "2024-01-26T18:45:09Z",
    "built_at": "2024-01-26T19:29:46Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-01-26T19:14:48Z",
    "run_id": "7672409376"
  },
  {
    "hash": "f1d2d4f249b1c1049d9d5ec9657f099b5ddb8708",
    "type": "pull_request",
    "title": "Avoid bootstrap notifications from live traffic",
    "author": "pwojcikdev",
    "body": null,
    "draft": false,
    "pull_request": 4463,
    "label": "pwojcikdev:bootstrap-avoid-live-traffic",
    "created_at": "2024-03-06T11:52:12Z",
    "built_at": "2024-06-27T14:21:30Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f1d2d4f249b1c1049d9d5ec9657f099b5ddb8708",
    "build_started_at": "2024-06-27T13:51:59Z",
    "run_id": "9697864065"
  },
  {
    "hash": "f1e0685affe219be8a7222705b35f4eba3fe8ad0",
    "type": "pull_request",
    "pull_request": 4345,
    "label": "clemahieu:block_checker",
    "created_at": "2023-11-14T12:02:06Z",
    "built_at": "2024-03-03T14:01:52Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f1e0685affe219be8a7222705b35f4eba3fe8ad0",
    "build_started_at": "2024-03-03T13:35:02Z",
    "run_id": "8130609652"
  },
  {
    "hash": "f1fef8f5460ee8aba251df4bad9a618e3ccdeda5",
    "type": "pull_request",
    "title": "Block checker",
    "body": "Rewrite of https://github.com/nanocurrency/nano-node/pull/3727 with functional style checking rather than a pipeline",
    "draft": true,
    "pull_request": 4345,
    "label": "clemahieu:block_checker",
    "created_at": "2023-11-14T12:02:06Z",
    "built_at": "2024-04-05T11:15:04Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f1fef8f5460ee8aba251df4bad9a618e3ccdeda5",
    "build_started_at": "2024-04-05T10:50:07Z",
    "run_id": "8568651524"
  },
  {
    "hash": "f2198c9c0c220a35182b62fc8e62fd7f6a3b5ebe",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Activate successors of cemented blocks",
    "pull_request": "4757",
    "created_at": "2024-10-17T15:34:53Z",
    "built_at": "2024-10-18T22:05:58Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f2198c9c0c220a35182b62fc8e62fd7f6a3b5ebe",
    "build_started_at": "2024-10-18T20:40:42Z",
    "run_id": "11411369744"
  },
  {
    "hash": "f21adde24f38c232938b4312744b8c9428905742",
    "type": "pull_request",
    "title": "Add 'rebroadcasted' flag to `confirm_ack` message",
    "author": "pwojcikdev",
    "body": "This adds a new flag to a `confirm_ack` message that indicates whether a vote was rebroadcasted by the peer. **This is not meant to be tamperproof**, rather it's a heuristic to avoid confusing rep crawler component when nodes are rebroadcasting votes. Longer term the goal is to provide some foundations for a (potential) future larger-scale integration with vote storage.\r\n\r\nFormat for `confirm_ack` message:\r\n```\r\n/*\r\n * Binary Format:\r\n * [message_header] Common message header\r\n * [variable] Vote\r\n * - Serialized/deserialized by the `nano::vote` class.\r\n *\r\n * Header extensions:\r\n * - [0xf000] Count (for V1 protocol)\r\n * - [0x0f00] Block type\r\n *   - Not used anymore (V25.1+), but still present and set to `not_a_block = 0x1` for backwards compatibility\r\n * - [0xf000 (high), 0x00f0 (low)] Count V2 masks (for V2 protocol)\r\n * - [0x0001] Confirm V2 flag\r\n * - [0x0002] Reserved for V3+ versioning\r\n * - [0x0004] Rebroadcasted flag\r\n */\r\n```",
    "draft": false,
    "pull_request": 4621,
    "label": "pwojcikdev:confirm-message-extensions",
    "created_at": "2024-05-14T15:22:38Z",
    "built_at": "2024-05-14T17:27:49Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f21adde24f38c232938b4312744b8c9428905742",
    "build_started_at": "2024-05-14T16:57:47Z",
    "run_id": "9083226040"
  },
  {
    "hash": "f220b450195324f2a9363c784e087b089c5b3deb",
    "type": "pull_request",
    "title": "Vote generator write queue",
    "author": "clemahieu",
    "body": "Changes the vote_generators to respect the database write queue.\r\n\r\nAdd consistency check to ensure the writer token is not already queued since they're waited for by value.\r\nChange wait-loop to use the predicated overload of wait.",
    "draft": false,
    "pull_request": 4556,
    "label": "clemahieu:vote_generator_write_queue",
    "created_at": "2024-04-13T16:20:07Z",
    "built_at": "2024-04-13T17:10:35Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f220b450195324f2a9363c784e087b089c5b3deb",
    "build_started_at": "2024-04-13T16:25:51Z",
    "run_id": "8674908243"
  },
  {
    "hash": "f236750c37c7328566953ec6b0fd56d4fcc9af1d",
    "type": "pull_request",
    "pull_request": 4113,
    "label": "pwojcikdev:fix-magic-enum-slowdown",
    "created_at": "2023-02-08T19:29:46Z",
    "built_at": "2023-02-08T20:12:53Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f236750c37c7328566953ec6b0fd56d4fcc9af1d"
  },
  {
    "hash": "f25037ea5aa07646e17aa80493a2a6db0438ed12",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Ignore telemetry requests",
    "pull_request": "4695",
    "created_at": "2024-08-06T16:04:30Z",
    "built_at": "2024-08-22T09:10:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f25037ea5aa07646e17aa80493a2a6db0438ed12",
    "build_started_at": "2024-08-22T08:29:05Z",
    "run_id": "10504738071"
  },
  {
    "hash": "f264231a7647d209130c339f6a7b6f4e3b698a64",
    "type": "commit",
    "created_at": "2023-03-10T02:28:32Z",
    "built_at": "2023-03-10T04:08:25Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f264231a7647d209130c339f6a7b6f4e3b698a64"
  },
  {
    "hash": "f2709a347943023c7e24b7fc24a67a3864e7ed33",
    "type": "pull_request",
    "title": "Add comment/warning to node::block_confirmed_or_being_confirmed functions",
    "body": "Indicate potentially unexpected behavior with respect to MVCC database transactions.",
    "draft": false,
    "pull_request": 4540,
    "label": "clemahieu:comment-node_being_confirmed",
    "created_at": "2024-04-07T18:11:44Z",
    "built_at": "2024-04-07T19:00:34Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f2709a347943023c7e24b7fc24a67a3864e7ed33",
    "build_started_at": "2024-04-07T18:18:23Z",
    "run_id": "8590832630"
  },
  {
    "hash": "f2771418f004b80e852aadf61819987533600ed1",
    "type": "pull_request",
    "pull_request": 4225,
    "label": "clemahieu:rpc_pending_exists_active",
    "created_at": "2023-05-04T23:18:14Z",
    "built_at": "2023-05-05T08:54:47Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f2771418f004b80e852aadf61819987533600ed1"
  },
  {
    "hash": "f27a4079760bb9903fd34f2b1e8162f0c6f22a42",
    "type": "commit",
    "author": "simpago",
    "title": "Use new priority timestamp in priority scheduler (#4809)",
    "pull_request": "4809",
    "created_at": "2024-12-20T16:29:12Z",
    "built_at": "2024-12-20T17:05:38Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f27a4079760bb9903fd34f2b1e8162f0c6f22a42",
    "build_started_at": "2024-12-20T16:38:31Z",
    "run_id": "12435073730"
  },
  {
    "hash": "f28e7c460d345dad37993571b070ae5ef2507e37",
    "type": "pull_request",
    "pull_request": 4288,
    "label": "RickiNano:bugfix/fix-windows-build",
    "created_at": "2023-09-21T06:42:26Z",
    "built_at": "2023-09-21T07:26:43Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f28e7c460d345dad37993571b070ae5ef2507e37"
  },
  {
    "hash": "f2cf82bccd36938e758ab974779e5ec11c7965a8",
    "type": "commit",
    "author": "RickiNano",
    "title": "Exit migration if existing rocksdb ledger found (#4778)\n\n* Exit migration if existing rocksdb ledger found\r\n\r\n* Added unit test for migration with existing rocksdb",
    "pull_request": "4778",
    "created_at": "2024-11-03T11:12:29Z",
    "built_at": "2024-11-03T11:53:49Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f2cf82bccd36938e758ab974779e5ec11c7965a8",
    "build_started_at": "2024-11-03T11:14:37Z",
    "run_id": "11650924721"
  },
  {
    "hash": "f30ec1162212f6ec84cad8a6f6e0fb8a8d2ebc82",
    "type": "commit",
    "created_at": "2023-10-19T14:48:20Z",
    "built_at": "2023-10-19T15:27:03Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f30ec1162212f6ec84cad8a6f6e0fb8a8d2ebc82",
    "build_started_at": "2023-10-19T14:48:35Z",
    "run_id": "6576356933"
  },
  {
    "hash": "f32261d317149ff65d0dec097c0c3997b66fc601",
    "type": "pull_request",
    "pull_request": 4304,
    "label": "RickiNano:bugfix/brandon-bb-clear",
    "created_at": "2023-10-01T10:47:54Z",
    "built_at": "2023-10-01T11:35:47Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f32261d317149ff65d0dec097c0c3997b66fc601"
  },
  {
    "hash": "f3299114a47d5a593600be53729cd534074c9a70",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Log improvements (#4580)\n\n* Remove noisy logs\r\n\r\n* Log connecting nodes\r\n\r\n* Formatters for nano primitives\r\n\r\n* Logging started and stopped elections\r\n\r\n* Rename to `election_state`\r\n\r\n* Log election state\r\n\r\n* Thread runner logs",
    "pull_request": "4580",
    "created_at": "2024-04-22T14:53:19Z",
    "built_at": "2024-04-22T15:26:41Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f3299114a47d5a593600be53729cd534074c9a70",
    "build_started_at": "2024-04-22T14:57:01Z",
    "run_id": "8786244291"
  },
  {
    "hash": "f3792b512d942cfc77b79f62676c4e7d5843f699",
    "type": "commit",
    "created_at": "2023-11-07T20:56:29Z",
    "built_at": "2023-11-07T22:05:28Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f3792b512d942cfc77b79f62676c4e7d5843f699",
    "build_started_at": "2023-11-07T20:59:05Z",
    "run_id": "6790225316"
  },
  {
    "hash": "f3953ed8fdfd55db12d1e4ff1ab9268404937806",
    "type": "pull_request",
    "pull_request": 4193,
    "label": "clemahieu:send_single_many_peers_resources",
    "created_at": "2023-03-21T11:13:28Z",
    "built_at": "2023-03-21T13:16:50Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f3953ed8fdfd55db12d1e4ff1ab9268404937806"
  },
  {
    "hash": "f3ab0f8d8222494fc5558b2d426f5c40eef0df14",
    "type": "pull_request",
    "title": "Introduce ledger confirmed_set/any_set classes to separate confirmed-only and confirmed/unconfirmed operations on the ledger",
    "author": "clemahieu",
    "body": "The motivation for this PR is in preparation for bounded backlog changes. Currently, both confirmed and unconfirmed transactions are together on disk and the ACID properties of the ledger are encapsulated with a database transaction.\r\n\r\nWith the bounded backlog, blocks will be stored in memory so there will need to be memory synchronization in addition to database synchronization. Rather than filling the ledger class with unconfirmed/confirmed variants for each operation.\r\n\r\nThe ledger is divided in to several sets and subsets:\r\nledger::confirmed - The set of confirmed transactions\r\nledger::any - The superset of confirmed and unconfirmed transactions\r\n\r\nWhen unconfirmed blocks are held in memory the set ledger::unconfirmed will be added which holds only unconfirmed transactions.\r\n\r\nIn the future the confirming_set can be moved on to ledger which is the subset of unconfirmed blocks that are queued to be moved in to the confirmed set.",
    "draft": false,
    "pull_request": 4486,
    "label": "clemahieu:ledger_view",
    "created_at": "2024-03-12T14:33:24Z",
    "built_at": "2024-04-16T17:42:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f3ab0f8d8222494fc5558b2d426f5c40eef0df14",
    "build_started_at": "2024-04-16T17:14:55Z",
    "run_id": "8709774699"
  },
  {
    "hash": "f3b28592ec5b3f206b1cd9ddcfa5e8b535e2244f",
    "type": "pull_request",
    "pull_request": 4340,
    "label": "pwojcikdev:confirm-req-remove-block",
    "created_at": "2023-11-10T23:01:12Z",
    "built_at": "2023-11-10T23:49:58Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f3b28592ec5b3f206b1cd9ddcfa5e8b535e2244f",
    "build_started_at": "2023-11-10T23:05:21Z",
    "run_id": "6830446081"
  },
  {
    "hash": "f3b9eb91235f2b36c7bf656cfad9bd5b7f96ec0d",
    "type": "pull_request",
    "pull_request": 4216,
    "label": "thsfs:remove_unchecked_table_from_db",
    "created_at": "2023-04-20T18:52:50Z",
    "built_at": "2023-04-20T19:29:03Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f3b9eb91235f2b36c7bf656cfad9bd5b7f96ec0d"
  },
  {
    "hash": "f3c37742e0fa37e2b25b7d4bb9c12fb0d800df73",
    "type": "commit",
    "created_at": "2024-02-08T15:49:43Z",
    "built_at": "2024-02-08T16:19:33Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f3c37742e0fa37e2b25b7d4bb9c12fb0d800df73",
    "build_started_at": "2024-02-08T15:50:42Z",
    "run_id": "7832251501"
  },
  {
    "hash": "f3c908e3c5ed8c998c7b7cc7a77381262581bb59",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Newline fix",
    "pull_request": "4703",
    "created_at": "2024-10-29T12:59:07Z",
    "built_at": "2024-10-29T15:15:03Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f3c908e3c5ed8c998c7b7cc7a77381262581bb59",
    "build_started_at": "2024-10-29T13:30:07Z",
    "run_id": "11576305468"
  },
  {
    "hash": "f400b28aa567f43d0cd11e96eeb9f49bce830203",
    "type": "commit",
    "created_at": "2023-09-01T12:22:45Z",
    "built_at": "2023-09-01T13:57:35Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f400b28aa567f43d0cd11e96eeb9f49bce830203"
  },
  {
    "hash": "f430d8fb150fa6015a276eec7974c09806959b47",
    "type": "commit",
    "created_at": "2024-03-20T12:14:49Z",
    "built_at": "2024-03-21T12:12:32Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f430d8fb150fa6015a276eec7974c09806959b47",
    "build_started_at": "2024-03-21T10:56:10Z",
    "run_id": "8373770720"
  },
  {
    "hash": "f45589f0fe88ee51dd6151e9551a7da0d6d94b13",
    "type": "pull_request",
    "pull_request": 4412,
    "label": "pwojcikdev:tracing-4-develop",
    "created_at": "2024-01-30T17:15:41Z",
    "built_at": "2024-01-30T17:52:27Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f45589f0fe88ee51dd6151e9551a7da0d6d94b13",
    "build_started_at": "2024-01-30T17:23:43Z",
    "run_id": "7715028074"
  },
  {
    "hash": "f45835c6109dc80bc49cc9fff8c1dfafc22fc612",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Use unique ptr for `backlog_population`",
    "pull_request": "4728",
    "created_at": "2024-09-09T20:25:51Z",
    "built_at": "2024-09-17T12:07:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f45835c6109dc80bc49cc9fff8c1dfafc22fc612",
    "build_started_at": "2024-09-17T09:35:37Z",
    "run_id": "10902276774"
  },
  {
    "hash": "f49ef4e8dd9ed9fee81a3356c1b2e4c374f04633",
    "type": "commit",
    "author": "clemahieu",
    "title": "Creating ledger set classes for confirmed/any",
    "pull_request": "N/A",
    "created_at": "2024-03-10T21:06:43Z",
    "built_at": "2024-04-30T19:06:45Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f49ef4e8dd9ed9fee81a3356c1b2e4c374f04633",
    "build_started_at": "2024-04-30T13:34:48Z",
    "run_id": "8899939036"
  },
  {
    "hash": "f4a04ea06d4440218f41ac4f1521f6cf42564d44",
    "type": "pull_request",
    "title": "Move write database queue",
    "body": "This renames write_database_queue to write_queue and moves the class into the nano::store library. It also moves the object from nano::node to nano::store::component.\r\n\r\nThis is a more natural place for this class/object to be placed and also preps for confirming_set to be moved on to the ledger class which would otherwise have a cyclic dependency secure -> store -> node -> secure",
    "draft": false,
    "pull_request": 4535,
    "label": "clemahieu:move_write_database_queue",
    "created_at": "2024-04-04T11:07:35Z",
    "built_at": "2024-04-04T15:05:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f4a04ea06d4440218f41ac4f1521f6cf42564d44",
    "build_started_at": "2024-04-04T14:39:51Z",
    "run_id": "8556564147"
  },
  {
    "hash": "f4ce5b968325bbbb670f0d883eb40d0048474177",
    "type": "pull_request",
    "pull_request": 4384,
    "label": "clemahieu:remove_unchecked_clear_startup",
    "created_at": "2024-01-21T19:53:39Z",
    "built_at": "2024-01-21T20:20:30Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f4ce5b968325bbbb670f0d883eb40d0048474177",
    "build_started_at": "2024-01-21T19:56:15Z",
    "run_id": "7603478222"
  },
  {
    "hash": "f4dc825763f5f88f8e065546653374d6bd43de49",
    "type": "commit",
    "created_at": "2024-03-05T19:07:43Z",
    "built_at": "2024-03-06T19:13:56Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f4dc825763f5f88f8e065546653374d6bd43de49",
    "build_started_at": "2024-03-06T17:44:51Z",
    "run_id": "8176435828"
  },
  {
    "hash": "f4ddd523e13c5429bf2167820d205d51033a7a96",
    "type": "pull_request",
    "pull_request": 4207,
    "label": "clemahieu:throttle_explicit",
    "created_at": "2023-04-05T02:08:36Z",
    "built_at": "2023-04-05T03:08:32Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f4ddd523e13c5429bf2167820d205d51033a7a96"
  },
  {
    "hash": "f4f51c3d246b7c5f44a449468bb2ac3a3cb4642c",
    "type": "pull_request",
    "title": "Block checker",
    "body": "Rewrite of https://github.com/nanocurrency/nano-node/pull/3727 with functional style checking rather than a pipeline",
    "draft": true,
    "pull_request": 4345,
    "label": "clemahieu:block_checker",
    "created_at": "2023-11-14T12:02:06Z",
    "built_at": "2024-04-07T19:48:15Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f4f51c3d246b7c5f44a449468bb2ac3a3cb4642c",
    "build_started_at": "2024-04-07T19:24:13Z",
    "run_id": "8591081492"
  },
  {
    "hash": "f4fee1dd67c73dde0a352fb0b8ef52e665d08891",
    "type": "pull_request",
    "pull_request": 4375,
    "label": "pwojcikdev:logging-overhaul-10-develop",
    "created_at": "2024-01-19T14:05:43Z",
    "built_at": "2024-01-19T14:44:15Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f4fee1dd67c73dde0a352fb0b8ef52e665d08891",
    "build_started_at": "2024-01-19T14:13:43Z",
    "run_id": "7584917327"
  },
  {
    "hash": "f4ff734e086e56db43cc0350633e5b8b2118328d",
    "type": "commit",
    "author": "clemahieu",
    "title": "Merge pull request #4604 from gr0vity-dev/prs/active_transactions_config\n\nIntroduce `active_transactions_config`",
    "pull_request": "N/A",
    "created_at": "2024-05-07T15:08:23Z",
    "built_at": "2024-05-07T16:24:35Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f4ff734e086e56db43cc0350633e5b8b2118328d",
    "build_started_at": "2024-05-07T15:20:15Z",
    "run_id": "8988511315"
  },
  {
    "hash": "f5172c78ada6140bd95b9e0f9f655546f9e72ee6",
    "type": "pull_request",
    "title": "Add New Bucket for Specific Amount Range",
    "author": "gr0vity-dev",
    "body": "Related Issue: #4472\r\n\r\n**Description:**\r\n\r\nThis PR adds an additional bucket for amounts between Ӿ0.000001 and Ӿ0.0003. The implementation details are as follows:\r\n\r\n    - Amounts of Ӿ0.000001 will be included in the new bucket\r\n    - More precisely amounts above Ӿ0.00000060 and below Ӿ0.000309 will fall in this new bucket.\r\n    - All existing buckets remain unchanged to minimize the impact of bucket reallocation.\r\n\r\nThe reasoning behind adding an additional bucket is to ensure that all existing buckets retain their current allocation criteria.\r\n",
    "draft": false,
    "pull_request": 4661,
    "label": "gr0vity-dev:prs/additional_bucket",
    "created_at": "2024-06-28T11:23:05Z",
    "built_at": "2024-07-09T15:10:53Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f5172c78ada6140bd95b9e0f9f655546f9e72ee6",
    "build_started_at": "2024-07-09T14:44:29Z",
    "run_id": "9859202312"
  },
  {
    "hash": "f53f1f8d98b044d7fe670f2c08e5b53f84a903cb",
    "type": "pull_request",
    "title": "Rework `nano::thread_pool`",
    "author": "pwojcikdev",
    "body": "The main issue with previous code was that it copied queued functions, which was inefficient and prevented using move-only function handlers. This also does some cleanup.",
    "draft": false,
    "pull_request": 4762,
    "label": "pwojcikdev:thread-pool-work",
    "created_at": "2024-10-22T15:39:25Z",
    "built_at": "2024-10-22T16:10:13Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f53f1f8d98b044d7fe670f2c08e5b53f84a903cb",
    "build_started_at": "2024-10-22T15:41:03Z",
    "run_id": "11463702638"
  },
  {
    "hash": "f5595da7882be63c4cc4d0009c60d4f0b5609b89",
    "type": "pull_request",
    "pull_request": 4418,
    "label": "pwojcikdev:app-path-override",
    "created_at": "2024-01-31T23:18:05Z",
    "built_at": "2024-01-31T23:49:13Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f5595da7882be63c4cc4d0009c60d4f0b5609b89",
    "build_started_at": "2024-01-31T23:20:26Z",
    "run_id": "7733698507"
  },
  {
    "hash": "f57934747d1c491875a572802a6d0a3807e6efb5",
    "type": "pull_request",
    "pull_request": 4420,
    "label": "gr0vity-dev:wip/fix_recently_confirmed_race",
    "created_at": "2024-02-05T15:52:57Z",
    "built_at": "2024-02-05T16:27:37Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f57934747d1c491875a572802a6d0a3807e6efb5",
    "build_started_at": "2024-02-05T16:02:29Z",
    "run_id": "7786925660"
  },
  {
    "hash": "f57a03bafb7a1af5eeaf2f45336182ceb44a2def",
    "type": "pull_request",
    "pull_request": 4395,
    "label": "dsiganos:remove_code_inspector_rule_enforcing_use_of_nano_locks",
    "created_at": "2024-01-25T15:54:13Z",
    "built_at": "2024-01-25T16:22:59Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f57a03bafb7a1af5eeaf2f45336182ceb44a2def",
    "build_started_at": "2024-01-25T15:56:53Z",
    "run_id": "7657099427"
  },
  {
    "hash": "f57bcdea9dd10b7863bd2f5e5e3f5057077994f6",
    "type": "commit",
    "created_at": "2024-03-20T13:21:32Z",
    "built_at": "2024-03-20T13:53:31Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f57bcdea9dd10b7863bd2f5e5e3f5057077994f6",
    "build_started_at": "2024-03-20T13:27:45Z",
    "run_id": "8359747032"
  },
  {
    "hash": "f5a3c5630e4b28bbe8e50cffedd33ea688d95642",
    "type": "commit",
    "created_at": "2024-03-10T16:23:26Z",
    "built_at": "2024-03-10T22:54:04Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f5a3c5630e4b28bbe8e50cffedd33ea688d95642",
    "build_started_at": "2024-03-10T20:14:43Z",
    "run_id": "8224504096"
  },
  {
    "hash": "f5ec339a10d0d783292c12a2c1811ff5645d9f87",
    "type": "commit",
    "created_at": "2023-04-19T15:56:19Z",
    "built_at": "2023-04-21T16:26:31Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f5ec339a10d0d783292c12a2c1811ff5645d9f87"
  },
  {
    "hash": "f5f10a249198988493ab3b69ab66824c2bd46e42",
    "type": "commit",
    "author": "clemahieu",
    "title": "Merge pull request #4671 from clemahieu/rocksdb_non_optimistic_tx_db\n\nUse RocksDB TransactionDB rather than OptimisticTransactionDB",
    "pull_request": "4671",
    "created_at": "2024-07-07T12:15:06Z",
    "built_at": "2024-07-07T13:13:12Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f5f10a249198988493ab3b69ab66824c2bd46e42",
    "build_started_at": "2024-07-07T12:23:30Z",
    "run_id": "9827390565"
  },
  {
    "hash": "f5fb742f7dc0e3f599505304829aa33385ec4c4e",
    "type": "pull_request",
    "pull_request": 4467,
    "label": "cuinix:develop",
    "created_at": "2024-03-07T06:12:30Z",
    "built_at": "2024-03-07T06:51:22Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f5fb742f7dc0e3f599505304829aa33385ec4c4e",
    "build_started_at": "2024-03-07T06:25:54Z",
    "run_id": "8183886891"
  },
  {
    "hash": "f61db03438fa595179dc62ecb218abbe802e6785",
    "type": "pull_request",
    "pull_request": 4486,
    "label": "clemahieu:ledger_view",
    "created_at": "2024-03-12T14:33:24Z",
    "built_at": "2024-03-24T22:42:58Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-24T22:11:23Z",
    "run_id": "8412454876"
  },
  {
    "hash": "f632d92c896c2ae192349a98f3f666bda73bba7b",
    "type": "pull_request",
    "title": "Fix timing issue in active_elections.fork_replacement_tally",
    "author": "gr0vity-dev",
    "body": "This testcase fails in ~10% of cases on my machine with\r\n```\r\nExpected equality of these values:\r\n  max_blocks\r\n    Which is: 10\r\n  election->blocks ().size ()\r\n    Which is: 1\r\n```\r\nBy waiting for election insertion for the first block, before processing forks, this timing issue is eliminated.",
    "draft": false,
    "pull_request": 4802,
    "label": "gr0vity-dev:prs/fix-active_elections.fork_replacement_tally",
    "created_at": "2024-12-04T21:05:22Z",
    "built_at": "2024-12-04T21:53:02Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f632d92c896c2ae192349a98f3f666bda73bba7b",
    "build_started_at": "2024-12-04T21:25:23Z",
    "run_id": "12168073667"
  },
  {
    "hash": "f64a9616ccce0b7dfaa55e1ca056d6f8f7b6f801",
    "type": "pull_request",
    "pull_request": 4502,
    "label": "clemahieu:final_vote_canary_remove",
    "created_at": "2024-03-19T00:54:28Z",
    "built_at": "2024-03-19T02:30:07Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f64a9616ccce0b7dfaa55e1ca056d6f8f7b6f801",
    "build_started_at": "2024-03-19T01:37:16Z",
    "run_id": "8336194179"
  },
  {
    "hash": "f64d9653214aa7dedc34663e812dac8f6085048a",
    "type": "commit",
    "created_at": "2024-03-19T12:56:05Z",
    "built_at": "2024-03-19T13:24:38Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f64d9653214aa7dedc34663e812dac8f6085048a",
    "build_started_at": "2024-03-19T12:59:14Z",
    "run_id": "8343436082"
  },
  {
    "hash": "f65e58a2d2682912054e767e00692ef4df38227c",
    "type": "commit",
    "created_at": "2023-04-05T20:44:13Z",
    "built_at": "2023-04-05T21:20:52Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f65e58a2d2682912054e767e00692ef4df38227c"
  },
  {
    "hash": "f69218e147d73589bbbb2cfc4848da1d400f3159",
    "type": "pull_request",
    "pull_request": 4243,
    "label": "pwojcikdev:logging-artifact-hashes",
    "created_at": "2023-05-31T22:33:24Z",
    "built_at": "2023-06-01T21:37:12Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f69218e147d73589bbbb2cfc4848da1d400f3159"
  },
  {
    "hash": "f6a32c98d619dcdc571c2b804c9142b4bb69efe2",
    "type": "pull_request",
    "pull_request": 4424,
    "label": "pwojcikdev:blockprocessor-context",
    "created_at": "2024-02-08T18:03:48Z",
    "built_at": "2024-02-10T11:45:38Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f6a32c98d619dcdc571c2b804c9142b4bb69efe2",
    "build_started_at": "2024-02-10T11:21:23Z",
    "run_id": "7854544146"
  },
  {
    "hash": "f6ad9d7800b84c36de31b8871880ed17c2c14f6c",
    "type": "commit",
    "title": "Fixing shared->unique assignment and no return in control flow. (#4529)",
    "pull_request": "4529",
    "created_at": "2024-03-31T13:37:47Z",
    "built_at": "2024-03-31T14:02:37Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f6ad9d7800b84c36de31b8871880ed17c2c14f6c",
    "build_started_at": "2024-03-31T13:38:29Z",
    "run_id": "8498608998"
  },
  {
    "hash": "f6b676ea5eb49f87ee536a83b01026102fc0c5a0",
    "type": "commit",
    "created_at": "2023-02-03T19:08:35Z",
    "built_at": "2023-02-15T16:10:27Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f6b676ea5eb49f87ee536a83b01026102fc0c5a0"
  },
  {
    "hash": "f6e47aa4e2da811787dcfbdc150358547853b1bd",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Move `network_filter` to lib folder",
    "pull_request": "N/A",
    "created_at": "2024-09-23T14:49:23Z",
    "built_at": "2024-09-25T17:20:37Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f6e47aa4e2da811787dcfbdc150358547853b1bd",
    "build_started_at": "2024-09-25T13:41:38Z",
    "run_id": "11037574657"
  },
  {
    "hash": "f6eae1085cdae0ab13117203a19155a89708a01f",
    "type": "pull_request",
    "title": "Ignore `chacha.hpp` ubsan errors",
    "body": null,
    "draft": false,
    "pull_request": 4538,
    "label": "pwojcikdev:ubsan-ignore-chacha",
    "created_at": "2024-04-05T20:25:49Z",
    "built_at": "2024-04-05T20:55:26Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f6eae1085cdae0ab13117203a19155a89708a01f",
    "build_started_at": "2024-04-05T20:29:57Z",
    "run_id": "8575371623"
  },
  {
    "hash": "f6f15ca8ad6033c1828ccc0caea691146fd731e8",
    "type": "pull_request",
    "title": "Use coroutines in tcp listener",
    "author": "pwojcikdev",
    "body": "To fix remaining TSAN issues this PR changes tcp listener implementation to use coroutines with a strand. The resulting code is structurally almost identical to the threaded version.\r\n\r\nContinuation of https://github.com/nanocurrency/nano-node/pull/4523",
    "draft": false,
    "pull_request": 4581,
    "label": "pwojcikdev:networking-fixes/tcp-listener-2-coroutines",
    "created_at": "2024-04-22T14:35:41Z",
    "built_at": "2024-04-22T15:14:23Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f6f15ca8ad6033c1828ccc0caea691146fd731e8",
    "build_started_at": "2024-04-22T14:42:35Z",
    "run_id": "8786040011"
  },
  {
    "hash": "f7232cd0dc00b6950877fa97815e1bed462ed400",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Limit number of rocksdb background threads (#4660)",
    "pull_request": "4660",
    "created_at": "2024-06-28T08:48:31Z",
    "built_at": "2024-06-28T09:18:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f7232cd0dc00b6950877fa97815e1bed462ed400",
    "build_started_at": "2024-06-28T08:51:56Z",
    "run_id": "9710129052"
  },
  {
    "hash": "f73eb1c2527cfb365f29d53a8996b05ce9ec2e99",
    "type": "pull_request",
    "pull_request": 4303,
    "label": "gr0vity-dev:pr/get_value_utility",
    "created_at": "2023-10-01T08:12:48Z",
    "built_at": "2023-10-01T09:03:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f73eb1c2527cfb365f29d53a8996b05ce9ec2e99"
  },
  {
    "hash": "f741d587e6a358c3de2b69ed94a3dd33ddc1c447",
    "type": "pull_request",
    "pull_request": 4525,
    "label": "pwojcikdev:networking-fixes/io-context-stopping",
    "created_at": "2024-03-27T18:00:21Z",
    "built_at": "2024-03-27T22:21:39Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f741d587e6a358c3de2b69ed94a3dd33ddc1c447",
    "build_started_at": "2024-03-27T21:56:16Z",
    "run_id": "8459150530"
  },
  {
    "hash": "f7432195b92aa77e4ed54a800b17ccd8081ad3c8",
    "type": "commit",
    "created_at": "2024-03-21T20:15:44Z",
    "built_at": "2024-03-22T09:47:47Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f7432195b92aa77e4ed54a800b17ccd8081ad3c8",
    "build_started_at": "2024-03-22T08:48:02Z",
    "run_id": "8387719129"
  },
  {
    "hash": "f74ebde5ba35b05918c898f02a8b354d8bea3f9f",
    "type": "commit",
    "created_at": "2023-09-04T13:16:44Z",
    "built_at": "2023-09-04T14:18:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f74ebde5ba35b05918c898f02a8b354d8bea3f9f"
  },
  {
    "hash": "f75a7c924e208a7d7d5da7a9355ac6caa1207c3c",
    "type": "pull_request",
    "pull_request": 4329,
    "label": "pwojcikdev:backlog-population-refresh-tx",
    "created_at": "2023-11-06T16:21:32Z",
    "built_at": "2023-11-06T17:11:27Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f75a7c924e208a7d7d5da7a9355ac6caa1207c3c",
    "build_started_at": "2023-11-06T16:32:32Z",
    "run_id": "6773676504"
  },
  {
    "hash": "f7aa48c003c283e5f6ef291d3a91ed20b350d7f0",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge pull request #4625 from pwojcikdev/vote-generator-inproc\n\nAvoid creating temporary inproc channels",
    "pull_request": "4625",
    "created_at": "2024-05-16T14:16:07Z",
    "built_at": "2024-05-16T15:29:07Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f7aa48c003c283e5f6ef291d3a91ed20b350d7f0",
    "build_started_at": "2024-05-16T14:50:43Z",
    "run_id": "9114568477"
  },
  {
    "hash": "f7b83addffb357c4503555368a060a5539f40050",
    "type": "pull_request",
    "title": "Introduce ledger confirmed_set/any_set classes to separate confirmed-only and confirmed/unconfirmed operations on the ledger",
    "author": "clemahieu",
    "body": "The motivation for this PR is in preparation for bounded backlog changes. Currently, both confirmed and unconfirmed transactions are together on disk and the ACID properties of the ledger are encapsulated with a database transaction.\r\n\r\nWith the bounded backlog, blocks will be stored in memory so there will need to be memory synchronization in addition to database synchronization. Rather than filling the ledger class with unconfirmed/confirmed variants for each operation.\r\n\r\nThe ledger is divided in to several sets and subsets:\r\nledger::confirmed - The set of confirmed transactions\r\nledger::any - The superset of confirmed and unconfirmed transactions\r\n\r\nWhen unconfirmed blocks are held in memory the set ledger::unconfirmed will be added which holds only unconfirmed transactions.\r\n\r\nIn the future the confirming_set can be moved on to ledger which is the subset of unconfirmed blocks that are queued to be moved in to the confirmed set.",
    "draft": false,
    "pull_request": 4486,
    "label": "clemahieu:ledger_view",
    "created_at": "2024-03-12T14:33:24Z",
    "built_at": "2024-04-17T02:05:56Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f7b83addffb357c4503555368a060a5539f40050",
    "build_started_at": "2024-04-17T01:37:37Z",
    "run_id": "8714971493"
  },
  {
    "hash": "f7ee9e521f46800c14fa9e13fa0d9ee48772b337",
    "type": "pull_request",
    "pull_request": 4383,
    "label": "dsiganos:fix_bootstrap_unit_tests",
    "created_at": "2024-01-21T13:11:59Z",
    "built_at": "2024-01-23T02:59:59Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f7ee9e521f46800c14fa9e13fa0d9ee48772b337",
    "build_started_at": "2024-01-23T02:35:03Z",
    "run_id": "7620263923"
  },
  {
    "hash": "f83b4f7d4ac74280cf3ef6298fb0bff84640a4e6",
    "type": "pull_request",
    "pull_request": 4318,
    "label": "clemahieu:election_state_mutex",
    "created_at": "2023-10-26T14:21:12Z",
    "built_at": "2023-10-31T14:24:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f83b4f7d4ac74280cf3ef6298fb0bff84640a4e6",
    "build_started_at": "2023-10-31T13:17:15Z",
    "run_id": "6707075425"
  },
  {
    "hash": "f83ba7c6af9498a42695f6af470f5df3a922fe6a",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Fair queue",
    "pull_request": "4584",
    "created_at": "2024-04-25T17:07:27Z",
    "built_at": "2024-04-26T23:45:11Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f83ba7c6af9498a42695f6af470f5df3a922fe6a",
    "build_started_at": "2024-04-26T22:30:20Z",
    "run_id": "8855330094"
  },
  {
    "hash": "f8587f630ac8abaf4438d7a80a50c93d8d58f245",
    "type": "pull_request",
    "pull_request": 4111,
    "label": "pwojcikdev:optimistic-elections-2-rebased",
    "created_at": "2023-02-08T18:34:22Z",
    "built_at": "2023-02-22T15:07:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f8587f630ac8abaf4438d7a80a50c93d8d58f245"
  },
  {
    "hash": "f8695dced075991f8f23567b37ae98568e02d260",
    "type": "pull_request",
    "pull_request": 4280,
    "label": "clemahieu:bucket_class",
    "created_at": "2023-09-08T11:31:55Z",
    "built_at": "2023-09-08T12:11:46Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f8695dced075991f8f23567b37ae98568e02d260"
  },
  {
    "hash": "f8739eb42074cfa63a5f898abfa7117c1aac4c2e",
    "type": "pull_request",
    "pull_request": 4297,
    "label": "pwojcikdev:transaction-type-checking",
    "created_at": "2023-09-26T15:40:40Z",
    "built_at": "2023-09-26T16:22:42Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f8739eb42074cfa63a5f898abfa7117c1aac4c2e"
  },
  {
    "hash": "f874eaee5d24d6de43c7d47efd9311777606779b",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge pull request #4651 from pwojcikdev/transport-cleanup\n\nTransport classes cleanup",
    "pull_request": "4651",
    "created_at": "2024-06-18T12:40:43Z",
    "built_at": "2024-06-18T14:04:02Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f874eaee5d24d6de43c7d47efd9311777606779b",
    "build_started_at": "2024-06-18T12:54:53Z",
    "run_id": "9566071756"
  },
  {
    "hash": "f8812085d1c2b9a8ea886fc7cf3070f0e2fa67ea",
    "type": "pull_request",
    "title": "Remove temporary channels",
    "author": "pwojcikdev",
    "body": "Our current networking design is strange in this aspect, that we treat connections accepted by our node (temporary channels) differently to connections that are initiated by our node. There is no fundamental reason for such behavior, TCP allows for bidirectional communication and doing so may lead to more robust network, since some peers aren't directly reachable (NAT, firewalls).\r\n\r\nThe logic for handling those temporary channels was also not great, it created a new channel for each processed message which led to inefficiencies, especially when paired with fair queuing. Look at `nano::transport::tcp_channels::process_message (...)`. It also used node id for channel lookup when processing messages. Here I'm associating each realtime connection with a single channel, without relying on node id, which is simpler and more robust approach.\r\n\r\nThis PR moves management of lower-level connections fully to `tcp_listener` and implements them using coroutines. Each connection attempt is given a timeout (by default 60 seconds) and node id conflicts are only rejected for same IP addresses.\r\n\r\nPrevious attempt to fix this issue was https://github.com/nanocurrency/nano-node/pull/3928",
    "draft": false,
    "pull_request": 4595,
    "label": "pwojcikdev:networking-fixes/connecting-4",
    "created_at": "2024-04-30T18:06:51Z",
    "built_at": "2024-05-01T12:25:58Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f8812085d1c2b9a8ea886fc7cf3070f0e2fa67ea",
    "build_started_at": "2024-05-01T11:45:05Z",
    "run_id": "8909019304"
  },
  {
    "hash": "f897eeac3727909842911d4ae440ff512e546d5a",
    "type": "pull_request",
    "title": "Rework `collect_container_info (..)` functions",
    "author": "pwojcikdev",
    "body": "This simplifies how container info functionality is implemented for node components, avoiding unnecessary and annoying boilerplate.\r\n\r\nPreviously:\r\n```\r\nstd::unique_ptr<nano::container_info_component> nano::block_processor::collect_container_info (std::string const & name)\r\n{\r\n\tnano::lock_guard<nano::mutex> guard{ mutex };\r\n\r\n\tauto composite = std::make_unique<container_info_composite> (name);\r\n\tcomposite->add_component (std::make_unique<container_info_leaf> (container_info_entry{ \"blocks\", queue.size (), 0 }));\r\n\tcomposite->add_component (std::make_unique<container_info_leaf> (container_info_entry{ \"forced\", queue.size ({ nano::block_source::forced }), 0 }));\r\n\tcomposite->add_component (queue.collect_container_info (\"queue\"));\r\n\treturn composite;\r\n}\r\n```\r\n\r\n\r\nNow:\r\n```\r\nnano::container_info nano::block_processor::container_info () const\r\n{\r\n\tnano::lock_guard<nano::mutex> guard{ mutex };\r\n\r\n\tnano::container_info info;\r\n\tinfo.put (\"blocks\", queue.size ());\r\n\tinfo.put (\"forced\", queue.size ({ nano::block_source::forced }));\r\n\tinfo.add (\"queue\", queue.container_info ());\r\n\treturn info;\r\n}\r\n```\r\n",
    "draft": false,
    "pull_request": 4736,
    "label": "pwojcikdev:container-infos-5",
    "created_at": "2024-09-24T19:43:06Z",
    "built_at": "2024-09-25T17:36:32Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f897eeac3727909842911d4ae440ff512e546d5a",
    "build_started_at": "2024-09-25T13:49:10Z",
    "run_id": "11037763822"
  },
  {
    "hash": "f8ab9be833236c6be8910af51645dff605b48f5f",
    "type": "commit",
    "created_at": "2024-03-05T18:28:00Z",
    "built_at": "2024-03-05T19:14:13Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f8ab9be833236c6be8910af51645dff605b48f5f",
    "build_started_at": "2024-03-05T18:34:08Z",
    "run_id": "8161284098"
  },
  {
    "hash": "f8ef30cec9890deae3e49c04cf82135959bfd389",
    "type": "pull_request",
    "pull_request": 4105,
    "label": "thsfs:udp-removal",
    "created_at": "2023-02-06T21:19:57Z",
    "built_at": "2023-02-06T22:03:47Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f8ef30cec9890deae3e49c04cf82135959bfd389"
  },
  {
    "hash": "f906217b77f0002fb3d22606ff1b715c9b994120",
    "type": "pull_request",
    "pull_request": 4382,
    "label": "dsiganos:fix_node_fork_publish_inactive",
    "created_at": "2024-01-21T12:42:13Z",
    "built_at": "2024-01-21T13:23:50Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f906217b77f0002fb3d22606ff1b715c9b994120",
    "build_started_at": "2024-01-21T12:56:11Z",
    "run_id": "7601367615"
  },
  {
    "hash": "f90760a14ea3a3359d2982247e41965cbe45f3b1",
    "type": "pull_request",
    "pull_request": 4157,
    "label": "mariomoliner:use_GTEST_SKIP_issue",
    "created_at": "2023-02-27T14:22:38Z",
    "built_at": "2023-02-27T19:13:51Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f90760a14ea3a3359d2982247e41965cbe45f3b1"
  },
  {
    "hash": "f90804451da359d79fd5f0acf2dd8e1458bae4a8",
    "type": "pull_request",
    "pull_request": 4376,
    "label": "RickiNano:assert-conversions-part-2",
    "created_at": "2024-01-19T17:32:45Z",
    "built_at": "2024-01-19T18:39:37Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f90804451da359d79fd5f0acf2dd8e1458bae4a8",
    "build_started_at": "2024-01-19T18:11:39Z",
    "run_id": "7587556805"
  },
  {
    "hash": "f929415f0a64f1d5cfb11625d12720eb4e3f6800",
    "type": "pull_request",
    "title": "Rocksdb tx cleanup",
    "author": "clemahieu",
    "body": "This cleans up a number of things related to rocksdb transaction handling.\r\n\r\nRemoves write_queue::use_noops. This flag was apparently only used in testing to disable the write queue functionality though no tests seemed impacted by its removal.\r\n\r\nRemoves individual table lock mutexes as the write_queue enforces write transaction serialisation.\r\n\r\nRemoves table locking arguments from write transaction functions since all write transactions are serialised.",
    "draft": false,
    "pull_request": 4737,
    "label": "clemahieu:rocksdb_tx_cleanup",
    "created_at": "2024-09-27T19:04:04Z",
    "built_at": "2024-09-28T13:25:26Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f929415f0a64f1d5cfb11625d12720eb4e3f6800",
    "build_started_at": "2024-09-28T12:57:35Z",
    "run_id": "11084092847"
  },
  {
    "hash": "f933f2039ab9fd367c82bddcfd4ba65b0f04de8e",
    "type": "pull_request",
    "pull_request": 4142,
    "label": "thsfs:udp_stats_removal",
    "created_at": "2023-02-18T19:09:02Z",
    "built_at": "2023-02-18T19:54:25Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f933f2039ab9fd367c82bddcfd4ba65b0f04de8e"
  },
  {
    "hash": "f942d9051540ffe5dedb6f4aff33b5086d809dfb",
    "type": "commit",
    "created_at": "2024-03-26T11:58:16Z",
    "built_at": "2024-03-26T12:51:23Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f942d9051540ffe5dedb6f4aff33b5086d809dfb",
    "build_started_at": "2024-03-26T12:23:37Z",
    "run_id": "8435869528"
  },
  {
    "hash": "f98193c7bfe8dde7d2b6d9beaa6ded24ecb89397",
    "type": "commit",
    "created_at": "2023-02-22T19:39:43Z",
    "built_at": "2023-02-22T20:13:01Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f98193c7bfe8dde7d2b6d9beaa6ded24ecb89397"
  },
  {
    "hash": "f99ba3e852e4791f5c13e07f91262de7f44591c1",
    "type": "commit",
    "created_at": "2024-03-12T13:49:45Z",
    "built_at": "2024-03-22T19:43:00Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f99ba3e852e4791f5c13e07f91262de7f44591c1",
    "build_started_at": "2024-03-22T17:19:57Z",
    "run_id": "8394068316"
  },
  {
    "hash": "f9b24397016eb762e635f91e69b7cf7a938fa94a",
    "type": "commit",
    "author": "clemahieu",
    "title": "Merge pull request #4611 from clemahieu/remove_active_elections_trim\n\nRemove active_elections::trim",
    "pull_request": "4611",
    "created_at": "2024-05-13T10:42:43Z",
    "built_at": "2024-05-13T11:44:04Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f9b24397016eb762e635f91e69b7cf7a938fa94a",
    "build_started_at": "2024-05-13T10:46:03Z",
    "run_id": "9061930213"
  },
  {
    "hash": "f9bb146a8c397a2a563f6c74905dbd9f86b07ef7",
    "type": "pull_request",
    "pull_request": 4133,
    "label": "clemahieu:election_occupancy",
    "created_at": "2023-02-15T18:23:49Z",
    "built_at": "2023-02-22T04:10:18Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f9bb146a8c397a2a563f6c74905dbd9f86b07ef7"
  },
  {
    "hash": "f9c99154c4a592a604da3dd704de2f57d7b28229",
    "type": "pull_request",
    "pull_request": 4384,
    "label": "clemahieu:remove_unchecked_clear_startup",
    "created_at": "2024-01-21T19:53:39Z",
    "built_at": "2024-01-24T15:03:11Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f9c99154c4a592a604da3dd704de2f57d7b28229",
    "build_started_at": "2024-01-24T14:37:21Z",
    "run_id": "7641771665"
  },
  {
    "hash": "f9d1b8844ff0a9b843fd10b53e5cddb83fde9ec6",
    "type": "commit",
    "author": "clemahieu",
    "title": "Splitting manual election_behavior from normal.",
    "pull_request": "4611",
    "created_at": "2024-05-09T15:24:49Z",
    "built_at": "2024-05-13T12:18:29Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f9d1b8844ff0a9b843fd10b53e5cddb83fde9ec6",
    "build_started_at": "2024-05-13T10:46:03Z",
    "run_id": "9062284520"
  },
  {
    "hash": "f9e5bbfb470e2c3ab45b3dd49d65e0192ca9c790",
    "type": "commit",
    "created_at": "2023-02-22T11:56:16Z",
    "built_at": "2023-02-22T13:03:51Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f9e5bbfb470e2c3ab45b3dd49d65e0192ca9c790"
  },
  {
    "hash": "f9f5a41143ac919a07603a377beec5cb571ed58c",
    "type": "pull_request",
    "title": "Fix pruning tests that did not confirm blocks before pruning.",
    "body": "Strongly ensure blocks are confirmed while pruning.\r\n\r\nnode::collect_ledger_pruning_targets already ensures blocks are confirmed before pruning however this was not the case in tests. Removed one test that only tested erroneous behavior.",
    "draft": false,
    "pull_request": 4532,
    "label": "clemahieu:pruning_confirmed",
    "created_at": "2024-04-03T09:21:47Z",
    "built_at": "2024-04-03T09:49:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:f9f5a41143ac919a07603a377beec5cb571ed58c",
    "build_started_at": "2024-04-03T09:25:23Z",
    "run_id": "8536357236"
  },
  {
    "hash": "fa2151f07aedc1f8ce907b5265b8843f65b751a8",
    "type": "commit",
    "created_at": "2023-09-15T15:23:24Z",
    "built_at": "2023-09-15T17:20:36Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fa2151f07aedc1f8ce907b5265b8843f65b751a8"
  },
  {
    "hash": "fa3240b2c1e981a959ba6cd7494af24a5d5008ee",
    "type": "commit",
    "created_at": "2023-09-18T14:42:21Z",
    "built_at": "2023-09-20T20:38:03Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fa3240b2c1e981a959ba6cd7494af24a5d5008ee"
  },
  {
    "hash": "fa6f26bf4517df0dd37f3ceb6508040254d759dd",
    "type": "pull_request",
    "pull_request": 4166,
    "label": "thsfs:message_parser_to_message_deserializer_test_migration",
    "created_at": "2023-03-03T01:57:07Z",
    "built_at": "2023-03-03T02:51:46Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fa6f26bf4517df0dd37f3ceb6508040254d759dd"
  },
  {
    "hash": "fa71c5cf943a5974bf216fe1d84155a49a10c468",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Merge pull request #4773 from pwojcikdev/assert-header\n\nMove assert to a dedicated header",
    "pull_request": "4773",
    "created_at": "2024-11-12T12:16:06Z",
    "built_at": "2024-11-12T14:16:09Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fa71c5cf943a5974bf216fe1d84155a49a10c468",
    "build_started_at": "2024-11-12T12:21:42Z",
    "run_id": "11798367421"
  },
  {
    "hash": "fa77c63d7790e143605070fbe64b602cb8da755b",
    "type": "pull_request",
    "pull_request": 4146,
    "label": "clemahieu:rate_observer_refactor",
    "created_at": "2023-02-21T17:54:02Z",
    "built_at": "2023-02-21T18:28:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fa77c63d7790e143605070fbe64b602cb8da755b"
  },
  {
    "hash": "fa81fc01ccef77b90c2ba271c8efe84c5112afc3",
    "type": "commit",
    "created_at": "2024-03-07T13:19:52Z",
    "built_at": "2024-03-09T14:07:17Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fa81fc01ccef77b90c2ba271c8efe84c5112afc3",
    "build_started_at": "2024-03-09T12:18:32Z",
    "run_id": "8214449124"
  },
  {
    "hash": "fa84f7b38125c2b32439405c7bb7feaaf63fa280",
    "type": "commit",
    "created_at": "2024-03-14T16:38:55Z",
    "built_at": "2024-03-15T17:19:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fa84f7b38125c2b32439405c7bb7feaaf63fa280",
    "build_started_at": "2024-03-15T15:29:42Z",
    "run_id": "8298619683"
  },
  {
    "hash": "fa9180fd190f323d28e71c477a42ab1cb44c8ce5",
    "type": "pull_request",
    "title": "migrate_database_lmdb_to_rocksdb improvements",
    "author": "RickiNano",
    "body": "The `migrate_database_lmdb_to_rocksdb` option is running for a very long time with the current ledger size (almost 200 million blocks). On my local machine it took 65 minutes to complete. Nothing is written on screen during this process and users may think the process has stalled.\r\nThis PR adds some progress feedback. One update for each of the 7 tables that are migrated.\r\nIt also adds a simple disk space check to warn users if they might not have enough space to complete the migration.\r\n~~The current converted RocksDb database is 73 GB, and the warning is given if the system has less than 75GB available.~~\r\nThe warning is given based on the size of the LMDB database that is being migrated. The final RocksDb size is approximately 65% of the LMDB space.",
    "draft": false,
    "pull_request": 4647,
    "label": "RickiNano:lmdb-to-rocksdb",
    "created_at": "2024-06-13T10:47:31Z",
    "built_at": "2024-07-03T12:44:04Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fa9180fd190f323d28e71c477a42ab1cb44c8ce5",
    "build_started_at": "2024-07-03T12:17:45Z",
    "run_id": "9777672391"
  },
  {
    "hash": "fabc86243a8659b80dbd3a6f84cf6ab60d899b54",
    "type": "pull_request",
    "pull_request": 4404,
    "label": "clemahieu:block_processor_flush_remove",
    "created_at": "2024-01-26T18:37:48Z",
    "built_at": "2024-01-28T21:23:05Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fabc86243a8659b80dbd3a6f84cf6ab60d899b54",
    "build_started_at": "2024-01-28T20:57:00Z",
    "run_id": "7688355077"
  },
  {
    "hash": "facabfa4ff8507d6e82755e85957ab795666c7ca",
    "type": "pull_request",
    "pull_request": 4361,
    "label": "nanocurrency:fix_conflicts_add_two",
    "created_at": "2024-01-15T20:17:00Z",
    "built_at": "2024-01-16T19:40:42Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:facabfa4ff8507d6e82755e85957ab795666c7ca",
    "build_started_at": "2024-01-16T19:13:11Z",
    "run_id": "7546413500"
  },
  {
    "hash": "faedb40b565fcbd3ddb807f5325c596d589091c3",
    "type": "pull_request",
    "pull_request": 4215,
    "label": "clemahieu:throttle_tuning",
    "created_at": "2023-04-19T15:37:21Z",
    "built_at": "2023-04-19T16:16:59Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:faedb40b565fcbd3ddb807f5325c596d589091c3"
  },
  {
    "hash": "fafc24c4f3b9b63b08ee40dc864edc5ee46767b4",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Fix notify",
    "pull_request": "4600",
    "created_at": "2024-05-04T09:10:24Z",
    "built_at": "2024-05-07T09:19:50Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fafc24c4f3b9b63b08ee40dc864edc5ee46767b4",
    "build_started_at": "2024-05-07T07:50:20Z",
    "run_id": "8982478877"
  },
  {
    "hash": "fb031cd3a6d31b6d0f8fe008924277096e6dfc64",
    "type": "pull_request",
    "title": "Encapsulate ledger cache counts",
    "body": "This is a cleanup PR for encapsulating the various ledger counts in ledger_cache which get new ledger accessors.",
    "draft": false,
    "pull_request": 4528,
    "label": "clemahieu:encapsulate_ledger_cache",
    "created_at": "2024-03-30T16:17:33Z",
    "built_at": "2024-04-01T09:50:50Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fb031cd3a6d31b6d0f8fe008924277096e6dfc64",
    "build_started_at": "2024-04-01T09:22:33Z",
    "run_id": "8506352375"
  },
  {
    "hash": "fb06e4eb9878bd0cefc2d00f8e166fe6b449fb17",
    "type": "commit",
    "author": "clemahieu",
    "title": "Removing ledger::head_block and replacing with using ledger set calls.",
    "pull_request": "N/A",
    "created_at": "2024-03-11T18:54:35Z",
    "built_at": "2024-04-30T19:11:07Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fb06e4eb9878bd0cefc2d00f8e166fe6b449fb17",
    "build_started_at": "2024-04-30T13:34:48Z",
    "run_id": "8900016748"
  },
  {
    "hash": "fb077a022c6def2aeb26801bf0414e0f8ef46897",
    "type": "pull_request",
    "title": "Partially revert receivable iterator",
    "author": "clemahieu",
    "body": "This is a revert of a couple of usages of the receivable iterator for possible performance issues.",
    "draft": false,
    "pull_request": 4711,
    "label": "clemahieu:revert_receivable_iterator",
    "created_at": "2024-08-21T21:16:08Z",
    "built_at": "2024-08-21T21:53:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fb077a022c6def2aeb26801bf0414e0f8ef46897",
    "build_started_at": "2024-08-21T21:22:17Z",
    "run_id": "10497685725"
  },
  {
    "hash": "fb3007fa89adaedebf2d42c132b61d736bef7e3b",
    "type": "pull_request",
    "pull_request": 4312,
    "label": "pwojcikdev:hinted-fixing-2-develop",
    "created_at": "2023-10-09T15:17:09Z",
    "built_at": "2023-10-09T16:21:26Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fb3007fa89adaedebf2d42c132b61d736bef7e3b"
  },
  {
    "hash": "fb5bb88002133f166af75f7a2c34432fc9b9d37b",
    "type": "commit",
    "created_at": "2024-01-15T04:00:01Z",
    "built_at": "2024-01-15T04:46:29Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fb5bb88002133f166af75f7a2c34432fc9b9d37b",
    "build_started_at": "2024-01-15T04:21:10Z",
    "run_id": "7524289340"
  },
  {
    "hash": "fb68988490fd7dee950ee4c93de90ffc65bb7958",
    "type": "commit",
    "author": "clemahieu",
    "title": "Removing ledger::block and replacing callers with ledger set get.",
    "pull_request": "N/A",
    "created_at": "2024-03-11T14:04:16Z",
    "built_at": "2024-04-30T19:18:40Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fb68988490fd7dee950ee4c93de90ffc65bb7958",
    "build_started_at": "2024-04-30T13:34:48Z",
    "run_id": "8900096790"
  },
  {
    "hash": "fb7d8d2d660a845b12271faaa626ea3903e6cdbb",
    "type": "commit",
    "created_at": "2023-11-06T18:34:00Z",
    "built_at": "2023-12-01T12:00:57Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fb7d8d2d660a845b12271faaa626ea3903e6cdbb",
    "build_started_at": "2023-12-01T10:08:26Z",
    "run_id": "7058588921"
  },
  {
    "hash": "fbcabb2fc048b481769178418adb74471e47f11b",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Fix wallet logging initialization (#4680)\n\n* Adjust annoying logs\r\n\r\n* Wrap wallet logic in a class",
    "pull_request": "4680",
    "created_at": "2024-07-16T10:09:04Z",
    "built_at": "2024-07-16T10:38:42Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fbcabb2fc048b481769178418adb74471e47f11b",
    "build_started_at": "2024-07-16T10:10:58Z",
    "run_id": "9954909741"
  },
  {
    "hash": "fbdf29e1851f2fb35022be687d63b4f099ae093c",
    "type": "commit",
    "created_at": "2023-04-05T15:12:02Z",
    "built_at": "2023-04-05T15:55:43Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fbdf29e1851f2fb35022be687d63b4f099ae093c"
  },
  {
    "hash": "fbe519b816f85d4d3d67da62552043d0377af557",
    "type": "commit",
    "created_at": "2023-10-08T12:04:56Z",
    "built_at": "2023-10-17T16:48:06Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fbe519b816f85d4d3d67da62552043d0377af557"
  },
  {
    "hash": "fbed37e07718ba6f17852c7021817fb727064e82",
    "type": "pull_request",
    "pull_request": 4483,
    "label": "simpago:store-rep-weights-on-disk",
    "created_at": "2024-03-12T10:24:20Z",
    "built_at": "2024-03-16T07:21:40Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fbed37e07718ba6f17852c7021817fb727064e82",
    "build_started_at": "2024-03-16T06:46:56Z",
    "run_id": "8306027294"
  },
  {
    "hash": "fc274ad0436e5d1a2431a34dca4c0cf407ca06f4",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Improve bootstrap request timeout tracking",
    "pull_request": "4806",
    "created_at": "2024-11-17T19:07:17Z",
    "built_at": "2024-12-10T20:29:32Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fc274ad0436e5d1a2431a34dca4c0cf407ca06f4",
    "build_started_at": "2024-12-10T18:42:47Z",
    "run_id": "12263723366"
  },
  {
    "hash": "fc36682a384382eaf13fbd126231fa5f7375ad60",
    "type": "commit",
    "created_at": "2023-09-22T13:02:22Z",
    "built_at": "2023-09-22T13:54:52Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fc36682a384382eaf13fbd126231fa5f7375ad60"
  },
  {
    "hash": "fc36f0896cc3017fec5811c7a828861cf179f411",
    "type": "commit",
    "author": "clemahieu",
    "title": "Forward declare hash specialisations and move implementations to numbers_templ.hpp",
    "pull_request": "N/A",
    "created_at": "2024-10-27T21:59:03Z",
    "built_at": "2024-10-31T08:48:21Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fc36f0896cc3017fec5811c7a828861cf179f411",
    "build_started_at": "2024-10-31T03:33:18Z",
    "run_id": "11608433991"
  },
  {
    "hash": "fc3c4e34eca98b72af2a0a132deca6d34d3525d9",
    "type": "commit",
    "created_at": "2024-03-18T18:12:38Z",
    "built_at": "2024-03-18T19:20:39Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fc3c4e34eca98b72af2a0a132deca6d34d3525d9",
    "build_started_at": "2024-03-18T18:19:31Z",
    "run_id": "8331690328"
  },
  {
    "hash": "fc83736477487970b4759d70326f3f5f356acc7d",
    "type": "pull_request",
    "pull_request": 4485,
    "label": "simpago:rep-cache-min-weight",
    "created_at": "2024-03-12T13:26:39Z",
    "built_at": "2024-03-12T13:47:05Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-03-12T13:31:39Z",
    "run_id": "8249714827"
  },
  {
    "hash": "fc8950068ab4e1957762a7c577476271d9b96b45",
    "type": "commit",
    "created_at": "2023-04-04T19:15:06Z",
    "built_at": "2023-04-04T19:51:13Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fc8950068ab4e1957762a7c577476271d9b96b45"
  },
  {
    "hash": "fcd998f804f0309600636a32ffc164a2e9ccdcbe",
    "type": "pull_request",
    "pull_request": 4409,
    "label": "gr0vity-dev:prs/fix_unittests_active_transactions.inactive_votes_cache_election_start",
    "created_at": "2024-01-27T09:26:54Z",
    "built_at": "2024-01-27T09:55:42Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fcd998f804f0309600636a32ffc164a2e9ccdcbe",
    "build_started_at": "2024-01-27T09:32:05Z",
    "run_id": "7677763732"
  },
  {
    "hash": "fcf9af2960670d0f6abea01fcf4740f762beb3f1",
    "type": "pull_request",
    "title": "Show `receivable` and `weight` for unopened accounts in `account_info`rpc",
    "body": "Currently when an account is not opened,  the rpc command `account_info` returns an error `Account not found`.\r\nEven if we provide the `receivable` or `weight` flags, the receivable blocks or the delegated weight is not shown.\r\n\r\n```json\r\n{\r\n  \"action\": \"account_info\",\r\n  \"account\": \"nano_1dckaox4wondc4dtsn9fnw1wzgehb8q9agx4e6rch43kaadrobciepmbjcd3\",\r\n  \"receivable\": \"true\",\r\n  \"weight\" : \"true\"\r\n}\r\n```\r\nreturns\r\n```json\r\n{\r\n    \"error\": \"Account not found\"\r\n}\r\n```\r\n\r\nEven though it has receivable blocks.\r\nThis pull request allows ordinary response keys to coexist with an error key\r\nThe responsefor the example above would look like this:\r\n```json\r\n{\r\n    \"error\": \"Account not found\",\r\n    \"pending\": \"1100000000000000000000000000000\",\r\n    \"receivable\": \"1100000000000000000000000000000\",\r\n    \"weight\": \"0\"\r\n}\r\n```\r\n\r\nAll the rpc unit tests are passing. There is no test that explicitly prohibits this behavior.\r\nThis change in behavior is probably not be wanted, but it greatly simplified the rpc requests required for nanobrowse explorer.\r\n",
    "draft": false,
    "pull_request": 4526,
    "label": "gr0vity-dev:prs/rpc_account_info_extended",
    "created_at": "2024-03-28T20:18:20Z",
    "built_at": "2024-03-28T21:36:37Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fcf9af2960670d0f6abea01fcf4740f762beb3f1",
    "build_started_at": "2024-03-28T20:33:47Z",
    "run_id": "8473695869"
  },
  {
    "hash": "fd023dcafcc608d733628ef9a4488a12ca4c663d",
    "type": "commit",
    "author": "RickiNano",
    "title": "Update RocksDb to V9.2.2 (#4652)",
    "pull_request": "4652",
    "created_at": "2024-07-09T16:44:19Z",
    "built_at": "2024-07-09T19:09:21Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fd023dcafcc608d733628ef9a4488a12ca4c663d",
    "build_started_at": "2024-07-09T16:50:52Z",
    "run_id": "9862493748"
  },
  {
    "hash": "fd09741ae700f9c8909a9b908a3194ce0efe4c27",
    "type": "pull_request",
    "title": "Add submodule lmdbxx which is a c++ wrapper for lmdb",
    "author": "clemahieu",
    "body": "This change adds the lmdbxx submodule which is a c++ wrapper for LMDB. https://github.com/hoytech/lmdbxx\r\n\r\nCurrently we're using an amalgamation of direct access to the LMDB C API and some custom c++ wrapping of select portions of functionality.\r\n\r\nMajor motivations for using this library:\r\n- Header-only\r\n- C++17 language support\r\n- Errors are exceptions\r\n- RAII for LMDB resources\r\n- Uses std::string_view for exchanging serialised objects which is compatible with rocksdb::Slice\r\n\r\nThe library has two implementation strategies, a near 1-to-1 wrapping of the C API with exception handling, and full RAII types. Migrating existing code to use the direct API was relatively painless and some of the RAII types can already be used.\r\n\r\nThe primary motivation for the change is to get a clear separation of the lmdb c++ wrapper from node-specific logic. Additionally, this removes the burden of wrapping the C API from the node code.\r\n\r\nThe library itself seems to make good design decisions and is reasonably maintained.\r\n\r\nThere are parts of the library which are not fully complete e.g. ::lmdb::dbi does not fully implement RAII, it is both copyable and doesn't destroy the underlying resources when it goes out of scope. To get full benefits we will likely have to upstream some patches which they will hopefully be receptive and responsive to.",
    "draft": false,
    "pull_request": 4724,
    "label": "clemahieu:lmdbxx",
    "created_at": "2024-09-09T19:26:59Z",
    "built_at": "2024-09-10T15:20:23Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fd09741ae700f9c8909a9b908a3194ce0efe4c27",
    "build_started_at": "2024-09-10T14:53:31Z",
    "run_id": "10795074465"
  },
  {
    "hash": "fd0a99945993e5b91514de86b8e11cf6935584e7",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Remove `frontiers_confirmation_mode`",
    "pull_request": "N/A",
    "created_at": "2024-09-09T17:52:46Z",
    "built_at": "2024-09-17T12:16:11Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fd0a99945993e5b91514de86b8e11cf6935584e7",
    "build_started_at": "2024-09-17T09:35:37Z",
    "run_id": "10902375635"
  },
  {
    "hash": "fd1afe2ab7ebce00fd6ec039a24a219c962ba17a",
    "type": "pull_request",
    "title": "Cementing rate limiter",
    "author": "pwojcikdev",
    "body": "Part of bounded backlog PR https://github.com/nanocurrency/nano-node/pull/4787 that adds cementing rate limiter. This is not expected to be exposed to end-users but is necessary for inducing backlog during testing to test the bounded backlog behavior.",
    "draft": false,
    "pull_request": 4789,
    "label": "pwojcikdev:cementing-rate-limiter-pr",
    "created_at": "2024-11-25T15:55:20Z",
    "built_at": "2024-11-25T16:29:31Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fd1afe2ab7ebce00fd6ec039a24a219c962ba17a",
    "build_started_at": "2024-11-25T16:00:15Z",
    "run_id": "12013923566"
  },
  {
    "hash": "fd3a5ab73a09bda1b9c131774fa594a9ed4342c1",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Remove `block_process_timeout` (#4599)\n\n* Remove `block_process_timeout`\r\n\r\n* Test overflow of local blocks",
    "pull_request": "4599",
    "created_at": "2024-05-03T18:47:38Z",
    "built_at": "2024-05-03T19:19:42Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fd3a5ab73a09bda1b9c131774fa594a9ed4342c1",
    "build_started_at": "2024-05-03T18:53:26Z",
    "run_id": "8943571534"
  },
  {
    "hash": "fd5f8d8d0f079d6276881645ded9979868d0ae7c",
    "type": "pull_request",
    "pull_request": 4096,
    "label": "dsiganos:re_enable_and_fix_inactive_votes_cache_multiple_votes",
    "created_at": "2023-02-01T16:36:28Z",
    "built_at": "2023-02-05T06:38:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fd5f8d8d0f079d6276881645ded9979868d0ae7c"
  },
  {
    "hash": "fd65cd9e14eb055d8440bfc040a44dde6aa3b129",
    "type": "pull_request",
    "title": "Remove active_elections::trim",
    "author": "clemahieu",
    "body": "This change removes the active_elections::trim function which is problematic with more advanced scheduler logic.\r\n\r\nThe code is not hit during normal operation because each scheduler already checks its own internal limits before starting elections.\r\n",
    "draft": false,
    "pull_request": 4611,
    "label": "clemahieu:remove_active_elections_trim",
    "created_at": "2024-05-10T09:44:08Z",
    "built_at": "2024-05-10T10:14:54Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fd65cd9e14eb055d8440bfc040a44dde6aa3b129",
    "build_started_at": "2024-05-10T09:46:23Z",
    "run_id": "9030418939"
  },
  {
    "hash": "fd6a75ed711d1b750c7a3bb9480d60299938e996",
    "type": "pull_request",
    "pull_request": 4275,
    "label": "clemahieu:fix/active_transactions.limit_vote_hinted_elections",
    "created_at": "2023-09-04T11:31:28Z",
    "built_at": "2023-09-04T12:12:15Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fd6a75ed711d1b750c7a3bb9480d60299938e996"
  },
  {
    "hash": "fd731fd1dc72d0fa95aae8bf5d3445d59cd4e3b6",
    "type": "pull_request",
    "title": "Fixed three compiler warnings (C26498)",
    "author": "RickiNano",
    "body": "Added constexpr to remove the following compiler warning:\r\n`Warning\tC26498\tThe function 'std::numeric_limits<unsigned __int64>::max' is constexpr, mark variable 'base' constexpr if compile-time evaluation is desired (con.5).`",
    "draft": false,
    "pull_request": 4617,
    "label": "RickiNano:fix-warning",
    "created_at": "2024-05-12T20:05:55Z",
    "built_at": "2024-05-12T20:40:08Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fd731fd1dc72d0fa95aae8bf5d3445d59cd4e3b6",
    "build_started_at": "2024-05-12T20:13:43Z",
    "run_id": "9053954542"
  },
  {
    "hash": "fda3218c2a4206071613920ad965c32ca5701e1f",
    "type": "pull_request",
    "title": "Add per-bucket election limiter",
    "author": "clemahieu",
    "body": "This change is a simpler version of the priority scheduler per-bucket limiter that tracks the number of elections it's started while retaining the ability to queue blocks for activation once elections already started for the bucket complete.",
    "draft": true,
    "pull_request": 4623,
    "label": "clemahieu:merge_buckets_priority",
    "created_at": "2024-05-14T22:54:24Z",
    "built_at": "2024-05-14T23:24:03Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fda3218c2a4206071613920ad965c32ca5701e1f",
    "build_started_at": "2024-05-14T22:56:50Z",
    "run_id": "9087268328"
  },
  {
    "hash": "fdc6845f8da21908aacf29c174c5cf26a2ff8e63",
    "type": "pull_request",
    "title": "Fix rare race in `request_aggregator.one_update`",
    "author": "gr0vity-dev",
    "body": "It seems that `node.aggregator.empty ()` is not guaranteed to be true immediately.\r\nThis testcase fails in ~ 1/2000 cases for me.",
    "draft": false,
    "pull_request": 4622,
    "label": "gr0vity-dev:prs/fix_request_aggregator-one_update",
    "created_at": "2024-05-14T15:51:53Z",
    "built_at": "2024-05-14T16:28:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fdc6845f8da21908aacf29c174c5cf26a2ff8e63",
    "build_started_at": "2024-05-14T15:59:04Z",
    "run_id": "9082458634"
  },
  {
    "hash": "fdcf0b17cbc5afd8982d1b8ff02f80b5defeb2f0",
    "type": "commit",
    "created_at": "2023-04-19T13:27:37Z",
    "built_at": "2023-04-21T16:26:15Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fdcf0b17cbc5afd8982d1b8ff02f80b5defeb2f0"
  },
  {
    "hash": "fde04eb88d78f7a89d02eaae3142337d03c4b596",
    "type": "pull_request",
    "pull_request": 4258,
    "label": "gr0vity-dev:prs/update_code_sanitizers",
    "created_at": "2023-07-15T12:11:28Z",
    "built_at": "2023-08-18T16:11:31Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fde04eb88d78f7a89d02eaae3142337d03c4b596"
  },
  {
    "hash": "fde4588dcb7e24038d9b68f7630668fcd34afbf7",
    "type": "commit",
    "created_at": "2024-01-30T17:08:08Z",
    "built_at": "2024-02-08T11:17:30Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fde4588dcb7e24038d9b68f7630668fcd34afbf7",
    "build_started_at": "2024-02-08T10:13:37Z",
    "run_id": "7828015254"
  },
  {
    "hash": "fde815f3ad9a3828cdf85ec274ec7d69ecd87170",
    "type": "commit",
    "created_at": "2023-03-28T15:13:04Z",
    "built_at": "2023-03-28T15:58:15Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fde815f3ad9a3828cdf85ec274ec7d69ecd87170"
  },
  {
    "hash": "fdffa32a9ff8d009066331eab258f655819f83c3",
    "type": "pull_request",
    "pull_request": 4105,
    "label": "thsfs:udp-removal",
    "created_at": "2023-02-06T21:19:57Z",
    "built_at": "2023-02-14T19:51:20Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fdffa32a9ff8d009066331eab258f655819f83c3"
  },
  {
    "hash": "fe01ecb82ff51e69ef34de8037c8ca0bb0642bc2",
    "type": "pull_request",
    "title": "Peer cache",
    "author": "pwojcikdev",
    "body": "This introduces a new `peer_cache` component that is responsible for managing cached peers. Previously storing peers was done by `tcp_channels` and loading by `node`, which is not the core responsibility of these classes.\r\nPrevious behavior was that only the latest set of peers was stored (ie. cache was cleared before every write). Now the cache keeps track of peers up to a certain cutoff age (by default 1 hour).\r\nAnother behavior change is that network reachout thread tries to contact cached peers. Previously this was only done once, on node startup. This should help with resiliency if for some reason node temporarily loses connection to its peers (eg. due to network outage).",
    "draft": false,
    "pull_request": 4574,
    "label": "pwojcikdev:cached-peers-2",
    "created_at": "2024-04-17T11:34:31Z",
    "built_at": "2024-04-22T15:50:48Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fe01ecb82ff51e69ef34de8037c8ca0bb0642bc2",
    "build_started_at": "2024-04-22T15:23:44Z",
    "run_id": "8786662138"
  },
  {
    "hash": "fe08198ff54e0ec4d0c39626b7eab8f3a145de33",
    "type": "pull_request",
    "pull_request": 4271,
    "label": "clemahieu:submodule_boost_1_82",
    "created_at": "2023-08-31T13:13:36Z",
    "built_at": "2023-08-31T13:56:25Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fe08198ff54e0ec4d0c39626b7eab8f3a145de33"
  },
  {
    "hash": "fe0c7baa187f3876b71e0b83ead3feba59ed14a5",
    "type": "commit",
    "created_at": "2023-02-03T18:36:22Z",
    "built_at": "2023-02-15T16:16:24Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fe0c7baa187f3876b71e0b83ead3feba59ed14a5"
  },
  {
    "hash": "fe15d9044dedc4fe1557f175b9d73d36194b9412",
    "type": "pull_request",
    "title": "Add `is_originator` flag to publish messages",
    "author": "pwojcikdev",
    "body": "This adds a new flag to `publish` messages that indicates whether a block is coming from a node that performed initial flooding. This helps avoid a situation when under a high load, a legitimate block is dropped because blockprocessor queue for a peer is full of rebroadcasted blocks. However, the potential for exploiting this is limited, as both rebroadcasted and originator queues have the same max size and priority, so effectively this gives each peer two queues to spam the network - which is not much, but should be plenty for legitimate traffic.\r\n\r\nFormat of extended publish message:\r\n```\r\n/*\r\n * Binary Format:\r\n * [message_header] Common message header\r\n * [variable] Block (serialized according to the block type specified in the header)\r\n *\r\n * Header extensions:\r\n * - [0x0f00] Block type: Identifies the specific type of the block.\r\n * - [0x0004] Originator flag\r\n */\r\n```",
    "draft": false,
    "pull_request": 4654,
    "label": "pwojcikdev:publish-originator",
    "created_at": "2024-06-23T16:07:14Z",
    "built_at": "2024-06-23T16:52:22Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fe15d9044dedc4fe1557f175b9d73d36194b9412",
    "build_started_at": "2024-06-23T16:25:46Z",
    "run_id": "9634873952"
  },
  {
    "hash": "fe35fd6da5a11c0c490b757227cfe6df5d848dce",
    "type": "pull_request",
    "title": "QT wallet: proper display of state open block in GUI history",
    "author": "SergiySW",
    "body": "State open block should be marked as \"Receive\".\r\nFor open blocks `previous` == 0 and function `nano::ledger_set_any::block_balance ()` will return `std::nullopt` resulting in displaying \"Unknown\" block type.",
    "draft": false,
    "pull_request": 4744,
    "label": "SergiySW:qt_state_open",
    "created_at": "2024-10-06T20:20:47Z",
    "built_at": null,
    "build_status": "building",
    "docker_tag": null,
    "build_started_at": "2024-10-25T16:25:04Z",
    "run_id": null
  },
  {
    "hash": "fe4d47d08ddfc406666cf6cf6ead9aa256f642ca",
    "type": "pull_request",
    "title": "Move write database queue",
    "body": "This renames write_database_queue to write_queue and moves the class into the nano::store library. It also moves the object from nano::node to nano::store::component.\r\n\r\nThis is a more natural place for this class/object to be placed and also preps for confirming_set to be moved on to the ledger class which would otherwise have a cyclic dependency secure -> store -> node -> secure",
    "draft": false,
    "pull_request": 4535,
    "label": "clemahieu:move_write_database_queue",
    "created_at": "2024-04-04T11:07:35Z",
    "built_at": "2024-04-04T13:45:59Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fe4d47d08ddfc406666cf6cf6ead9aa256f642ca",
    "build_started_at": "2024-04-04T13:18:20Z",
    "run_id": "8555375006"
  },
  {
    "hash": "fe73f6275e5aa666fb652b08d0125ae554402e02",
    "type": "pull_request",
    "pull_request": 4412,
    "label": "pwojcikdev:tracing-4-develop",
    "created_at": "2024-01-30T17:15:41Z",
    "built_at": "2024-01-30T22:02:20Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fe73f6275e5aa666fb652b08d0125ae554402e02",
    "build_started_at": "2024-01-30T21:35:05Z",
    "run_id": "7717758294"
  },
  {
    "hash": "fe7a21f43a57872e2ba25aa05545692b419f5fad",
    "type": "pull_request",
    "pull_request": 4246,
    "label": "pwojcikdev:parallel-core-tests",
    "created_at": "2023-06-06T23:26:01Z",
    "built_at": "2023-06-07T01:28:56Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fe7a21f43a57872e2ba25aa05545692b419f5fad"
  },
  {
    "hash": "febf3e307e51b019590225a66c6334132aa179e3",
    "type": "pull_request",
    "pull_request": 4314,
    "label": "clemahieu:ledger_file_exception",
    "created_at": "2023-10-16T15:57:18Z",
    "built_at": "2023-10-16T17:12:23Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:febf3e307e51b019590225a66c6334132aa179e3"
  },
  {
    "hash": "fed751c18014bee358de81d3430bde3224b14b2e",
    "type": "commit",
    "author": "clemahieu",
    "title": "Forward declaring stats.",
    "pull_request": "4776",
    "created_at": "2024-10-28T22:05:51Z",
    "built_at": "2024-10-31T08:53:02Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-10-31T03:33:18Z",
    "run_id": "11608626054"
  },
  {
    "hash": "fef5fe8555d26a544fa540796f7e8b54c6cd20bb",
    "type": "commit",
    "created_at": "2023-02-28T16:12:04Z",
    "built_at": "2023-02-28T17:44:20Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fef5fe8555d26a544fa540796f7e8b54c6cd20bb"
  },
  {
    "hash": "fefadf27f5139850efdb0768aa4a738fa44910e3",
    "type": "pull_request",
    "title": "Bootstrap tuning",
    "author": "pwojcikdev",
    "body": "This fixes a few more problems with bootstrap that I noticed when working on traffic shaping.",
    "draft": false,
    "pull_request": 4806,
    "label": "pwojcikdev:bootstrap-tuning-5",
    "created_at": "2024-12-06T20:52:59Z",
    "built_at": "2024-12-06T21:28:55Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fefadf27f5139850efdb0768aa4a738fa44910e3",
    "build_started_at": "2024-12-06T20:56:19Z",
    "run_id": "12206017453"
  },
  {
    "hash": "ff023ab0bfeb4270aaf35f2e534e788c756a3a83",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Create channels explicitly",
    "pull_request": "N/A",
    "created_at": "2024-04-08T09:11:04Z",
    "built_at": "2024-05-04T12:53:34Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ff023ab0bfeb4270aaf35f2e534e788c756a3a83",
    "build_started_at": "2024-05-04T09:36:39Z",
    "run_id": "8950478168"
  },
  {
    "hash": "ff0eece42feeda951a966d390854f33c6a57cf1a",
    "type": "pull_request",
    "pull_request": 4136,
    "label": "dsiganos:fix_election_quorum_minimum_flip_fail",
    "created_at": "2023-02-16T14:19:38Z",
    "built_at": "2023-02-16T15:09:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ff0eece42feeda951a966d390854f33c6a57cf1a"
  },
  {
    "hash": "ff40dece0dcf90d70377ec1972261dcc792affa6",
    "type": "pull_request",
    "pull_request": 3781,
    "label": "RickiNano:feature/support-decimal-numbers-for-nano-to-raw-conversion",
    "created_at": "2022-04-05T17:41:59Z",
    "built_at": null,
    "build_status": "fail",
    "docker_tag": null
  },
  {
    "hash": "ff555eab7c7de6b34f3d83a688fe8fd429f139a5",
    "type": "pull_request",
    "title": "Introduce ledger view classes to separate confirmed/unconfirmed operations on the ledger",
    "body": "The motivation for this PR is in preparation for bounded backlog changes. Currently, both confirmed and unconfirmed transactions are together on disk and the ACID properties of the ledger are encapsulated with a database transaction.\r\n\r\nWith the bounded backlog, blocks will be stored in memory so there will need to be memory synchronization in addition to database synchronization. Rather than filling the ledger class with unconfirmed/confirmed variants for each operation.\r\n\r\nThere are two views of the ledger:\r\nledger::confirmed () - Gives the view of the ledger only containing confirmed information\r\nledger::unconfirmed () - Gives a view of the ledger including unconfirmed information\r\nledger::operator->() - Syntax sugar to access unconfirmed view so calls that were previously of the form `ledger.get (...)` and would otherwise become `ledger.unconfirmed ().get (...)` can be written as `ledger->get (...)`",
    "draft": false,
    "pull_request": 4486,
    "label": "clemahieu:ledger_view",
    "created_at": "2024-03-12T14:33:24Z",
    "built_at": "2024-04-04T16:37:36Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-04-04T15:59:16Z",
    "run_id": "8557940748"
  },
  {
    "hash": "ff57e471a81101da60b92c856d8a5a4c18f9551d",
    "type": "pull_request",
    "title": "Block checker",
    "author": "clemahieu",
    "body": "Rewrite of https://github.com/nanocurrency/nano-node/pull/3727 with functional style checking rather than a pipeline",
    "draft": true,
    "pull_request": 4345,
    "label": "clemahieu:block_checker",
    "created_at": "2023-11-14T12:02:06Z",
    "built_at": "2024-10-03T13:37:10Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-10-03T13:15:22Z",
    "run_id": "11162721886"
  },
  {
    "hash": "ff627a14aedd03d51d7d2c791ab3a8678150c375",
    "type": "commit",
    "created_at": "2023-03-07T21:15:26Z",
    "built_at": "2023-03-08T04:19:47Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ff627a14aedd03d51d7d2c791ab3a8678150c375"
  },
  {
    "hash": "ff784388ded9b21c104485cf4dc54191704404cb",
    "type": "pull_request",
    "pull_request": 4429,
    "label": "pwojcikdev:erase-if-pattern",
    "created_at": "2024-02-12T12:06:18Z",
    "built_at": "2024-02-12T12:48:59Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ff784388ded9b21c104485cf4dc54191704404cb",
    "build_started_at": "2024-02-12T12:21:19Z",
    "run_id": "7871632827"
  },
  {
    "hash": "ff8382e20597ecfa1ffa669b8532fd8f9d1e88ea",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Fix stopping of bootstrap workers (#4667)",
    "pull_request": "4667",
    "created_at": "2024-07-03T09:35:22Z",
    "built_at": "2024-07-03T10:15:51Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ff8382e20597ecfa1ffa669b8532fd8f9d1e88ea",
    "build_started_at": "2024-07-03T09:38:40Z",
    "run_id": "9775595434"
  },
  {
    "hash": "ff851937a30d4e0f1b7e13575659643c4b5cb66f",
    "type": "pull_request",
    "pull_request": 4270,
    "label": "clemahieu:scheduler_priority_rename",
    "created_at": "2023-08-31T12:47:42Z",
    "built_at": "2023-08-31T14:09:14Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ff851937a30d4e0f1b7e13575659643c4b5cb66f"
  },
  {
    "hash": "ff8b6a129a5c420508a08da2a0061b3b49a511b8",
    "type": "pull_request",
    "title": "Remove legacy bootstrap",
    "author": "pwojcikdev",
    "body": "This removes legacy bootstrap, which was replaced by the new ascending bootstrap. Legacy bootstrap implementation was unnecessarily complicated with many inefficiencies. Debugging it was a pain and slowed down development of new features. \r\n\r\nAll the `bootstrap_ascending*` classes and stats are renamed to simply `bootstrap`.\r\n\r\nTODO for the future is porting previous `bootstrap_processor` test suite to use the new bootstrapper.",
    "draft": false,
    "pull_request": 4777,
    "label": "pwojcikdev:remove-legacy-bootstrap-2",
    "created_at": "2024-10-29T17:20:20Z",
    "built_at": "2024-10-31T01:44:35Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ff8b6a129a5c420508a08da2a0061b3b49a511b8",
    "build_started_at": "2024-10-31T01:17:09Z",
    "run_id": "11604341143"
  },
  {
    "hash": "ff9612d702f725ee2d43a7ebbb569f3bd4c22761",
    "type": "pull_request",
    "title": "Extend election lifetime when receiving new votes",
    "author": "RickiNano",
    "body": "This PR adds a dynamic Time-To-Live on elections to improve the AEC alignment and efficiency during heavy load. \r\n\r\nThe TTL has been reduced to 30 seconds for normal elections and 10 seconds for hinted and optimistic elections but is extended every time a new vote arrive.\r\n\r\nBlocks that are not getting any votes are getting evicted from AEC much earlier, while blocks with active voting have a higher chance of staying in the AEC and reach confirmation.\r\n\r\nRelated issue: #4352",
    "draft": false,
    "pull_request": 4527,
    "label": "RickiNano:Active-election-time-out",
    "created_at": "2024-03-30T09:30:57Z",
    "built_at": "2024-05-08T17:06:29Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ff9612d702f725ee2d43a7ebbb569f3bd4c22761",
    "build_started_at": "2024-05-08T16:39:21Z",
    "run_id": "9005395652"
  },
  {
    "hash": "ff9681e62d836f82fc673ada8b61b0b80ff7fc7e",
    "type": "pull_request",
    "pull_request": 4386,
    "label": "dsiganos:fix_confirm_frontier",
    "created_at": "2024-01-22T14:52:09Z",
    "built_at": "2024-01-22T15:21:27Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:ff9681e62d836f82fc673ada8b61b0b80ff7fc7e",
    "build_started_at": "2024-01-22T14:53:16Z",
    "run_id": "7613007939"
  },
  {
    "hash": "ffd46598ad15a0968f3579455c40cb9170584068",
    "type": "commit",
    "author": "pwojcikdev",
    "title": "Fix dangling reference returns",
    "pull_request": "4767",
    "created_at": "2024-10-25T11:01:41Z",
    "built_at": "2024-10-26T02:44:52Z",
    "build_status": "fail",
    "docker_tag": "",
    "build_started_at": "2024-10-25T22:56:00Z",
    "run_id": "11528135409"
  },
  {
    "hash": "fff93b2e8d95ba399b7c2776d4e0a68b6995ef88",
    "type": "pull_request",
    "title": "Adding const to ledger::weight* functions.",
    "body": null,
    "draft": false,
    "pull_request": 4534,
    "label": "clemahieu:ledger_weight_const",
    "created_at": "2024-04-03T22:13:11Z",
    "built_at": "2024-04-03T22:51:43Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fff93b2e8d95ba399b7c2776d4e0a68b6995ef88",
    "build_started_at": "2024-04-03T22:22:26Z",
    "run_id": "8546286512"
  },
  {
    "hash": "fffcb76e68e07a9f825877f529cd01c9649b7409",
    "type": "commit",
    "author": "clemahieu",
    "title": "Merge pull request #4690 from pwojcikdev/fix-upnp\n\nFixes for `port_mapping`",
    "pull_request": "4690",
    "created_at": "2024-08-11T18:05:39Z",
    "built_at": "2024-08-11T19:51:07Z",
    "build_status": "pass",
    "docker_tag": "gr0v1ty/nano-node:fffcb76e68e07a9f825877f529cd01c9649b7409",
    "build_started_at": "2024-08-11T18:19:33Z",
    "run_id": "10342199230"
  }
]
